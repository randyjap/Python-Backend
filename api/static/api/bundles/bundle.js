/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactDom = __webpack_require__(32);
	
	var _reactDom2 = _interopRequireDefault(_reactDom);
	
	var _store = __webpack_require__(178);
	
	var _store2 = _interopRequireDefault(_store);
	
	var _root = __webpack_require__(308);
	
	var _root2 = _interopRequireDefault(_root);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var Modal = __webpack_require__(386);
	
	document.addEventListener('DOMContentLoaded', function () {
	  Modal.setAppElement(document.body);
	  window.currentUser = { username: "Helllo" };
	  var store = void 0;
	  if (window.currentUser) {
	    var preloadedState = { session: { currentUser: window.currentUser } };
	    store = (0, _store2.default)(preloadedState);
	  } else {
	    store = (0, _store2.default)();
	  }
	
	  var root = document.getElementById('root');
	  _reactDom2.default.render(_react2.default.createElement(_root2.default, { store: store }), root);
	
	  //TODO
	  window.store = store;
	});

/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = __webpack_require__(2);


/***/ },
/* 2 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(4);
	
	var ReactChildren = __webpack_require__(5);
	var ReactComponent = __webpack_require__(18);
	var ReactPureComponent = __webpack_require__(21);
	var ReactClass = __webpack_require__(22);
	var ReactDOMFactories = __webpack_require__(24);
	var ReactElement = __webpack_require__(9);
	var ReactPropTypes = __webpack_require__(29);
	var ReactVersion = __webpack_require__(30);
	
	var onlyChild = __webpack_require__(31);
	var warning = __webpack_require__(11);
	
	var createElement = ReactElement.createElement;
	var createFactory = ReactElement.createFactory;
	var cloneElement = ReactElement.cloneElement;
	
	if (process.env.NODE_ENV !== 'production') {
	  var ReactElementValidator = __webpack_require__(25);
	  createElement = ReactElementValidator.createElement;
	  createFactory = ReactElementValidator.createFactory;
	  cloneElement = ReactElementValidator.cloneElement;
	}
	
	var __spread = _assign;
	
	if (process.env.NODE_ENV !== 'production') {
	  var warned = false;
	  __spread = function () {
	    process.env.NODE_ENV !== 'production' ? warning(warned, 'React.__spread is deprecated and should not be used. Use ' + 'Object.assign directly or another helper function with similar ' + 'semantics. You may be seeing this warning due to your compiler. ' + 'See https://fb.me/react-spread-deprecation for more details.') : void 0;
	    warned = true;
	    return _assign.apply(null, arguments);
	  };
	}
	
	var React = {
	
	  // Modern
	
	  Children: {
	    map: ReactChildren.map,
	    forEach: ReactChildren.forEach,
	    count: ReactChildren.count,
	    toArray: ReactChildren.toArray,
	    only: onlyChild
	  },
	
	  Component: ReactComponent,
	  PureComponent: ReactPureComponent,
	
	  createElement: createElement,
	  cloneElement: cloneElement,
	  isValidElement: ReactElement.isValidElement,
	
	  // Classic
	
	  PropTypes: ReactPropTypes,
	  createClass: ReactClass.createClass,
	  createFactory: createFactory,
	  createMixin: function (mixin) {
	    // Currently a noop. Will be used to validate and trace mixins.
	    return mixin;
	  },
	
	  // This looks DOM specific but these are actually isomorphic helpers
	  // since they are just generating DOM strings.
	  DOM: ReactDOMFactories,
	
	  version: ReactVersion,
	
	  // Deprecated hook for JSX spread, don't use this for anything.
	  __spread: __spread
	};
	
	module.exports = React;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 3 */
/***/ function(module, exports) {

	// shim for using process in browser
	var process = module.exports = {};
	
	// cached from whatever global is present so that test runners that stub it
	// don't break things.  But we need to wrap it in a try catch in case it is
	// wrapped in strict mode code which doesn't define any globals.  It's inside a
	// function because try/catches deoptimize in certain engines.
	
	var cachedSetTimeout;
	var cachedClearTimeout;
	
	function defaultSetTimout() {
	    throw new Error('setTimeout has not been defined');
	}
	function defaultClearTimeout () {
	    throw new Error('clearTimeout has not been defined');
	}
	(function () {
	    try {
	        if (typeof setTimeout === 'function') {
	            cachedSetTimeout = setTimeout;
	        } else {
	            cachedSetTimeout = defaultSetTimout;
	        }
	    } catch (e) {
	        cachedSetTimeout = defaultSetTimout;
	    }
	    try {
	        if (typeof clearTimeout === 'function') {
	            cachedClearTimeout = clearTimeout;
	        } else {
	            cachedClearTimeout = defaultClearTimeout;
	        }
	    } catch (e) {
	        cachedClearTimeout = defaultClearTimeout;
	    }
	} ())
	function runTimeout(fun) {
	    if (cachedSetTimeout === setTimeout) {
	        //normal enviroments in sane situations
	        return setTimeout(fun, 0);
	    }
	    // if setTimeout wasn't available but was latter defined
	    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
	        cachedSetTimeout = setTimeout;
	        return setTimeout(fun, 0);
	    }
	    try {
	        // when when somebody has screwed with setTimeout but no I.E. maddness
	        return cachedSetTimeout(fun, 0);
	    } catch(e){
	        try {
	            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
	            return cachedSetTimeout.call(null, fun, 0);
	        } catch(e){
	            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
	            return cachedSetTimeout.call(this, fun, 0);
	        }
	    }
	
	
	}
	function runClearTimeout(marker) {
	    if (cachedClearTimeout === clearTimeout) {
	        //normal enviroments in sane situations
	        return clearTimeout(marker);
	    }
	    // if clearTimeout wasn't available but was latter defined
	    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
	        cachedClearTimeout = clearTimeout;
	        return clearTimeout(marker);
	    }
	    try {
	        // when when somebody has screwed with setTimeout but no I.E. maddness
	        return cachedClearTimeout(marker);
	    } catch (e){
	        try {
	            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
	            return cachedClearTimeout.call(null, marker);
	        } catch (e){
	            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
	            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
	            return cachedClearTimeout.call(this, marker);
	        }
	    }
	
	
	
	}
	var queue = [];
	var draining = false;
	var currentQueue;
	var queueIndex = -1;
	
	function cleanUpNextTick() {
	    if (!draining || !currentQueue) {
	        return;
	    }
	    draining = false;
	    if (currentQueue.length) {
	        queue = currentQueue.concat(queue);
	    } else {
	        queueIndex = -1;
	    }
	    if (queue.length) {
	        drainQueue();
	    }
	}
	
	function drainQueue() {
	    if (draining) {
	        return;
	    }
	    var timeout = runTimeout(cleanUpNextTick);
	    draining = true;
	
	    var len = queue.length;
	    while(len) {
	        currentQueue = queue;
	        queue = [];
	        while (++queueIndex < len) {
	            if (currentQueue) {
	                currentQueue[queueIndex].run();
	            }
	        }
	        queueIndex = -1;
	        len = queue.length;
	    }
	    currentQueue = null;
	    draining = false;
	    runClearTimeout(timeout);
	}
	
	process.nextTick = function (fun) {
	    var args = new Array(arguments.length - 1);
	    if (arguments.length > 1) {
	        for (var i = 1; i < arguments.length; i++) {
	            args[i - 1] = arguments[i];
	        }
	    }
	    queue.push(new Item(fun, args));
	    if (queue.length === 1 && !draining) {
	        runTimeout(drainQueue);
	    }
	};
	
	// v8 likes predictible objects
	function Item(fun, array) {
	    this.fun = fun;
	    this.array = array;
	}
	Item.prototype.run = function () {
	    this.fun.apply(null, this.array);
	};
	process.title = 'browser';
	process.browser = true;
	process.env = {};
	process.argv = [];
	process.version = ''; // empty string to avoid regexp issues
	process.versions = {};
	
	function noop() {}
	
	process.on = noop;
	process.addListener = noop;
	process.once = noop;
	process.off = noop;
	process.removeListener = noop;
	process.removeAllListeners = noop;
	process.emit = noop;
	
	process.binding = function (name) {
	    throw new Error('process.binding is not supported');
	};
	
	process.cwd = function () { return '/' };
	process.chdir = function (dir) {
	    throw new Error('process.chdir is not supported');
	};
	process.umask = function() { return 0; };


/***/ },
/* 4 */
/***/ function(module, exports) {

	/*
	object-assign
	(c) Sindre Sorhus
	@license MIT
	*/
	
	'use strict';
	/* eslint-disable no-unused-vars */
	var getOwnPropertySymbols = Object.getOwnPropertySymbols;
	var hasOwnProperty = Object.prototype.hasOwnProperty;
	var propIsEnumerable = Object.prototype.propertyIsEnumerable;
	
	function toObject(val) {
		if (val === null || val === undefined) {
			throw new TypeError('Object.assign cannot be called with null or undefined');
		}
	
		return Object(val);
	}
	
	function shouldUseNative() {
		try {
			if (!Object.assign) {
				return false;
			}
	
			// Detect buggy property enumeration order in older V8 versions.
	
			// https://bugs.chromium.org/p/v8/issues/detail?id=4118
			var test1 = new String('abc');  // eslint-disable-line no-new-wrappers
			test1[5] = 'de';
			if (Object.getOwnPropertyNames(test1)[0] === '5') {
				return false;
			}
	
			// https://bugs.chromium.org/p/v8/issues/detail?id=3056
			var test2 = {};
			for (var i = 0; i < 10; i++) {
				test2['_' + String.fromCharCode(i)] = i;
			}
			var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
				return test2[n];
			});
			if (order2.join('') !== '0123456789') {
				return false;
			}
	
			// https://bugs.chromium.org/p/v8/issues/detail?id=3056
			var test3 = {};
			'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
				test3[letter] = letter;
			});
			if (Object.keys(Object.assign({}, test3)).join('') !==
					'abcdefghijklmnopqrst') {
				return false;
			}
	
			return true;
		} catch (err) {
			// We don't expect any of the above to throw, but better to be safe.
			return false;
		}
	}
	
	module.exports = shouldUseNative() ? Object.assign : function (target, source) {
		var from;
		var to = toObject(target);
		var symbols;
	
		for (var s = 1; s < arguments.length; s++) {
			from = Object(arguments[s]);
	
			for (var key in from) {
				if (hasOwnProperty.call(from, key)) {
					to[key] = from[key];
				}
			}
	
			if (getOwnPropertySymbols) {
				symbols = getOwnPropertySymbols(from);
				for (var i = 0; i < symbols.length; i++) {
					if (propIsEnumerable.call(from, symbols[i])) {
						to[symbols[i]] = from[symbols[i]];
					}
				}
			}
		}
	
		return to;
	};


/***/ },
/* 5 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var PooledClass = __webpack_require__(6);
	var ReactElement = __webpack_require__(9);
	
	var emptyFunction = __webpack_require__(12);
	var traverseAllChildren = __webpack_require__(15);
	
	var twoArgumentPooler = PooledClass.twoArgumentPooler;
	var fourArgumentPooler = PooledClass.fourArgumentPooler;
	
	var userProvidedKeyEscapeRegex = /\/+/g;
	function escapeUserProvidedKey(text) {
	  return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');
	}
	
	/**
	 * PooledClass representing the bookkeeping associated with performing a child
	 * traversal. Allows avoiding binding callbacks.
	 *
	 * @constructor ForEachBookKeeping
	 * @param {!function} forEachFunction Function to perform traversal with.
	 * @param {?*} forEachContext Context to perform context with.
	 */
	function ForEachBookKeeping(forEachFunction, forEachContext) {
	  this.func = forEachFunction;
	  this.context = forEachContext;
	  this.count = 0;
	}
	ForEachBookKeeping.prototype.destructor = function () {
	  this.func = null;
	  this.context = null;
	  this.count = 0;
	};
	PooledClass.addPoolingTo(ForEachBookKeeping, twoArgumentPooler);
	
	function forEachSingleChild(bookKeeping, child, name) {
	  var func = bookKeeping.func,
	      context = bookKeeping.context;
	
	  func.call(context, child, bookKeeping.count++);
	}
	
	/**
	 * Iterates through children that are typically specified as `props.children`.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.foreach
	 *
	 * The provided forEachFunc(child, index) will be called for each
	 * leaf child.
	 *
	 * @param {?*} children Children tree container.
	 * @param {function(*, int)} forEachFunc
	 * @param {*} forEachContext Context for forEachContext.
	 */
	function forEachChildren(children, forEachFunc, forEachContext) {
	  if (children == null) {
	    return children;
	  }
	  var traverseContext = ForEachBookKeeping.getPooled(forEachFunc, forEachContext);
	  traverseAllChildren(children, forEachSingleChild, traverseContext);
	  ForEachBookKeeping.release(traverseContext);
	}
	
	/**
	 * PooledClass representing the bookkeeping associated with performing a child
	 * mapping. Allows avoiding binding callbacks.
	 *
	 * @constructor MapBookKeeping
	 * @param {!*} mapResult Object containing the ordered map of results.
	 * @param {!function} mapFunction Function to perform mapping with.
	 * @param {?*} mapContext Context to perform mapping with.
	 */
	function MapBookKeeping(mapResult, keyPrefix, mapFunction, mapContext) {
	  this.result = mapResult;
	  this.keyPrefix = keyPrefix;
	  this.func = mapFunction;
	  this.context = mapContext;
	  this.count = 0;
	}
	MapBookKeeping.prototype.destructor = function () {
	  this.result = null;
	  this.keyPrefix = null;
	  this.func = null;
	  this.context = null;
	  this.count = 0;
	};
	PooledClass.addPoolingTo(MapBookKeeping, fourArgumentPooler);
	
	function mapSingleChildIntoContext(bookKeeping, child, childKey) {
	  var result = bookKeeping.result,
	      keyPrefix = bookKeeping.keyPrefix,
	      func = bookKeeping.func,
	      context = bookKeeping.context;
	
	
	  var mappedChild = func.call(context, child, bookKeeping.count++);
	  if (Array.isArray(mappedChild)) {
	    mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, emptyFunction.thatReturnsArgument);
	  } else if (mappedChild != null) {
	    if (ReactElement.isValidElement(mappedChild)) {
	      mappedChild = ReactElement.cloneAndReplaceKey(mappedChild,
	      // Keep both the (mapped) and old keys if they differ, just as
	      // traverseAllChildren used to do for objects as children
	      keyPrefix + (mappedChild.key && (!child || child.key !== mappedChild.key) ? escapeUserProvidedKey(mappedChild.key) + '/' : '') + childKey);
	    }
	    result.push(mappedChild);
	  }
	}
	
	function mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {
	  var escapedPrefix = '';
	  if (prefix != null) {
	    escapedPrefix = escapeUserProvidedKey(prefix) + '/';
	  }
	  var traverseContext = MapBookKeeping.getPooled(array, escapedPrefix, func, context);
	  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);
	  MapBookKeeping.release(traverseContext);
	}
	
	/**
	 * Maps children that are typically specified as `props.children`.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.map
	 *
	 * The provided mapFunction(child, key, index) will be called for each
	 * leaf child.
	 *
	 * @param {?*} children Children tree container.
	 * @param {function(*, int)} func The map function.
	 * @param {*} context Context for mapFunction.
	 * @return {object} Object containing the ordered map of results.
	 */
	function mapChildren(children, func, context) {
	  if (children == null) {
	    return children;
	  }
	  var result = [];
	  mapIntoWithKeyPrefixInternal(children, result, null, func, context);
	  return result;
	}
	
	function forEachSingleChildDummy(traverseContext, child, name) {
	  return null;
	}
	
	/**
	 * Count the number of children that are typically specified as
	 * `props.children`.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.count
	 *
	 * @param {?*} children Children tree container.
	 * @return {number} The number of children.
	 */
	function countChildren(children, context) {
	  return traverseAllChildren(children, forEachSingleChildDummy, null);
	}
	
	/**
	 * Flatten a children object (typically specified as `props.children`) and
	 * return an array with appropriately re-keyed children.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.toarray
	 */
	function toArray(children) {
	  var result = [];
	  mapIntoWithKeyPrefixInternal(children, result, null, emptyFunction.thatReturnsArgument);
	  return result;
	}
	
	var ReactChildren = {
	  forEach: forEachChildren,
	  map: mapChildren,
	  mapIntoWithKeyPrefixInternal: mapIntoWithKeyPrefixInternal,
	  count: countChildren,
	  toArray: toArray
	};
	
	module.exports = ReactChildren;

/***/ },
/* 6 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(7);
	
	var invariant = __webpack_require__(8);
	
	/**
	 * Static poolers. Several custom versions for each potential number of
	 * arguments. A completely generic pooler is easy to implement, but would
	 * require accessing the `arguments` object. In each of these, `this` refers to
	 * the Class itself, not an instance. If any others are needed, simply add them
	 * here, or in their own files.
	 */
	var oneArgumentPooler = function (copyFieldsFrom) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, copyFieldsFrom);
	    return instance;
	  } else {
	    return new Klass(copyFieldsFrom);
	  }
	};
	
	var twoArgumentPooler = function (a1, a2) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2);
	    return instance;
	  } else {
	    return new Klass(a1, a2);
	  }
	};
	
	var threeArgumentPooler = function (a1, a2, a3) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3);
	  }
	};
	
	var fourArgumentPooler = function (a1, a2, a3, a4) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3, a4);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3, a4);
	  }
	};
	
	var standardReleaser = function (instance) {
	  var Klass = this;
	  !(instance instanceof Klass) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Trying to release an instance into a pool of a different type.') : _prodInvariant('25') : void 0;
	  instance.destructor();
	  if (Klass.instancePool.length < Klass.poolSize) {
	    Klass.instancePool.push(instance);
	  }
	};
	
	var DEFAULT_POOL_SIZE = 10;
	var DEFAULT_POOLER = oneArgumentPooler;
	
	/**
	 * Augments `CopyConstructor` to be a poolable class, augmenting only the class
	 * itself (statically) not adding any prototypical fields. Any CopyConstructor
	 * you give this may have a `poolSize` property, and will look for a
	 * prototypical `destructor` on instances.
	 *
	 * @param {Function} CopyConstructor Constructor that can be used to reset.
	 * @param {Function} pooler Customizable pooler.
	 */
	var addPoolingTo = function (CopyConstructor, pooler) {
	  // Casting as any so that flow ignores the actual implementation and trusts
	  // it to match the type we declared
	  var NewKlass = CopyConstructor;
	  NewKlass.instancePool = [];
	  NewKlass.getPooled = pooler || DEFAULT_POOLER;
	  if (!NewKlass.poolSize) {
	    NewKlass.poolSize = DEFAULT_POOL_SIZE;
	  }
	  NewKlass.release = standardReleaser;
	  return NewKlass;
	};
	
	var PooledClass = {
	  addPoolingTo: addPoolingTo,
	  oneArgumentPooler: oneArgumentPooler,
	  twoArgumentPooler: twoArgumentPooler,
	  threeArgumentPooler: threeArgumentPooler,
	  fourArgumentPooler: fourArgumentPooler
	};
	
	module.exports = PooledClass;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 7 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	'use strict';
	
	/**
	 * WARNING: DO NOT manually require this module.
	 * This is a replacement for `invariant(...)` used by the error code system
	 * and will _only_ be required by the corresponding babel pass.
	 * It always throws.
	 */
	
	function reactProdInvariant(code) {
	  var argCount = arguments.length - 1;
	
	  var message = 'Minified React error #' + code + '; visit ' + 'http://facebook.github.io/react/docs/error-decoder.html?invariant=' + code;
	
	  for (var argIdx = 0; argIdx < argCount; argIdx++) {
	    message += '&args[]=' + encodeURIComponent(arguments[argIdx + 1]);
	  }
	
	  message += ' for the full message or use the non-minified dev environment' + ' for full errors and additional helpful warnings.';
	
	  var error = new Error(message);
	  error.name = 'Invariant Violation';
	  error.framesToPop = 1; // we don't care about reactProdInvariant's own frame
	
	  throw error;
	}
	
	module.exports = reactProdInvariant;

/***/ },
/* 8 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	/**
	 * Use invariant() to assert state which your program assumes to be true.
	 *
	 * Provide sprintf-style format (only %s is supported) and arguments
	 * to provide information about what broke and what you were
	 * expecting.
	 *
	 * The invariant message will be stripped in production, but the invariant
	 * will remain to ensure logic does not differ in production.
	 */
	
	var validateFormat = function validateFormat(format) {};
	
	if (process.env.NODE_ENV !== 'production') {
	  validateFormat = function validateFormat(format) {
	    if (format === undefined) {
	      throw new Error('invariant requires an error message argument');
	    }
	  };
	}
	
	function invariant(condition, format, a, b, c, d, e, f) {
	  validateFormat(format);
	
	  if (!condition) {
	    var error;
	    if (format === undefined) {
	      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
	    } else {
	      var args = [a, b, c, d, e, f];
	      var argIndex = 0;
	      error = new Error(format.replace(/%s/g, function () {
	        return args[argIndex++];
	      }));
	      error.name = 'Invariant Violation';
	    }
	
	    error.framesToPop = 1; // we don't care about invariant's own frame
	    throw error;
	  }
	}
	
	module.exports = invariant;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 9 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(4);
	
	var ReactCurrentOwner = __webpack_require__(10);
	
	var warning = __webpack_require__(11);
	var canDefineProperty = __webpack_require__(13);
	var hasOwnProperty = Object.prototype.hasOwnProperty;
	
	var REACT_ELEMENT_TYPE = __webpack_require__(14);
	
	var RESERVED_PROPS = {
	  key: true,
	  ref: true,
	  __self: true,
	  __source: true
	};
	
	var specialPropKeyWarningShown, specialPropRefWarningShown;
	
	function hasValidRef(config) {
	  if (process.env.NODE_ENV !== 'production') {
	    if (hasOwnProperty.call(config, 'ref')) {
	      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;
	      if (getter && getter.isReactWarning) {
	        return false;
	      }
	    }
	  }
	  return config.ref !== undefined;
	}
	
	function hasValidKey(config) {
	  if (process.env.NODE_ENV !== 'production') {
	    if (hasOwnProperty.call(config, 'key')) {
	      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;
	      if (getter && getter.isReactWarning) {
	        return false;
	      }
	    }
	  }
	  return config.key !== undefined;
	}
	
	function defineKeyPropWarningGetter(props, displayName) {
	  var warnAboutAccessingKey = function () {
	    if (!specialPropKeyWarningShown) {
	      specialPropKeyWarningShown = true;
	      process.env.NODE_ENV !== 'production' ? warning(false, '%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;
	    }
	  };
	  warnAboutAccessingKey.isReactWarning = true;
	  Object.defineProperty(props, 'key', {
	    get: warnAboutAccessingKey,
	    configurable: true
	  });
	}
	
	function defineRefPropWarningGetter(props, displayName) {
	  var warnAboutAccessingRef = function () {
	    if (!specialPropRefWarningShown) {
	      specialPropRefWarningShown = true;
	      process.env.NODE_ENV !== 'production' ? warning(false, '%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;
	    }
	  };
	  warnAboutAccessingRef.isReactWarning = true;
	  Object.defineProperty(props, 'ref', {
	    get: warnAboutAccessingRef,
	    configurable: true
	  });
	}
	
	/**
	 * Factory method to create a new React element. This no longer adheres to
	 * the class pattern, so do not use new to call it. Also, no instanceof check
	 * will work. Instead test $$typeof field against Symbol.for('react.element') to check
	 * if something is a React Element.
	 *
	 * @param {*} type
	 * @param {*} key
	 * @param {string|object} ref
	 * @param {*} self A *temporary* helper to detect places where `this` is
	 * different from the `owner` when React.createElement is called, so that we
	 * can warn. We want to get rid of owner and replace string `ref`s with arrow
	 * functions, and as long as `this` and owner are the same, there will be no
	 * change in behavior.
	 * @param {*} source An annotation object (added by a transpiler or otherwise)
	 * indicating filename, line number, and/or other information.
	 * @param {*} owner
	 * @param {*} props
	 * @internal
	 */
	var ReactElement = function (type, key, ref, self, source, owner, props) {
	  var element = {
	    // This tag allow us to uniquely identify this as a React Element
	    $$typeof: REACT_ELEMENT_TYPE,
	
	    // Built-in properties that belong on the element
	    type: type,
	    key: key,
	    ref: ref,
	    props: props,
	
	    // Record the component responsible for creating this element.
	    _owner: owner
	  };
	
	  if (process.env.NODE_ENV !== 'production') {
	    // The validation flag is currently mutative. We put it on
	    // an external backing store so that we can freeze the whole object.
	    // This can be replaced with a WeakMap once they are implemented in
	    // commonly used development environments.
	    element._store = {};
	
	    // To make comparing ReactElements easier for testing purposes, we make
	    // the validation flag non-enumerable (where possible, which should
	    // include every environment we run tests in), so the test framework
	    // ignores it.
	    if (canDefineProperty) {
	      Object.defineProperty(element._store, 'validated', {
	        configurable: false,
	        enumerable: false,
	        writable: true,
	        value: false
	      });
	      // self and source are DEV only properties.
	      Object.defineProperty(element, '_self', {
	        configurable: false,
	        enumerable: false,
	        writable: false,
	        value: self
	      });
	      // Two elements created in two different places should be considered
	      // equal for testing purposes and therefore we hide it from enumeration.
	      Object.defineProperty(element, '_source', {
	        configurable: false,
	        enumerable: false,
	        writable: false,
	        value: source
	      });
	    } else {
	      element._store.validated = false;
	      element._self = self;
	      element._source = source;
	    }
	    if (Object.freeze) {
	      Object.freeze(element.props);
	      Object.freeze(element);
	    }
	  }
	
	  return element;
	};
	
	/**
	 * Create and return a new ReactElement of the given type.
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.createelement
	 */
	ReactElement.createElement = function (type, config, children) {
	  var propName;
	
	  // Reserved names are extracted
	  var props = {};
	
	  var key = null;
	  var ref = null;
	  var self = null;
	  var source = null;
	
	  if (config != null) {
	    if (hasValidRef(config)) {
	      ref = config.ref;
	    }
	    if (hasValidKey(config)) {
	      key = '' + config.key;
	    }
	
	    self = config.__self === undefined ? null : config.__self;
	    source = config.__source === undefined ? null : config.__source;
	    // Remaining properties are added to a new props object
	    for (propName in config) {
	      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
	        props[propName] = config[propName];
	      }
	    }
	  }
	
	  // Children can be more than one argument, and those are transferred onto
	  // the newly allocated props object.
	  var childrenLength = arguments.length - 2;
	  if (childrenLength === 1) {
	    props.children = children;
	  } else if (childrenLength > 1) {
	    var childArray = Array(childrenLength);
	    for (var i = 0; i < childrenLength; i++) {
	      childArray[i] = arguments[i + 2];
	    }
	    if (process.env.NODE_ENV !== 'production') {
	      if (Object.freeze) {
	        Object.freeze(childArray);
	      }
	    }
	    props.children = childArray;
	  }
	
	  // Resolve default props
	  if (type && type.defaultProps) {
	    var defaultProps = type.defaultProps;
	    for (propName in defaultProps) {
	      if (props[propName] === undefined) {
	        props[propName] = defaultProps[propName];
	      }
	    }
	  }
	  if (process.env.NODE_ENV !== 'production') {
	    if (key || ref) {
	      if (typeof props.$$typeof === 'undefined' || props.$$typeof !== REACT_ELEMENT_TYPE) {
	        var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;
	        if (key) {
	          defineKeyPropWarningGetter(props, displayName);
	        }
	        if (ref) {
	          defineRefPropWarningGetter(props, displayName);
	        }
	      }
	    }
	  }
	  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
	};
	
	/**
	 * Return a function that produces ReactElements of a given type.
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.createfactory
	 */
	ReactElement.createFactory = function (type) {
	  var factory = ReactElement.createElement.bind(null, type);
	  // Expose the type on the factory and the prototype so that it can be
	  // easily accessed on elements. E.g. `<Foo />.type === Foo`.
	  // This should not be named `constructor` since this may not be the function
	  // that created the element, and it may not even be a constructor.
	  // Legacy hook TODO: Warn if this is accessed
	  factory.type = type;
	  return factory;
	};
	
	ReactElement.cloneAndReplaceKey = function (oldElement, newKey) {
	  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);
	
	  return newElement;
	};
	
	/**
	 * Clone and return a new ReactElement using element as the starting point.
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.cloneelement
	 */
	ReactElement.cloneElement = function (element, config, children) {
	  var propName;
	
	  // Original props are copied
	  var props = _assign({}, element.props);
	
	  // Reserved names are extracted
	  var key = element.key;
	  var ref = element.ref;
	  // Self is preserved since the owner is preserved.
	  var self = element._self;
	  // Source is preserved since cloneElement is unlikely to be targeted by a
	  // transpiler, and the original source is probably a better indicator of the
	  // true owner.
	  var source = element._source;
	
	  // Owner will be preserved, unless ref is overridden
	  var owner = element._owner;
	
	  if (config != null) {
	    if (hasValidRef(config)) {
	      // Silently steal the ref from the parent.
	      ref = config.ref;
	      owner = ReactCurrentOwner.current;
	    }
	    if (hasValidKey(config)) {
	      key = '' + config.key;
	    }
	
	    // Remaining properties override existing props
	    var defaultProps;
	    if (element.type && element.type.defaultProps) {
	      defaultProps = element.type.defaultProps;
	    }
	    for (propName in config) {
	      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
	        if (config[propName] === undefined && defaultProps !== undefined) {
	          // Resolve default props
	          props[propName] = defaultProps[propName];
	        } else {
	          props[propName] = config[propName];
	        }
	      }
	    }
	  }
	
	  // Children can be more than one argument, and those are transferred onto
	  // the newly allocated props object.
	  var childrenLength = arguments.length - 2;
	  if (childrenLength === 1) {
	    props.children = children;
	  } else if (childrenLength > 1) {
	    var childArray = Array(childrenLength);
	    for (var i = 0; i < childrenLength; i++) {
	      childArray[i] = arguments[i + 2];
	    }
	    props.children = childArray;
	  }
	
	  return ReactElement(element.type, key, ref, self, source, owner, props);
	};
	
	/**
	 * Verifies the object is a ReactElement.
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.isvalidelement
	 * @param {?object} object
	 * @return {boolean} True if `object` is a valid component.
	 * @final
	 */
	ReactElement.isValidElement = function (object) {
	  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
	};
	
	module.exports = ReactElement;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 10 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	/**
	 * Keeps track of the current owner.
	 *
	 * The current owner is the component who should own any components that are
	 * currently being constructed.
	 */
	var ReactCurrentOwner = {
	
	  /**
	   * @internal
	   * @type {ReactComponent}
	   */
	  current: null
	
	};
	
	module.exports = ReactCurrentOwner;

/***/ },
/* 11 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var emptyFunction = __webpack_require__(12);
	
	/**
	 * Similar to invariant but only logs a warning if the condition is not met.
	 * This can be used to log issues in development environments in critical
	 * paths. Removing the logging code for production environments will keep the
	 * same logic and follow the same code paths.
	 */
	
	var warning = emptyFunction;
	
	if (process.env.NODE_ENV !== 'production') {
	  (function () {
	    var printWarning = function printWarning(format) {
	      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	        args[_key - 1] = arguments[_key];
	      }
	
	      var argIndex = 0;
	      var message = 'Warning: ' + format.replace(/%s/g, function () {
	        return args[argIndex++];
	      });
	      if (typeof console !== 'undefined') {
	        console.error(message);
	      }
	      try {
	        // --- Welcome to debugging React ---
	        // This error was thrown as a convenience so that you can use this stack
	        // to find the callsite that caused this warning to fire.
	        throw new Error(message);
	      } catch (x) {}
	    };
	
	    warning = function warning(condition, format) {
	      if (format === undefined) {
	        throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
	      }
	
	      if (format.indexOf('Failed Composite propType: ') === 0) {
	        return; // Ignore CompositeComponent proptype check.
	      }
	
	      if (!condition) {
	        for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
	          args[_key2 - 2] = arguments[_key2];
	        }
	
	        printWarning.apply(undefined, [format].concat(args));
	      }
	    };
	  })();
	}
	
	module.exports = warning;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 12 */
/***/ function(module, exports) {

	"use strict";
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	function makeEmptyFunction(arg) {
	  return function () {
	    return arg;
	  };
	}
	
	/**
	 * This function accepts and discards inputs; it has no side effects. This is
	 * primarily useful idiomatically for overridable function endpoints which
	 * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
	 */
	var emptyFunction = function emptyFunction() {};
	
	emptyFunction.thatReturns = makeEmptyFunction;
	emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
	emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
	emptyFunction.thatReturnsNull = makeEmptyFunction(null);
	emptyFunction.thatReturnsThis = function () {
	  return this;
	};
	emptyFunction.thatReturnsArgument = function (arg) {
	  return arg;
	};
	
	module.exports = emptyFunction;

/***/ },
/* 13 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var canDefineProperty = false;
	if (process.env.NODE_ENV !== 'production') {
	  try {
	    // $FlowFixMe https://github.com/facebook/flow/issues/285
	    Object.defineProperty({}, 'x', { get: function () {} });
	    canDefineProperty = true;
	  } catch (x) {
	    // IE will fail on defineProperty
	  }
	}
	
	module.exports = canDefineProperty;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 14 */
/***/ function(module, exports) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	// The Symbol used to tag the ReactElement type. If there is no native Symbol
	// nor polyfill, then a plain number is used for performance.
	
	var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;
	
	module.exports = REACT_ELEMENT_TYPE;

/***/ },
/* 15 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(7);
	
	var ReactCurrentOwner = __webpack_require__(10);
	var REACT_ELEMENT_TYPE = __webpack_require__(14);
	
	var getIteratorFn = __webpack_require__(16);
	var invariant = __webpack_require__(8);
	var KeyEscapeUtils = __webpack_require__(17);
	var warning = __webpack_require__(11);
	
	var SEPARATOR = '.';
	var SUBSEPARATOR = ':';
	
	/**
	 * This is inlined from ReactElement since this file is shared between
	 * isomorphic and renderers. We could extract this to a
	 *
	 */
	
	/**
	 * TODO: Test that a single child and an array with one item have the same key
	 * pattern.
	 */
	
	var didWarnAboutMaps = false;
	
	/**
	 * Generate a key string that identifies a component within a set.
	 *
	 * @param {*} component A component that could contain a manual key.
	 * @param {number} index Index that is used if a manual key is not provided.
	 * @return {string}
	 */
	function getComponentKey(component, index) {
	  // Do some typechecking here since we call this blindly. We want to ensure
	  // that we don't block potential future ES APIs.
	  if (component && typeof component === 'object' && component.key != null) {
	    // Explicit key
	    return KeyEscapeUtils.escape(component.key);
	  }
	  // Implicit key determined by the index in the set
	  return index.toString(36);
	}
	
	/**
	 * @param {?*} children Children tree container.
	 * @param {!string} nameSoFar Name of the key path so far.
	 * @param {!function} callback Callback to invoke with each child found.
	 * @param {?*} traverseContext Used to pass information throughout the traversal
	 * process.
	 * @return {!number} The number of children in this subtree.
	 */
	function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
	  var type = typeof children;
	
	  if (type === 'undefined' || type === 'boolean') {
	    // All of the above are perceived as null.
	    children = null;
	  }
	
	  if (children === null || type === 'string' || type === 'number' ||
	  // The following is inlined from ReactElement. This means we can optimize
	  // some checks. React Fiber also inlines this logic for similar purposes.
	  type === 'object' && children.$$typeof === REACT_ELEMENT_TYPE) {
	    callback(traverseContext, children,
	    // If it's the only child, treat the name as if it was wrapped in an array
	    // so that it's consistent if the number of children grows.
	    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);
	    return 1;
	  }
	
	  var child;
	  var nextName;
	  var subtreeCount = 0; // Count of children found in the current subtree.
	  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;
	
	  if (Array.isArray(children)) {
	    for (var i = 0; i < children.length; i++) {
	      child = children[i];
	      nextName = nextNamePrefix + getComponentKey(child, i);
	      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	    }
	  } else {
	    var iteratorFn = getIteratorFn(children);
	    if (iteratorFn) {
	      var iterator = iteratorFn.call(children);
	      var step;
	      if (iteratorFn !== children.entries) {
	        var ii = 0;
	        while (!(step = iterator.next()).done) {
	          child = step.value;
	          nextName = nextNamePrefix + getComponentKey(child, ii++);
	          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	        }
	      } else {
	        if (process.env.NODE_ENV !== 'production') {
	          var mapsAsChildrenAddendum = '';
	          if (ReactCurrentOwner.current) {
	            var mapsAsChildrenOwnerName = ReactCurrentOwner.current.getName();
	            if (mapsAsChildrenOwnerName) {
	              mapsAsChildrenAddendum = ' Check the render method of `' + mapsAsChildrenOwnerName + '`.';
	            }
	          }
	          process.env.NODE_ENV !== 'production' ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.%s', mapsAsChildrenAddendum) : void 0;
	          didWarnAboutMaps = true;
	        }
	        // Iterator will provide entry [k,v] tuples rather than values.
	        while (!(step = iterator.next()).done) {
	          var entry = step.value;
	          if (entry) {
	            child = entry[1];
	            nextName = nextNamePrefix + KeyEscapeUtils.escape(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);
	            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	          }
	        }
	      }
	    } else if (type === 'object') {
	      var addendum = '';
	      if (process.env.NODE_ENV !== 'production') {
	        addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';
	        if (children._isReactElement) {
	          addendum = ' It looks like you\'re using an element created by a different ' + 'version of React. Make sure to use only one copy of React.';
	        }
	        if (ReactCurrentOwner.current) {
	          var name = ReactCurrentOwner.current.getName();
	          if (name) {
	            addendum += ' Check the render method of `' + name + '`.';
	          }
	        }
	      }
	      var childrenString = String(children);
	       true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : _prodInvariant('31', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : void 0;
	    }
	  }
	
	  return subtreeCount;
	}
	
	/**
	 * Traverses children that are typically specified as `props.children`, but
	 * might also be specified through attributes:
	 *
	 * - `traverseAllChildren(this.props.children, ...)`
	 * - `traverseAllChildren(this.props.leftPanelChildren, ...)`
	 *
	 * The `traverseContext` is an optional argument that is passed through the
	 * entire traversal. It can be used to store accumulations or anything else that
	 * the callback might find relevant.
	 *
	 * @param {?*} children Children tree object.
	 * @param {!function} callback To invoke upon traversing each child.
	 * @param {?*} traverseContext Context for traversal.
	 * @return {!number} The number of children in this subtree.
	 */
	function traverseAllChildren(children, callback, traverseContext) {
	  if (children == null) {
	    return 0;
	  }
	
	  return traverseAllChildrenImpl(children, '', callback, traverseContext);
	}
	
	module.exports = traverseAllChildren;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 16 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	/* global Symbol */
	
	var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
	var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.
	
	/**
	 * Returns the iterator method function contained on the iterable object.
	 *
	 * Be sure to invoke the function with the iterable as context:
	 *
	 *     var iteratorFn = getIteratorFn(myIterable);
	 *     if (iteratorFn) {
	 *       var iterator = iteratorFn.call(myIterable);
	 *       ...
	 *     }
	 *
	 * @param {?object} maybeIterable
	 * @return {?function}
	 */
	function getIteratorFn(maybeIterable) {
	  var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
	  if (typeof iteratorFn === 'function') {
	    return iteratorFn;
	  }
	}
	
	module.exports = getIteratorFn;

/***/ },
/* 17 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	/**
	 * Escape and wrap key so it is safe to use as a reactid
	 *
	 * @param {string} key to be escaped.
	 * @return {string} the escaped key.
	 */
	
	function escape(key) {
	  var escapeRegex = /[=:]/g;
	  var escaperLookup = {
	    '=': '=0',
	    ':': '=2'
	  };
	  var escapedString = ('' + key).replace(escapeRegex, function (match) {
	    return escaperLookup[match];
	  });
	
	  return '$' + escapedString;
	}
	
	/**
	 * Unescape and unwrap key for human-readable display
	 *
	 * @param {string} key to unescape.
	 * @return {string} the unescaped key.
	 */
	function unescape(key) {
	  var unescapeRegex = /(=0|=2)/g;
	  var unescaperLookup = {
	    '=0': '=',
	    '=2': ':'
	  };
	  var keySubstring = key[0] === '.' && key[1] === '$' ? key.substring(2) : key.substring(1);
	
	  return ('' + keySubstring).replace(unescapeRegex, function (match) {
	    return unescaperLookup[match];
	  });
	}
	
	var KeyEscapeUtils = {
	  escape: escape,
	  unescape: unescape
	};
	
	module.exports = KeyEscapeUtils;

/***/ },
/* 18 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(7);
	
	var ReactNoopUpdateQueue = __webpack_require__(19);
	
	var canDefineProperty = __webpack_require__(13);
	var emptyObject = __webpack_require__(20);
	var invariant = __webpack_require__(8);
	var warning = __webpack_require__(11);
	
	/**
	 * Base class helpers for the updating state of a component.
	 */
	function ReactComponent(props, context, updater) {
	  this.props = props;
	  this.context = context;
	  this.refs = emptyObject;
	  // We initialize the default updater but the real one gets injected by the
	  // renderer.
	  this.updater = updater || ReactNoopUpdateQueue;
	}
	
	ReactComponent.prototype.isReactComponent = {};
	
	/**
	 * Sets a subset of the state. Always use this to mutate
	 * state. You should treat `this.state` as immutable.
	 *
	 * There is no guarantee that `this.state` will be immediately updated, so
	 * accessing `this.state` after calling this method may return the old value.
	 *
	 * There is no guarantee that calls to `setState` will run synchronously,
	 * as they may eventually be batched together.  You can provide an optional
	 * callback that will be executed when the call to setState is actually
	 * completed.
	 *
	 * When a function is provided to setState, it will be called at some point in
	 * the future (not synchronously). It will be called with the up to date
	 * component arguments (state, props, context). These values can be different
	 * from this.* because your function may be called after receiveProps but before
	 * shouldComponentUpdate, and this new state, props, and context will not yet be
	 * assigned to this.
	 *
	 * @param {object|function} partialState Next partial state or function to
	 *        produce next partial state to be merged with current state.
	 * @param {?function} callback Called after state is updated.
	 * @final
	 * @protected
	 */
	ReactComponent.prototype.setState = function (partialState, callback) {
	  !(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'setState(...): takes an object of state variables to update or a function which returns an object of state variables.') : _prodInvariant('85') : void 0;
	  this.updater.enqueueSetState(this, partialState);
	  if (callback) {
	    this.updater.enqueueCallback(this, callback, 'setState');
	  }
	};
	
	/**
	 * Forces an update. This should only be invoked when it is known with
	 * certainty that we are **not** in a DOM transaction.
	 *
	 * You may want to call this when you know that some deeper aspect of the
	 * component's state has changed but `setState` was not called.
	 *
	 * This will not invoke `shouldComponentUpdate`, but it will invoke
	 * `componentWillUpdate` and `componentDidUpdate`.
	 *
	 * @param {?function} callback Called after update is complete.
	 * @final
	 * @protected
	 */
	ReactComponent.prototype.forceUpdate = function (callback) {
	  this.updater.enqueueForceUpdate(this);
	  if (callback) {
	    this.updater.enqueueCallback(this, callback, 'forceUpdate');
	  }
	};
	
	/**
	 * Deprecated APIs. These APIs used to exist on classic React classes but since
	 * we would like to deprecate them, we're not going to move them over to this
	 * modern base class. Instead, we define a getter that warns if it's accessed.
	 */
	if (process.env.NODE_ENV !== 'production') {
	  var deprecatedAPIs = {
	    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],
	    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']
	  };
	  var defineDeprecationWarning = function (methodName, info) {
	    if (canDefineProperty) {
	      Object.defineProperty(ReactComponent.prototype, methodName, {
	        get: function () {
	          process.env.NODE_ENV !== 'production' ? warning(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]) : void 0;
	          return undefined;
	        }
	      });
	    }
	  };
	  for (var fnName in deprecatedAPIs) {
	    if (deprecatedAPIs.hasOwnProperty(fnName)) {
	      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
	    }
	  }
	}
	
	module.exports = ReactComponent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 19 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var warning = __webpack_require__(11);
	
	function warnNoop(publicInstance, callerName) {
	  if (process.env.NODE_ENV !== 'production') {
	    var constructor = publicInstance.constructor;
	    process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, constructor && (constructor.displayName || constructor.name) || 'ReactClass') : void 0;
	  }
	}
	
	/**
	 * This is the abstract API for an update queue.
	 */
	var ReactNoopUpdateQueue = {
	
	  /**
	   * Checks whether or not this composite component is mounted.
	   * @param {ReactClass} publicInstance The instance we want to test.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */
	  isMounted: function (publicInstance) {
	    return false;
	  },
	
	  /**
	   * Enqueue a callback that will be executed after all the pending updates
	   * have processed.
	   *
	   * @param {ReactClass} publicInstance The instance to use as `this` context.
	   * @param {?function} callback Called after state is updated.
	   * @internal
	   */
	  enqueueCallback: function (publicInstance, callback) {},
	
	  /**
	   * Forces an update. This should only be invoked when it is known with
	   * certainty that we are **not** in a DOM transaction.
	   *
	   * You may want to call this when you know that some deeper aspect of the
	   * component's state has changed but `setState` was not called.
	   *
	   * This will not invoke `shouldComponentUpdate`, but it will invoke
	   * `componentWillUpdate` and `componentDidUpdate`.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @internal
	   */
	  enqueueForceUpdate: function (publicInstance) {
	    warnNoop(publicInstance, 'forceUpdate');
	  },
	
	  /**
	   * Replaces all of the state. Always use this or `setState` to mutate state.
	   * You should treat `this.state` as immutable.
	   *
	   * There is no guarantee that `this.state` will be immediately updated, so
	   * accessing `this.state` after calling this method may return the old value.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} completeState Next state.
	   * @internal
	   */
	  enqueueReplaceState: function (publicInstance, completeState) {
	    warnNoop(publicInstance, 'replaceState');
	  },
	
	  /**
	   * Sets a subset of the state. This only exists because _pendingState is
	   * internal. This provides a merging strategy that is not available to deep
	   * properties which is confusing. TODO: Expose pendingState or don't use it
	   * during the merge.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} partialState Next partial state to be merged with state.
	   * @internal
	   */
	  enqueueSetState: function (publicInstance, partialState) {
	    warnNoop(publicInstance, 'setState');
	  }
	};
	
	module.exports = ReactNoopUpdateQueue;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 20 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var emptyObject = {};
	
	if (process.env.NODE_ENV !== 'production') {
	  Object.freeze(emptyObject);
	}
	
	module.exports = emptyObject;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 21 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(4);
	
	var ReactComponent = __webpack_require__(18);
	var ReactNoopUpdateQueue = __webpack_require__(19);
	
	var emptyObject = __webpack_require__(20);
	
	/**
	 * Base class helpers for the updating state of a component.
	 */
	function ReactPureComponent(props, context, updater) {
	  // Duplicated from ReactComponent.
	  this.props = props;
	  this.context = context;
	  this.refs = emptyObject;
	  // We initialize the default updater but the real one gets injected by the
	  // renderer.
	  this.updater = updater || ReactNoopUpdateQueue;
	}
	
	function ComponentDummy() {}
	ComponentDummy.prototype = ReactComponent.prototype;
	ReactPureComponent.prototype = new ComponentDummy();
	ReactPureComponent.prototype.constructor = ReactPureComponent;
	// Avoid an extra prototype jump for these methods.
	_assign(ReactPureComponent.prototype, ReactComponent.prototype);
	ReactPureComponent.prototype.isPureReactComponent = true;
	
	module.exports = ReactPureComponent;

/***/ },
/* 22 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(7),
	    _assign = __webpack_require__(4);
	
	var ReactComponent = __webpack_require__(18);
	var ReactElement = __webpack_require__(9);
	var ReactPropTypeLocationNames = __webpack_require__(23);
	var ReactNoopUpdateQueue = __webpack_require__(19);
	
	var emptyObject = __webpack_require__(20);
	var invariant = __webpack_require__(8);
	var warning = __webpack_require__(11);
	
	var MIXINS_KEY = 'mixins';
	
	// Helper function to allow the creation of anonymous functions which do not
	// have .name set to the name of the variable being assigned to.
	function identity(fn) {
	  return fn;
	}
	
	/**
	 * Policies that describe methods in `ReactClassInterface`.
	 */
	
	
	var injectedMixins = [];
	
	/**
	 * Composite components are higher-level components that compose other composite
	 * or host components.
	 *
	 * To create a new type of `ReactClass`, pass a specification of
	 * your new class to `React.createClass`. The only requirement of your class
	 * specification is that you implement a `render` method.
	 *
	 *   var MyComponent = React.createClass({
	 *     render: function() {
	 *       return <div>Hello World</div>;
	 *     }
	 *   });
	 *
	 * The class specification supports a specific protocol of methods that have
	 * special meaning (e.g. `render`). See `ReactClassInterface` for
	 * more the comprehensive protocol. Any other properties and methods in the
	 * class specification will be available on the prototype.
	 *
	 * @interface ReactClassInterface
	 * @internal
	 */
	var ReactClassInterface = {
	
	  /**
	   * An array of Mixin objects to include when defining your component.
	   *
	   * @type {array}
	   * @optional
	   */
	  mixins: 'DEFINE_MANY',
	
	  /**
	   * An object containing properties and methods that should be defined on
	   * the component's constructor instead of its prototype (static methods).
	   *
	   * @type {object}
	   * @optional
	   */
	  statics: 'DEFINE_MANY',
	
	  /**
	   * Definition of prop types for this component.
	   *
	   * @type {object}
	   * @optional
	   */
	  propTypes: 'DEFINE_MANY',
	
	  /**
	   * Definition of context types for this component.
	   *
	   * @type {object}
	   * @optional
	   */
	  contextTypes: 'DEFINE_MANY',
	
	  /**
	   * Definition of context types this component sets for its children.
	   *
	   * @type {object}
	   * @optional
	   */
	  childContextTypes: 'DEFINE_MANY',
	
	  // ==== Definition methods ====
	
	  /**
	   * Invoked when the component is mounted. Values in the mapping will be set on
	   * `this.props` if that prop is not specified (i.e. using an `in` check).
	   *
	   * This method is invoked before `getInitialState` and therefore cannot rely
	   * on `this.state` or use `this.setState`.
	   *
	   * @return {object}
	   * @optional
	   */
	  getDefaultProps: 'DEFINE_MANY_MERGED',
	
	  /**
	   * Invoked once before the component is mounted. The return value will be used
	   * as the initial value of `this.state`.
	   *
	   *   getInitialState: function() {
	   *     return {
	   *       isOn: false,
	   *       fooBaz: new BazFoo()
	   *     }
	   *   }
	   *
	   * @return {object}
	   * @optional
	   */
	  getInitialState: 'DEFINE_MANY_MERGED',
	
	  /**
	   * @return {object}
	   * @optional
	   */
	  getChildContext: 'DEFINE_MANY_MERGED',
	
	  /**
	   * Uses props from `this.props` and state from `this.state` to render the
	   * structure of the component.
	   *
	   * No guarantees are made about when or how often this method is invoked, so
	   * it must not have side effects.
	   *
	   *   render: function() {
	   *     var name = this.props.name;
	   *     return <div>Hello, {name}!</div>;
	   *   }
	   *
	   * @return {ReactComponent}
	   * @nosideeffects
	   * @required
	   */
	  render: 'DEFINE_ONCE',
	
	  // ==== Delegate methods ====
	
	  /**
	   * Invoked when the component is initially created and about to be mounted.
	   * This may have side effects, but any external subscriptions or data created
	   * by this method must be cleaned up in `componentWillUnmount`.
	   *
	   * @optional
	   */
	  componentWillMount: 'DEFINE_MANY',
	
	  /**
	   * Invoked when the component has been mounted and has a DOM representation.
	   * However, there is no guarantee that the DOM node is in the document.
	   *
	   * Use this as an opportunity to operate on the DOM when the component has
	   * been mounted (initialized and rendered) for the first time.
	   *
	   * @param {DOMElement} rootNode DOM element representing the component.
	   * @optional
	   */
	  componentDidMount: 'DEFINE_MANY',
	
	  /**
	   * Invoked before the component receives new props.
	   *
	   * Use this as an opportunity to react to a prop transition by updating the
	   * state using `this.setState`. Current props are accessed via `this.props`.
	   *
	   *   componentWillReceiveProps: function(nextProps, nextContext) {
	   *     this.setState({
	   *       likesIncreasing: nextProps.likeCount > this.props.likeCount
	   *     });
	   *   }
	   *
	   * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop
	   * transition may cause a state change, but the opposite is not true. If you
	   * need it, you are probably looking for `componentWillUpdate`.
	   *
	   * @param {object} nextProps
	   * @optional
	   */
	  componentWillReceiveProps: 'DEFINE_MANY',
	
	  /**
	   * Invoked while deciding if the component should be updated as a result of
	   * receiving new props, state and/or context.
	   *
	   * Use this as an opportunity to `return false` when you're certain that the
	   * transition to the new props/state/context will not require a component
	   * update.
	   *
	   *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {
	   *     return !equal(nextProps, this.props) ||
	   *       !equal(nextState, this.state) ||
	   *       !equal(nextContext, this.context);
	   *   }
	   *
	   * @param {object} nextProps
	   * @param {?object} nextState
	   * @param {?object} nextContext
	   * @return {boolean} True if the component should update.
	   * @optional
	   */
	  shouldComponentUpdate: 'DEFINE_ONCE',
	
	  /**
	   * Invoked when the component is about to update due to a transition from
	   * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`
	   * and `nextContext`.
	   *
	   * Use this as an opportunity to perform preparation before an update occurs.
	   *
	   * NOTE: You **cannot** use `this.setState()` in this method.
	   *
	   * @param {object} nextProps
	   * @param {?object} nextState
	   * @param {?object} nextContext
	   * @param {ReactReconcileTransaction} transaction
	   * @optional
	   */
	  componentWillUpdate: 'DEFINE_MANY',
	
	  /**
	   * Invoked when the component's DOM representation has been updated.
	   *
	   * Use this as an opportunity to operate on the DOM when the component has
	   * been updated.
	   *
	   * @param {object} prevProps
	   * @param {?object} prevState
	   * @param {?object} prevContext
	   * @param {DOMElement} rootNode DOM element representing the component.
	   * @optional
	   */
	  componentDidUpdate: 'DEFINE_MANY',
	
	  /**
	   * Invoked when the component is about to be removed from its parent and have
	   * its DOM representation destroyed.
	   *
	   * Use this as an opportunity to deallocate any external resources.
	   *
	   * NOTE: There is no `componentDidUnmount` since your component will have been
	   * destroyed by that point.
	   *
	   * @optional
	   */
	  componentWillUnmount: 'DEFINE_MANY',
	
	  // ==== Advanced methods ====
	
	  /**
	   * Updates the component's currently mounted DOM representation.
	   *
	   * By default, this implements React's rendering and reconciliation algorithm.
	   * Sophisticated clients may wish to override this.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   * @overridable
	   */
	  updateComponent: 'OVERRIDE_BASE'
	
	};
	
	/**
	 * Mapping from class specification keys to special processing functions.
	 *
	 * Although these are declared like instance properties in the specification
	 * when defining classes using `React.createClass`, they are actually static
	 * and are accessible on the constructor instead of the prototype. Despite
	 * being static, they must be defined outside of the "statics" key under
	 * which all other static methods are defined.
	 */
	var RESERVED_SPEC_KEYS = {
	  displayName: function (Constructor, displayName) {
	    Constructor.displayName = displayName;
	  },
	  mixins: function (Constructor, mixins) {
	    if (mixins) {
	      for (var i = 0; i < mixins.length; i++) {
	        mixSpecIntoComponent(Constructor, mixins[i]);
	      }
	    }
	  },
	  childContextTypes: function (Constructor, childContextTypes) {
	    if (process.env.NODE_ENV !== 'production') {
	      validateTypeDef(Constructor, childContextTypes, 'childContext');
	    }
	    Constructor.childContextTypes = _assign({}, Constructor.childContextTypes, childContextTypes);
	  },
	  contextTypes: function (Constructor, contextTypes) {
	    if (process.env.NODE_ENV !== 'production') {
	      validateTypeDef(Constructor, contextTypes, 'context');
	    }
	    Constructor.contextTypes = _assign({}, Constructor.contextTypes, contextTypes);
	  },
	  /**
	   * Special case getDefaultProps which should move into statics but requires
	   * automatic merging.
	   */
	  getDefaultProps: function (Constructor, getDefaultProps) {
	    if (Constructor.getDefaultProps) {
	      Constructor.getDefaultProps = createMergedResultFunction(Constructor.getDefaultProps, getDefaultProps);
	    } else {
	      Constructor.getDefaultProps = getDefaultProps;
	    }
	  },
	  propTypes: function (Constructor, propTypes) {
	    if (process.env.NODE_ENV !== 'production') {
	      validateTypeDef(Constructor, propTypes, 'prop');
	    }
	    Constructor.propTypes = _assign({}, Constructor.propTypes, propTypes);
	  },
	  statics: function (Constructor, statics) {
	    mixStaticSpecIntoComponent(Constructor, statics);
	  },
	  autobind: function () {} };
	
	function validateTypeDef(Constructor, typeDef, location) {
	  for (var propName in typeDef) {
	    if (typeDef.hasOwnProperty(propName)) {
	      // use a warning instead of an invariant so components
	      // don't show up in prod but only in __DEV__
	      process.env.NODE_ENV !== 'production' ? warning(typeof typeDef[propName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', Constructor.displayName || 'ReactClass', ReactPropTypeLocationNames[location], propName) : void 0;
	    }
	  }
	}
	
	function validateMethodOverride(isAlreadyDefined, name) {
	  var specPolicy = ReactClassInterface.hasOwnProperty(name) ? ReactClassInterface[name] : null;
	
	  // Disallow overriding of base class methods unless explicitly allowed.
	  if (ReactClassMixin.hasOwnProperty(name)) {
	    !(specPolicy === 'OVERRIDE_BASE') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClassInterface: You are attempting to override `%s` from your class specification. Ensure that your method names do not overlap with React methods.', name) : _prodInvariant('73', name) : void 0;
	  }
	
	  // Disallow defining methods more than once unless explicitly allowed.
	  if (isAlreadyDefined) {
	    !(specPolicy === 'DEFINE_MANY' || specPolicy === 'DEFINE_MANY_MERGED') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClassInterface: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.', name) : _prodInvariant('74', name) : void 0;
	  }
	}
	
	/**
	 * Mixin helper which handles policy validation and reserved
	 * specification keys when building React classes.
	 */
	function mixSpecIntoComponent(Constructor, spec) {
	  if (!spec) {
	    if (process.env.NODE_ENV !== 'production') {
	      var typeofSpec = typeof spec;
	      var isMixinValid = typeofSpec === 'object' && spec !== null;
	
	      process.env.NODE_ENV !== 'production' ? warning(isMixinValid, '%s: You\'re attempting to include a mixin that is either null ' + 'or not an object. Check the mixins included by the component, ' + 'as well as any mixins they include themselves. ' + 'Expected object but got %s.', Constructor.displayName || 'ReactClass', spec === null ? null : typeofSpec) : void 0;
	    }
	
	    return;
	  }
	
	  !(typeof spec !== 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You\'re attempting to use a component class or function as a mixin. Instead, just use a regular object.') : _prodInvariant('75') : void 0;
	  !!ReactElement.isValidElement(spec) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You\'re attempting to use a component as a mixin. Instead, just use a regular object.') : _prodInvariant('76') : void 0;
	
	  var proto = Constructor.prototype;
	  var autoBindPairs = proto.__reactAutoBindPairs;
	
	  // By handling mixins before any other properties, we ensure the same
	  // chaining order is applied to methods with DEFINE_MANY policy, whether
	  // mixins are listed before or after these methods in the spec.
	  if (spec.hasOwnProperty(MIXINS_KEY)) {
	    RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);
	  }
	
	  for (var name in spec) {
	    if (!spec.hasOwnProperty(name)) {
	      continue;
	    }
	
	    if (name === MIXINS_KEY) {
	      // We have already handled mixins in a special case above.
	      continue;
	    }
	
	    var property = spec[name];
	    var isAlreadyDefined = proto.hasOwnProperty(name);
	    validateMethodOverride(isAlreadyDefined, name);
	
	    if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {
	      RESERVED_SPEC_KEYS[name](Constructor, property);
	    } else {
	      // Setup methods on prototype:
	      // The following member methods should not be automatically bound:
	      // 1. Expected ReactClass methods (in the "interface").
	      // 2. Overridden methods (that were mixed in).
	      var isReactClassMethod = ReactClassInterface.hasOwnProperty(name);
	      var isFunction = typeof property === 'function';
	      var shouldAutoBind = isFunction && !isReactClassMethod && !isAlreadyDefined && spec.autobind !== false;
	
	      if (shouldAutoBind) {
	        autoBindPairs.push(name, property);
	        proto[name] = property;
	      } else {
	        if (isAlreadyDefined) {
	          var specPolicy = ReactClassInterface[name];
	
	          // These cases should already be caught by validateMethodOverride.
	          !(isReactClassMethod && (specPolicy === 'DEFINE_MANY_MERGED' || specPolicy === 'DEFINE_MANY')) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: Unexpected spec policy %s for key %s when mixing in component specs.', specPolicy, name) : _prodInvariant('77', specPolicy, name) : void 0;
	
	          // For methods which are defined more than once, call the existing
	          // methods before calling the new property, merging if appropriate.
	          if (specPolicy === 'DEFINE_MANY_MERGED') {
	            proto[name] = createMergedResultFunction(proto[name], property);
	          } else if (specPolicy === 'DEFINE_MANY') {
	            proto[name] = createChainedFunction(proto[name], property);
	          }
	        } else {
	          proto[name] = property;
	          if (process.env.NODE_ENV !== 'production') {
	            // Add verbose displayName to the function, which helps when looking
	            // at profiling tools.
	            if (typeof property === 'function' && spec.displayName) {
	              proto[name].displayName = spec.displayName + '_' + name;
	            }
	          }
	        }
	      }
	    }
	  }
	}
	
	function mixStaticSpecIntoComponent(Constructor, statics) {
	  if (!statics) {
	    return;
	  }
	  for (var name in statics) {
	    var property = statics[name];
	    if (!statics.hasOwnProperty(name)) {
	      continue;
	    }
	
	    var isReserved = name in RESERVED_SPEC_KEYS;
	    !!isReserved ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You are attempting to define a reserved property, `%s`, that shouldn\'t be on the "statics" key. Define it as an instance property instead; it will still be accessible on the constructor.', name) : _prodInvariant('78', name) : void 0;
	
	    var isInherited = name in Constructor;
	    !!isInherited ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.', name) : _prodInvariant('79', name) : void 0;
	    Constructor[name] = property;
	  }
	}
	
	/**
	 * Merge two objects, but throw if both contain the same key.
	 *
	 * @param {object} one The first object, which is mutated.
	 * @param {object} two The second object
	 * @return {object} one after it has been mutated to contain everything in two.
	 */
	function mergeIntoWithNoDuplicateKeys(one, two) {
	  !(one && two && typeof one === 'object' && typeof two === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.') : _prodInvariant('80') : void 0;
	
	  for (var key in two) {
	    if (two.hasOwnProperty(key)) {
	      !(one[key] === undefined) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Tried to merge two objects with the same key: `%s`. This conflict may be due to a mixin; in particular, this may be caused by two getInitialState() or getDefaultProps() methods returning objects with clashing keys.', key) : _prodInvariant('81', key) : void 0;
	      one[key] = two[key];
	    }
	  }
	  return one;
	}
	
	/**
	 * Creates a function that invokes two functions and merges their return values.
	 *
	 * @param {function} one Function to invoke first.
	 * @param {function} two Function to invoke second.
	 * @return {function} Function that invokes the two argument functions.
	 * @private
	 */
	function createMergedResultFunction(one, two) {
	  return function mergedResult() {
	    var a = one.apply(this, arguments);
	    var b = two.apply(this, arguments);
	    if (a == null) {
	      return b;
	    } else if (b == null) {
	      return a;
	    }
	    var c = {};
	    mergeIntoWithNoDuplicateKeys(c, a);
	    mergeIntoWithNoDuplicateKeys(c, b);
	    return c;
	  };
	}
	
	/**
	 * Creates a function that invokes two functions and ignores their return vales.
	 *
	 * @param {function} one Function to invoke first.
	 * @param {function} two Function to invoke second.
	 * @return {function} Function that invokes the two argument functions.
	 * @private
	 */
	function createChainedFunction(one, two) {
	  return function chainedFunction() {
	    one.apply(this, arguments);
	    two.apply(this, arguments);
	  };
	}
	
	/**
	 * Binds a method to the component.
	 *
	 * @param {object} component Component whose method is going to be bound.
	 * @param {function} method Method to be bound.
	 * @return {function} The bound method.
	 */
	function bindAutoBindMethod(component, method) {
	  var boundMethod = method.bind(component);
	  if (process.env.NODE_ENV !== 'production') {
	    boundMethod.__reactBoundContext = component;
	    boundMethod.__reactBoundMethod = method;
	    boundMethod.__reactBoundArguments = null;
	    var componentName = component.constructor.displayName;
	    var _bind = boundMethod.bind;
	    boundMethod.bind = function (newThis) {
	      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	        args[_key - 1] = arguments[_key];
	      }
	
	      // User is trying to bind() an autobound method; we effectively will
	      // ignore the value of "this" that the user is trying to use, so
	      // let's warn.
	      if (newThis !== component && newThis !== null) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): React component methods may only be bound to the ' + 'component instance. See %s', componentName) : void 0;
	      } else if (!args.length) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): You are binding a component method to the component. ' + 'React does this for you automatically in a high-performance ' + 'way, so you can safely remove this call. See %s', componentName) : void 0;
	        return boundMethod;
	      }
	      var reboundMethod = _bind.apply(boundMethod, arguments);
	      reboundMethod.__reactBoundContext = component;
	      reboundMethod.__reactBoundMethod = method;
	      reboundMethod.__reactBoundArguments = args;
	      return reboundMethod;
	    };
	  }
	  return boundMethod;
	}
	
	/**
	 * Binds all auto-bound methods in a component.
	 *
	 * @param {object} component Component whose method is going to be bound.
	 */
	function bindAutoBindMethods(component) {
	  var pairs = component.__reactAutoBindPairs;
	  for (var i = 0; i < pairs.length; i += 2) {
	    var autoBindKey = pairs[i];
	    var method = pairs[i + 1];
	    component[autoBindKey] = bindAutoBindMethod(component, method);
	  }
	}
	
	/**
	 * Add more to the ReactClass base class. These are all legacy features and
	 * therefore not already part of the modern ReactComponent.
	 */
	var ReactClassMixin = {
	
	  /**
	   * TODO: This will be deprecated because state should always keep a consistent
	   * type signature and the only use case for this, is to avoid that.
	   */
	  replaceState: function (newState, callback) {
	    this.updater.enqueueReplaceState(this, newState);
	    if (callback) {
	      this.updater.enqueueCallback(this, callback, 'replaceState');
	    }
	  },
	
	  /**
	   * Checks whether or not this composite component is mounted.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */
	  isMounted: function () {
	    return this.updater.isMounted(this);
	  }
	};
	
	var ReactClassComponent = function () {};
	_assign(ReactClassComponent.prototype, ReactComponent.prototype, ReactClassMixin);
	
	/**
	 * Module for creating composite components.
	 *
	 * @class ReactClass
	 */
	var ReactClass = {
	
	  /**
	   * Creates a composite component class given a class specification.
	   * See https://facebook.github.io/react/docs/top-level-api.html#react.createclass
	   *
	   * @param {object} spec Class specification (which must define `render`).
	   * @return {function} Component constructor function.
	   * @public
	   */
	  createClass: function (spec) {
	    // To keep our warnings more understandable, we'll use a little hack here to
	    // ensure that Constructor.name !== 'Constructor'. This makes sure we don't
	    // unnecessarily identify a class without displayName as 'Constructor'.
	    var Constructor = identity(function (props, context, updater) {
	      // This constructor gets overridden by mocks. The argument is used
	      // by mocks to assert on what gets mounted.
	
	      if (process.env.NODE_ENV !== 'production') {
	        process.env.NODE_ENV !== 'production' ? warning(this instanceof Constructor, 'Something is calling a React component directly. Use a factory or ' + 'JSX instead. See: https://fb.me/react-legacyfactory') : void 0;
	      }
	
	      // Wire up auto-binding
	      if (this.__reactAutoBindPairs.length) {
	        bindAutoBindMethods(this);
	      }
	
	      this.props = props;
	      this.context = context;
	      this.refs = emptyObject;
	      this.updater = updater || ReactNoopUpdateQueue;
	
	      this.state = null;
	
	      // ReactClasses doesn't have constructors. Instead, they use the
	      // getInitialState and componentWillMount methods for initialization.
	
	      var initialState = this.getInitialState ? this.getInitialState() : null;
	      if (process.env.NODE_ENV !== 'production') {
	        // We allow auto-mocks to proceed as if they're returning null.
	        if (initialState === undefined && this.getInitialState._isMockFunction) {
	          // This is probably bad practice. Consider warning here and
	          // deprecating this convenience.
	          initialState = null;
	        }
	      }
	      !(typeof initialState === 'object' && !Array.isArray(initialState)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getInitialState(): must return an object or null', Constructor.displayName || 'ReactCompositeComponent') : _prodInvariant('82', Constructor.displayName || 'ReactCompositeComponent') : void 0;
	
	      this.state = initialState;
	    });
	    Constructor.prototype = new ReactClassComponent();
	    Constructor.prototype.constructor = Constructor;
	    Constructor.prototype.__reactAutoBindPairs = [];
	
	    injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor));
	
	    mixSpecIntoComponent(Constructor, spec);
	
	    // Initialize the defaultProps property after all mixins have been merged.
	    if (Constructor.getDefaultProps) {
	      Constructor.defaultProps = Constructor.getDefaultProps();
	    }
	
	    if (process.env.NODE_ENV !== 'production') {
	      // This is a tag to indicate that the use of these method names is ok,
	      // since it's used with createClass. If it's not, then it's likely a
	      // mistake so we'll warn you to use the static property, property
	      // initializer or constructor respectively.
	      if (Constructor.getDefaultProps) {
	        Constructor.getDefaultProps.isReactClassApproved = {};
	      }
	      if (Constructor.prototype.getInitialState) {
	        Constructor.prototype.getInitialState.isReactClassApproved = {};
	      }
	    }
	
	    !Constructor.prototype.render ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createClass(...): Class specification must implement a `render` method.') : _prodInvariant('83') : void 0;
	
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentShouldUpdate, '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', spec.displayName || 'A component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentWillRecieveProps, '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', spec.displayName || 'A component') : void 0;
	    }
	
	    // Reduce time spent doing lookups by setting these on the prototype.
	    for (var methodName in ReactClassInterface) {
	      if (!Constructor.prototype[methodName]) {
	        Constructor.prototype[methodName] = null;
	      }
	    }
	
	    return Constructor;
	  },
	
	  injection: {
	    injectMixin: function (mixin) {
	      injectedMixins.push(mixin);
	    }
	  }
	
	};
	
	module.exports = ReactClass;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 23 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var ReactPropTypeLocationNames = {};
	
	if (process.env.NODE_ENV !== 'production') {
	  ReactPropTypeLocationNames = {
	    prop: 'prop',
	    context: 'context',
	    childContext: 'child context'
	  };
	}
	
	module.exports = ReactPropTypeLocationNames;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 24 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var ReactElement = __webpack_require__(9);
	
	/**
	 * Create a factory that creates HTML tag elements.
	 *
	 * @private
	 */
	var createDOMFactory = ReactElement.createFactory;
	if (process.env.NODE_ENV !== 'production') {
	  var ReactElementValidator = __webpack_require__(25);
	  createDOMFactory = ReactElementValidator.createFactory;
	}
	
	/**
	 * Creates a mapping from supported HTML tags to `ReactDOMComponent` classes.
	 * This is also accessible via `React.DOM`.
	 *
	 * @public
	 */
	var ReactDOMFactories = {
	  a: createDOMFactory('a'),
	  abbr: createDOMFactory('abbr'),
	  address: createDOMFactory('address'),
	  area: createDOMFactory('area'),
	  article: createDOMFactory('article'),
	  aside: createDOMFactory('aside'),
	  audio: createDOMFactory('audio'),
	  b: createDOMFactory('b'),
	  base: createDOMFactory('base'),
	  bdi: createDOMFactory('bdi'),
	  bdo: createDOMFactory('bdo'),
	  big: createDOMFactory('big'),
	  blockquote: createDOMFactory('blockquote'),
	  body: createDOMFactory('body'),
	  br: createDOMFactory('br'),
	  button: createDOMFactory('button'),
	  canvas: createDOMFactory('canvas'),
	  caption: createDOMFactory('caption'),
	  cite: createDOMFactory('cite'),
	  code: createDOMFactory('code'),
	  col: createDOMFactory('col'),
	  colgroup: createDOMFactory('colgroup'),
	  data: createDOMFactory('data'),
	  datalist: createDOMFactory('datalist'),
	  dd: createDOMFactory('dd'),
	  del: createDOMFactory('del'),
	  details: createDOMFactory('details'),
	  dfn: createDOMFactory('dfn'),
	  dialog: createDOMFactory('dialog'),
	  div: createDOMFactory('div'),
	  dl: createDOMFactory('dl'),
	  dt: createDOMFactory('dt'),
	  em: createDOMFactory('em'),
	  embed: createDOMFactory('embed'),
	  fieldset: createDOMFactory('fieldset'),
	  figcaption: createDOMFactory('figcaption'),
	  figure: createDOMFactory('figure'),
	  footer: createDOMFactory('footer'),
	  form: createDOMFactory('form'),
	  h1: createDOMFactory('h1'),
	  h2: createDOMFactory('h2'),
	  h3: createDOMFactory('h3'),
	  h4: createDOMFactory('h4'),
	  h5: createDOMFactory('h5'),
	  h6: createDOMFactory('h6'),
	  head: createDOMFactory('head'),
	  header: createDOMFactory('header'),
	  hgroup: createDOMFactory('hgroup'),
	  hr: createDOMFactory('hr'),
	  html: createDOMFactory('html'),
	  i: createDOMFactory('i'),
	  iframe: createDOMFactory('iframe'),
	  img: createDOMFactory('img'),
	  input: createDOMFactory('input'),
	  ins: createDOMFactory('ins'),
	  kbd: createDOMFactory('kbd'),
	  keygen: createDOMFactory('keygen'),
	  label: createDOMFactory('label'),
	  legend: createDOMFactory('legend'),
	  li: createDOMFactory('li'),
	  link: createDOMFactory('link'),
	  main: createDOMFactory('main'),
	  map: createDOMFactory('map'),
	  mark: createDOMFactory('mark'),
	  menu: createDOMFactory('menu'),
	  menuitem: createDOMFactory('menuitem'),
	  meta: createDOMFactory('meta'),
	  meter: createDOMFactory('meter'),
	  nav: createDOMFactory('nav'),
	  noscript: createDOMFactory('noscript'),
	  object: createDOMFactory('object'),
	  ol: createDOMFactory('ol'),
	  optgroup: createDOMFactory('optgroup'),
	  option: createDOMFactory('option'),
	  output: createDOMFactory('output'),
	  p: createDOMFactory('p'),
	  param: createDOMFactory('param'),
	  picture: createDOMFactory('picture'),
	  pre: createDOMFactory('pre'),
	  progress: createDOMFactory('progress'),
	  q: createDOMFactory('q'),
	  rp: createDOMFactory('rp'),
	  rt: createDOMFactory('rt'),
	  ruby: createDOMFactory('ruby'),
	  s: createDOMFactory('s'),
	  samp: createDOMFactory('samp'),
	  script: createDOMFactory('script'),
	  section: createDOMFactory('section'),
	  select: createDOMFactory('select'),
	  small: createDOMFactory('small'),
	  source: createDOMFactory('source'),
	  span: createDOMFactory('span'),
	  strong: createDOMFactory('strong'),
	  style: createDOMFactory('style'),
	  sub: createDOMFactory('sub'),
	  summary: createDOMFactory('summary'),
	  sup: createDOMFactory('sup'),
	  table: createDOMFactory('table'),
	  tbody: createDOMFactory('tbody'),
	  td: createDOMFactory('td'),
	  textarea: createDOMFactory('textarea'),
	  tfoot: createDOMFactory('tfoot'),
	  th: createDOMFactory('th'),
	  thead: createDOMFactory('thead'),
	  time: createDOMFactory('time'),
	  title: createDOMFactory('title'),
	  tr: createDOMFactory('tr'),
	  track: createDOMFactory('track'),
	  u: createDOMFactory('u'),
	  ul: createDOMFactory('ul'),
	  'var': createDOMFactory('var'),
	  video: createDOMFactory('video'),
	  wbr: createDOMFactory('wbr'),
	
	  // SVG
	  circle: createDOMFactory('circle'),
	  clipPath: createDOMFactory('clipPath'),
	  defs: createDOMFactory('defs'),
	  ellipse: createDOMFactory('ellipse'),
	  g: createDOMFactory('g'),
	  image: createDOMFactory('image'),
	  line: createDOMFactory('line'),
	  linearGradient: createDOMFactory('linearGradient'),
	  mask: createDOMFactory('mask'),
	  path: createDOMFactory('path'),
	  pattern: createDOMFactory('pattern'),
	  polygon: createDOMFactory('polygon'),
	  polyline: createDOMFactory('polyline'),
	  radialGradient: createDOMFactory('radialGradient'),
	  rect: createDOMFactory('rect'),
	  stop: createDOMFactory('stop'),
	  svg: createDOMFactory('svg'),
	  text: createDOMFactory('text'),
	  tspan: createDOMFactory('tspan')
	};
	
	module.exports = ReactDOMFactories;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 25 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	/**
	 * ReactElementValidator provides a wrapper around a element factory
	 * which validates the props passed to the element. This is intended to be
	 * used only in DEV and could be replaced by a static type checker for languages
	 * that support it.
	 */
	
	'use strict';
	
	var ReactCurrentOwner = __webpack_require__(10);
	var ReactComponentTreeHook = __webpack_require__(26);
	var ReactElement = __webpack_require__(9);
	
	var checkReactTypeSpec = __webpack_require__(27);
	
	var canDefineProperty = __webpack_require__(13);
	var getIteratorFn = __webpack_require__(16);
	var warning = __webpack_require__(11);
	
	function getDeclarationErrorAddendum() {
	  if (ReactCurrentOwner.current) {
	    var name = ReactCurrentOwner.current.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}
	
	/**
	 * Warn if there's no key explicitly set on dynamic arrays of children or
	 * object keys are not valid. This allows us to keep track of children between
	 * updates.
	 */
	var ownerHasKeyUseWarning = {};
	
	function getCurrentComponentErrorInfo(parentType) {
	  var info = getDeclarationErrorAddendum();
	
	  if (!info) {
	    var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;
	    if (parentName) {
	      info = ' Check the top-level render call using <' + parentName + '>.';
	    }
	  }
	  return info;
	}
	
	/**
	 * Warn if the element doesn't have an explicit key assigned to it.
	 * This element is in an array. The array could grow and shrink or be
	 * reordered. All children that haven't already been validated are required to
	 * have a "key" property assigned to it. Error statuses are cached so a warning
	 * will only be shown once.
	 *
	 * @internal
	 * @param {ReactElement} element Element that requires a key.
	 * @param {*} parentType element's parent's type.
	 */
	function validateExplicitKey(element, parentType) {
	  if (!element._store || element._store.validated || element.key != null) {
	    return;
	  }
	  element._store.validated = true;
	
	  var memoizer = ownerHasKeyUseWarning.uniqueKey || (ownerHasKeyUseWarning.uniqueKey = {});
	
	  var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);
	  if (memoizer[currentComponentErrorInfo]) {
	    return;
	  }
	  memoizer[currentComponentErrorInfo] = true;
	
	  // Usually the current owner is the offender, but if it accepts children as a
	  // property, it may be the creator of the child that's responsible for
	  // assigning it a key.
	  var childOwner = '';
	  if (element && element._owner && element._owner !== ReactCurrentOwner.current) {
	    // Give the component that originally created this child.
	    childOwner = ' It was passed a child from ' + element._owner.getName() + '.';
	  }
	
	  process.env.NODE_ENV !== 'production' ? warning(false, 'Each child in an array or iterator should have a unique "key" prop.' + '%s%s See https://fb.me/react-warning-keys for more information.%s', currentComponentErrorInfo, childOwner, ReactComponentTreeHook.getCurrentStackAddendum(element)) : void 0;
	}
	
	/**
	 * Ensure that every element either is passed in a static location, in an
	 * array with an explicit keys property defined, or in an object literal
	 * with valid key property.
	 *
	 * @internal
	 * @param {ReactNode} node Statically passed child of any type.
	 * @param {*} parentType node's parent's type.
	 */
	function validateChildKeys(node, parentType) {
	  if (typeof node !== 'object') {
	    return;
	  }
	  if (Array.isArray(node)) {
	    for (var i = 0; i < node.length; i++) {
	      var child = node[i];
	      if (ReactElement.isValidElement(child)) {
	        validateExplicitKey(child, parentType);
	      }
	    }
	  } else if (ReactElement.isValidElement(node)) {
	    // This element was passed in a valid location.
	    if (node._store) {
	      node._store.validated = true;
	    }
	  } else if (node) {
	    var iteratorFn = getIteratorFn(node);
	    // Entry iterators provide implicit keys.
	    if (iteratorFn) {
	      if (iteratorFn !== node.entries) {
	        var iterator = iteratorFn.call(node);
	        var step;
	        while (!(step = iterator.next()).done) {
	          if (ReactElement.isValidElement(step.value)) {
	            validateExplicitKey(step.value, parentType);
	          }
	        }
	      }
	    }
	  }
	}
	
	/**
	 * Given an element, validate that its props follow the propTypes definition,
	 * provided by the type.
	 *
	 * @param {ReactElement} element
	 */
	function validatePropTypes(element) {
	  var componentClass = element.type;
	  if (typeof componentClass !== 'function') {
	    return;
	  }
	  var name = componentClass.displayName || componentClass.name;
	  if (componentClass.propTypes) {
	    checkReactTypeSpec(componentClass.propTypes, element.props, 'prop', name, element, null);
	  }
	  if (typeof componentClass.getDefaultProps === 'function') {
	    process.env.NODE_ENV !== 'production' ? warning(componentClass.getDefaultProps.isReactClassApproved, 'getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.') : void 0;
	  }
	}
	
	var ReactElementValidator = {
	
	  createElement: function (type, props, children) {
	    var validType = typeof type === 'string' || typeof type === 'function';
	    // We warn in this case but don't throw. We expect the element creation to
	    // succeed and there will likely be errors in render.
	    if (!validType) {
	      if (typeof type !== 'function' && typeof type !== 'string') {
	        var info = '';
	        if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
	          info += ' You likely forgot to export your component from the file ' + 'it\'s defined in.';
	        }
	        info += getDeclarationErrorAddendum();
	        process.env.NODE_ENV !== 'production' ? warning(false, 'React.createElement: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', type == null ? type : typeof type, info) : void 0;
	      }
	    }
	
	    var element = ReactElement.createElement.apply(this, arguments);
	
	    // The result can be nullish if a mock or a custom function is used.
	    // TODO: Drop this when these are no longer allowed as the type argument.
	    if (element == null) {
	      return element;
	    }
	
	    // Skip key warning if the type isn't valid since our key validation logic
	    // doesn't expect a non-string/function type and can throw confusing errors.
	    // We don't want exception behavior to differ between dev and prod.
	    // (Rendering will throw with a helpful message and as soon as the type is
	    // fixed, the key warnings will appear.)
	    if (validType) {
	      for (var i = 2; i < arguments.length; i++) {
	        validateChildKeys(arguments[i], type);
	      }
	    }
	
	    validatePropTypes(element);
	
	    return element;
	  },
	
	  createFactory: function (type) {
	    var validatedFactory = ReactElementValidator.createElement.bind(null, type);
	    // Legacy hook TODO: Warn if this is accessed
	    validatedFactory.type = type;
	
	    if (process.env.NODE_ENV !== 'production') {
	      if (canDefineProperty) {
	        Object.defineProperty(validatedFactory, 'type', {
	          enumerable: false,
	          get: function () {
	            process.env.NODE_ENV !== 'production' ? warning(false, 'Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.') : void 0;
	            Object.defineProperty(this, 'type', {
	              value: type
	            });
	            return type;
	          }
	        });
	      }
	    }
	
	    return validatedFactory;
	  },
	
	  cloneElement: function (element, props, children) {
	    var newElement = ReactElement.cloneElement.apply(this, arguments);
	    for (var i = 2; i < arguments.length; i++) {
	      validateChildKeys(arguments[i], newElement.type);
	    }
	    validatePropTypes(newElement);
	    return newElement;
	  }
	
	};
	
	module.exports = ReactElementValidator;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 26 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2016-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(7);
	
	var ReactCurrentOwner = __webpack_require__(10);
	
	var invariant = __webpack_require__(8);
	var warning = __webpack_require__(11);
	
	function isNative(fn) {
	  // Based on isNative() from Lodash
	  var funcToString = Function.prototype.toString;
	  var hasOwnProperty = Object.prototype.hasOwnProperty;
	  var reIsNative = RegExp('^' + funcToString
	  // Take an example native function source for comparison
	  .call(hasOwnProperty)
	  // Strip regex characters so we can use it for regex
	  .replace(/[\\^$.*+?()[\]{}|]/g, '\\$&')
	  // Remove hasOwnProperty from the template to make it generic
	  .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$');
	  try {
	    var source = funcToString.call(fn);
	    return reIsNative.test(source);
	  } catch (err) {
	    return false;
	  }
	}
	
	var canUseCollections =
	// Array.from
	typeof Array.from === 'function' &&
	// Map
	typeof Map === 'function' && isNative(Map) &&
	// Map.prototype.keys
	Map.prototype != null && typeof Map.prototype.keys === 'function' && isNative(Map.prototype.keys) &&
	// Set
	typeof Set === 'function' && isNative(Set) &&
	// Set.prototype.keys
	Set.prototype != null && typeof Set.prototype.keys === 'function' && isNative(Set.prototype.keys);
	
	var setItem;
	var getItem;
	var removeItem;
	var getItemIDs;
	var addRoot;
	var removeRoot;
	var getRootIDs;
	
	if (canUseCollections) {
	  var itemMap = new Map();
	  var rootIDSet = new Set();
	
	  setItem = function (id, item) {
	    itemMap.set(id, item);
	  };
	  getItem = function (id) {
	    return itemMap.get(id);
	  };
	  removeItem = function (id) {
	    itemMap['delete'](id);
	  };
	  getItemIDs = function () {
	    return Array.from(itemMap.keys());
	  };
	
	  addRoot = function (id) {
	    rootIDSet.add(id);
	  };
	  removeRoot = function (id) {
	    rootIDSet['delete'](id);
	  };
	  getRootIDs = function () {
	    return Array.from(rootIDSet.keys());
	  };
	} else {
	  var itemByKey = {};
	  var rootByKey = {};
	
	  // Use non-numeric keys to prevent V8 performance issues:
	  // https://github.com/facebook/react/pull/7232
	  var getKeyFromID = function (id) {
	    return '.' + id;
	  };
	  var getIDFromKey = function (key) {
	    return parseInt(key.substr(1), 10);
	  };
	
	  setItem = function (id, item) {
	    var key = getKeyFromID(id);
	    itemByKey[key] = item;
	  };
	  getItem = function (id) {
	    var key = getKeyFromID(id);
	    return itemByKey[key];
	  };
	  removeItem = function (id) {
	    var key = getKeyFromID(id);
	    delete itemByKey[key];
	  };
	  getItemIDs = function () {
	    return Object.keys(itemByKey).map(getIDFromKey);
	  };
	
	  addRoot = function (id) {
	    var key = getKeyFromID(id);
	    rootByKey[key] = true;
	  };
	  removeRoot = function (id) {
	    var key = getKeyFromID(id);
	    delete rootByKey[key];
	  };
	  getRootIDs = function () {
	    return Object.keys(rootByKey).map(getIDFromKey);
	  };
	}
	
	var unmountedIDs = [];
	
	function purgeDeep(id) {
	  var item = getItem(id);
	  if (item) {
	    var childIDs = item.childIDs;
	
	    removeItem(id);
	    childIDs.forEach(purgeDeep);
	  }
	}
	
	function describeComponentFrame(name, source, ownerName) {
	  return '\n    in ' + (name || 'Unknown') + (source ? ' (at ' + source.fileName.replace(/^.*[\\\/]/, '') + ':' + source.lineNumber + ')' : ownerName ? ' (created by ' + ownerName + ')' : '');
	}
	
	function getDisplayName(element) {
	  if (element == null) {
	    return '#empty';
	  } else if (typeof element === 'string' || typeof element === 'number') {
	    return '#text';
	  } else if (typeof element.type === 'string') {
	    return element.type;
	  } else {
	    return element.type.displayName || element.type.name || 'Unknown';
	  }
	}
	
	function describeID(id) {
	  var name = ReactComponentTreeHook.getDisplayName(id);
	  var element = ReactComponentTreeHook.getElement(id);
	  var ownerID = ReactComponentTreeHook.getOwnerID(id);
	  var ownerName;
	  if (ownerID) {
	    ownerName = ReactComponentTreeHook.getDisplayName(ownerID);
	  }
	  process.env.NODE_ENV !== 'production' ? warning(element, 'ReactComponentTreeHook: Missing React element for debugID %s when ' + 'building stack', id) : void 0;
	  return describeComponentFrame(name, element && element._source, ownerName);
	}
	
	var ReactComponentTreeHook = {
	  onSetChildren: function (id, nextChildIDs) {
	    var item = getItem(id);
	    !item ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Item must have been set') : _prodInvariant('144') : void 0;
	    item.childIDs = nextChildIDs;
	
	    for (var i = 0; i < nextChildIDs.length; i++) {
	      var nextChildID = nextChildIDs[i];
	      var nextChild = getItem(nextChildID);
	      !nextChild ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected hook events to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('140') : void 0;
	      !(nextChild.childIDs != null || typeof nextChild.element !== 'object' || nextChild.element == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected onSetChildren() to fire for a container child before its parent includes it in onSetChildren().') : _prodInvariant('141') : void 0;
	      !nextChild.isMounted ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected onMountComponent() to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('71') : void 0;
	      if (nextChild.parentID == null) {
	        nextChild.parentID = id;
	        // TODO: This shouldn't be necessary but mounting a new root during in
	        // componentWillMount currently causes not-yet-mounted components to
	        // be purged from our tree data so their parent id is missing.
	      }
	      !(nextChild.parentID === id) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected onBeforeMountComponent() parent and onSetChildren() to be consistent (%s has parents %s and %s).', nextChildID, nextChild.parentID, id) : _prodInvariant('142', nextChildID, nextChild.parentID, id) : void 0;
	    }
	  },
	  onBeforeMountComponent: function (id, element, parentID) {
	    var item = {
	      element: element,
	      parentID: parentID,
	      text: null,
	      childIDs: [],
	      isMounted: false,
	      updateCount: 0
	    };
	    setItem(id, item);
	  },
	  onBeforeUpdateComponent: function (id, element) {
	    var item = getItem(id);
	    if (!item || !item.isMounted) {
	      // We may end up here as a result of setState() in componentWillUnmount().
	      // In this case, ignore the element.
	      return;
	    }
	    item.element = element;
	  },
	  onMountComponent: function (id) {
	    var item = getItem(id);
	    !item ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Item must have been set') : _prodInvariant('144') : void 0;
	    item.isMounted = true;
	    var isRoot = item.parentID === 0;
	    if (isRoot) {
	      addRoot(id);
	    }
	  },
	  onUpdateComponent: function (id) {
	    var item = getItem(id);
	    if (!item || !item.isMounted) {
	      // We may end up here as a result of setState() in componentWillUnmount().
	      // In this case, ignore the element.
	      return;
	    }
	    item.updateCount++;
	  },
	  onUnmountComponent: function (id) {
	    var item = getItem(id);
	    if (item) {
	      // We need to check if it exists.
	      // `item` might not exist if it is inside an error boundary, and a sibling
	      // error boundary child threw while mounting. Then this instance never
	      // got a chance to mount, but it still gets an unmounting event during
	      // the error boundary cleanup.
	      item.isMounted = false;
	      var isRoot = item.parentID === 0;
	      if (isRoot) {
	        removeRoot(id);
	      }
	    }
	    unmountedIDs.push(id);
	  },
	  purgeUnmountedComponents: function () {
	    if (ReactComponentTreeHook._preventPurging) {
	      // Should only be used for testing.
	      return;
	    }
	
	    for (var i = 0; i < unmountedIDs.length; i++) {
	      var id = unmountedIDs[i];
	      purgeDeep(id);
	    }
	    unmountedIDs.length = 0;
	  },
	  isMounted: function (id) {
	    var item = getItem(id);
	    return item ? item.isMounted : false;
	  },
	  getCurrentStackAddendum: function (topElement) {
	    var info = '';
	    if (topElement) {
	      var name = getDisplayName(topElement);
	      var owner = topElement._owner;
	      info += describeComponentFrame(name, topElement._source, owner && owner.getName());
	    }
	
	    var currentOwner = ReactCurrentOwner.current;
	    var id = currentOwner && currentOwner._debugID;
	
	    info += ReactComponentTreeHook.getStackAddendumByID(id);
	    return info;
	  },
	  getStackAddendumByID: function (id) {
	    var info = '';
	    while (id) {
	      info += describeID(id);
	      id = ReactComponentTreeHook.getParentID(id);
	    }
	    return info;
	  },
	  getChildIDs: function (id) {
	    var item = getItem(id);
	    return item ? item.childIDs : [];
	  },
	  getDisplayName: function (id) {
	    var element = ReactComponentTreeHook.getElement(id);
	    if (!element) {
	      return null;
	    }
	    return getDisplayName(element);
	  },
	  getElement: function (id) {
	    var item = getItem(id);
	    return item ? item.element : null;
	  },
	  getOwnerID: function (id) {
	    var element = ReactComponentTreeHook.getElement(id);
	    if (!element || !element._owner) {
	      return null;
	    }
	    return element._owner._debugID;
	  },
	  getParentID: function (id) {
	    var item = getItem(id);
	    return item ? item.parentID : null;
	  },
	  getSource: function (id) {
	    var item = getItem(id);
	    var element = item ? item.element : null;
	    var source = element != null ? element._source : null;
	    return source;
	  },
	  getText: function (id) {
	    var element = ReactComponentTreeHook.getElement(id);
	    if (typeof element === 'string') {
	      return element;
	    } else if (typeof element === 'number') {
	      return '' + element;
	    } else {
	      return null;
	    }
	  },
	  getUpdateCount: function (id) {
	    var item = getItem(id);
	    return item ? item.updateCount : 0;
	  },
	
	
	  getRootIDs: getRootIDs,
	  getRegisteredIDs: getItemIDs
	};
	
	module.exports = ReactComponentTreeHook;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 27 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(7);
	
	var ReactPropTypeLocationNames = __webpack_require__(23);
	var ReactPropTypesSecret = __webpack_require__(28);
	
	var invariant = __webpack_require__(8);
	var warning = __webpack_require__(11);
	
	var ReactComponentTreeHook;
	
	if (typeof process !== 'undefined' && process.env && process.env.NODE_ENV === 'test') {
	  // Temporary hack.
	  // Inline requires don't work well with Jest:
	  // https://github.com/facebook/react/issues/7240
	  // Remove the inline requires when we don't need them anymore:
	  // https://github.com/facebook/react/pull/7178
	  ReactComponentTreeHook = __webpack_require__(26);
	}
	
	var loggedTypeFailures = {};
	
	/**
	 * Assert that the values match with the type specs.
	 * Error messages are memorized and will only be shown once.
	 *
	 * @param {object} typeSpecs Map of name to a ReactPropType
	 * @param {object} values Runtime values that need to be type-checked
	 * @param {string} location e.g. "prop", "context", "child context"
	 * @param {string} componentName Name of the component for error messages.
	 * @param {?object} element The React element that is being type-checked
	 * @param {?number} debugID The React component instance that is being type-checked
	 * @private
	 */
	function checkReactTypeSpec(typeSpecs, values, location, componentName, element, debugID) {
	  for (var typeSpecName in typeSpecs) {
	    if (typeSpecs.hasOwnProperty(typeSpecName)) {
	      var error;
	      // Prop type validation may throw. In case they do, we don't want to
	      // fail the render phase where it didn't fail before. So we log it.
	      // After these have been cleaned up, we'll let them throw.
	      try {
	        // This is intentionally an invariant that gets caught. It's the same
	        // behavior as without this statement except with a better message.
	        !(typeof typeSpecs[typeSpecName] === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s: %s type `%s` is invalid; it must be a function, usually from React.PropTypes.', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : _prodInvariant('84', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : void 0;
	        error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
	      } catch (ex) {
	        error = ex;
	      }
	      process.env.NODE_ENV !== 'production' ? warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName, typeof error) : void 0;
	      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
	        // Only monitor this failure once because there tends to be a lot of the
	        // same error.
	        loggedTypeFailures[error.message] = true;
	
	        var componentStackInfo = '';
	
	        if (process.env.NODE_ENV !== 'production') {
	          if (!ReactComponentTreeHook) {
	            ReactComponentTreeHook = __webpack_require__(26);
	          }
	          if (debugID !== null) {
	            componentStackInfo = ReactComponentTreeHook.getStackAddendumByID(debugID);
	          } else if (element !== null) {
	            componentStackInfo = ReactComponentTreeHook.getCurrentStackAddendum(element);
	          }
	        }
	
	        process.env.NODE_ENV !== 'production' ? warning(false, 'Failed %s type: %s%s', location, error.message, componentStackInfo) : void 0;
	      }
	    }
	  }
	}
	
	module.exports = checkReactTypeSpec;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 28 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';
	
	module.exports = ReactPropTypesSecret;

/***/ },
/* 29 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var ReactElement = __webpack_require__(9);
	var ReactPropTypeLocationNames = __webpack_require__(23);
	var ReactPropTypesSecret = __webpack_require__(28);
	
	var emptyFunction = __webpack_require__(12);
	var getIteratorFn = __webpack_require__(16);
	var warning = __webpack_require__(11);
	
	/**
	 * Collection of methods that allow declaration and validation of props that are
	 * supplied to React components. Example usage:
	 *
	 *   var Props = require('ReactPropTypes');
	 *   var MyArticle = React.createClass({
	 *     propTypes: {
	 *       // An optional string prop named "description".
	 *       description: Props.string,
	 *
	 *       // A required enum prop named "category".
	 *       category: Props.oneOf(['News','Photos']).isRequired,
	 *
	 *       // A prop named "dialog" that requires an instance of Dialog.
	 *       dialog: Props.instanceOf(Dialog).isRequired
	 *     },
	 *     render: function() { ... }
	 *   });
	 *
	 * A more formal specification of how these methods are used:
	 *
	 *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
	 *   decl := ReactPropTypes.{type}(.isRequired)?
	 *
	 * Each and every declaration produces a function with the same signature. This
	 * allows the creation of custom validation functions. For example:
	 *
	 *  var MyLink = React.createClass({
	 *    propTypes: {
	 *      // An optional string or URI prop named "href".
	 *      href: function(props, propName, componentName) {
	 *        var propValue = props[propName];
	 *        if (propValue != null && typeof propValue !== 'string' &&
	 *            !(propValue instanceof URI)) {
	 *          return new Error(
	 *            'Expected a string or an URI for ' + propName + ' in ' +
	 *            componentName
	 *          );
	 *        }
	 *      }
	 *    },
	 *    render: function() {...}
	 *  });
	 *
	 * @internal
	 */
	
	var ANONYMOUS = '<<anonymous>>';
	
	var ReactPropTypes = {
	  array: createPrimitiveTypeChecker('array'),
	  bool: createPrimitiveTypeChecker('boolean'),
	  func: createPrimitiveTypeChecker('function'),
	  number: createPrimitiveTypeChecker('number'),
	  object: createPrimitiveTypeChecker('object'),
	  string: createPrimitiveTypeChecker('string'),
	  symbol: createPrimitiveTypeChecker('symbol'),
	
	  any: createAnyTypeChecker(),
	  arrayOf: createArrayOfTypeChecker,
	  element: createElementTypeChecker(),
	  instanceOf: createInstanceTypeChecker,
	  node: createNodeChecker(),
	  objectOf: createObjectOfTypeChecker,
	  oneOf: createEnumTypeChecker,
	  oneOfType: createUnionTypeChecker,
	  shape: createShapeTypeChecker
	};
	
	/**
	 * inlined Object.is polyfill to avoid requiring consumers ship their own
	 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
	 */
	/*eslint-disable no-self-compare*/
	function is(x, y) {
	  // SameValue algorithm
	  if (x === y) {
	    // Steps 1-5, 7-10
	    // Steps 6.b-6.e: +0 != -0
	    return x !== 0 || 1 / x === 1 / y;
	  } else {
	    // Step 6.a: NaN == NaN
	    return x !== x && y !== y;
	  }
	}
	/*eslint-enable no-self-compare*/
	
	/**
	 * We use an Error-like object for backward compatibility as people may call
	 * PropTypes directly and inspect their output. However we don't use real
	 * Errors anymore. We don't inspect their stack anyway, and creating them
	 * is prohibitively expensive if they are created too often, such as what
	 * happens in oneOfType() for any type before the one that matched.
	 */
	function PropTypeError(message) {
	  this.message = message;
	  this.stack = '';
	}
	// Make `instanceof Error` still work for returned errors.
	PropTypeError.prototype = Error.prototype;
	
	function createChainableTypeChecker(validate) {
	  if (process.env.NODE_ENV !== 'production') {
	    var manualPropTypeCallCache = {};
	  }
	  function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
	    componentName = componentName || ANONYMOUS;
	    propFullName = propFullName || propName;
	    if (process.env.NODE_ENV !== 'production') {
	      if (secret !== ReactPropTypesSecret && typeof console !== 'undefined') {
	        var cacheKey = componentName + ':' + propName;
	        if (!manualPropTypeCallCache[cacheKey]) {
	          process.env.NODE_ENV !== 'production' ? warning(false, 'You are manually calling a React.PropTypes validation ' + 'function for the `%s` prop on `%s`. This is deprecated ' + 'and will not work in production with the next major version. ' + 'You may be seeing this warning due to a third-party PropTypes ' + 'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.', propFullName, componentName) : void 0;
	          manualPropTypeCallCache[cacheKey] = true;
	        }
	      }
	    }
	    if (props[propName] == null) {
	      var locationName = ReactPropTypeLocationNames[location];
	      if (isRequired) {
	        if (props[propName] === null) {
	          return new PropTypeError('The ' + locationName + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));
	        }
	        return new PropTypeError('The ' + locationName + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));
	      }
	      return null;
	    } else {
	      return validate(props, propName, componentName, location, propFullName);
	    }
	  }
	
	  var chainedCheckType = checkType.bind(null, false);
	  chainedCheckType.isRequired = checkType.bind(null, true);
	
	  return chainedCheckType;
	}
	
	function createPrimitiveTypeChecker(expectedType) {
	  function validate(props, propName, componentName, location, propFullName, secret) {
	    var propValue = props[propName];
	    var propType = getPropType(propValue);
	    if (propType !== expectedType) {
	      var locationName = ReactPropTypeLocationNames[location];
	      // `propValue` being instance of, say, date/regexp, pass the 'object'
	      // check, but we can offer a more precise error message here rather than
	      // 'of type `object`'.
	      var preciseType = getPreciseType(propValue);
	
	      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createAnyTypeChecker() {
	  return createChainableTypeChecker(emptyFunction.thatReturns(null));
	}
	
	function createArrayOfTypeChecker(typeChecker) {
	  function validate(props, propName, componentName, location, propFullName) {
	    if (typeof typeChecker !== 'function') {
	      return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
	    }
	    var propValue = props[propName];
	    if (!Array.isArray(propValue)) {
	      var locationName = ReactPropTypeLocationNames[location];
	      var propType = getPropType(propValue);
	      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
	    }
	    for (var i = 0; i < propValue.length; i++) {
	      var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);
	      if (error instanceof Error) {
	        return error;
	      }
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createElementTypeChecker() {
	  function validate(props, propName, componentName, location, propFullName) {
	    var propValue = props[propName];
	    if (!ReactElement.isValidElement(propValue)) {
	      var locationName = ReactPropTypeLocationNames[location];
	      var propType = getPropType(propValue);
	      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createInstanceTypeChecker(expectedClass) {
	  function validate(props, propName, componentName, location, propFullName) {
	    if (!(props[propName] instanceof expectedClass)) {
	      var locationName = ReactPropTypeLocationNames[location];
	      var expectedClassName = expectedClass.name || ANONYMOUS;
	      var actualClassName = getClassName(props[propName]);
	      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createEnumTypeChecker(expectedValues) {
	  if (!Array.isArray(expectedValues)) {
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid argument supplied to oneOf, expected an instance of array.') : void 0;
	    return emptyFunction.thatReturnsNull;
	  }
	
	  function validate(props, propName, componentName, location, propFullName) {
	    var propValue = props[propName];
	    for (var i = 0; i < expectedValues.length; i++) {
	      if (is(propValue, expectedValues[i])) {
	        return null;
	      }
	    }
	
	    var locationName = ReactPropTypeLocationNames[location];
	    var valuesString = JSON.stringify(expectedValues);
	    return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createObjectOfTypeChecker(typeChecker) {
	  function validate(props, propName, componentName, location, propFullName) {
	    if (typeof typeChecker !== 'function') {
	      return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
	    }
	    var propValue = props[propName];
	    var propType = getPropType(propValue);
	    if (propType !== 'object') {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
	    }
	    for (var key in propValue) {
	      if (propValue.hasOwnProperty(key)) {
	        var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
	        if (error instanceof Error) {
	          return error;
	        }
	      }
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createUnionTypeChecker(arrayOfTypeCheckers) {
	  if (!Array.isArray(arrayOfTypeCheckers)) {
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;
	    return emptyFunction.thatReturnsNull;
	  }
	
	  function validate(props, propName, componentName, location, propFullName) {
	    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
	      var checker = arrayOfTypeCheckers[i];
	      if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {
	        return null;
	      }
	    }
	
	    var locationName = ReactPropTypeLocationNames[location];
	    return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createNodeChecker() {
	  function validate(props, propName, componentName, location, propFullName) {
	    if (!isNode(props[propName])) {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createShapeTypeChecker(shapeTypes) {
	  function validate(props, propName, componentName, location, propFullName) {
	    var propValue = props[propName];
	    var propType = getPropType(propValue);
	    if (propType !== 'object') {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
	    }
	    for (var key in shapeTypes) {
	      var checker = shapeTypes[key];
	      if (!checker) {
	        continue;
	      }
	      var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
	      if (error) {
	        return error;
	      }
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function isNode(propValue) {
	  switch (typeof propValue) {
	    case 'number':
	    case 'string':
	    case 'undefined':
	      return true;
	    case 'boolean':
	      return !propValue;
	    case 'object':
	      if (Array.isArray(propValue)) {
	        return propValue.every(isNode);
	      }
	      if (propValue === null || ReactElement.isValidElement(propValue)) {
	        return true;
	      }
	
	      var iteratorFn = getIteratorFn(propValue);
	      if (iteratorFn) {
	        var iterator = iteratorFn.call(propValue);
	        var step;
	        if (iteratorFn !== propValue.entries) {
	          while (!(step = iterator.next()).done) {
	            if (!isNode(step.value)) {
	              return false;
	            }
	          }
	        } else {
	          // Iterator will provide entry [k,v] tuples rather than values.
	          while (!(step = iterator.next()).done) {
	            var entry = step.value;
	            if (entry) {
	              if (!isNode(entry[1])) {
	                return false;
	              }
	            }
	          }
	        }
	      } else {
	        return false;
	      }
	
	      return true;
	    default:
	      return false;
	  }
	}
	
	function isSymbol(propType, propValue) {
	  // Native Symbol.
	  if (propType === 'symbol') {
	    return true;
	  }
	
	  // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
	  if (propValue['@@toStringTag'] === 'Symbol') {
	    return true;
	  }
	
	  // Fallback for non-spec compliant Symbols which are polyfilled.
	  if (typeof Symbol === 'function' && propValue instanceof Symbol) {
	    return true;
	  }
	
	  return false;
	}
	
	// Equivalent of `typeof` but with special handling for array and regexp.
	function getPropType(propValue) {
	  var propType = typeof propValue;
	  if (Array.isArray(propValue)) {
	    return 'array';
	  }
	  if (propValue instanceof RegExp) {
	    // Old webkits (at least until Android 4.0) return 'function' rather than
	    // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
	    // passes PropTypes.object.
	    return 'object';
	  }
	  if (isSymbol(propType, propValue)) {
	    return 'symbol';
	  }
	  return propType;
	}
	
	// This handles more types than `getPropType`. Only used for error messages.
	// See `createPrimitiveTypeChecker`.
	function getPreciseType(propValue) {
	  var propType = getPropType(propValue);
	  if (propType === 'object') {
	    if (propValue instanceof Date) {
	      return 'date';
	    } else if (propValue instanceof RegExp) {
	      return 'regexp';
	    }
	  }
	  return propType;
	}
	
	// Returns class name of the object, if any.
	function getClassName(propValue) {
	  if (!propValue.constructor || !propValue.constructor.name) {
	    return ANONYMOUS;
	  }
	  return propValue.constructor.name;
	}
	
	module.exports = ReactPropTypes;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 30 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	module.exports = '15.4.2';

/***/ },
/* 31 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	'use strict';
	
	var _prodInvariant = __webpack_require__(7);
	
	var ReactElement = __webpack_require__(9);
	
	var invariant = __webpack_require__(8);
	
	/**
	 * Returns the first child in a collection of children and verifies that there
	 * is only one child in the collection.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.only
	 *
	 * The current implementation of this function assumes that a single child gets
	 * passed without a wrapper, but the purpose of this helper function is to
	 * abstract away the particular structure of children.
	 *
	 * @param {?object} children Child collection structure.
	 * @return {ReactElement} The first and only `ReactElement` contained in the
	 * structure.
	 */
	function onlyChild(children) {
	  !ReactElement.isValidElement(children) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'React.Children.only expected to receive a single React element child.') : _prodInvariant('143') : void 0;
	  return children;
	}
	
	module.exports = onlyChild;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 32 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = __webpack_require__(33);


/***/ },
/* 33 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	/* globals __REACT_DEVTOOLS_GLOBAL_HOOK__*/
	
	'use strict';
	
	var ReactDOMComponentTree = __webpack_require__(34);
	var ReactDefaultInjection = __webpack_require__(38);
	var ReactMount = __webpack_require__(166);
	var ReactReconciler = __webpack_require__(59);
	var ReactUpdates = __webpack_require__(56);
	var ReactVersion = __webpack_require__(171);
	
	var findDOMNode = __webpack_require__(172);
	var getHostComponentFromComposite = __webpack_require__(173);
	var renderSubtreeIntoContainer = __webpack_require__(174);
	var warning = __webpack_require__(11);
	
	ReactDefaultInjection.inject();
	
	var ReactDOM = {
	  findDOMNode: findDOMNode,
	  render: ReactMount.render,
	  unmountComponentAtNode: ReactMount.unmountComponentAtNode,
	  version: ReactVersion,
	
	  /* eslint-disable camelcase */
	  unstable_batchedUpdates: ReactUpdates.batchedUpdates,
	  unstable_renderSubtreeIntoContainer: renderSubtreeIntoContainer
	};
	
	// Inject the runtime into a devtools global hook regardless of browser.
	// Allows for debugging when the hook is injected on the page.
	if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject === 'function') {
	  __REACT_DEVTOOLS_GLOBAL_HOOK__.inject({
	    ComponentTree: {
	      getClosestInstanceFromNode: ReactDOMComponentTree.getClosestInstanceFromNode,
	      getNodeFromInstance: function (inst) {
	        // inst is an internal instance (but could be a composite)
	        if (inst._renderedComponent) {
	          inst = getHostComponentFromComposite(inst);
	        }
	        if (inst) {
	          return ReactDOMComponentTree.getNodeFromInstance(inst);
	        } else {
	          return null;
	        }
	      }
	    },
	    Mount: ReactMount,
	    Reconciler: ReactReconciler
	  });
	}
	
	if (process.env.NODE_ENV !== 'production') {
	  var ExecutionEnvironment = __webpack_require__(48);
	  if (ExecutionEnvironment.canUseDOM && window.top === window.self) {
	
	    // First check if devtools is not installed
	    if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {
	      // If we're in Chrome or Firefox, provide a download link if not installed.
	      if (navigator.userAgent.indexOf('Chrome') > -1 && navigator.userAgent.indexOf('Edge') === -1 || navigator.userAgent.indexOf('Firefox') > -1) {
	        // Firefox does not have the issue with devtools loaded over file://
	        var showFileUrlMessage = window.location.protocol.indexOf('http') === -1 && navigator.userAgent.indexOf('Firefox') === -1;
	        console.debug('Download the React DevTools ' + (showFileUrlMessage ? 'and use an HTTP server (instead of a file: URL) ' : '') + 'for a better development experience: ' + 'https://fb.me/react-devtools');
	      }
	    }
	
	    var testFunc = function testFn() {};
	    process.env.NODE_ENV !== 'production' ? warning((testFunc.name || testFunc.toString()).indexOf('testFn') !== -1, 'It looks like you\'re using a minified copy of the development build ' + 'of React. When deploying React apps to production, make sure to use ' + 'the production build which skips development warnings and is faster. ' + 'See https://fb.me/react-minification for more details.') : void 0;
	
	    // If we're in IE8, check to see if we are in compatibility mode and provide
	    // information on preventing compatibility mode
	    var ieCompatibilityMode = document.documentMode && document.documentMode < 8;
	
	    process.env.NODE_ENV !== 'production' ? warning(!ieCompatibilityMode, 'Internet Explorer is running in compatibility mode; please add the ' + 'following tag to your HTML to prevent this from happening: ' + '<meta http-equiv="X-UA-Compatible" content="IE=edge" />') : void 0;
	
	    var expectedFeatures = [
	    // shims
	    Array.isArray, Array.prototype.every, Array.prototype.forEach, Array.prototype.indexOf, Array.prototype.map, Date.now, Function.prototype.bind, Object.keys, String.prototype.trim];
	
	    for (var i = 0; i < expectedFeatures.length; i++) {
	      if (!expectedFeatures[i]) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'One or more ES5 shims expected by React are not available: ' + 'https://fb.me/react-warning-polyfills') : void 0;
	        break;
	      }
	    }
	  }
	}
	
	if (process.env.NODE_ENV !== 'production') {
	  var ReactInstrumentation = __webpack_require__(62);
	  var ReactDOMUnknownPropertyHook = __webpack_require__(175);
	  var ReactDOMNullInputValuePropHook = __webpack_require__(176);
	  var ReactDOMInvalidARIAHook = __webpack_require__(177);
	
	  ReactInstrumentation.debugTool.addHook(ReactDOMUnknownPropertyHook);
	  ReactInstrumentation.debugTool.addHook(ReactDOMNullInputValuePropHook);
	  ReactInstrumentation.debugTool.addHook(ReactDOMInvalidARIAHook);
	}
	
	module.exports = ReactDOM;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 34 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(35);
	
	var DOMProperty = __webpack_require__(36);
	var ReactDOMComponentFlags = __webpack_require__(37);
	
	var invariant = __webpack_require__(8);
	
	var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
	var Flags = ReactDOMComponentFlags;
	
	var internalInstanceKey = '__reactInternalInstance$' + Math.random().toString(36).slice(2);
	
	/**
	 * Check if a given node should be cached.
	 */
	function shouldPrecacheNode(node, nodeID) {
	  return node.nodeType === 1 && node.getAttribute(ATTR_NAME) === String(nodeID) || node.nodeType === 8 && node.nodeValue === ' react-text: ' + nodeID + ' ' || node.nodeType === 8 && node.nodeValue === ' react-empty: ' + nodeID + ' ';
	}
	
	/**
	 * Drill down (through composites and empty components) until we get a host or
	 * host text component.
	 *
	 * This is pretty polymorphic but unavoidable with the current structure we have
	 * for `_renderedChildren`.
	 */
	function getRenderedHostOrTextFromComponent(component) {
	  var rendered;
	  while (rendered = component._renderedComponent) {
	    component = rendered;
	  }
	  return component;
	}
	
	/**
	 * Populate `_hostNode` on the rendered host/text component with the given
	 * DOM node. The passed `inst` can be a composite.
	 */
	function precacheNode(inst, node) {
	  var hostInst = getRenderedHostOrTextFromComponent(inst);
	  hostInst._hostNode = node;
	  node[internalInstanceKey] = hostInst;
	}
	
	function uncacheNode(inst) {
	  var node = inst._hostNode;
	  if (node) {
	    delete node[internalInstanceKey];
	    inst._hostNode = null;
	  }
	}
	
	/**
	 * Populate `_hostNode` on each child of `inst`, assuming that the children
	 * match up with the DOM (element) children of `node`.
	 *
	 * We cache entire levels at once to avoid an n^2 problem where we access the
	 * children of a node sequentially and have to walk from the start to our target
	 * node every time.
	 *
	 * Since we update `_renderedChildren` and the actual DOM at (slightly)
	 * different times, we could race here and see a newer `_renderedChildren` than
	 * the DOM nodes we see. To avoid this, ReactMultiChild calls
	 * `prepareToManageChildren` before we change `_renderedChildren`, at which
	 * time the container's child nodes are always cached (until it unmounts).
	 */
	function precacheChildNodes(inst, node) {
	  if (inst._flags & Flags.hasCachedChildNodes) {
	    return;
	  }
	  var children = inst._renderedChildren;
	  var childNode = node.firstChild;
	  outer: for (var name in children) {
	    if (!children.hasOwnProperty(name)) {
	      continue;
	    }
	    var childInst = children[name];
	    var childID = getRenderedHostOrTextFromComponent(childInst)._domID;
	    if (childID === 0) {
	      // We're currently unmounting this child in ReactMultiChild; skip it.
	      continue;
	    }
	    // We assume the child nodes are in the same order as the child instances.
	    for (; childNode !== null; childNode = childNode.nextSibling) {
	      if (shouldPrecacheNode(childNode, childID)) {
	        precacheNode(childInst, childNode);
	        continue outer;
	      }
	    }
	    // We reached the end of the DOM children without finding an ID match.
	     true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Unable to find element with ID %s.', childID) : _prodInvariant('32', childID) : void 0;
	  }
	  inst._flags |= Flags.hasCachedChildNodes;
	}
	
	/**
	 * Given a DOM node, return the closest ReactDOMComponent or
	 * ReactDOMTextComponent instance ancestor.
	 */
	function getClosestInstanceFromNode(node) {
	  if (node[internalInstanceKey]) {
	    return node[internalInstanceKey];
	  }
	
	  // Walk up the tree until we find an ancestor whose instance we have cached.
	  var parents = [];
	  while (!node[internalInstanceKey]) {
	    parents.push(node);
	    if (node.parentNode) {
	      node = node.parentNode;
	    } else {
	      // Top of the tree. This node must not be part of a React tree (or is
	      // unmounted, potentially).
	      return null;
	    }
	  }
	
	  var closest;
	  var inst;
	  for (; node && (inst = node[internalInstanceKey]); node = parents.pop()) {
	    closest = inst;
	    if (parents.length) {
	      precacheChildNodes(inst, node);
	    }
	  }
	
	  return closest;
	}
	
	/**
	 * Given a DOM node, return the ReactDOMComponent or ReactDOMTextComponent
	 * instance, or null if the node was not rendered by this React.
	 */
	function getInstanceFromNode(node) {
	  var inst = getClosestInstanceFromNode(node);
	  if (inst != null && inst._hostNode === node) {
	    return inst;
	  } else {
	    return null;
	  }
	}
	
	/**
	 * Given a ReactDOMComponent or ReactDOMTextComponent, return the corresponding
	 * DOM node.
	 */
	function getNodeFromInstance(inst) {
	  // Without this first invariant, passing a non-DOM-component triggers the next
	  // invariant for a missing parent, which is super confusing.
	  !(inst._hostNode !== undefined) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;
	
	  if (inst._hostNode) {
	    return inst._hostNode;
	  }
	
	  // Walk up the tree until we find an ancestor whose DOM node we have cached.
	  var parents = [];
	  while (!inst._hostNode) {
	    parents.push(inst);
	    !inst._hostParent ? process.env.NODE_ENV !== 'production' ? invariant(false, 'React DOM tree root should always have a node reference.') : _prodInvariant('34') : void 0;
	    inst = inst._hostParent;
	  }
	
	  // Now parents contains each ancestor that does *not* have a cached native
	  // node, and `inst` is the deepest ancestor that does.
	  for (; parents.length; inst = parents.pop()) {
	    precacheChildNodes(inst, inst._hostNode);
	  }
	
	  return inst._hostNode;
	}
	
	var ReactDOMComponentTree = {
	  getClosestInstanceFromNode: getClosestInstanceFromNode,
	  getInstanceFromNode: getInstanceFromNode,
	  getNodeFromInstance: getNodeFromInstance,
	  precacheChildNodes: precacheChildNodes,
	  precacheNode: precacheNode,
	  uncacheNode: uncacheNode
	};
	
	module.exports = ReactDOMComponentTree;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 35 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	'use strict';
	
	/**
	 * WARNING: DO NOT manually require this module.
	 * This is a replacement for `invariant(...)` used by the error code system
	 * and will _only_ be required by the corresponding babel pass.
	 * It always throws.
	 */
	
	function reactProdInvariant(code) {
	  var argCount = arguments.length - 1;
	
	  var message = 'Minified React error #' + code + '; visit ' + 'http://facebook.github.io/react/docs/error-decoder.html?invariant=' + code;
	
	  for (var argIdx = 0; argIdx < argCount; argIdx++) {
	    message += '&args[]=' + encodeURIComponent(arguments[argIdx + 1]);
	  }
	
	  message += ' for the full message or use the non-minified dev environment' + ' for full errors and additional helpful warnings.';
	
	  var error = new Error(message);
	  error.name = 'Invariant Violation';
	  error.framesToPop = 1; // we don't care about reactProdInvariant's own frame
	
	  throw error;
	}
	
	module.exports = reactProdInvariant;

/***/ },
/* 36 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(35);
	
	var invariant = __webpack_require__(8);
	
	function checkMask(value, bitmask) {
	  return (value & bitmask) === bitmask;
	}
	
	var DOMPropertyInjection = {
	  /**
	   * Mapping from normalized, camelcased property names to a configuration that
	   * specifies how the associated DOM property should be accessed or rendered.
	   */
	  MUST_USE_PROPERTY: 0x1,
	  HAS_BOOLEAN_VALUE: 0x4,
	  HAS_NUMERIC_VALUE: 0x8,
	  HAS_POSITIVE_NUMERIC_VALUE: 0x10 | 0x8,
	  HAS_OVERLOADED_BOOLEAN_VALUE: 0x20,
	
	  /**
	   * Inject some specialized knowledge about the DOM. This takes a config object
	   * with the following properties:
	   *
	   * isCustomAttribute: function that given an attribute name will return true
	   * if it can be inserted into the DOM verbatim. Useful for data-* or aria-*
	   * attributes where it's impossible to enumerate all of the possible
	   * attribute names,
	   *
	   * Properties: object mapping DOM property name to one of the
	   * DOMPropertyInjection constants or null. If your attribute isn't in here,
	   * it won't get written to the DOM.
	   *
	   * DOMAttributeNames: object mapping React attribute name to the DOM
	   * attribute name. Attribute names not specified use the **lowercase**
	   * normalized name.
	   *
	   * DOMAttributeNamespaces: object mapping React attribute name to the DOM
	   * attribute namespace URL. (Attribute names not specified use no namespace.)
	   *
	   * DOMPropertyNames: similar to DOMAttributeNames but for DOM properties.
	   * Property names not specified use the normalized name.
	   *
	   * DOMMutationMethods: Properties that require special mutation methods. If
	   * `value` is undefined, the mutation method should unset the property.
	   *
	   * @param {object} domPropertyConfig the config as described above.
	   */
	  injectDOMPropertyConfig: function (domPropertyConfig) {
	    var Injection = DOMPropertyInjection;
	    var Properties = domPropertyConfig.Properties || {};
	    var DOMAttributeNamespaces = domPropertyConfig.DOMAttributeNamespaces || {};
	    var DOMAttributeNames = domPropertyConfig.DOMAttributeNames || {};
	    var DOMPropertyNames = domPropertyConfig.DOMPropertyNames || {};
	    var DOMMutationMethods = domPropertyConfig.DOMMutationMethods || {};
	
	    if (domPropertyConfig.isCustomAttribute) {
	      DOMProperty._isCustomAttributeFunctions.push(domPropertyConfig.isCustomAttribute);
	    }
	
	    for (var propName in Properties) {
	      !!DOMProperty.properties.hasOwnProperty(propName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'injectDOMPropertyConfig(...): You\'re trying to inject DOM property \'%s\' which has already been injected. You may be accidentally injecting the same DOM property config twice, or you may be injecting two configs that have conflicting property names.', propName) : _prodInvariant('48', propName) : void 0;
	
	      var lowerCased = propName.toLowerCase();
	      var propConfig = Properties[propName];
	
	      var propertyInfo = {
	        attributeName: lowerCased,
	        attributeNamespace: null,
	        propertyName: propName,
	        mutationMethod: null,
	
	        mustUseProperty: checkMask(propConfig, Injection.MUST_USE_PROPERTY),
	        hasBooleanValue: checkMask(propConfig, Injection.HAS_BOOLEAN_VALUE),
	        hasNumericValue: checkMask(propConfig, Injection.HAS_NUMERIC_VALUE),
	        hasPositiveNumericValue: checkMask(propConfig, Injection.HAS_POSITIVE_NUMERIC_VALUE),
	        hasOverloadedBooleanValue: checkMask(propConfig, Injection.HAS_OVERLOADED_BOOLEAN_VALUE)
	      };
	      !(propertyInfo.hasBooleanValue + propertyInfo.hasNumericValue + propertyInfo.hasOverloadedBooleanValue <= 1) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'DOMProperty: Value can be one of boolean, overloaded boolean, or numeric value, but not a combination: %s', propName) : _prodInvariant('50', propName) : void 0;
	
	      if (process.env.NODE_ENV !== 'production') {
	        DOMProperty.getPossibleStandardName[lowerCased] = propName;
	      }
	
	      if (DOMAttributeNames.hasOwnProperty(propName)) {
	        var attributeName = DOMAttributeNames[propName];
	        propertyInfo.attributeName = attributeName;
	        if (process.env.NODE_ENV !== 'production') {
	          DOMProperty.getPossibleStandardName[attributeName] = propName;
	        }
	      }
	
	      if (DOMAttributeNamespaces.hasOwnProperty(propName)) {
	        propertyInfo.attributeNamespace = DOMAttributeNamespaces[propName];
	      }
	
	      if (DOMPropertyNames.hasOwnProperty(propName)) {
	        propertyInfo.propertyName = DOMPropertyNames[propName];
	      }
	
	      if (DOMMutationMethods.hasOwnProperty(propName)) {
	        propertyInfo.mutationMethod = DOMMutationMethods[propName];
	      }
	
	      DOMProperty.properties[propName] = propertyInfo;
	    }
	  }
	};
	
	/* eslint-disable max-len */
	var ATTRIBUTE_NAME_START_CHAR = ':A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD';
	/* eslint-enable max-len */
	
	/**
	 * DOMProperty exports lookup objects that can be used like functions:
	 *
	 *   > DOMProperty.isValid['id']
	 *   true
	 *   > DOMProperty.isValid['foobar']
	 *   undefined
	 *
	 * Although this may be confusing, it performs better in general.
	 *
	 * @see http://jsperf.com/key-exists
	 * @see http://jsperf.com/key-missing
	 */
	var DOMProperty = {
	
	  ID_ATTRIBUTE_NAME: 'data-reactid',
	  ROOT_ATTRIBUTE_NAME: 'data-reactroot',
	
	  ATTRIBUTE_NAME_START_CHAR: ATTRIBUTE_NAME_START_CHAR,
	  ATTRIBUTE_NAME_CHAR: ATTRIBUTE_NAME_START_CHAR + '\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040',
	
	  /**
	   * Map from property "standard name" to an object with info about how to set
	   * the property in the DOM. Each object contains:
	   *
	   * attributeName:
	   *   Used when rendering markup or with `*Attribute()`.
	   * attributeNamespace
	   * propertyName:
	   *   Used on DOM node instances. (This includes properties that mutate due to
	   *   external factors.)
	   * mutationMethod:
	   *   If non-null, used instead of the property or `setAttribute()` after
	   *   initial render.
	   * mustUseProperty:
	   *   Whether the property must be accessed and mutated as an object property.
	   * hasBooleanValue:
	   *   Whether the property should be removed when set to a falsey value.
	   * hasNumericValue:
	   *   Whether the property must be numeric or parse as a numeric and should be
	   *   removed when set to a falsey value.
	   * hasPositiveNumericValue:
	   *   Whether the property must be positive numeric or parse as a positive
	   *   numeric and should be removed when set to a falsey value.
	   * hasOverloadedBooleanValue:
	   *   Whether the property can be used as a flag as well as with a value.
	   *   Removed when strictly equal to false; present without a value when
	   *   strictly equal to true; present with a value otherwise.
	   */
	  properties: {},
	
	  /**
	   * Mapping from lowercase property names to the properly cased version, used
	   * to warn in the case of missing properties. Available only in __DEV__.
	   *
	   * autofocus is predefined, because adding it to the property whitelist
	   * causes unintended side effects.
	   *
	   * @type {Object}
	   */
	  getPossibleStandardName: process.env.NODE_ENV !== 'production' ? { autofocus: 'autoFocus' } : null,
	
	  /**
	   * All of the isCustomAttribute() functions that have been injected.
	   */
	  _isCustomAttributeFunctions: [],
	
	  /**
	   * Checks whether a property name is a custom attribute.
	   * @method
	   */
	  isCustomAttribute: function (attributeName) {
	    for (var i = 0; i < DOMProperty._isCustomAttributeFunctions.length; i++) {
	      var isCustomAttributeFn = DOMProperty._isCustomAttributeFunctions[i];
	      if (isCustomAttributeFn(attributeName)) {
	        return true;
	      }
	    }
	    return false;
	  },
	
	  injection: DOMPropertyInjection
	};
	
	module.exports = DOMProperty;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 37 */
/***/ function(module, exports) {

	/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var ReactDOMComponentFlags = {
	  hasCachedChildNodes: 1 << 0
	};
	
	module.exports = ReactDOMComponentFlags;

/***/ },
/* 38 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var ARIADOMPropertyConfig = __webpack_require__(39);
	var BeforeInputEventPlugin = __webpack_require__(40);
	var ChangeEventPlugin = __webpack_require__(55);
	var DefaultEventPluginOrder = __webpack_require__(72);
	var EnterLeaveEventPlugin = __webpack_require__(73);
	var HTMLDOMPropertyConfig = __webpack_require__(78);
	var ReactComponentBrowserEnvironment = __webpack_require__(79);
	var ReactDOMComponent = __webpack_require__(92);
	var ReactDOMComponentTree = __webpack_require__(34);
	var ReactDOMEmptyComponent = __webpack_require__(137);
	var ReactDOMTreeTraversal = __webpack_require__(138);
	var ReactDOMTextComponent = __webpack_require__(139);
	var ReactDefaultBatchingStrategy = __webpack_require__(140);
	var ReactEventListener = __webpack_require__(141);
	var ReactInjection = __webpack_require__(144);
	var ReactReconcileTransaction = __webpack_require__(145);
	var SVGDOMPropertyConfig = __webpack_require__(153);
	var SelectEventPlugin = __webpack_require__(154);
	var SimpleEventPlugin = __webpack_require__(155);
	
	var alreadyInjected = false;
	
	function inject() {
	  if (alreadyInjected) {
	    // TODO: This is currently true because these injections are shared between
	    // the client and the server package. They should be built independently
	    // and not share any injection state. Then this problem will be solved.
	    return;
	  }
	  alreadyInjected = true;
	
	  ReactInjection.EventEmitter.injectReactEventListener(ReactEventListener);
	
	  /**
	   * Inject modules for resolving DOM hierarchy and plugin ordering.
	   */
	  ReactInjection.EventPluginHub.injectEventPluginOrder(DefaultEventPluginOrder);
	  ReactInjection.EventPluginUtils.injectComponentTree(ReactDOMComponentTree);
	  ReactInjection.EventPluginUtils.injectTreeTraversal(ReactDOMTreeTraversal);
	
	  /**
	   * Some important event plugins included by default (without having to require
	   * them).
	   */
	  ReactInjection.EventPluginHub.injectEventPluginsByName({
	    SimpleEventPlugin: SimpleEventPlugin,
	    EnterLeaveEventPlugin: EnterLeaveEventPlugin,
	    ChangeEventPlugin: ChangeEventPlugin,
	    SelectEventPlugin: SelectEventPlugin,
	    BeforeInputEventPlugin: BeforeInputEventPlugin
	  });
	
	  ReactInjection.HostComponent.injectGenericComponentClass(ReactDOMComponent);
	
	  ReactInjection.HostComponent.injectTextComponentClass(ReactDOMTextComponent);
	
	  ReactInjection.DOMProperty.injectDOMPropertyConfig(ARIADOMPropertyConfig);
	  ReactInjection.DOMProperty.injectDOMPropertyConfig(HTMLDOMPropertyConfig);
	  ReactInjection.DOMProperty.injectDOMPropertyConfig(SVGDOMPropertyConfig);
	
	  ReactInjection.EmptyComponent.injectEmptyComponentFactory(function (instantiate) {
	    return new ReactDOMEmptyComponent(instantiate);
	  });
	
	  ReactInjection.Updates.injectReconcileTransaction(ReactReconcileTransaction);
	  ReactInjection.Updates.injectBatchingStrategy(ReactDefaultBatchingStrategy);
	
	  ReactInjection.Component.injectEnvironment(ReactComponentBrowserEnvironment);
	}
	
	module.exports = {
	  inject: inject
	};

/***/ },
/* 39 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var ARIADOMPropertyConfig = {
	  Properties: {
	    // Global States and Properties
	    'aria-current': 0, // state
	    'aria-details': 0,
	    'aria-disabled': 0, // state
	    'aria-hidden': 0, // state
	    'aria-invalid': 0, // state
	    'aria-keyshortcuts': 0,
	    'aria-label': 0,
	    'aria-roledescription': 0,
	    // Widget Attributes
	    'aria-autocomplete': 0,
	    'aria-checked': 0,
	    'aria-expanded': 0,
	    'aria-haspopup': 0,
	    'aria-level': 0,
	    'aria-modal': 0,
	    'aria-multiline': 0,
	    'aria-multiselectable': 0,
	    'aria-orientation': 0,
	    'aria-placeholder': 0,
	    'aria-pressed': 0,
	    'aria-readonly': 0,
	    'aria-required': 0,
	    'aria-selected': 0,
	    'aria-sort': 0,
	    'aria-valuemax': 0,
	    'aria-valuemin': 0,
	    'aria-valuenow': 0,
	    'aria-valuetext': 0,
	    // Live Region Attributes
	    'aria-atomic': 0,
	    'aria-busy': 0,
	    'aria-live': 0,
	    'aria-relevant': 0,
	    // Drag-and-Drop Attributes
	    'aria-dropeffect': 0,
	    'aria-grabbed': 0,
	    // Relationship Attributes
	    'aria-activedescendant': 0,
	    'aria-colcount': 0,
	    'aria-colindex': 0,
	    'aria-colspan': 0,
	    'aria-controls': 0,
	    'aria-describedby': 0,
	    'aria-errormessage': 0,
	    'aria-flowto': 0,
	    'aria-labelledby': 0,
	    'aria-owns': 0,
	    'aria-posinset': 0,
	    'aria-rowcount': 0,
	    'aria-rowindex': 0,
	    'aria-rowspan': 0,
	    'aria-setsize': 0
	  },
	  DOMAttributeNames: {},
	  DOMPropertyNames: {}
	};
	
	module.exports = ARIADOMPropertyConfig;

/***/ },
/* 40 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var EventPropagators = __webpack_require__(41);
	var ExecutionEnvironment = __webpack_require__(48);
	var FallbackCompositionState = __webpack_require__(49);
	var SyntheticCompositionEvent = __webpack_require__(52);
	var SyntheticInputEvent = __webpack_require__(54);
	
	var END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space
	var START_KEYCODE = 229;
	
	var canUseCompositionEvent = ExecutionEnvironment.canUseDOM && 'CompositionEvent' in window;
	
	var documentMode = null;
	if (ExecutionEnvironment.canUseDOM && 'documentMode' in document) {
	  documentMode = document.documentMode;
	}
	
	// Webkit offers a very useful `textInput` event that can be used to
	// directly represent `beforeInput`. The IE `textinput` event is not as
	// useful, so we don't use it.
	var canUseTextInputEvent = ExecutionEnvironment.canUseDOM && 'TextEvent' in window && !documentMode && !isPresto();
	
	// In IE9+, we have access to composition events, but the data supplied
	// by the native compositionend event may be incorrect. Japanese ideographic
	// spaces, for instance (\u3000) are not recorded correctly.
	var useFallbackCompositionData = ExecutionEnvironment.canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);
	
	/**
	 * Opera <= 12 includes TextEvent in window, but does not fire
	 * text input events. Rely on keypress instead.
	 */
	function isPresto() {
	  var opera = window.opera;
	  return typeof opera === 'object' && typeof opera.version === 'function' && parseInt(opera.version(), 10) <= 12;
	}
	
	var SPACEBAR_CODE = 32;
	var SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);
	
	// Events and their corresponding property names.
	var eventTypes = {
	  beforeInput: {
	    phasedRegistrationNames: {
	      bubbled: 'onBeforeInput',
	      captured: 'onBeforeInputCapture'
	    },
	    dependencies: ['topCompositionEnd', 'topKeyPress', 'topTextInput', 'topPaste']
	  },
	  compositionEnd: {
	    phasedRegistrationNames: {
	      bubbled: 'onCompositionEnd',
	      captured: 'onCompositionEndCapture'
	    },
	    dependencies: ['topBlur', 'topCompositionEnd', 'topKeyDown', 'topKeyPress', 'topKeyUp', 'topMouseDown']
	  },
	  compositionStart: {
	    phasedRegistrationNames: {
	      bubbled: 'onCompositionStart',
	      captured: 'onCompositionStartCapture'
	    },
	    dependencies: ['topBlur', 'topCompositionStart', 'topKeyDown', 'topKeyPress', 'topKeyUp', 'topMouseDown']
	  },
	  compositionUpdate: {
	    phasedRegistrationNames: {
	      bubbled: 'onCompositionUpdate',
	      captured: 'onCompositionUpdateCapture'
	    },
	    dependencies: ['topBlur', 'topCompositionUpdate', 'topKeyDown', 'topKeyPress', 'topKeyUp', 'topMouseDown']
	  }
	};
	
	// Track whether we've ever handled a keypress on the space key.
	var hasSpaceKeypress = false;
	
	/**
	 * Return whether a native keypress event is assumed to be a command.
	 * This is required because Firefox fires `keypress` events for key commands
	 * (cut, copy, select-all, etc.) even though no character is inserted.
	 */
	function isKeypressCommand(nativeEvent) {
	  return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) &&
	  // ctrlKey && altKey is equivalent to AltGr, and is not a command.
	  !(nativeEvent.ctrlKey && nativeEvent.altKey);
	}
	
	/**
	 * Translate native top level events into event types.
	 *
	 * @param {string} topLevelType
	 * @return {object}
	 */
	function getCompositionEventType(topLevelType) {
	  switch (topLevelType) {
	    case 'topCompositionStart':
	      return eventTypes.compositionStart;
	    case 'topCompositionEnd':
	      return eventTypes.compositionEnd;
	    case 'topCompositionUpdate':
	      return eventTypes.compositionUpdate;
	  }
	}
	
	/**
	 * Does our fallback best-guess model think this event signifies that
	 * composition has begun?
	 *
	 * @param {string} topLevelType
	 * @param {object} nativeEvent
	 * @return {boolean}
	 */
	function isFallbackCompositionStart(topLevelType, nativeEvent) {
	  return topLevelType === 'topKeyDown' && nativeEvent.keyCode === START_KEYCODE;
	}
	
	/**
	 * Does our fallback mode think that this event is the end of composition?
	 *
	 * @param {string} topLevelType
	 * @param {object} nativeEvent
	 * @return {boolean}
	 */
	function isFallbackCompositionEnd(topLevelType, nativeEvent) {
	  switch (topLevelType) {
	    case 'topKeyUp':
	      // Command keys insert or clear IME input.
	      return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;
	    case 'topKeyDown':
	      // Expect IME keyCode on each keydown. If we get any other
	      // code we must have exited earlier.
	      return nativeEvent.keyCode !== START_KEYCODE;
	    case 'topKeyPress':
	    case 'topMouseDown':
	    case 'topBlur':
	      // Events are not possible without cancelling IME.
	      return true;
	    default:
	      return false;
	  }
	}
	
	/**
	 * Google Input Tools provides composition data via a CustomEvent,
	 * with the `data` property populated in the `detail` object. If this
	 * is available on the event object, use it. If not, this is a plain
	 * composition event and we have nothing special to extract.
	 *
	 * @param {object} nativeEvent
	 * @return {?string}
	 */
	function getDataFromCustomEvent(nativeEvent) {
	  var detail = nativeEvent.detail;
	  if (typeof detail === 'object' && 'data' in detail) {
	    return detail.data;
	  }
	  return null;
	}
	
	// Track the current IME composition fallback object, if any.
	var currentComposition = null;
	
	/**
	 * @return {?object} A SyntheticCompositionEvent.
	 */
	function extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	  var eventType;
	  var fallbackData;
	
	  if (canUseCompositionEvent) {
	    eventType = getCompositionEventType(topLevelType);
	  } else if (!currentComposition) {
	    if (isFallbackCompositionStart(topLevelType, nativeEvent)) {
	      eventType = eventTypes.compositionStart;
	    }
	  } else if (isFallbackCompositionEnd(topLevelType, nativeEvent)) {
	    eventType = eventTypes.compositionEnd;
	  }
	
	  if (!eventType) {
	    return null;
	  }
	
	  if (useFallbackCompositionData) {
	    // The current composition is stored statically and must not be
	    // overwritten while composition continues.
	    if (!currentComposition && eventType === eventTypes.compositionStart) {
	      currentComposition = FallbackCompositionState.getPooled(nativeEventTarget);
	    } else if (eventType === eventTypes.compositionEnd) {
	      if (currentComposition) {
	        fallbackData = currentComposition.getData();
	      }
	    }
	  }
	
	  var event = SyntheticCompositionEvent.getPooled(eventType, targetInst, nativeEvent, nativeEventTarget);
	
	  if (fallbackData) {
	    // Inject data generated from fallback path into the synthetic event.
	    // This matches the property of native CompositionEventInterface.
	    event.data = fallbackData;
	  } else {
	    var customData = getDataFromCustomEvent(nativeEvent);
	    if (customData !== null) {
	      event.data = customData;
	    }
	  }
	
	  EventPropagators.accumulateTwoPhaseDispatches(event);
	  return event;
	}
	
	/**
	 * @param {string} topLevelType Record from `EventConstants`.
	 * @param {object} nativeEvent Native browser event.
	 * @return {?string} The string corresponding to this `beforeInput` event.
	 */
	function getNativeBeforeInputChars(topLevelType, nativeEvent) {
	  switch (topLevelType) {
	    case 'topCompositionEnd':
	      return getDataFromCustomEvent(nativeEvent);
	    case 'topKeyPress':
	      /**
	       * If native `textInput` events are available, our goal is to make
	       * use of them. However, there is a special case: the spacebar key.
	       * In Webkit, preventing default on a spacebar `textInput` event
	       * cancels character insertion, but it *also* causes the browser
	       * to fall back to its default spacebar behavior of scrolling the
	       * page.
	       *
	       * Tracking at:
	       * https://code.google.com/p/chromium/issues/detail?id=355103
	       *
	       * To avoid this issue, use the keypress event as if no `textInput`
	       * event is available.
	       */
	      var which = nativeEvent.which;
	      if (which !== SPACEBAR_CODE) {
	        return null;
	      }
	
	      hasSpaceKeypress = true;
	      return SPACEBAR_CHAR;
	
	    case 'topTextInput':
	      // Record the characters to be added to the DOM.
	      var chars = nativeEvent.data;
	
	      // If it's a spacebar character, assume that we have already handled
	      // it at the keypress level and bail immediately. Android Chrome
	      // doesn't give us keycodes, so we need to blacklist it.
	      if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {
	        return null;
	      }
	
	      return chars;
	
	    default:
	      // For other native event types, do nothing.
	      return null;
	  }
	}
	
	/**
	 * For browsers that do not provide the `textInput` event, extract the
	 * appropriate string to use for SyntheticInputEvent.
	 *
	 * @param {string} topLevelType Record from `EventConstants`.
	 * @param {object} nativeEvent Native browser event.
	 * @return {?string} The fallback string for this `beforeInput` event.
	 */
	function getFallbackBeforeInputChars(topLevelType, nativeEvent) {
	  // If we are currently composing (IME) and using a fallback to do so,
	  // try to extract the composed characters from the fallback object.
	  // If composition event is available, we extract a string only at
	  // compositionevent, otherwise extract it at fallback events.
	  if (currentComposition) {
	    if (topLevelType === 'topCompositionEnd' || !canUseCompositionEvent && isFallbackCompositionEnd(topLevelType, nativeEvent)) {
	      var chars = currentComposition.getData();
	      FallbackCompositionState.release(currentComposition);
	      currentComposition = null;
	      return chars;
	    }
	    return null;
	  }
	
	  switch (topLevelType) {
	    case 'topPaste':
	      // If a paste event occurs after a keypress, throw out the input
	      // chars. Paste events should not lead to BeforeInput events.
	      return null;
	    case 'topKeyPress':
	      /**
	       * As of v27, Firefox may fire keypress events even when no character
	       * will be inserted. A few possibilities:
	       *
	       * - `which` is `0`. Arrow keys, Esc key, etc.
	       *
	       * - `which` is the pressed key code, but no char is available.
	       *   Ex: 'AltGr + d` in Polish. There is no modified character for
	       *   this key combination and no character is inserted into the
	       *   document, but FF fires the keypress for char code `100` anyway.
	       *   No `input` event will occur.
	       *
	       * - `which` is the pressed key code, but a command combination is
	       *   being used. Ex: `Cmd+C`. No character is inserted, and no
	       *   `input` event will occur.
	       */
	      if (nativeEvent.which && !isKeypressCommand(nativeEvent)) {
	        return String.fromCharCode(nativeEvent.which);
	      }
	      return null;
	    case 'topCompositionEnd':
	      return useFallbackCompositionData ? null : nativeEvent.data;
	    default:
	      return null;
	  }
	}
	
	/**
	 * Extract a SyntheticInputEvent for `beforeInput`, based on either native
	 * `textInput` or fallback behavior.
	 *
	 * @return {?object} A SyntheticInputEvent.
	 */
	function extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	  var chars;
	
	  if (canUseTextInputEvent) {
	    chars = getNativeBeforeInputChars(topLevelType, nativeEvent);
	  } else {
	    chars = getFallbackBeforeInputChars(topLevelType, nativeEvent);
	  }
	
	  // If no characters are being inserted, no BeforeInput event should
	  // be fired.
	  if (!chars) {
	    return null;
	  }
	
	  var event = SyntheticInputEvent.getPooled(eventTypes.beforeInput, targetInst, nativeEvent, nativeEventTarget);
	
	  event.data = chars;
	  EventPropagators.accumulateTwoPhaseDispatches(event);
	  return event;
	}
	
	/**
	 * Create an `onBeforeInput` event to match
	 * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.
	 *
	 * This event plugin is based on the native `textInput` event
	 * available in Chrome, Safari, Opera, and IE. This event fires after
	 * `onKeyPress` and `onCompositionEnd`, but before `onInput`.
	 *
	 * `beforeInput` is spec'd but not implemented in any browsers, and
	 * the `input` event does not provide any useful information about what has
	 * actually been added, contrary to the spec. Thus, `textInput` is the best
	 * available event to identify the characters that have actually been inserted
	 * into the target node.
	 *
	 * This plugin is also responsible for emitting `composition` events, thus
	 * allowing us to share composition fallback code for both `beforeInput` and
	 * `composition` event types.
	 */
	var BeforeInputEventPlugin = {
	
	  eventTypes: eventTypes,
	
	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    return [extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget), extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget)];
	  }
	};
	
	module.exports = BeforeInputEventPlugin;

/***/ },
/* 41 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var EventPluginHub = __webpack_require__(42);
	var EventPluginUtils = __webpack_require__(44);
	
	var accumulateInto = __webpack_require__(46);
	var forEachAccumulated = __webpack_require__(47);
	var warning = __webpack_require__(11);
	
	var getListener = EventPluginHub.getListener;
	
	/**
	 * Some event types have a notion of different registration names for different
	 * "phases" of propagation. This finds listeners by a given phase.
	 */
	function listenerAtPhase(inst, event, propagationPhase) {
	  var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];
	  return getListener(inst, registrationName);
	}
	
	/**
	 * Tags a `SyntheticEvent` with dispatched listeners. Creating this function
	 * here, allows us to not have to bind or create functions for each event.
	 * Mutating the event's members allows us to not have to create a wrapping
	 * "dispatch" object that pairs the event with the listener.
	 */
	function accumulateDirectionalDispatches(inst, phase, event) {
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(inst, 'Dispatching inst must not be null') : void 0;
	  }
	  var listener = listenerAtPhase(inst, event, phase);
	  if (listener) {
	    event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
	    event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
	  }
	}
	
	/**
	 * Collect dispatches (must be entirely collected before dispatching - see unit
	 * tests). Lazily allocate the array to conserve memory.  We must loop through
	 * each event and perform the traversal for each one. We cannot perform a
	 * single traversal for the entire collection of events because each event may
	 * have a different target.
	 */
	function accumulateTwoPhaseDispatchesSingle(event) {
	  if (event && event.dispatchConfig.phasedRegistrationNames) {
	    EventPluginUtils.traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);
	  }
	}
	
	/**
	 * Same as `accumulateTwoPhaseDispatchesSingle`, but skips over the targetID.
	 */
	function accumulateTwoPhaseDispatchesSingleSkipTarget(event) {
	  if (event && event.dispatchConfig.phasedRegistrationNames) {
	    var targetInst = event._targetInst;
	    var parentInst = targetInst ? EventPluginUtils.getParentInstance(targetInst) : null;
	    EventPluginUtils.traverseTwoPhase(parentInst, accumulateDirectionalDispatches, event);
	  }
	}
	
	/**
	 * Accumulates without regard to direction, does not look for phased
	 * registration names. Same as `accumulateDirectDispatchesSingle` but without
	 * requiring that the `dispatchMarker` be the same as the dispatched ID.
	 */
	function accumulateDispatches(inst, ignoredDirection, event) {
	  if (event && event.dispatchConfig.registrationName) {
	    var registrationName = event.dispatchConfig.registrationName;
	    var listener = getListener(inst, registrationName);
	    if (listener) {
	      event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
	      event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
	    }
	  }
	}
	
	/**
	 * Accumulates dispatches on an `SyntheticEvent`, but only for the
	 * `dispatchMarker`.
	 * @param {SyntheticEvent} event
	 */
	function accumulateDirectDispatchesSingle(event) {
	  if (event && event.dispatchConfig.registrationName) {
	    accumulateDispatches(event._targetInst, null, event);
	  }
	}
	
	function accumulateTwoPhaseDispatches(events) {
	  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);
	}
	
	function accumulateTwoPhaseDispatchesSkipTarget(events) {
	  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingleSkipTarget);
	}
	
	function accumulateEnterLeaveDispatches(leave, enter, from, to) {
	  EventPluginUtils.traverseEnterLeave(from, to, accumulateDispatches, leave, enter);
	}
	
	function accumulateDirectDispatches(events) {
	  forEachAccumulated(events, accumulateDirectDispatchesSingle);
	}
	
	/**
	 * A small set of propagation patterns, each of which will accept a small amount
	 * of information, and generate a set of "dispatch ready event objects" - which
	 * are sets of events that have already been annotated with a set of dispatched
	 * listener functions/ids. The API is designed this way to discourage these
	 * propagation strategies from actually executing the dispatches, since we
	 * always want to collect the entire set of dispatches before executing event a
	 * single one.
	 *
	 * @constructor EventPropagators
	 */
	var EventPropagators = {
	  accumulateTwoPhaseDispatches: accumulateTwoPhaseDispatches,
	  accumulateTwoPhaseDispatchesSkipTarget: accumulateTwoPhaseDispatchesSkipTarget,
	  accumulateDirectDispatches: accumulateDirectDispatches,
	  accumulateEnterLeaveDispatches: accumulateEnterLeaveDispatches
	};
	
	module.exports = EventPropagators;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 42 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(35);
	
	var EventPluginRegistry = __webpack_require__(43);
	var EventPluginUtils = __webpack_require__(44);
	var ReactErrorUtils = __webpack_require__(45);
	
	var accumulateInto = __webpack_require__(46);
	var forEachAccumulated = __webpack_require__(47);
	var invariant = __webpack_require__(8);
	
	/**
	 * Internal store for event listeners
	 */
	var listenerBank = {};
	
	/**
	 * Internal queue of events that have accumulated their dispatches and are
	 * waiting to have their dispatches executed.
	 */
	var eventQueue = null;
	
	/**
	 * Dispatches an event and releases it back into the pool, unless persistent.
	 *
	 * @param {?object} event Synthetic event to be dispatched.
	 * @param {boolean} simulated If the event is simulated (changes exn behavior)
	 * @private
	 */
	var executeDispatchesAndRelease = function (event, simulated) {
	  if (event) {
	    EventPluginUtils.executeDispatchesInOrder(event, simulated);
	
	    if (!event.isPersistent()) {
	      event.constructor.release(event);
	    }
	  }
	};
	var executeDispatchesAndReleaseSimulated = function (e) {
	  return executeDispatchesAndRelease(e, true);
	};
	var executeDispatchesAndReleaseTopLevel = function (e) {
	  return executeDispatchesAndRelease(e, false);
	};
	
	var getDictionaryKey = function (inst) {
	  // Prevents V8 performance issue:
	  // https://github.com/facebook/react/pull/7232
	  return '.' + inst._rootNodeID;
	};
	
	function isInteractive(tag) {
	  return tag === 'button' || tag === 'input' || tag === 'select' || tag === 'textarea';
	}
	
	function shouldPreventMouseEvent(name, type, props) {
	  switch (name) {
	    case 'onClick':
	    case 'onClickCapture':
	    case 'onDoubleClick':
	    case 'onDoubleClickCapture':
	    case 'onMouseDown':
	    case 'onMouseDownCapture':
	    case 'onMouseMove':
	    case 'onMouseMoveCapture':
	    case 'onMouseUp':
	    case 'onMouseUpCapture':
	      return !!(props.disabled && isInteractive(type));
	    default:
	      return false;
	  }
	}
	
	/**
	 * This is a unified interface for event plugins to be installed and configured.
	 *
	 * Event plugins can implement the following properties:
	 *
	 *   `extractEvents` {function(string, DOMEventTarget, string, object): *}
	 *     Required. When a top-level event is fired, this method is expected to
	 *     extract synthetic events that will in turn be queued and dispatched.
	 *
	 *   `eventTypes` {object}
	 *     Optional, plugins that fire events must publish a mapping of registration
	 *     names that are used to register listeners. Values of this mapping must
	 *     be objects that contain `registrationName` or `phasedRegistrationNames`.
	 *
	 *   `executeDispatch` {function(object, function, string)}
	 *     Optional, allows plugins to override how an event gets dispatched. By
	 *     default, the listener is simply invoked.
	 *
	 * Each plugin that is injected into `EventsPluginHub` is immediately operable.
	 *
	 * @public
	 */
	var EventPluginHub = {
	
	  /**
	   * Methods for injecting dependencies.
	   */
	  injection: {
	
	    /**
	     * @param {array} InjectedEventPluginOrder
	     * @public
	     */
	    injectEventPluginOrder: EventPluginRegistry.injectEventPluginOrder,
	
	    /**
	     * @param {object} injectedNamesToPlugins Map from names to plugin modules.
	     */
	    injectEventPluginsByName: EventPluginRegistry.injectEventPluginsByName
	
	  },
	
	  /**
	   * Stores `listener` at `listenerBank[registrationName][key]`. Is idempotent.
	   *
	   * @param {object} inst The instance, which is the source of events.
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   * @param {function} listener The callback to store.
	   */
	  putListener: function (inst, registrationName, listener) {
	    !(typeof listener === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected %s listener to be a function, instead got type %s', registrationName, typeof listener) : _prodInvariant('94', registrationName, typeof listener) : void 0;
	
	    var key = getDictionaryKey(inst);
	    var bankForRegistrationName = listenerBank[registrationName] || (listenerBank[registrationName] = {});
	    bankForRegistrationName[key] = listener;
	
	    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
	    if (PluginModule && PluginModule.didPutListener) {
	      PluginModule.didPutListener(inst, registrationName, listener);
	    }
	  },
	
	  /**
	   * @param {object} inst The instance, which is the source of events.
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   * @return {?function} The stored callback.
	   */
	  getListener: function (inst, registrationName) {
	    // TODO: shouldPreventMouseEvent is DOM-specific and definitely should not
	    // live here; needs to be moved to a better place soon
	    var bankForRegistrationName = listenerBank[registrationName];
	    if (shouldPreventMouseEvent(registrationName, inst._currentElement.type, inst._currentElement.props)) {
	      return null;
	    }
	    var key = getDictionaryKey(inst);
	    return bankForRegistrationName && bankForRegistrationName[key];
	  },
	
	  /**
	   * Deletes a listener from the registration bank.
	   *
	   * @param {object} inst The instance, which is the source of events.
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   */
	  deleteListener: function (inst, registrationName) {
	    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
	    if (PluginModule && PluginModule.willDeleteListener) {
	      PluginModule.willDeleteListener(inst, registrationName);
	    }
	
	    var bankForRegistrationName = listenerBank[registrationName];
	    // TODO: This should never be null -- when is it?
	    if (bankForRegistrationName) {
	      var key = getDictionaryKey(inst);
	      delete bankForRegistrationName[key];
	    }
	  },
	
	  /**
	   * Deletes all listeners for the DOM element with the supplied ID.
	   *
	   * @param {object} inst The instance, which is the source of events.
	   */
	  deleteAllListeners: function (inst) {
	    var key = getDictionaryKey(inst);
	    for (var registrationName in listenerBank) {
	      if (!listenerBank.hasOwnProperty(registrationName)) {
	        continue;
	      }
	
	      if (!listenerBank[registrationName][key]) {
	        continue;
	      }
	
	      var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
	      if (PluginModule && PluginModule.willDeleteListener) {
	        PluginModule.willDeleteListener(inst, registrationName);
	      }
	
	      delete listenerBank[registrationName][key];
	    }
	  },
	
	  /**
	   * Allows registered plugins an opportunity to extract events from top-level
	   * native browser events.
	   *
	   * @return {*} An accumulation of synthetic events.
	   * @internal
	   */
	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var events;
	    var plugins = EventPluginRegistry.plugins;
	    for (var i = 0; i < plugins.length; i++) {
	      // Not every plugin in the ordering may be loaded at runtime.
	      var possiblePlugin = plugins[i];
	      if (possiblePlugin) {
	        var extractedEvents = possiblePlugin.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
	        if (extractedEvents) {
	          events = accumulateInto(events, extractedEvents);
	        }
	      }
	    }
	    return events;
	  },
	
	  /**
	   * Enqueues a synthetic event that should be dispatched when
	   * `processEventQueue` is invoked.
	   *
	   * @param {*} events An accumulation of synthetic events.
	   * @internal
	   */
	  enqueueEvents: function (events) {
	    if (events) {
	      eventQueue = accumulateInto(eventQueue, events);
	    }
	  },
	
	  /**
	   * Dispatches all synthetic events on the event queue.
	   *
	   * @internal
	   */
	  processEventQueue: function (simulated) {
	    // Set `eventQueue` to null before processing it so that we can tell if more
	    // events get enqueued while processing.
	    var processingEventQueue = eventQueue;
	    eventQueue = null;
	    if (simulated) {
	      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseSimulated);
	    } else {
	      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseTopLevel);
	    }
	    !!eventQueue ? process.env.NODE_ENV !== 'production' ? invariant(false, 'processEventQueue(): Additional events were enqueued while processing an event queue. Support for this has not yet been implemented.') : _prodInvariant('95') : void 0;
	    // This would be a good time to rethrow if any of the event handlers threw.
	    ReactErrorUtils.rethrowCaughtError();
	  },
	
	  /**
	   * These are needed for tests only. Do not use!
	   */
	  __purge: function () {
	    listenerBank = {};
	  },
	
	  __getListenerBank: function () {
	    return listenerBank;
	  }
	
	};
	
	module.exports = EventPluginHub;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 43 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(35);
	
	var invariant = __webpack_require__(8);
	
	/**
	 * Injectable ordering of event plugins.
	 */
	var eventPluginOrder = null;
	
	/**
	 * Injectable mapping from names to event plugin modules.
	 */
	var namesToPlugins = {};
	
	/**
	 * Recomputes the plugin list using the injected plugins and plugin ordering.
	 *
	 * @private
	 */
	function recomputePluginOrdering() {
	  if (!eventPluginOrder) {
	    // Wait until an `eventPluginOrder` is injected.
	    return;
	  }
	  for (var pluginName in namesToPlugins) {
	    var pluginModule = namesToPlugins[pluginName];
	    var pluginIndex = eventPluginOrder.indexOf(pluginName);
	    !(pluginIndex > -1) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject event plugins that do not exist in the plugin ordering, `%s`.', pluginName) : _prodInvariant('96', pluginName) : void 0;
	    if (EventPluginRegistry.plugins[pluginIndex]) {
	      continue;
	    }
	    !pluginModule.extractEvents ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Event plugins must implement an `extractEvents` method, but `%s` does not.', pluginName) : _prodInvariant('97', pluginName) : void 0;
	    EventPluginRegistry.plugins[pluginIndex] = pluginModule;
	    var publishedEvents = pluginModule.eventTypes;
	    for (var eventName in publishedEvents) {
	      !publishEventForPlugin(publishedEvents[eventName], pluginModule, eventName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.', eventName, pluginName) : _prodInvariant('98', eventName, pluginName) : void 0;
	    }
	  }
	}
	
	/**
	 * Publishes an event so that it can be dispatched by the supplied plugin.
	 *
	 * @param {object} dispatchConfig Dispatch configuration for the event.
	 * @param {object} PluginModule Plugin publishing the event.
	 * @return {boolean} True if the event was successfully published.
	 * @private
	 */
	function publishEventForPlugin(dispatchConfig, pluginModule, eventName) {
	  !!EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same event name, `%s`.', eventName) : _prodInvariant('99', eventName) : void 0;
	  EventPluginRegistry.eventNameDispatchConfigs[eventName] = dispatchConfig;
	
	  var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;
	  if (phasedRegistrationNames) {
	    for (var phaseName in phasedRegistrationNames) {
	      if (phasedRegistrationNames.hasOwnProperty(phaseName)) {
	        var phasedRegistrationName = phasedRegistrationNames[phaseName];
	        publishRegistrationName(phasedRegistrationName, pluginModule, eventName);
	      }
	    }
	    return true;
	  } else if (dispatchConfig.registrationName) {
	    publishRegistrationName(dispatchConfig.registrationName, pluginModule, eventName);
	    return true;
	  }
	  return false;
	}
	
	/**
	 * Publishes a registration name that is used to identify dispatched events and
	 * can be used with `EventPluginHub.putListener` to register listeners.
	 *
	 * @param {string} registrationName Registration name to add.
	 * @param {object} PluginModule Plugin publishing the event.
	 * @private
	 */
	function publishRegistrationName(registrationName, pluginModule, eventName) {
	  !!EventPluginRegistry.registrationNameModules[registrationName] ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same registration name, `%s`.', registrationName) : _prodInvariant('100', registrationName) : void 0;
	  EventPluginRegistry.registrationNameModules[registrationName] = pluginModule;
	  EventPluginRegistry.registrationNameDependencies[registrationName] = pluginModule.eventTypes[eventName].dependencies;
	
	  if (process.env.NODE_ENV !== 'production') {
	    var lowerCasedName = registrationName.toLowerCase();
	    EventPluginRegistry.possibleRegistrationNames[lowerCasedName] = registrationName;
	
	    if (registrationName === 'onDoubleClick') {
	      EventPluginRegistry.possibleRegistrationNames.ondblclick = registrationName;
	    }
	  }
	}
	
	/**
	 * Registers plugins so that they can extract and dispatch events.
	 *
	 * @see {EventPluginHub}
	 */
	var EventPluginRegistry = {
	
	  /**
	   * Ordered list of injected plugins.
	   */
	  plugins: [],
	
	  /**
	   * Mapping from event name to dispatch config
	   */
	  eventNameDispatchConfigs: {},
	
	  /**
	   * Mapping from registration name to plugin module
	   */
	  registrationNameModules: {},
	
	  /**
	   * Mapping from registration name to event name
	   */
	  registrationNameDependencies: {},
	
	  /**
	   * Mapping from lowercase registration names to the properly cased version,
	   * used to warn in the case of missing event handlers. Available
	   * only in __DEV__.
	   * @type {Object}
	   */
	  possibleRegistrationNames: process.env.NODE_ENV !== 'production' ? {} : null,
	  // Trust the developer to only use possibleRegistrationNames in __DEV__
	
	  /**
	   * Injects an ordering of plugins (by plugin name). This allows the ordering
	   * to be decoupled from injection of the actual plugins so that ordering is
	   * always deterministic regardless of packaging, on-the-fly injection, etc.
	   *
	   * @param {array} InjectedEventPluginOrder
	   * @internal
	   * @see {EventPluginHub.injection.injectEventPluginOrder}
	   */
	  injectEventPluginOrder: function (injectedEventPluginOrder) {
	    !!eventPluginOrder ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject event plugin ordering more than once. You are likely trying to load more than one copy of React.') : _prodInvariant('101') : void 0;
	    // Clone the ordering so it cannot be dynamically mutated.
	    eventPluginOrder = Array.prototype.slice.call(injectedEventPluginOrder);
	    recomputePluginOrdering();
	  },
	
	  /**
	   * Injects plugins to be used by `EventPluginHub`. The plugin names must be
	   * in the ordering injected by `injectEventPluginOrder`.
	   *
	   * Plugins can be injected as part of page initialization or on-the-fly.
	   *
	   * @param {object} injectedNamesToPlugins Map from names to plugin modules.
	   * @internal
	   * @see {EventPluginHub.injection.injectEventPluginsByName}
	   */
	  injectEventPluginsByName: function (injectedNamesToPlugins) {
	    var isOrderingDirty = false;
	    for (var pluginName in injectedNamesToPlugins) {
	      if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {
	        continue;
	      }
	      var pluginModule = injectedNamesToPlugins[pluginName];
	      if (!namesToPlugins.hasOwnProperty(pluginName) || namesToPlugins[pluginName] !== pluginModule) {
	        !!namesToPlugins[pluginName] ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject two different event plugins using the same name, `%s`.', pluginName) : _prodInvariant('102', pluginName) : void 0;
	        namesToPlugins[pluginName] = pluginModule;
	        isOrderingDirty = true;
	      }
	    }
	    if (isOrderingDirty) {
	      recomputePluginOrdering();
	    }
	  },
	
	  /**
	   * Looks up the plugin for the supplied event.
	   *
	   * @param {object} event A synthetic event.
	   * @return {?object} The plugin that created the supplied event.
	   * @internal
	   */
	  getPluginModuleForEvent: function (event) {
	    var dispatchConfig = event.dispatchConfig;
	    if (dispatchConfig.registrationName) {
	      return EventPluginRegistry.registrationNameModules[dispatchConfig.registrationName] || null;
	    }
	    if (dispatchConfig.phasedRegistrationNames !== undefined) {
	      // pulling phasedRegistrationNames out of dispatchConfig helps Flow see
	      // that it is not undefined.
	      var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;
	
	      for (var phase in phasedRegistrationNames) {
	        if (!phasedRegistrationNames.hasOwnProperty(phase)) {
	          continue;
	        }
	        var pluginModule = EventPluginRegistry.registrationNameModules[phasedRegistrationNames[phase]];
	        if (pluginModule) {
	          return pluginModule;
	        }
	      }
	    }
	    return null;
	  },
	
	  /**
	   * Exposed for unit testing.
	   * @private
	   */
	  _resetEventPlugins: function () {
	    eventPluginOrder = null;
	    for (var pluginName in namesToPlugins) {
	      if (namesToPlugins.hasOwnProperty(pluginName)) {
	        delete namesToPlugins[pluginName];
	      }
	    }
	    EventPluginRegistry.plugins.length = 0;
	
	    var eventNameDispatchConfigs = EventPluginRegistry.eventNameDispatchConfigs;
	    for (var eventName in eventNameDispatchConfigs) {
	      if (eventNameDispatchConfigs.hasOwnProperty(eventName)) {
	        delete eventNameDispatchConfigs[eventName];
	      }
	    }
	
	    var registrationNameModules = EventPluginRegistry.registrationNameModules;
	    for (var registrationName in registrationNameModules) {
	      if (registrationNameModules.hasOwnProperty(registrationName)) {
	        delete registrationNameModules[registrationName];
	      }
	    }
	
	    if (process.env.NODE_ENV !== 'production') {
	      var possibleRegistrationNames = EventPluginRegistry.possibleRegistrationNames;
	      for (var lowerCasedName in possibleRegistrationNames) {
	        if (possibleRegistrationNames.hasOwnProperty(lowerCasedName)) {
	          delete possibleRegistrationNames[lowerCasedName];
	        }
	      }
	    }
	  }
	
	};
	
	module.exports = EventPluginRegistry;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 44 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(35);
	
	var ReactErrorUtils = __webpack_require__(45);
	
	var invariant = __webpack_require__(8);
	var warning = __webpack_require__(11);
	
	/**
	 * Injected dependencies:
	 */
	
	/**
	 * - `ComponentTree`: [required] Module that can convert between React instances
	 *   and actual node references.
	 */
	var ComponentTree;
	var TreeTraversal;
	var injection = {
	  injectComponentTree: function (Injected) {
	    ComponentTree = Injected;
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(Injected && Injected.getNodeFromInstance && Injected.getInstanceFromNode, 'EventPluginUtils.injection.injectComponentTree(...): Injected ' + 'module is missing getNodeFromInstance or getInstanceFromNode.') : void 0;
	    }
	  },
	  injectTreeTraversal: function (Injected) {
	    TreeTraversal = Injected;
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(Injected && Injected.isAncestor && Injected.getLowestCommonAncestor, 'EventPluginUtils.injection.injectTreeTraversal(...): Injected ' + 'module is missing isAncestor or getLowestCommonAncestor.') : void 0;
	    }
	  }
	};
	
	function isEndish(topLevelType) {
	  return topLevelType === 'topMouseUp' || topLevelType === 'topTouchEnd' || topLevelType === 'topTouchCancel';
	}
	
	function isMoveish(topLevelType) {
	  return topLevelType === 'topMouseMove' || topLevelType === 'topTouchMove';
	}
	function isStartish(topLevelType) {
	  return topLevelType === 'topMouseDown' || topLevelType === 'topTouchStart';
	}
	
	var validateEventDispatches;
	if (process.env.NODE_ENV !== 'production') {
	  validateEventDispatches = function (event) {
	    var dispatchListeners = event._dispatchListeners;
	    var dispatchInstances = event._dispatchInstances;
	
	    var listenersIsArr = Array.isArray(dispatchListeners);
	    var listenersLen = listenersIsArr ? dispatchListeners.length : dispatchListeners ? 1 : 0;
	
	    var instancesIsArr = Array.isArray(dispatchInstances);
	    var instancesLen = instancesIsArr ? dispatchInstances.length : dispatchInstances ? 1 : 0;
	
	    process.env.NODE_ENV !== 'production' ? warning(instancesIsArr === listenersIsArr && instancesLen === listenersLen, 'EventPluginUtils: Invalid `event`.') : void 0;
	  };
	}
	
	/**
	 * Dispatch the event to the listener.
	 * @param {SyntheticEvent} event SyntheticEvent to handle
	 * @param {boolean} simulated If the event is simulated (changes exn behavior)
	 * @param {function} listener Application-level callback
	 * @param {*} inst Internal component instance
	 */
	function executeDispatch(event, simulated, listener, inst) {
	  var type = event.type || 'unknown-event';
	  event.currentTarget = EventPluginUtils.getNodeFromInstance(inst);
	  if (simulated) {
	    ReactErrorUtils.invokeGuardedCallbackWithCatch(type, listener, event);
	  } else {
	    ReactErrorUtils.invokeGuardedCallback(type, listener, event);
	  }
	  event.currentTarget = null;
	}
	
	/**
	 * Standard/simple iteration through an event's collected dispatches.
	 */
	function executeDispatchesInOrder(event, simulated) {
	  var dispatchListeners = event._dispatchListeners;
	  var dispatchInstances = event._dispatchInstances;
	  if (process.env.NODE_ENV !== 'production') {
	    validateEventDispatches(event);
	  }
	  if (Array.isArray(dispatchListeners)) {
	    for (var i = 0; i < dispatchListeners.length; i++) {
	      if (event.isPropagationStopped()) {
	        break;
	      }
	      // Listeners and Instances are two parallel arrays that are always in sync.
	      executeDispatch(event, simulated, dispatchListeners[i], dispatchInstances[i]);
	    }
	  } else if (dispatchListeners) {
	    executeDispatch(event, simulated, dispatchListeners, dispatchInstances);
	  }
	  event._dispatchListeners = null;
	  event._dispatchInstances = null;
	}
	
	/**
	 * Standard/simple iteration through an event's collected dispatches, but stops
	 * at the first dispatch execution returning true, and returns that id.
	 *
	 * @return {?string} id of the first dispatch execution who's listener returns
	 * true, or null if no listener returned true.
	 */
	function executeDispatchesInOrderStopAtTrueImpl(event) {
	  var dispatchListeners = event._dispatchListeners;
	  var dispatchInstances = event._dispatchInstances;
	  if (process.env.NODE_ENV !== 'production') {
	    validateEventDispatches(event);
	  }
	  if (Array.isArray(dispatchListeners)) {
	    for (var i = 0; i < dispatchListeners.length; i++) {
	      if (event.isPropagationStopped()) {
	        break;
	      }
	      // Listeners and Instances are two parallel arrays that are always in sync.
	      if (dispatchListeners[i](event, dispatchInstances[i])) {
	        return dispatchInstances[i];
	      }
	    }
	  } else if (dispatchListeners) {
	    if (dispatchListeners(event, dispatchInstances)) {
	      return dispatchInstances;
	    }
	  }
	  return null;
	}
	
	/**
	 * @see executeDispatchesInOrderStopAtTrueImpl
	 */
	function executeDispatchesInOrderStopAtTrue(event) {
	  var ret = executeDispatchesInOrderStopAtTrueImpl(event);
	  event._dispatchInstances = null;
	  event._dispatchListeners = null;
	  return ret;
	}
	
	/**
	 * Execution of a "direct" dispatch - there must be at most one dispatch
	 * accumulated on the event or it is considered an error. It doesn't really make
	 * sense for an event with multiple dispatches (bubbled) to keep track of the
	 * return values at each dispatch execution, but it does tend to make sense when
	 * dealing with "direct" dispatches.
	 *
	 * @return {*} The return value of executing the single dispatch.
	 */
	function executeDirectDispatch(event) {
	  if (process.env.NODE_ENV !== 'production') {
	    validateEventDispatches(event);
	  }
	  var dispatchListener = event._dispatchListeners;
	  var dispatchInstance = event._dispatchInstances;
	  !!Array.isArray(dispatchListener) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'executeDirectDispatch(...): Invalid `event`.') : _prodInvariant('103') : void 0;
	  event.currentTarget = dispatchListener ? EventPluginUtils.getNodeFromInstance(dispatchInstance) : null;
	  var res = dispatchListener ? dispatchListener(event) : null;
	  event.currentTarget = null;
	  event._dispatchListeners = null;
	  event._dispatchInstances = null;
	  return res;
	}
	
	/**
	 * @param {SyntheticEvent} event
	 * @return {boolean} True iff number of dispatches accumulated is greater than 0.
	 */
	function hasDispatches(event) {
	  return !!event._dispatchListeners;
	}
	
	/**
	 * General utilities that are useful in creating custom Event Plugins.
	 */
	var EventPluginUtils = {
	  isEndish: isEndish,
	  isMoveish: isMoveish,
	  isStartish: isStartish,
	
	  executeDirectDispatch: executeDirectDispatch,
	  executeDispatchesInOrder: executeDispatchesInOrder,
	  executeDispatchesInOrderStopAtTrue: executeDispatchesInOrderStopAtTrue,
	  hasDispatches: hasDispatches,
	
	  getInstanceFromNode: function (node) {
	    return ComponentTree.getInstanceFromNode(node);
	  },
	  getNodeFromInstance: function (node) {
	    return ComponentTree.getNodeFromInstance(node);
	  },
	  isAncestor: function (a, b) {
	    return TreeTraversal.isAncestor(a, b);
	  },
	  getLowestCommonAncestor: function (a, b) {
	    return TreeTraversal.getLowestCommonAncestor(a, b);
	  },
	  getParentInstance: function (inst) {
	    return TreeTraversal.getParentInstance(inst);
	  },
	  traverseTwoPhase: function (target, fn, arg) {
	    return TreeTraversal.traverseTwoPhase(target, fn, arg);
	  },
	  traverseEnterLeave: function (from, to, fn, argFrom, argTo) {
	    return TreeTraversal.traverseEnterLeave(from, to, fn, argFrom, argTo);
	  },
	
	  injection: injection
	};
	
	module.exports = EventPluginUtils;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 45 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var caughtError = null;
	
	/**
	 * Call a function while guarding against errors that happens within it.
	 *
	 * @param {String} name of the guard to use for logging or debugging
	 * @param {Function} func The function to invoke
	 * @param {*} a First argument
	 * @param {*} b Second argument
	 */
	function invokeGuardedCallback(name, func, a) {
	  try {
	    func(a);
	  } catch (x) {
	    if (caughtError === null) {
	      caughtError = x;
	    }
	  }
	}
	
	var ReactErrorUtils = {
	  invokeGuardedCallback: invokeGuardedCallback,
	
	  /**
	   * Invoked by ReactTestUtils.Simulate so that any errors thrown by the event
	   * handler are sure to be rethrown by rethrowCaughtError.
	   */
	  invokeGuardedCallbackWithCatch: invokeGuardedCallback,
	
	  /**
	   * During execution of guarded functions we will capture the first error which
	   * we will rethrow to be handled by the top level error handler.
	   */
	  rethrowCaughtError: function () {
	    if (caughtError) {
	      var error = caughtError;
	      caughtError = null;
	      throw error;
	    }
	  }
	};
	
	if (process.env.NODE_ENV !== 'production') {
	  /**
	   * To help development we can get better devtools integration by simulating a
	   * real browser event.
	   */
	  if (typeof window !== 'undefined' && typeof window.dispatchEvent === 'function' && typeof document !== 'undefined' && typeof document.createEvent === 'function') {
	    var fakeNode = document.createElement('react');
	    ReactErrorUtils.invokeGuardedCallback = function (name, func, a) {
	      var boundFunc = func.bind(null, a);
	      var evtType = 'react-' + name;
	      fakeNode.addEventListener(evtType, boundFunc, false);
	      var evt = document.createEvent('Event');
	      // $FlowFixMe https://github.com/facebook/flow/issues/2336
	      evt.initEvent(evtType, false, false);
	      fakeNode.dispatchEvent(evt);
	      fakeNode.removeEventListener(evtType, boundFunc, false);
	    };
	  }
	}
	
	module.exports = ReactErrorUtils;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 46 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(35);
	
	var invariant = __webpack_require__(8);
	
	/**
	 * Accumulates items that must not be null or undefined into the first one. This
	 * is used to conserve memory by avoiding array allocations, and thus sacrifices
	 * API cleanness. Since `current` can be null before being passed in and not
	 * null after this function, make sure to assign it back to `current`:
	 *
	 * `a = accumulateInto(a, b);`
	 *
	 * This API should be sparingly used. Try `accumulate` for something cleaner.
	 *
	 * @return {*|array<*>} An accumulation of items.
	 */
	
	function accumulateInto(current, next) {
	  !(next != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'accumulateInto(...): Accumulated items must not be null or undefined.') : _prodInvariant('30') : void 0;
	
	  if (current == null) {
	    return next;
	  }
	
	  // Both are not empty. Warning: Never call x.concat(y) when you are not
	  // certain that x is an Array (x could be a string with concat method).
	  if (Array.isArray(current)) {
	    if (Array.isArray(next)) {
	      current.push.apply(current, next);
	      return current;
	    }
	    current.push(next);
	    return current;
	  }
	
	  if (Array.isArray(next)) {
	    // A bit too dangerous to mutate `next`.
	    return [current].concat(next);
	  }
	
	  return [current, next];
	}
	
	module.exports = accumulateInto;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 47 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	/**
	 * @param {array} arr an "accumulation" of items which is either an Array or
	 * a single item. Useful when paired with the `accumulate` module. This is a
	 * simple utility that allows us to reason about a collection of items, but
	 * handling the case when there is exactly one item (and we do not need to
	 * allocate an array).
	 */
	
	function forEachAccumulated(arr, cb, scope) {
	  if (Array.isArray(arr)) {
	    arr.forEach(cb, scope);
	  } else if (arr) {
	    cb.call(scope, arr);
	  }
	}
	
	module.exports = forEachAccumulated;

/***/ },
/* 48 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);
	
	/**
	 * Simple, lightweight module assisting with the detection and context of
	 * Worker. Helps avoid circular dependencies and allows code to reason about
	 * whether or not they are in a Worker, even if they never include the main
	 * `ReactWorker` dependency.
	 */
	var ExecutionEnvironment = {
	
	  canUseDOM: canUseDOM,
	
	  canUseWorkers: typeof Worker !== 'undefined',
	
	  canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),
	
	  canUseViewport: canUseDOM && !!window.screen,
	
	  isInWorker: !canUseDOM // For now, this is true - might change in the future.
	
	};
	
	module.exports = ExecutionEnvironment;

/***/ },
/* 49 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(4);
	
	var PooledClass = __webpack_require__(50);
	
	var getTextContentAccessor = __webpack_require__(51);
	
	/**
	 * This helper class stores information about text content of a target node,
	 * allowing comparison of content before and after a given event.
	 *
	 * Identify the node where selection currently begins, then observe
	 * both its text content and its current position in the DOM. Since the
	 * browser may natively replace the target node during composition, we can
	 * use its position to find its replacement.
	 *
	 * @param {DOMEventTarget} root
	 */
	function FallbackCompositionState(root) {
	  this._root = root;
	  this._startText = this.getText();
	  this._fallbackText = null;
	}
	
	_assign(FallbackCompositionState.prototype, {
	  destructor: function () {
	    this._root = null;
	    this._startText = null;
	    this._fallbackText = null;
	  },
	
	  /**
	   * Get current text of input.
	   *
	   * @return {string}
	   */
	  getText: function () {
	    if ('value' in this._root) {
	      return this._root.value;
	    }
	    return this._root[getTextContentAccessor()];
	  },
	
	  /**
	   * Determine the differing substring between the initially stored
	   * text content and the current content.
	   *
	   * @return {string}
	   */
	  getData: function () {
	    if (this._fallbackText) {
	      return this._fallbackText;
	    }
	
	    var start;
	    var startValue = this._startText;
	    var startLength = startValue.length;
	    var end;
	    var endValue = this.getText();
	    var endLength = endValue.length;
	
	    for (start = 0; start < startLength; start++) {
	      if (startValue[start] !== endValue[start]) {
	        break;
	      }
	    }
	
	    var minEnd = startLength - start;
	    for (end = 1; end <= minEnd; end++) {
	      if (startValue[startLength - end] !== endValue[endLength - end]) {
	        break;
	      }
	    }
	
	    var sliceTail = end > 1 ? 1 - end : undefined;
	    this._fallbackText = endValue.slice(start, sliceTail);
	    return this._fallbackText;
	  }
	});
	
	PooledClass.addPoolingTo(FallbackCompositionState);
	
	module.exports = FallbackCompositionState;

/***/ },
/* 50 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(35);
	
	var invariant = __webpack_require__(8);
	
	/**
	 * Static poolers. Several custom versions for each potential number of
	 * arguments. A completely generic pooler is easy to implement, but would
	 * require accessing the `arguments` object. In each of these, `this` refers to
	 * the Class itself, not an instance. If any others are needed, simply add them
	 * here, or in their own files.
	 */
	var oneArgumentPooler = function (copyFieldsFrom) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, copyFieldsFrom);
	    return instance;
	  } else {
	    return new Klass(copyFieldsFrom);
	  }
	};
	
	var twoArgumentPooler = function (a1, a2) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2);
	    return instance;
	  } else {
	    return new Klass(a1, a2);
	  }
	};
	
	var threeArgumentPooler = function (a1, a2, a3) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3);
	  }
	};
	
	var fourArgumentPooler = function (a1, a2, a3, a4) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3, a4);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3, a4);
	  }
	};
	
	var standardReleaser = function (instance) {
	  var Klass = this;
	  !(instance instanceof Klass) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Trying to release an instance into a pool of a different type.') : _prodInvariant('25') : void 0;
	  instance.destructor();
	  if (Klass.instancePool.length < Klass.poolSize) {
	    Klass.instancePool.push(instance);
	  }
	};
	
	var DEFAULT_POOL_SIZE = 10;
	var DEFAULT_POOLER = oneArgumentPooler;
	
	/**
	 * Augments `CopyConstructor` to be a poolable class, augmenting only the class
	 * itself (statically) not adding any prototypical fields. Any CopyConstructor
	 * you give this may have a `poolSize` property, and will look for a
	 * prototypical `destructor` on instances.
	 *
	 * @param {Function} CopyConstructor Constructor that can be used to reset.
	 * @param {Function} pooler Customizable pooler.
	 */
	var addPoolingTo = function (CopyConstructor, pooler) {
	  // Casting as any so that flow ignores the actual implementation and trusts
	  // it to match the type we declared
	  var NewKlass = CopyConstructor;
	  NewKlass.instancePool = [];
	  NewKlass.getPooled = pooler || DEFAULT_POOLER;
	  if (!NewKlass.poolSize) {
	    NewKlass.poolSize = DEFAULT_POOL_SIZE;
	  }
	  NewKlass.release = standardReleaser;
	  return NewKlass;
	};
	
	var PooledClass = {
	  addPoolingTo: addPoolingTo,
	  oneArgumentPooler: oneArgumentPooler,
	  twoArgumentPooler: twoArgumentPooler,
	  threeArgumentPooler: threeArgumentPooler,
	  fourArgumentPooler: fourArgumentPooler
	};
	
	module.exports = PooledClass;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 51 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(48);
	
	var contentKey = null;
	
	/**
	 * Gets the key used to access text content on a DOM node.
	 *
	 * @return {?string} Key used to access text content.
	 * @internal
	 */
	function getTextContentAccessor() {
	  if (!contentKey && ExecutionEnvironment.canUseDOM) {
	    // Prefer textContent to innerText because many browsers support both but
	    // SVG <text> elements don't support innerText even when <div> does.
	    contentKey = 'textContent' in document.documentElement ? 'textContent' : 'innerText';
	  }
	  return contentKey;
	}
	
	module.exports = getTextContentAccessor;

/***/ },
/* 52 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var SyntheticEvent = __webpack_require__(53);
	
	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents
	 */
	var CompositionEventInterface = {
	  data: null
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticCompositionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticEvent.augmentClass(SyntheticCompositionEvent, CompositionEventInterface);
	
	module.exports = SyntheticCompositionEvent;

/***/ },
/* 53 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(4);
	
	var PooledClass = __webpack_require__(50);
	
	var emptyFunction = __webpack_require__(12);
	var warning = __webpack_require__(11);
	
	var didWarnForAddedNewProperty = false;
	var isProxySupported = typeof Proxy === 'function';
	
	var shouldBeReleasedProperties = ['dispatchConfig', '_targetInst', 'nativeEvent', 'isDefaultPrevented', 'isPropagationStopped', '_dispatchListeners', '_dispatchInstances'];
	
	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var EventInterface = {
	  type: null,
	  target: null,
	  // currentTarget is set when dispatching; no use in copying it here
	  currentTarget: emptyFunction.thatReturnsNull,
	  eventPhase: null,
	  bubbles: null,
	  cancelable: null,
	  timeStamp: function (event) {
	    return event.timeStamp || Date.now();
	  },
	  defaultPrevented: null,
	  isTrusted: null
	};
	
	/**
	 * Synthetic events are dispatched by event plugins, typically in response to a
	 * top-level event delegation handler.
	 *
	 * These systems should generally use pooling to reduce the frequency of garbage
	 * collection. The system should check `isPersistent` to determine whether the
	 * event should be released into the pool after being dispatched. Users that
	 * need a persisted event should invoke `persist`.
	 *
	 * Synthetic events (and subclasses) implement the DOM Level 3 Events API by
	 * normalizing browser quirks. Subclasses do not necessarily have to implement a
	 * DOM interface; custom application-specific events can also subclass this.
	 *
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {*} targetInst Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @param {DOMEventTarget} nativeEventTarget Target node.
	 */
	function SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {
	  if (process.env.NODE_ENV !== 'production') {
	    // these have a getter/setter for warnings
	    delete this.nativeEvent;
	    delete this.preventDefault;
	    delete this.stopPropagation;
	  }
	
	  this.dispatchConfig = dispatchConfig;
	  this._targetInst = targetInst;
	  this.nativeEvent = nativeEvent;
	
	  var Interface = this.constructor.Interface;
	  for (var propName in Interface) {
	    if (!Interface.hasOwnProperty(propName)) {
	      continue;
	    }
	    if (process.env.NODE_ENV !== 'production') {
	      delete this[propName]; // this has a getter/setter for warnings
	    }
	    var normalize = Interface[propName];
	    if (normalize) {
	      this[propName] = normalize(nativeEvent);
	    } else {
	      if (propName === 'target') {
	        this.target = nativeEventTarget;
	      } else {
	        this[propName] = nativeEvent[propName];
	      }
	    }
	  }
	
	  var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;
	  if (defaultPrevented) {
	    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
	  } else {
	    this.isDefaultPrevented = emptyFunction.thatReturnsFalse;
	  }
	  this.isPropagationStopped = emptyFunction.thatReturnsFalse;
	  return this;
	}
	
	_assign(SyntheticEvent.prototype, {
	
	  preventDefault: function () {
	    this.defaultPrevented = true;
	    var event = this.nativeEvent;
	    if (!event) {
	      return;
	    }
	
	    if (event.preventDefault) {
	      event.preventDefault();
	    } else if (typeof event.returnValue !== 'unknown') {
	      // eslint-disable-line valid-typeof
	      event.returnValue = false;
	    }
	    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
	  },
	
	  stopPropagation: function () {
	    var event = this.nativeEvent;
	    if (!event) {
	      return;
	    }
	
	    if (event.stopPropagation) {
	      event.stopPropagation();
	    } else if (typeof event.cancelBubble !== 'unknown') {
	      // eslint-disable-line valid-typeof
	      // The ChangeEventPlugin registers a "propertychange" event for
	      // IE. This event does not support bubbling or cancelling, and
	      // any references to cancelBubble throw "Member not found".  A
	      // typeof check of "unknown" circumvents this issue (and is also
	      // IE specific).
	      event.cancelBubble = true;
	    }
	
	    this.isPropagationStopped = emptyFunction.thatReturnsTrue;
	  },
	
	  /**
	   * We release all dispatched `SyntheticEvent`s after each event loop, adding
	   * them back into the pool. This allows a way to hold onto a reference that
	   * won't be added back into the pool.
	   */
	  persist: function () {
	    this.isPersistent = emptyFunction.thatReturnsTrue;
	  },
	
	  /**
	   * Checks if this event should be released back into the pool.
	   *
	   * @return {boolean} True if this should not be released, false otherwise.
	   */
	  isPersistent: emptyFunction.thatReturnsFalse,
	
	  /**
	   * `PooledClass` looks for `destructor` on each instance it releases.
	   */
	  destructor: function () {
	    var Interface = this.constructor.Interface;
	    for (var propName in Interface) {
	      if (process.env.NODE_ENV !== 'production') {
	        Object.defineProperty(this, propName, getPooledWarningPropertyDefinition(propName, Interface[propName]));
	      } else {
	        this[propName] = null;
	      }
	    }
	    for (var i = 0; i < shouldBeReleasedProperties.length; i++) {
	      this[shouldBeReleasedProperties[i]] = null;
	    }
	    if (process.env.NODE_ENV !== 'production') {
	      Object.defineProperty(this, 'nativeEvent', getPooledWarningPropertyDefinition('nativeEvent', null));
	      Object.defineProperty(this, 'preventDefault', getPooledWarningPropertyDefinition('preventDefault', emptyFunction));
	      Object.defineProperty(this, 'stopPropagation', getPooledWarningPropertyDefinition('stopPropagation', emptyFunction));
	    }
	  }
	
	});
	
	SyntheticEvent.Interface = EventInterface;
	
	if (process.env.NODE_ENV !== 'production') {
	  if (isProxySupported) {
	    /*eslint-disable no-func-assign */
	    SyntheticEvent = new Proxy(SyntheticEvent, {
	      construct: function (target, args) {
	        return this.apply(target, Object.create(target.prototype), args);
	      },
	      apply: function (constructor, that, args) {
	        return new Proxy(constructor.apply(that, args), {
	          set: function (target, prop, value) {
	            if (prop !== 'isPersistent' && !target.constructor.Interface.hasOwnProperty(prop) && shouldBeReleasedProperties.indexOf(prop) === -1) {
	              process.env.NODE_ENV !== 'production' ? warning(didWarnForAddedNewProperty || target.isPersistent(), 'This synthetic event is reused for performance reasons. If you\'re ' + 'seeing this, you\'re adding a new property in the synthetic event object. ' + 'The property is never released. See ' + 'https://fb.me/react-event-pooling for more information.') : void 0;
	              didWarnForAddedNewProperty = true;
	            }
	            target[prop] = value;
	            return true;
	          }
	        });
	      }
	    });
	    /*eslint-enable no-func-assign */
	  }
	}
	/**
	 * Helper to reduce boilerplate when creating subclasses.
	 *
	 * @param {function} Class
	 * @param {?object} Interface
	 */
	SyntheticEvent.augmentClass = function (Class, Interface) {
	  var Super = this;
	
	  var E = function () {};
	  E.prototype = Super.prototype;
	  var prototype = new E();
	
	  _assign(prototype, Class.prototype);
	  Class.prototype = prototype;
	  Class.prototype.constructor = Class;
	
	  Class.Interface = _assign({}, Super.Interface, Interface);
	  Class.augmentClass = Super.augmentClass;
	
	  PooledClass.addPoolingTo(Class, PooledClass.fourArgumentPooler);
	};
	
	PooledClass.addPoolingTo(SyntheticEvent, PooledClass.fourArgumentPooler);
	
	module.exports = SyntheticEvent;
	
	/**
	  * Helper to nullify syntheticEvent instance properties when destructing
	  *
	  * @param {object} SyntheticEvent
	  * @param {String} propName
	  * @return {object} defineProperty object
	  */
	function getPooledWarningPropertyDefinition(propName, getVal) {
	  var isFunction = typeof getVal === 'function';
	  return {
	    configurable: true,
	    set: set,
	    get: get
	  };
	
	  function set(val) {
	    var action = isFunction ? 'setting the method' : 'setting the property';
	    warn(action, 'This is effectively a no-op');
	    return val;
	  }
	
	  function get() {
	    var action = isFunction ? 'accessing the method' : 'accessing the property';
	    var result = isFunction ? 'This is a no-op function' : 'This is set to null';
	    warn(action, result);
	    return getVal;
	  }
	
	  function warn(action, result) {
	    var warningCondition = false;
	    process.env.NODE_ENV !== 'production' ? warning(warningCondition, 'This synthetic event is reused for performance reasons. If you\'re seeing this, ' + 'you\'re %s `%s` on a released/nullified synthetic event. %s. ' + 'If you must keep the original synthetic event around, use event.persist(). ' + 'See https://fb.me/react-event-pooling for more information.', action, propName, result) : void 0;
	  }
	}
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 54 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var SyntheticEvent = __webpack_require__(53);
	
	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105
	 *      /#events-inputevents
	 */
	var InputEventInterface = {
	  data: null
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticInputEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticEvent.augmentClass(SyntheticInputEvent, InputEventInterface);
	
	module.exports = SyntheticInputEvent;

/***/ },
/* 55 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var EventPluginHub = __webpack_require__(42);
	var EventPropagators = __webpack_require__(41);
	var ExecutionEnvironment = __webpack_require__(48);
	var ReactDOMComponentTree = __webpack_require__(34);
	var ReactUpdates = __webpack_require__(56);
	var SyntheticEvent = __webpack_require__(53);
	
	var getEventTarget = __webpack_require__(69);
	var isEventSupported = __webpack_require__(70);
	var isTextInputElement = __webpack_require__(71);
	
	var eventTypes = {
	  change: {
	    phasedRegistrationNames: {
	      bubbled: 'onChange',
	      captured: 'onChangeCapture'
	    },
	    dependencies: ['topBlur', 'topChange', 'topClick', 'topFocus', 'topInput', 'topKeyDown', 'topKeyUp', 'topSelectionChange']
	  }
	};
	
	/**
	 * For IE shims
	 */
	var activeElement = null;
	var activeElementInst = null;
	var activeElementValue = null;
	var activeElementValueProp = null;
	
	/**
	 * SECTION: handle `change` event
	 */
	function shouldUseChangeEvent(elem) {
	  var nodeName = elem.nodeName && elem.nodeName.toLowerCase();
	  return nodeName === 'select' || nodeName === 'input' && elem.type === 'file';
	}
	
	var doesChangeEventBubble = false;
	if (ExecutionEnvironment.canUseDOM) {
	  // See `handleChange` comment below
	  doesChangeEventBubble = isEventSupported('change') && (!document.documentMode || document.documentMode > 8);
	}
	
	function manualDispatchChangeEvent(nativeEvent) {
	  var event = SyntheticEvent.getPooled(eventTypes.change, activeElementInst, nativeEvent, getEventTarget(nativeEvent));
	  EventPropagators.accumulateTwoPhaseDispatches(event);
	
	  // If change and propertychange bubbled, we'd just bind to it like all the
	  // other events and have it go through ReactBrowserEventEmitter. Since it
	  // doesn't, we manually listen for the events and so we have to enqueue and
	  // process the abstract event manually.
	  //
	  // Batching is necessary here in order to ensure that all event handlers run
	  // before the next rerender (including event handlers attached to ancestor
	  // elements instead of directly on the input). Without this, controlled
	  // components don't work properly in conjunction with event bubbling because
	  // the component is rerendered and the value reverted before all the event
	  // handlers can run. See https://github.com/facebook/react/issues/708.
	  ReactUpdates.batchedUpdates(runEventInBatch, event);
	}
	
	function runEventInBatch(event) {
	  EventPluginHub.enqueueEvents(event);
	  EventPluginHub.processEventQueue(false);
	}
	
	function startWatchingForChangeEventIE8(target, targetInst) {
	  activeElement = target;
	  activeElementInst = targetInst;
	  activeElement.attachEvent('onchange', manualDispatchChangeEvent);
	}
	
	function stopWatchingForChangeEventIE8() {
	  if (!activeElement) {
	    return;
	  }
	  activeElement.detachEvent('onchange', manualDispatchChangeEvent);
	  activeElement = null;
	  activeElementInst = null;
	}
	
	function getTargetInstForChangeEvent(topLevelType, targetInst) {
	  if (topLevelType === 'topChange') {
	    return targetInst;
	  }
	}
	function handleEventsForChangeEventIE8(topLevelType, target, targetInst) {
	  if (topLevelType === 'topFocus') {
	    // stopWatching() should be a noop here but we call it just in case we
	    // missed a blur event somehow.
	    stopWatchingForChangeEventIE8();
	    startWatchingForChangeEventIE8(target, targetInst);
	  } else if (topLevelType === 'topBlur') {
	    stopWatchingForChangeEventIE8();
	  }
	}
	
	/**
	 * SECTION: handle `input` event
	 */
	var isInputEventSupported = false;
	if (ExecutionEnvironment.canUseDOM) {
	  // IE9 claims to support the input event but fails to trigger it when
	  // deleting text, so we ignore its input events.
	  // IE10+ fire input events to often, such when a placeholder
	  // changes or when an input with a placeholder is focused.
	  isInputEventSupported = isEventSupported('input') && (!document.documentMode || document.documentMode > 11);
	}
	
	/**
	 * (For IE <=11) Replacement getter/setter for the `value` property that gets
	 * set on the active element.
	 */
	var newValueProp = {
	  get: function () {
	    return activeElementValueProp.get.call(this);
	  },
	  set: function (val) {
	    // Cast to a string so we can do equality checks.
	    activeElementValue = '' + val;
	    activeElementValueProp.set.call(this, val);
	  }
	};
	
	/**
	 * (For IE <=11) Starts tracking propertychange events on the passed-in element
	 * and override the value property so that we can distinguish user events from
	 * value changes in JS.
	 */
	function startWatchingForValueChange(target, targetInst) {
	  activeElement = target;
	  activeElementInst = targetInst;
	  activeElementValue = target.value;
	  activeElementValueProp = Object.getOwnPropertyDescriptor(target.constructor.prototype, 'value');
	
	  // Not guarded in a canDefineProperty check: IE8 supports defineProperty only
	  // on DOM elements
	  Object.defineProperty(activeElement, 'value', newValueProp);
	  if (activeElement.attachEvent) {
	    activeElement.attachEvent('onpropertychange', handlePropertyChange);
	  } else {
	    activeElement.addEventListener('propertychange', handlePropertyChange, false);
	  }
	}
	
	/**
	 * (For IE <=11) Removes the event listeners from the currently-tracked element,
	 * if any exists.
	 */
	function stopWatchingForValueChange() {
	  if (!activeElement) {
	    return;
	  }
	
	  // delete restores the original property definition
	  delete activeElement.value;
	
	  if (activeElement.detachEvent) {
	    activeElement.detachEvent('onpropertychange', handlePropertyChange);
	  } else {
	    activeElement.removeEventListener('propertychange', handlePropertyChange, false);
	  }
	
	  activeElement = null;
	  activeElementInst = null;
	  activeElementValue = null;
	  activeElementValueProp = null;
	}
	
	/**
	 * (For IE <=11) Handles a propertychange event, sending a `change` event if
	 * the value of the active element has changed.
	 */
	function handlePropertyChange(nativeEvent) {
	  if (nativeEvent.propertyName !== 'value') {
	    return;
	  }
	  var value = nativeEvent.srcElement.value;
	  if (value === activeElementValue) {
	    return;
	  }
	  activeElementValue = value;
	
	  manualDispatchChangeEvent(nativeEvent);
	}
	
	/**
	 * If a `change` event should be fired, returns the target's ID.
	 */
	function getTargetInstForInputEvent(topLevelType, targetInst) {
	  if (topLevelType === 'topInput') {
	    // In modern browsers (i.e., not IE8 or IE9), the input event is exactly
	    // what we want so fall through here and trigger an abstract event
	    return targetInst;
	  }
	}
	
	function handleEventsForInputEventIE(topLevelType, target, targetInst) {
	  if (topLevelType === 'topFocus') {
	    // In IE8, we can capture almost all .value changes by adding a
	    // propertychange handler and looking for events with propertyName
	    // equal to 'value'
	    // In IE9-11, propertychange fires for most input events but is buggy and
	    // doesn't fire when text is deleted, but conveniently, selectionchange
	    // appears to fire in all of the remaining cases so we catch those and
	    // forward the event if the value has changed
	    // In either case, we don't want to call the event handler if the value
	    // is changed from JS so we redefine a setter for `.value` that updates
	    // our activeElementValue variable, allowing us to ignore those changes
	    //
	    // stopWatching() should be a noop here but we call it just in case we
	    // missed a blur event somehow.
	    stopWatchingForValueChange();
	    startWatchingForValueChange(target, targetInst);
	  } else if (topLevelType === 'topBlur') {
	    stopWatchingForValueChange();
	  }
	}
	
	// For IE8 and IE9.
	function getTargetInstForInputEventIE(topLevelType, targetInst) {
	  if (topLevelType === 'topSelectionChange' || topLevelType === 'topKeyUp' || topLevelType === 'topKeyDown') {
	    // On the selectionchange event, the target is just document which isn't
	    // helpful for us so just check activeElement instead.
	    //
	    // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire
	    // propertychange on the first input event after setting `value` from a
	    // script and fires only keydown, keypress, keyup. Catching keyup usually
	    // gets it and catching keydown lets us fire an event for the first
	    // keystroke if user does a key repeat (it'll be a little delayed: right
	    // before the second keystroke). Other input methods (e.g., paste) seem to
	    // fire selectionchange normally.
	    if (activeElement && activeElement.value !== activeElementValue) {
	      activeElementValue = activeElement.value;
	      return activeElementInst;
	    }
	  }
	}
	
	/**
	 * SECTION: handle `click` event
	 */
	function shouldUseClickEvent(elem) {
	  // Use the `click` event to detect changes to checkbox and radio inputs.
	  // This approach works across all browsers, whereas `change` does not fire
	  // until `blur` in IE8.
	  return elem.nodeName && elem.nodeName.toLowerCase() === 'input' && (elem.type === 'checkbox' || elem.type === 'radio');
	}
	
	function getTargetInstForClickEvent(topLevelType, targetInst) {
	  if (topLevelType === 'topClick') {
	    return targetInst;
	  }
	}
	
	/**
	 * This plugin creates an `onChange` event that normalizes change events
	 * across form elements. This event fires at a time when it's possible to
	 * change the element's value without seeing a flicker.
	 *
	 * Supported elements are:
	 * - input (see `isTextInputElement`)
	 * - textarea
	 * - select
	 */
	var ChangeEventPlugin = {
	
	  eventTypes: eventTypes,
	
	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;
	
	    var getTargetInstFunc, handleEventFunc;
	    if (shouldUseChangeEvent(targetNode)) {
	      if (doesChangeEventBubble) {
	        getTargetInstFunc = getTargetInstForChangeEvent;
	      } else {
	        handleEventFunc = handleEventsForChangeEventIE8;
	      }
	    } else if (isTextInputElement(targetNode)) {
	      if (isInputEventSupported) {
	        getTargetInstFunc = getTargetInstForInputEvent;
	      } else {
	        getTargetInstFunc = getTargetInstForInputEventIE;
	        handleEventFunc = handleEventsForInputEventIE;
	      }
	    } else if (shouldUseClickEvent(targetNode)) {
	      getTargetInstFunc = getTargetInstForClickEvent;
	    }
	
	    if (getTargetInstFunc) {
	      var inst = getTargetInstFunc(topLevelType, targetInst);
	      if (inst) {
	        var event = SyntheticEvent.getPooled(eventTypes.change, inst, nativeEvent, nativeEventTarget);
	        event.type = 'change';
	        EventPropagators.accumulateTwoPhaseDispatches(event);
	        return event;
	      }
	    }
	
	    if (handleEventFunc) {
	      handleEventFunc(topLevelType, targetNode, targetInst);
	    }
	  }
	
	};
	
	module.exports = ChangeEventPlugin;

/***/ },
/* 56 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(35),
	    _assign = __webpack_require__(4);
	
	var CallbackQueue = __webpack_require__(57);
	var PooledClass = __webpack_require__(50);
	var ReactFeatureFlags = __webpack_require__(58);
	var ReactReconciler = __webpack_require__(59);
	var Transaction = __webpack_require__(68);
	
	var invariant = __webpack_require__(8);
	
	var dirtyComponents = [];
	var updateBatchNumber = 0;
	var asapCallbackQueue = CallbackQueue.getPooled();
	var asapEnqueued = false;
	
	var batchingStrategy = null;
	
	function ensureInjected() {
	  !(ReactUpdates.ReactReconcileTransaction && batchingStrategy) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must inject a reconcile transaction class and batching strategy') : _prodInvariant('123') : void 0;
	}
	
	var NESTED_UPDATES = {
	  initialize: function () {
	    this.dirtyComponentsLength = dirtyComponents.length;
	  },
	  close: function () {
	    if (this.dirtyComponentsLength !== dirtyComponents.length) {
	      // Additional updates were enqueued by componentDidUpdate handlers or
	      // similar; before our own UPDATE_QUEUEING wrapper closes, we want to run
	      // these new updates so that if A's componentDidUpdate calls setState on
	      // B, B will update before the callback A's updater provided when calling
	      // setState.
	      dirtyComponents.splice(0, this.dirtyComponentsLength);
	      flushBatchedUpdates();
	    } else {
	      dirtyComponents.length = 0;
	    }
	  }
	};
	
	var UPDATE_QUEUEING = {
	  initialize: function () {
	    this.callbackQueue.reset();
	  },
	  close: function () {
	    this.callbackQueue.notifyAll();
	  }
	};
	
	var TRANSACTION_WRAPPERS = [NESTED_UPDATES, UPDATE_QUEUEING];
	
	function ReactUpdatesFlushTransaction() {
	  this.reinitializeTransaction();
	  this.dirtyComponentsLength = null;
	  this.callbackQueue = CallbackQueue.getPooled();
	  this.reconcileTransaction = ReactUpdates.ReactReconcileTransaction.getPooled(
	  /* useCreateElement */true);
	}
	
	_assign(ReactUpdatesFlushTransaction.prototype, Transaction, {
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  },
	
	  destructor: function () {
	    this.dirtyComponentsLength = null;
	    CallbackQueue.release(this.callbackQueue);
	    this.callbackQueue = null;
	    ReactUpdates.ReactReconcileTransaction.release(this.reconcileTransaction);
	    this.reconcileTransaction = null;
	  },
	
	  perform: function (method, scope, a) {
	    // Essentially calls `this.reconcileTransaction.perform(method, scope, a)`
	    // with this transaction's wrappers around it.
	    return Transaction.perform.call(this, this.reconcileTransaction.perform, this.reconcileTransaction, method, scope, a);
	  }
	});
	
	PooledClass.addPoolingTo(ReactUpdatesFlushTransaction);
	
	function batchedUpdates(callback, a, b, c, d, e) {
	  ensureInjected();
	  return batchingStrategy.batchedUpdates(callback, a, b, c, d, e);
	}
	
	/**
	 * Array comparator for ReactComponents by mount ordering.
	 *
	 * @param {ReactComponent} c1 first component you're comparing
	 * @param {ReactComponent} c2 second component you're comparing
	 * @return {number} Return value usable by Array.prototype.sort().
	 */
	function mountOrderComparator(c1, c2) {
	  return c1._mountOrder - c2._mountOrder;
	}
	
	function runBatchedUpdates(transaction) {
	  var len = transaction.dirtyComponentsLength;
	  !(len === dirtyComponents.length) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected flush transaction\'s stored dirty-components length (%s) to match dirty-components array length (%s).', len, dirtyComponents.length) : _prodInvariant('124', len, dirtyComponents.length) : void 0;
	
	  // Since reconciling a component higher in the owner hierarchy usually (not
	  // always -- see shouldComponentUpdate()) will reconcile children, reconcile
	  // them before their children by sorting the array.
	  dirtyComponents.sort(mountOrderComparator);
	
	  // Any updates enqueued while reconciling must be performed after this entire
	  // batch. Otherwise, if dirtyComponents is [A, B] where A has children B and
	  // C, B could update twice in a single batch if C's render enqueues an update
	  // to B (since B would have already updated, we should skip it, and the only
	  // way we can know to do so is by checking the batch counter).
	  updateBatchNumber++;
	
	  for (var i = 0; i < len; i++) {
	    // If a component is unmounted before pending changes apply, it will still
	    // be here, but we assume that it has cleared its _pendingCallbacks and
	    // that performUpdateIfNecessary is a noop.
	    var component = dirtyComponents[i];
	
	    // If performUpdateIfNecessary happens to enqueue any new updates, we
	    // shouldn't execute the callbacks until the next render happens, so
	    // stash the callbacks first
	    var callbacks = component._pendingCallbacks;
	    component._pendingCallbacks = null;
	
	    var markerName;
	    if (ReactFeatureFlags.logTopLevelRenders) {
	      var namedComponent = component;
	      // Duck type TopLevelWrapper. This is probably always true.
	      if (component._currentElement.type.isReactTopLevelWrapper) {
	        namedComponent = component._renderedComponent;
	      }
	      markerName = 'React update: ' + namedComponent.getName();
	      console.time(markerName);
	    }
	
	    ReactReconciler.performUpdateIfNecessary(component, transaction.reconcileTransaction, updateBatchNumber);
	
	    if (markerName) {
	      console.timeEnd(markerName);
	    }
	
	    if (callbacks) {
	      for (var j = 0; j < callbacks.length; j++) {
	        transaction.callbackQueue.enqueue(callbacks[j], component.getPublicInstance());
	      }
	    }
	  }
	}
	
	var flushBatchedUpdates = function () {
	  // ReactUpdatesFlushTransaction's wrappers will clear the dirtyComponents
	  // array and perform any updates enqueued by mount-ready handlers (i.e.,
	  // componentDidUpdate) but we need to check here too in order to catch
	  // updates enqueued by setState callbacks and asap calls.
	  while (dirtyComponents.length || asapEnqueued) {
	    if (dirtyComponents.length) {
	      var transaction = ReactUpdatesFlushTransaction.getPooled();
	      transaction.perform(runBatchedUpdates, null, transaction);
	      ReactUpdatesFlushTransaction.release(transaction);
	    }
	
	    if (asapEnqueued) {
	      asapEnqueued = false;
	      var queue = asapCallbackQueue;
	      asapCallbackQueue = CallbackQueue.getPooled();
	      queue.notifyAll();
	      CallbackQueue.release(queue);
	    }
	  }
	};
	
	/**
	 * Mark a component as needing a rerender, adding an optional callback to a
	 * list of functions which will be executed once the rerender occurs.
	 */
	function enqueueUpdate(component) {
	  ensureInjected();
	
	  // Various parts of our code (such as ReactCompositeComponent's
	  // _renderValidatedComponent) assume that calls to render aren't nested;
	  // verify that that's the case. (This is called by each top-level update
	  // function, like setState, forceUpdate, etc.; creation and
	  // destruction of top-level components is guarded in ReactMount.)
	
	  if (!batchingStrategy.isBatchingUpdates) {
	    batchingStrategy.batchedUpdates(enqueueUpdate, component);
	    return;
	  }
	
	  dirtyComponents.push(component);
	  if (component._updateBatchNumber == null) {
	    component._updateBatchNumber = updateBatchNumber + 1;
	  }
	}
	
	/**
	 * Enqueue a callback to be run at the end of the current batching cycle. Throws
	 * if no updates are currently being performed.
	 */
	function asap(callback, context) {
	  !batchingStrategy.isBatchingUpdates ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates.asap: Can\'t enqueue an asap callback in a context whereupdates are not being batched.') : _prodInvariant('125') : void 0;
	  asapCallbackQueue.enqueue(callback, context);
	  asapEnqueued = true;
	}
	
	var ReactUpdatesInjection = {
	  injectReconcileTransaction: function (ReconcileTransaction) {
	    !ReconcileTransaction ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a reconcile transaction class') : _prodInvariant('126') : void 0;
	    ReactUpdates.ReactReconcileTransaction = ReconcileTransaction;
	  },
	
	  injectBatchingStrategy: function (_batchingStrategy) {
	    !_batchingStrategy ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a batching strategy') : _prodInvariant('127') : void 0;
	    !(typeof _batchingStrategy.batchedUpdates === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a batchedUpdates() function') : _prodInvariant('128') : void 0;
	    !(typeof _batchingStrategy.isBatchingUpdates === 'boolean') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide an isBatchingUpdates boolean attribute') : _prodInvariant('129') : void 0;
	    batchingStrategy = _batchingStrategy;
	  }
	};
	
	var ReactUpdates = {
	  /**
	   * React references `ReactReconcileTransaction` using this property in order
	   * to allow dependency injection.
	   *
	   * @internal
	   */
	  ReactReconcileTransaction: null,
	
	  batchedUpdates: batchedUpdates,
	  enqueueUpdate: enqueueUpdate,
	  flushBatchedUpdates: flushBatchedUpdates,
	  injection: ReactUpdatesInjection,
	  asap: asap
	};
	
	module.exports = ReactUpdates;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 57 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(35);
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var PooledClass = __webpack_require__(50);
	
	var invariant = __webpack_require__(8);
	
	/**
	 * A specialized pseudo-event module to help keep track of components waiting to
	 * be notified when their DOM representations are available for use.
	 *
	 * This implements `PooledClass`, so you should never need to instantiate this.
	 * Instead, use `CallbackQueue.getPooled()`.
	 *
	 * @class ReactMountReady
	 * @implements PooledClass
	 * @internal
	 */
	
	var CallbackQueue = function () {
	  function CallbackQueue(arg) {
	    _classCallCheck(this, CallbackQueue);
	
	    this._callbacks = null;
	    this._contexts = null;
	    this._arg = arg;
	  }
	
	  /**
	   * Enqueues a callback to be invoked when `notifyAll` is invoked.
	   *
	   * @param {function} callback Invoked when `notifyAll` is invoked.
	   * @param {?object} context Context to call `callback` with.
	   * @internal
	   */
	
	
	  CallbackQueue.prototype.enqueue = function enqueue(callback, context) {
	    this._callbacks = this._callbacks || [];
	    this._callbacks.push(callback);
	    this._contexts = this._contexts || [];
	    this._contexts.push(context);
	  };
	
	  /**
	   * Invokes all enqueued callbacks and clears the queue. This is invoked after
	   * the DOM representation of a component has been created or updated.
	   *
	   * @internal
	   */
	
	
	  CallbackQueue.prototype.notifyAll = function notifyAll() {
	    var callbacks = this._callbacks;
	    var contexts = this._contexts;
	    var arg = this._arg;
	    if (callbacks && contexts) {
	      !(callbacks.length === contexts.length) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Mismatched list of contexts in callback queue') : _prodInvariant('24') : void 0;
	      this._callbacks = null;
	      this._contexts = null;
	      for (var i = 0; i < callbacks.length; i++) {
	        callbacks[i].call(contexts[i], arg);
	      }
	      callbacks.length = 0;
	      contexts.length = 0;
	    }
	  };
	
	  CallbackQueue.prototype.checkpoint = function checkpoint() {
	    return this._callbacks ? this._callbacks.length : 0;
	  };
	
	  CallbackQueue.prototype.rollback = function rollback(len) {
	    if (this._callbacks && this._contexts) {
	      this._callbacks.length = len;
	      this._contexts.length = len;
	    }
	  };
	
	  /**
	   * Resets the internal queue.
	   *
	   * @internal
	   */
	
	
	  CallbackQueue.prototype.reset = function reset() {
	    this._callbacks = null;
	    this._contexts = null;
	  };
	
	  /**
	   * `PooledClass` looks for this.
	   */
	
	
	  CallbackQueue.prototype.destructor = function destructor() {
	    this.reset();
	  };
	
	  return CallbackQueue;
	}();
	
	module.exports = PooledClass.addPoolingTo(CallbackQueue);
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 58 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var ReactFeatureFlags = {
	  // When true, call console.time() before and .timeEnd() after each top-level
	  // render (both initial renders and updates). Useful when looking at prod-mode
	  // timeline profiles in Chrome, for example.
	  logTopLevelRenders: false
	};
	
	module.exports = ReactFeatureFlags;

/***/ },
/* 59 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var ReactRef = __webpack_require__(60);
	var ReactInstrumentation = __webpack_require__(62);
	
	var warning = __webpack_require__(11);
	
	/**
	 * Helper to call ReactRef.attachRefs with this composite component, split out
	 * to avoid allocations in the transaction mount-ready queue.
	 */
	function attachRefs() {
	  ReactRef.attachRefs(this, this._currentElement);
	}
	
	var ReactReconciler = {
	
	  /**
	   * Initializes the component, renders markup, and registers event listeners.
	   *
	   * @param {ReactComponent} internalInstance
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {?object} the containing host component instance
	   * @param {?object} info about the host container
	   * @return {?string} Rendered markup to be inserted into the DOM.
	   * @final
	   * @internal
	   */
	  mountComponent: function (internalInstance, transaction, hostParent, hostContainerInfo, context, parentDebugID // 0 in production and for roots
	  ) {
	    if (process.env.NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onBeforeMountComponent(internalInstance._debugID, internalInstance._currentElement, parentDebugID);
	      }
	    }
	    var markup = internalInstance.mountComponent(transaction, hostParent, hostContainerInfo, context, parentDebugID);
	    if (internalInstance._currentElement && internalInstance._currentElement.ref != null) {
	      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
	    }
	    if (process.env.NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onMountComponent(internalInstance._debugID);
	      }
	    }
	    return markup;
	  },
	
	  /**
	   * Returns a value that can be passed to
	   * ReactComponentEnvironment.replaceNodeWithMarkup.
	   */
	  getHostNode: function (internalInstance) {
	    return internalInstance.getHostNode();
	  },
	
	  /**
	   * Releases any resources allocated by `mountComponent`.
	   *
	   * @final
	   * @internal
	   */
	  unmountComponent: function (internalInstance, safely) {
	    if (process.env.NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onBeforeUnmountComponent(internalInstance._debugID);
	      }
	    }
	    ReactRef.detachRefs(internalInstance, internalInstance._currentElement);
	    internalInstance.unmountComponent(safely);
	    if (process.env.NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onUnmountComponent(internalInstance._debugID);
	      }
	    }
	  },
	
	  /**
	   * Update a component using a new element.
	   *
	   * @param {ReactComponent} internalInstance
	   * @param {ReactElement} nextElement
	   * @param {ReactReconcileTransaction} transaction
	   * @param {object} context
	   * @internal
	   */
	  receiveComponent: function (internalInstance, nextElement, transaction, context) {
	    var prevElement = internalInstance._currentElement;
	
	    if (nextElement === prevElement && context === internalInstance._context) {
	      // Since elements are immutable after the owner is rendered,
	      // we can do a cheap identity compare here to determine if this is a
	      // superfluous reconcile. It's possible for state to be mutable but such
	      // change should trigger an update of the owner which would recreate
	      // the element. We explicitly check for the existence of an owner since
	      // it's possible for an element created outside a composite to be
	      // deeply mutated and reused.
	
	      // TODO: Bailing out early is just a perf optimization right?
	      // TODO: Removing the return statement should affect correctness?
	      return;
	    }
	
	    if (process.env.NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onBeforeUpdateComponent(internalInstance._debugID, nextElement);
	      }
	    }
	
	    var refsChanged = ReactRef.shouldUpdateRefs(prevElement, nextElement);
	
	    if (refsChanged) {
	      ReactRef.detachRefs(internalInstance, prevElement);
	    }
	
	    internalInstance.receiveComponent(nextElement, transaction, context);
	
	    if (refsChanged && internalInstance._currentElement && internalInstance._currentElement.ref != null) {
	      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
	    }
	
	    if (process.env.NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);
	      }
	    }
	  },
	
	  /**
	   * Flush any dirty changes in a component.
	   *
	   * @param {ReactComponent} internalInstance
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  performUpdateIfNecessary: function (internalInstance, transaction, updateBatchNumber) {
	    if (internalInstance._updateBatchNumber !== updateBatchNumber) {
	      // The component's enqueued batch number should always be the current
	      // batch or the following one.
	      process.env.NODE_ENV !== 'production' ? warning(internalInstance._updateBatchNumber == null || internalInstance._updateBatchNumber === updateBatchNumber + 1, 'performUpdateIfNecessary: Unexpected batch number (current %s, ' + 'pending %s)', updateBatchNumber, internalInstance._updateBatchNumber) : void 0;
	      return;
	    }
	    if (process.env.NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onBeforeUpdateComponent(internalInstance._debugID, internalInstance._currentElement);
	      }
	    }
	    internalInstance.performUpdateIfNecessary(transaction);
	    if (process.env.NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);
	      }
	    }
	  }
	
	};
	
	module.exports = ReactReconciler;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 60 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var ReactOwner = __webpack_require__(61);
	
	var ReactRef = {};
	
	function attachRef(ref, component, owner) {
	  if (typeof ref === 'function') {
	    ref(component.getPublicInstance());
	  } else {
	    // Legacy ref
	    ReactOwner.addComponentAsRefTo(component, ref, owner);
	  }
	}
	
	function detachRef(ref, component, owner) {
	  if (typeof ref === 'function') {
	    ref(null);
	  } else {
	    // Legacy ref
	    ReactOwner.removeComponentAsRefFrom(component, ref, owner);
	  }
	}
	
	ReactRef.attachRefs = function (instance, element) {
	  if (element === null || typeof element !== 'object') {
	    return;
	  }
	  var ref = element.ref;
	  if (ref != null) {
	    attachRef(ref, instance, element._owner);
	  }
	};
	
	ReactRef.shouldUpdateRefs = function (prevElement, nextElement) {
	  // If either the owner or a `ref` has changed, make sure the newest owner
	  // has stored a reference to `this`, and the previous owner (if different)
	  // has forgotten the reference to `this`. We use the element instead
	  // of the public this.props because the post processing cannot determine
	  // a ref. The ref conceptually lives on the element.
	
	  // TODO: Should this even be possible? The owner cannot change because
	  // it's forbidden by shouldUpdateReactComponent. The ref can change
	  // if you swap the keys of but not the refs. Reconsider where this check
	  // is made. It probably belongs where the key checking and
	  // instantiateReactComponent is done.
	
	  var prevRef = null;
	  var prevOwner = null;
	  if (prevElement !== null && typeof prevElement === 'object') {
	    prevRef = prevElement.ref;
	    prevOwner = prevElement._owner;
	  }
	
	  var nextRef = null;
	  var nextOwner = null;
	  if (nextElement !== null && typeof nextElement === 'object') {
	    nextRef = nextElement.ref;
	    nextOwner = nextElement._owner;
	  }
	
	  return prevRef !== nextRef ||
	  // If owner changes but we have an unchanged function ref, don't update refs
	  typeof nextRef === 'string' && nextOwner !== prevOwner;
	};
	
	ReactRef.detachRefs = function (instance, element) {
	  if (element === null || typeof element !== 'object') {
	    return;
	  }
	  var ref = element.ref;
	  if (ref != null) {
	    detachRef(ref, instance, element._owner);
	  }
	};
	
	module.exports = ReactRef;

/***/ },
/* 61 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(35);
	
	var invariant = __webpack_require__(8);
	
	/**
	 * @param {?object} object
	 * @return {boolean} True if `object` is a valid owner.
	 * @final
	 */
	function isValidOwner(object) {
	  return !!(object && typeof object.attachRef === 'function' && typeof object.detachRef === 'function');
	}
	
	/**
	 * ReactOwners are capable of storing references to owned components.
	 *
	 * All components are capable of //being// referenced by owner components, but
	 * only ReactOwner components are capable of //referencing// owned components.
	 * The named reference is known as a "ref".
	 *
	 * Refs are available when mounted and updated during reconciliation.
	 *
	 *   var MyComponent = React.createClass({
	 *     render: function() {
	 *       return (
	 *         <div onClick={this.handleClick}>
	 *           <CustomComponent ref="custom" />
	 *         </div>
	 *       );
	 *     },
	 *     handleClick: function() {
	 *       this.refs.custom.handleClick();
	 *     },
	 *     componentDidMount: function() {
	 *       this.refs.custom.initialize();
	 *     }
	 *   });
	 *
	 * Refs should rarely be used. When refs are used, they should only be done to
	 * control data that is not handled by React's data flow.
	 *
	 * @class ReactOwner
	 */
	var ReactOwner = {
	  /**
	   * Adds a component by ref to an owner component.
	   *
	   * @param {ReactComponent} component Component to reference.
	   * @param {string} ref Name by which to refer to the component.
	   * @param {ReactOwner} owner Component on which to record the ref.
	   * @final
	   * @internal
	   */
	  addComponentAsRefTo: function (component, ref, owner) {
	    !isValidOwner(owner) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'addComponentAsRefTo(...): Only a ReactOwner can have refs. You might be adding a ref to a component that was not created inside a component\'s `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner).') : _prodInvariant('119') : void 0;
	    owner.attachRef(ref, component);
	  },
	
	  /**
	   * Removes a component by ref from an owner component.
	   *
	   * @param {ReactComponent} component Component to dereference.
	   * @param {string} ref Name of the ref to remove.
	   * @param {ReactOwner} owner Component on which the ref is recorded.
	   * @final
	   * @internal
	   */
	  removeComponentAsRefFrom: function (component, ref, owner) {
	    !isValidOwner(owner) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'removeComponentAsRefFrom(...): Only a ReactOwner can have refs. You might be removing a ref to a component that was not created inside a component\'s `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner).') : _prodInvariant('120') : void 0;
	    var ownerPublicInstance = owner.getPublicInstance();
	    // Check that `component`'s owner is still alive and that `component` is still the current ref
	    // because we do not want to detach the ref if another component stole it.
	    if (ownerPublicInstance && ownerPublicInstance.refs[ref] === component.getPublicInstance()) {
	      owner.detachRef(ref);
	    }
	  }
	
	};
	
	module.exports = ReactOwner;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 62 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2016-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	// Trust the developer to only use ReactInstrumentation with a __DEV__ check
	
	var debugTool = null;
	
	if (process.env.NODE_ENV !== 'production') {
	  var ReactDebugTool = __webpack_require__(63);
	  debugTool = ReactDebugTool;
	}
	
	module.exports = { debugTool: debugTool };
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 63 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2016-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var ReactInvalidSetStateWarningHook = __webpack_require__(64);
	var ReactHostOperationHistoryHook = __webpack_require__(65);
	var ReactComponentTreeHook = __webpack_require__(26);
	var ExecutionEnvironment = __webpack_require__(48);
	
	var performanceNow = __webpack_require__(66);
	var warning = __webpack_require__(11);
	
	var hooks = [];
	var didHookThrowForEvent = {};
	
	function callHook(event, fn, context, arg1, arg2, arg3, arg4, arg5) {
	  try {
	    fn.call(context, arg1, arg2, arg3, arg4, arg5);
	  } catch (e) {
	    process.env.NODE_ENV !== 'production' ? warning(didHookThrowForEvent[event], 'Exception thrown by hook while handling %s: %s', event, e + '\n' + e.stack) : void 0;
	    didHookThrowForEvent[event] = true;
	  }
	}
	
	function emitEvent(event, arg1, arg2, arg3, arg4, arg5) {
	  for (var i = 0; i < hooks.length; i++) {
	    var hook = hooks[i];
	    var fn = hook[event];
	    if (fn) {
	      callHook(event, fn, hook, arg1, arg2, arg3, arg4, arg5);
	    }
	  }
	}
	
	var isProfiling = false;
	var flushHistory = [];
	var lifeCycleTimerStack = [];
	var currentFlushNesting = 0;
	var currentFlushMeasurements = [];
	var currentFlushStartTime = 0;
	var currentTimerDebugID = null;
	var currentTimerStartTime = 0;
	var currentTimerNestedFlushDuration = 0;
	var currentTimerType = null;
	
	var lifeCycleTimerHasWarned = false;
	
	function clearHistory() {
	  ReactComponentTreeHook.purgeUnmountedComponents();
	  ReactHostOperationHistoryHook.clearHistory();
	}
	
	function getTreeSnapshot(registeredIDs) {
	  return registeredIDs.reduce(function (tree, id) {
	    var ownerID = ReactComponentTreeHook.getOwnerID(id);
	    var parentID = ReactComponentTreeHook.getParentID(id);
	    tree[id] = {
	      displayName: ReactComponentTreeHook.getDisplayName(id),
	      text: ReactComponentTreeHook.getText(id),
	      updateCount: ReactComponentTreeHook.getUpdateCount(id),
	      childIDs: ReactComponentTreeHook.getChildIDs(id),
	      // Text nodes don't have owners but this is close enough.
	      ownerID: ownerID || parentID && ReactComponentTreeHook.getOwnerID(parentID) || 0,
	      parentID: parentID
	    };
	    return tree;
	  }, {});
	}
	
	function resetMeasurements() {
	  var previousStartTime = currentFlushStartTime;
	  var previousMeasurements = currentFlushMeasurements;
	  var previousOperations = ReactHostOperationHistoryHook.getHistory();
	
	  if (currentFlushNesting === 0) {
	    currentFlushStartTime = 0;
	    currentFlushMeasurements = [];
	    clearHistory();
	    return;
	  }
	
	  if (previousMeasurements.length || previousOperations.length) {
	    var registeredIDs = ReactComponentTreeHook.getRegisteredIDs();
	    flushHistory.push({
	      duration: performanceNow() - previousStartTime,
	      measurements: previousMeasurements || [],
	      operations: previousOperations || [],
	      treeSnapshot: getTreeSnapshot(registeredIDs)
	    });
	  }
	
	  clearHistory();
	  currentFlushStartTime = performanceNow();
	  currentFlushMeasurements = [];
	}
	
	function checkDebugID(debugID) {
	  var allowRoot = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
	
	  if (allowRoot && debugID === 0) {
	    return;
	  }
	  if (!debugID) {
	    process.env.NODE_ENV !== 'production' ? warning(false, 'ReactDebugTool: debugID may not be empty.') : void 0;
	  }
	}
	
	function beginLifeCycleTimer(debugID, timerType) {
	  if (currentFlushNesting === 0) {
	    return;
	  }
	  if (currentTimerType && !lifeCycleTimerHasWarned) {
	    process.env.NODE_ENV !== 'production' ? warning(false, 'There is an internal error in the React performance measurement code. ' + 'Did not expect %s timer to start while %s timer is still in ' + 'progress for %s instance.', timerType, currentTimerType || 'no', debugID === currentTimerDebugID ? 'the same' : 'another') : void 0;
	    lifeCycleTimerHasWarned = true;
	  }
	  currentTimerStartTime = performanceNow();
	  currentTimerNestedFlushDuration = 0;
	  currentTimerDebugID = debugID;
	  currentTimerType = timerType;
	}
	
	function endLifeCycleTimer(debugID, timerType) {
	  if (currentFlushNesting === 0) {
	    return;
	  }
	  if (currentTimerType !== timerType && !lifeCycleTimerHasWarned) {
	    process.env.NODE_ENV !== 'production' ? warning(false, 'There is an internal error in the React performance measurement code. ' + 'We did not expect %s timer to stop while %s timer is still in ' + 'progress for %s instance. Please report this as a bug in React.', timerType, currentTimerType || 'no', debugID === currentTimerDebugID ? 'the same' : 'another') : void 0;
	    lifeCycleTimerHasWarned = true;
	  }
	  if (isProfiling) {
	    currentFlushMeasurements.push({
	      timerType: timerType,
	      instanceID: debugID,
	      duration: performanceNow() - currentTimerStartTime - currentTimerNestedFlushDuration
	    });
	  }
	  currentTimerStartTime = 0;
	  currentTimerNestedFlushDuration = 0;
	  currentTimerDebugID = null;
	  currentTimerType = null;
	}
	
	function pauseCurrentLifeCycleTimer() {
	  var currentTimer = {
	    startTime: currentTimerStartTime,
	    nestedFlushStartTime: performanceNow(),
	    debugID: currentTimerDebugID,
	    timerType: currentTimerType
	  };
	  lifeCycleTimerStack.push(currentTimer);
	  currentTimerStartTime = 0;
	  currentTimerNestedFlushDuration = 0;
	  currentTimerDebugID = null;
	  currentTimerType = null;
	}
	
	function resumeCurrentLifeCycleTimer() {
	  var _lifeCycleTimerStack$ = lifeCycleTimerStack.pop(),
	      startTime = _lifeCycleTimerStack$.startTime,
	      nestedFlushStartTime = _lifeCycleTimerStack$.nestedFlushStartTime,
	      debugID = _lifeCycleTimerStack$.debugID,
	      timerType = _lifeCycleTimerStack$.timerType;
	
	  var nestedFlushDuration = performanceNow() - nestedFlushStartTime;
	  currentTimerStartTime = startTime;
	  currentTimerNestedFlushDuration += nestedFlushDuration;
	  currentTimerDebugID = debugID;
	  currentTimerType = timerType;
	}
	
	var lastMarkTimeStamp = 0;
	var canUsePerformanceMeasure =
	// $FlowFixMe https://github.com/facebook/flow/issues/2345
	typeof performance !== 'undefined' && typeof performance.mark === 'function' && typeof performance.clearMarks === 'function' && typeof performance.measure === 'function' && typeof performance.clearMeasures === 'function';
	
	function shouldMark(debugID) {
	  if (!isProfiling || !canUsePerformanceMeasure) {
	    return false;
	  }
	  var element = ReactComponentTreeHook.getElement(debugID);
	  if (element == null || typeof element !== 'object') {
	    return false;
	  }
	  var isHostElement = typeof element.type === 'string';
	  if (isHostElement) {
	    return false;
	  }
	  return true;
	}
	
	function markBegin(debugID, markType) {
	  if (!shouldMark(debugID)) {
	    return;
	  }
	
	  var markName = debugID + '::' + markType;
	  lastMarkTimeStamp = performanceNow();
	  performance.mark(markName);
	}
	
	function markEnd(debugID, markType) {
	  if (!shouldMark(debugID)) {
	    return;
	  }
	
	  var markName = debugID + '::' + markType;
	  var displayName = ReactComponentTreeHook.getDisplayName(debugID) || 'Unknown';
	
	  // Chrome has an issue of dropping markers recorded too fast:
	  // https://bugs.chromium.org/p/chromium/issues/detail?id=640652
	  // To work around this, we will not report very small measurements.
	  // I determined the magic number by tweaking it back and forth.
	  // 0.05ms was enough to prevent the issue, but I set it to 0.1ms to be safe.
	  // When the bug is fixed, we can `measure()` unconditionally if we want to.
	  var timeStamp = performanceNow();
	  if (timeStamp - lastMarkTimeStamp > 0.1) {
	    var measurementName = displayName + ' [' + markType + ']';
	    performance.measure(measurementName, markName);
	  }
	
	  performance.clearMarks(markName);
	  performance.clearMeasures(measurementName);
	}
	
	var ReactDebugTool = {
	  addHook: function (hook) {
	    hooks.push(hook);
	  },
	  removeHook: function (hook) {
	    for (var i = 0; i < hooks.length; i++) {
	      if (hooks[i] === hook) {
	        hooks.splice(i, 1);
	        i--;
	      }
	    }
	  },
	  isProfiling: function () {
	    return isProfiling;
	  },
	  beginProfiling: function () {
	    if (isProfiling) {
	      return;
	    }
	
	    isProfiling = true;
	    flushHistory.length = 0;
	    resetMeasurements();
	    ReactDebugTool.addHook(ReactHostOperationHistoryHook);
	  },
	  endProfiling: function () {
	    if (!isProfiling) {
	      return;
	    }
	
	    isProfiling = false;
	    resetMeasurements();
	    ReactDebugTool.removeHook(ReactHostOperationHistoryHook);
	  },
	  getFlushHistory: function () {
	    return flushHistory;
	  },
	  onBeginFlush: function () {
	    currentFlushNesting++;
	    resetMeasurements();
	    pauseCurrentLifeCycleTimer();
	    emitEvent('onBeginFlush');
	  },
	  onEndFlush: function () {
	    resetMeasurements();
	    currentFlushNesting--;
	    resumeCurrentLifeCycleTimer();
	    emitEvent('onEndFlush');
	  },
	  onBeginLifeCycleTimer: function (debugID, timerType) {
	    checkDebugID(debugID);
	    emitEvent('onBeginLifeCycleTimer', debugID, timerType);
	    markBegin(debugID, timerType);
	    beginLifeCycleTimer(debugID, timerType);
	  },
	  onEndLifeCycleTimer: function (debugID, timerType) {
	    checkDebugID(debugID);
	    endLifeCycleTimer(debugID, timerType);
	    markEnd(debugID, timerType);
	    emitEvent('onEndLifeCycleTimer', debugID, timerType);
	  },
	  onBeginProcessingChildContext: function () {
	    emitEvent('onBeginProcessingChildContext');
	  },
	  onEndProcessingChildContext: function () {
	    emitEvent('onEndProcessingChildContext');
	  },
	  onHostOperation: function (operation) {
	    checkDebugID(operation.instanceID);
	    emitEvent('onHostOperation', operation);
	  },
	  onSetState: function () {
	    emitEvent('onSetState');
	  },
	  onSetChildren: function (debugID, childDebugIDs) {
	    checkDebugID(debugID);
	    childDebugIDs.forEach(checkDebugID);
	    emitEvent('onSetChildren', debugID, childDebugIDs);
	  },
	  onBeforeMountComponent: function (debugID, element, parentDebugID) {
	    checkDebugID(debugID);
	    checkDebugID(parentDebugID, true);
	    emitEvent('onBeforeMountComponent', debugID, element, parentDebugID);
	    markBegin(debugID, 'mount');
	  },
	  onMountComponent: function (debugID) {
	    checkDebugID(debugID);
	    markEnd(debugID, 'mount');
	    emitEvent('onMountComponent', debugID);
	  },
	  onBeforeUpdateComponent: function (debugID, element) {
	    checkDebugID(debugID);
	    emitEvent('onBeforeUpdateComponent', debugID, element);
	    markBegin(debugID, 'update');
	  },
	  onUpdateComponent: function (debugID) {
	    checkDebugID(debugID);
	    markEnd(debugID, 'update');
	    emitEvent('onUpdateComponent', debugID);
	  },
	  onBeforeUnmountComponent: function (debugID) {
	    checkDebugID(debugID);
	    emitEvent('onBeforeUnmountComponent', debugID);
	    markBegin(debugID, 'unmount');
	  },
	  onUnmountComponent: function (debugID) {
	    checkDebugID(debugID);
	    markEnd(debugID, 'unmount');
	    emitEvent('onUnmountComponent', debugID);
	  },
	  onTestEvent: function () {
	    emitEvent('onTestEvent');
	  }
	};
	
	// TODO remove these when RN/www gets updated
	ReactDebugTool.addDevtool = ReactDebugTool.addHook;
	ReactDebugTool.removeDevtool = ReactDebugTool.removeHook;
	
	ReactDebugTool.addHook(ReactInvalidSetStateWarningHook);
	ReactDebugTool.addHook(ReactComponentTreeHook);
	var url = ExecutionEnvironment.canUseDOM && window.location.href || '';
	if (/[?&]react_perf\b/.test(url)) {
	  ReactDebugTool.beginProfiling();
	}
	
	module.exports = ReactDebugTool;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 64 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2016-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var warning = __webpack_require__(11);
	
	if (process.env.NODE_ENV !== 'production') {
	  var processingChildContext = false;
	
	  var warnInvalidSetState = function () {
	    process.env.NODE_ENV !== 'production' ? warning(!processingChildContext, 'setState(...): Cannot call setState() inside getChildContext()') : void 0;
	  };
	}
	
	var ReactInvalidSetStateWarningHook = {
	  onBeginProcessingChildContext: function () {
	    processingChildContext = true;
	  },
	  onEndProcessingChildContext: function () {
	    processingChildContext = false;
	  },
	  onSetState: function () {
	    warnInvalidSetState();
	  }
	};
	
	module.exports = ReactInvalidSetStateWarningHook;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 65 */
/***/ function(module, exports) {

	/**
	 * Copyright 2016-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var history = [];
	
	var ReactHostOperationHistoryHook = {
	  onHostOperation: function (operation) {
	    history.push(operation);
	  },
	  clearHistory: function () {
	    if (ReactHostOperationHistoryHook._preventClearing) {
	      // Should only be used for tests.
	      return;
	    }
	
	    history = [];
	  },
	  getHistory: function () {
	    return history;
	  }
	};
	
	module.exports = ReactHostOperationHistoryHook;

/***/ },
/* 66 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */
	
	var performance = __webpack_require__(67);
	
	var performanceNow;
	
	/**
	 * Detect if we can use `window.performance.now()` and gracefully fallback to
	 * `Date.now()` if it doesn't exist. We need to support Firefox < 15 for now
	 * because of Facebook's testing infrastructure.
	 */
	if (performance.now) {
	  performanceNow = function performanceNow() {
	    return performance.now();
	  };
	} else {
	  performanceNow = function performanceNow() {
	    return Date.now();
	  };
	}
	
	module.exports = performanceNow;

/***/ },
/* 67 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(48);
	
	var performance;
	
	if (ExecutionEnvironment.canUseDOM) {
	  performance = window.performance || window.msPerformance || window.webkitPerformance;
	}
	
	module.exports = performance || {};

/***/ },
/* 68 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(35);
	
	var invariant = __webpack_require__(8);
	
	var OBSERVED_ERROR = {};
	
	/**
	 * `Transaction` creates a black box that is able to wrap any method such that
	 * certain invariants are maintained before and after the method is invoked
	 * (Even if an exception is thrown while invoking the wrapped method). Whoever
	 * instantiates a transaction can provide enforcers of the invariants at
	 * creation time. The `Transaction` class itself will supply one additional
	 * automatic invariant for you - the invariant that any transaction instance
	 * should not be run while it is already being run. You would typically create a
	 * single instance of a `Transaction` for reuse multiple times, that potentially
	 * is used to wrap several different methods. Wrappers are extremely simple -
	 * they only require implementing two methods.
	 *
	 * <pre>
	 *                       wrappers (injected at creation time)
	 *                                      +        +
	 *                                      |        |
	 *                    +-----------------|--------|--------------+
	 *                    |                 v        |              |
	 *                    |      +---------------+   |              |
	 *                    |   +--|    wrapper1   |---|----+         |
	 *                    |   |  +---------------+   v    |         |
	 *                    |   |          +-------------+  |         |
	 *                    |   |     +----|   wrapper2  |--------+   |
	 *                    |   |     |    +-------------+  |     |   |
	 *                    |   |     |                     |     |   |
	 *                    |   v     v                     v     v   | wrapper
	 *                    | +---+ +---+   +---------+   +---+ +---+ | invariants
	 * perform(anyMethod) | |   | |   |   |         |   |   | |   | | maintained
	 * +----------------->|-|---|-|---|-->|anyMethod|---|---|-|---|-|-------->
	 *                    | |   | |   |   |         |   |   | |   | |
	 *                    | |   | |   |   |         |   |   | |   | |
	 *                    | |   | |   |   |         |   |   | |   | |
	 *                    | +---+ +---+   +---------+   +---+ +---+ |
	 *                    |  initialize                    close    |
	 *                    +-----------------------------------------+
	 * </pre>
	 *
	 * Use cases:
	 * - Preserving the input selection ranges before/after reconciliation.
	 *   Restoring selection even in the event of an unexpected error.
	 * - Deactivating events while rearranging the DOM, preventing blurs/focuses,
	 *   while guaranteeing that afterwards, the event system is reactivated.
	 * - Flushing a queue of collected DOM mutations to the main UI thread after a
	 *   reconciliation takes place in a worker thread.
	 * - Invoking any collected `componentDidUpdate` callbacks after rendering new
	 *   content.
	 * - (Future use case): Wrapping particular flushes of the `ReactWorker` queue
	 *   to preserve the `scrollTop` (an automatic scroll aware DOM).
	 * - (Future use case): Layout calculations before and after DOM updates.
	 *
	 * Transactional plugin API:
	 * - A module that has an `initialize` method that returns any precomputation.
	 * - and a `close` method that accepts the precomputation. `close` is invoked
	 *   when the wrapped process is completed, or has failed.
	 *
	 * @param {Array<TransactionalWrapper>} transactionWrapper Wrapper modules
	 * that implement `initialize` and `close`.
	 * @return {Transaction} Single transaction for reuse in thread.
	 *
	 * @class Transaction
	 */
	var TransactionImpl = {
	  /**
	   * Sets up this instance so that it is prepared for collecting metrics. Does
	   * so such that this setup method may be used on an instance that is already
	   * initialized, in a way that does not consume additional memory upon reuse.
	   * That can be useful if you decide to make your subclass of this mixin a
	   * "PooledClass".
	   */
	  reinitializeTransaction: function () {
	    this.transactionWrappers = this.getTransactionWrappers();
	    if (this.wrapperInitData) {
	      this.wrapperInitData.length = 0;
	    } else {
	      this.wrapperInitData = [];
	    }
	    this._isInTransaction = false;
	  },
	
	  _isInTransaction: false,
	
	  /**
	   * @abstract
	   * @return {Array<TransactionWrapper>} Array of transaction wrappers.
	   */
	  getTransactionWrappers: null,
	
	  isInTransaction: function () {
	    return !!this._isInTransaction;
	  },
	
	  /**
	   * Executes the function within a safety window. Use this for the top level
	   * methods that result in large amounts of computation/mutations that would
	   * need to be safety checked. The optional arguments helps prevent the need
	   * to bind in many cases.
	   *
	   * @param {function} method Member of scope to call.
	   * @param {Object} scope Scope to invoke from.
	   * @param {Object?=} a Argument to pass to the method.
	   * @param {Object?=} b Argument to pass to the method.
	   * @param {Object?=} c Argument to pass to the method.
	   * @param {Object?=} d Argument to pass to the method.
	   * @param {Object?=} e Argument to pass to the method.
	   * @param {Object?=} f Argument to pass to the method.
	   *
	   * @return {*} Return value from `method`.
	   */
	  perform: function (method, scope, a, b, c, d, e, f) {
	    !!this.isInTransaction() ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Transaction.perform(...): Cannot initialize a transaction when there is already an outstanding transaction.') : _prodInvariant('27') : void 0;
	    var errorThrown;
	    var ret;
	    try {
	      this._isInTransaction = true;
	      // Catching errors makes debugging more difficult, so we start with
	      // errorThrown set to true before setting it to false after calling
	      // close -- if it's still set to true in the finally block, it means
	      // one of these calls threw.
	      errorThrown = true;
	      this.initializeAll(0);
	      ret = method.call(scope, a, b, c, d, e, f);
	      errorThrown = false;
	    } finally {
	      try {
	        if (errorThrown) {
	          // If `method` throws, prefer to show that stack trace over any thrown
	          // by invoking `closeAll`.
	          try {
	            this.closeAll(0);
	          } catch (err) {}
	        } else {
	          // Since `method` didn't throw, we don't want to silence the exception
	          // here.
	          this.closeAll(0);
	        }
	      } finally {
	        this._isInTransaction = false;
	      }
	    }
	    return ret;
	  },
	
	  initializeAll: function (startIndex) {
	    var transactionWrappers = this.transactionWrappers;
	    for (var i = startIndex; i < transactionWrappers.length; i++) {
	      var wrapper = transactionWrappers[i];
	      try {
	        // Catching errors makes debugging more difficult, so we start with the
	        // OBSERVED_ERROR state before overwriting it with the real return value
	        // of initialize -- if it's still set to OBSERVED_ERROR in the finally
	        // block, it means wrapper.initialize threw.
	        this.wrapperInitData[i] = OBSERVED_ERROR;
	        this.wrapperInitData[i] = wrapper.initialize ? wrapper.initialize.call(this) : null;
	      } finally {
	        if (this.wrapperInitData[i] === OBSERVED_ERROR) {
	          // The initializer for wrapper i threw an error; initialize the
	          // remaining wrappers but silence any exceptions from them to ensure
	          // that the first error is the one to bubble up.
	          try {
	            this.initializeAll(i + 1);
	          } catch (err) {}
	        }
	      }
	    }
	  },
	
	  /**
	   * Invokes each of `this.transactionWrappers.close[i]` functions, passing into
	   * them the respective return values of `this.transactionWrappers.init[i]`
	   * (`close`rs that correspond to initializers that failed will not be
	   * invoked).
	   */
	  closeAll: function (startIndex) {
	    !this.isInTransaction() ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Transaction.closeAll(): Cannot close transaction when none are open.') : _prodInvariant('28') : void 0;
	    var transactionWrappers = this.transactionWrappers;
	    for (var i = startIndex; i < transactionWrappers.length; i++) {
	      var wrapper = transactionWrappers[i];
	      var initData = this.wrapperInitData[i];
	      var errorThrown;
	      try {
	        // Catching errors makes debugging more difficult, so we start with
	        // errorThrown set to true before setting it to false after calling
	        // close -- if it's still set to true in the finally block, it means
	        // wrapper.close threw.
	        errorThrown = true;
	        if (initData !== OBSERVED_ERROR && wrapper.close) {
	          wrapper.close.call(this, initData);
	        }
	        errorThrown = false;
	      } finally {
	        if (errorThrown) {
	          // The closer for wrapper i threw an error; close the remaining
	          // wrappers but silence any exceptions from them to ensure that the
	          // first error is the one to bubble up.
	          try {
	            this.closeAll(i + 1);
	          } catch (e) {}
	        }
	      }
	    }
	    this.wrapperInitData.length = 0;
	  }
	};
	
	module.exports = TransactionImpl;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 69 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	/**
	 * Gets the target node from a native browser event by accounting for
	 * inconsistencies in browser DOM APIs.
	 *
	 * @param {object} nativeEvent Native browser event.
	 * @return {DOMEventTarget} Target node.
	 */
	
	function getEventTarget(nativeEvent) {
	  var target = nativeEvent.target || nativeEvent.srcElement || window;
	
	  // Normalize SVG <use> element events #4963
	  if (target.correspondingUseElement) {
	    target = target.correspondingUseElement;
	  }
	
	  // Safari may fire events on text nodes (Node.TEXT_NODE is 3).
	  // @see http://www.quirksmode.org/js/events_properties.html
	  return target.nodeType === 3 ? target.parentNode : target;
	}
	
	module.exports = getEventTarget;

/***/ },
/* 70 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(48);
	
	var useHasFeature;
	if (ExecutionEnvironment.canUseDOM) {
	  useHasFeature = document.implementation && document.implementation.hasFeature &&
	  // always returns true in newer browsers as per the standard.
	  // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature
	  document.implementation.hasFeature('', '') !== true;
	}
	
	/**
	 * Checks if an event is supported in the current execution environment.
	 *
	 * NOTE: This will not work correctly for non-generic events such as `change`,
	 * `reset`, `load`, `error`, and `select`.
	 *
	 * Borrows from Modernizr.
	 *
	 * @param {string} eventNameSuffix Event name, e.g. "click".
	 * @param {?boolean} capture Check if the capture phase is supported.
	 * @return {boolean} True if the event is supported.
	 * @internal
	 * @license Modernizr 3.0.0pre (Custom Build) | MIT
	 */
	function isEventSupported(eventNameSuffix, capture) {
	  if (!ExecutionEnvironment.canUseDOM || capture && !('addEventListener' in document)) {
	    return false;
	  }
	
	  var eventName = 'on' + eventNameSuffix;
	  var isSupported = eventName in document;
	
	  if (!isSupported) {
	    var element = document.createElement('div');
	    element.setAttribute(eventName, 'return;');
	    isSupported = typeof element[eventName] === 'function';
	  }
	
	  if (!isSupported && useHasFeature && eventNameSuffix === 'wheel') {
	    // This is the only way to test support for the `wheel` event in IE9+.
	    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');
	  }
	
	  return isSupported;
	}
	
	module.exports = isEventSupported;

/***/ },
/* 71 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	/**
	 * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary
	 */
	
	var supportedInputTypes = {
	  'color': true,
	  'date': true,
	  'datetime': true,
	  'datetime-local': true,
	  'email': true,
	  'month': true,
	  'number': true,
	  'password': true,
	  'range': true,
	  'search': true,
	  'tel': true,
	  'text': true,
	  'time': true,
	  'url': true,
	  'week': true
	};
	
	function isTextInputElement(elem) {
	  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
	
	  if (nodeName === 'input') {
	    return !!supportedInputTypes[elem.type];
	  }
	
	  if (nodeName === 'textarea') {
	    return true;
	  }
	
	  return false;
	}
	
	module.exports = isTextInputElement;

/***/ },
/* 72 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	/**
	 * Module that is injectable into `EventPluginHub`, that specifies a
	 * deterministic ordering of `EventPlugin`s. A convenient way to reason about
	 * plugins, without having to package every one of them. This is better than
	 * having plugins be ordered in the same order that they are injected because
	 * that ordering would be influenced by the packaging order.
	 * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that
	 * preventing default on events is convenient in `SimpleEventPlugin` handlers.
	 */
	
	var DefaultEventPluginOrder = ['ResponderEventPlugin', 'SimpleEventPlugin', 'TapEventPlugin', 'EnterLeaveEventPlugin', 'ChangeEventPlugin', 'SelectEventPlugin', 'BeforeInputEventPlugin'];
	
	module.exports = DefaultEventPluginOrder;

/***/ },
/* 73 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var EventPropagators = __webpack_require__(41);
	var ReactDOMComponentTree = __webpack_require__(34);
	var SyntheticMouseEvent = __webpack_require__(74);
	
	var eventTypes = {
	  mouseEnter: {
	    registrationName: 'onMouseEnter',
	    dependencies: ['topMouseOut', 'topMouseOver']
	  },
	  mouseLeave: {
	    registrationName: 'onMouseLeave',
	    dependencies: ['topMouseOut', 'topMouseOver']
	  }
	};
	
	var EnterLeaveEventPlugin = {
	
	  eventTypes: eventTypes,
	
	  /**
	   * For almost every interaction we care about, there will be both a top-level
	   * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that
	   * we do not extract duplicate events. However, moving the mouse into the
	   * browser from outside will not fire a `mouseout` event. In this case, we use
	   * the `mouseover` top-level event.
	   */
	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    if (topLevelType === 'topMouseOver' && (nativeEvent.relatedTarget || nativeEvent.fromElement)) {
	      return null;
	    }
	    if (topLevelType !== 'topMouseOut' && topLevelType !== 'topMouseOver') {
	      // Must not be a mouse in or mouse out - ignoring.
	      return null;
	    }
	
	    var win;
	    if (nativeEventTarget.window === nativeEventTarget) {
	      // `nativeEventTarget` is probably a window object.
	      win = nativeEventTarget;
	    } else {
	      // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
	      var doc = nativeEventTarget.ownerDocument;
	      if (doc) {
	        win = doc.defaultView || doc.parentWindow;
	      } else {
	        win = window;
	      }
	    }
	
	    var from;
	    var to;
	    if (topLevelType === 'topMouseOut') {
	      from = targetInst;
	      var related = nativeEvent.relatedTarget || nativeEvent.toElement;
	      to = related ? ReactDOMComponentTree.getClosestInstanceFromNode(related) : null;
	    } else {
	      // Moving to a node from outside the window.
	      from = null;
	      to = targetInst;
	    }
	
	    if (from === to) {
	      // Nothing pertains to our managed components.
	      return null;
	    }
	
	    var fromNode = from == null ? win : ReactDOMComponentTree.getNodeFromInstance(from);
	    var toNode = to == null ? win : ReactDOMComponentTree.getNodeFromInstance(to);
	
	    var leave = SyntheticMouseEvent.getPooled(eventTypes.mouseLeave, from, nativeEvent, nativeEventTarget);
	    leave.type = 'mouseleave';
	    leave.target = fromNode;
	    leave.relatedTarget = toNode;
	
	    var enter = SyntheticMouseEvent.getPooled(eventTypes.mouseEnter, to, nativeEvent, nativeEventTarget);
	    enter.type = 'mouseenter';
	    enter.target = toNode;
	    enter.relatedTarget = fromNode;
	
	    EventPropagators.accumulateEnterLeaveDispatches(leave, enter, from, to);
	
	    return [leave, enter];
	  }
	
	};
	
	module.exports = EnterLeaveEventPlugin;

/***/ },
/* 74 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var SyntheticUIEvent = __webpack_require__(75);
	var ViewportMetrics = __webpack_require__(76);
	
	var getEventModifierState = __webpack_require__(77);
	
	/**
	 * @interface MouseEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var MouseEventInterface = {
	  screenX: null,
	  screenY: null,
	  clientX: null,
	  clientY: null,
	  ctrlKey: null,
	  shiftKey: null,
	  altKey: null,
	  metaKey: null,
	  getModifierState: getEventModifierState,
	  button: function (event) {
	    // Webkit, Firefox, IE9+
	    // which:  1 2 3
	    // button: 0 1 2 (standard)
	    var button = event.button;
	    if ('which' in event) {
	      return button;
	    }
	    // IE<9
	    // which:  undefined
	    // button: 0 0 0
	    // button: 1 4 2 (onmouseup)
	    return button === 2 ? 2 : button === 4 ? 1 : 0;
	  },
	  buttons: null,
	  relatedTarget: function (event) {
	    return event.relatedTarget || (event.fromElement === event.srcElement ? event.toElement : event.fromElement);
	  },
	  // "Proprietary" Interface.
	  pageX: function (event) {
	    return 'pageX' in event ? event.pageX : event.clientX + ViewportMetrics.currentScrollLeft;
	  },
	  pageY: function (event) {
	    return 'pageY' in event ? event.pageY : event.clientY + ViewportMetrics.currentScrollTop;
	  }
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticMouseEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticUIEvent.augmentClass(SyntheticMouseEvent, MouseEventInterface);
	
	module.exports = SyntheticMouseEvent;

/***/ },
/* 75 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var SyntheticEvent = __webpack_require__(53);
	
	var getEventTarget = __webpack_require__(69);
	
	/**
	 * @interface UIEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var UIEventInterface = {
	  view: function (event) {
	    if (event.view) {
	      return event.view;
	    }
	
	    var target = getEventTarget(event);
	    if (target.window === target) {
	      // target is a window object
	      return target;
	    }
	
	    var doc = target.ownerDocument;
	    // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
	    if (doc) {
	      return doc.defaultView || doc.parentWindow;
	    } else {
	      return window;
	    }
	  },
	  detail: function (event) {
	    return event.detail || 0;
	  }
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticEvent}
	 */
	function SyntheticUIEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticEvent.augmentClass(SyntheticUIEvent, UIEventInterface);
	
	module.exports = SyntheticUIEvent;

/***/ },
/* 76 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var ViewportMetrics = {
	
	  currentScrollLeft: 0,
	
	  currentScrollTop: 0,
	
	  refreshScrollValues: function (scrollPosition) {
	    ViewportMetrics.currentScrollLeft = scrollPosition.x;
	    ViewportMetrics.currentScrollTop = scrollPosition.y;
	  }
	
	};
	
	module.exports = ViewportMetrics;

/***/ },
/* 77 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	/**
	 * Translation from modifier key to the associated property in the event.
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers
	 */
	
	var modifierKeyToProp = {
	  'Alt': 'altKey',
	  'Control': 'ctrlKey',
	  'Meta': 'metaKey',
	  'Shift': 'shiftKey'
	};
	
	// IE8 does not implement getModifierState so we simply map it to the only
	// modifier keys exposed by the event itself, does not support Lock-keys.
	// Currently, all major browsers except Chrome seems to support Lock-keys.
	function modifierStateGetter(keyArg) {
	  var syntheticEvent = this;
	  var nativeEvent = syntheticEvent.nativeEvent;
	  if (nativeEvent.getModifierState) {
	    return nativeEvent.getModifierState(keyArg);
	  }
	  var keyProp = modifierKeyToProp[keyArg];
	  return keyProp ? !!nativeEvent[keyProp] : false;
	}
	
	function getEventModifierState(nativeEvent) {
	  return modifierStateGetter;
	}
	
	module.exports = getEventModifierState;

/***/ },
/* 78 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var DOMProperty = __webpack_require__(36);
	
	var MUST_USE_PROPERTY = DOMProperty.injection.MUST_USE_PROPERTY;
	var HAS_BOOLEAN_VALUE = DOMProperty.injection.HAS_BOOLEAN_VALUE;
	var HAS_NUMERIC_VALUE = DOMProperty.injection.HAS_NUMERIC_VALUE;
	var HAS_POSITIVE_NUMERIC_VALUE = DOMProperty.injection.HAS_POSITIVE_NUMERIC_VALUE;
	var HAS_OVERLOADED_BOOLEAN_VALUE = DOMProperty.injection.HAS_OVERLOADED_BOOLEAN_VALUE;
	
	var HTMLDOMPropertyConfig = {
	  isCustomAttribute: RegExp.prototype.test.bind(new RegExp('^(data|aria)-[' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$')),
	  Properties: {
	    /**
	     * Standard Properties
	     */
	    accept: 0,
	    acceptCharset: 0,
	    accessKey: 0,
	    action: 0,
	    allowFullScreen: HAS_BOOLEAN_VALUE,
	    allowTransparency: 0,
	    alt: 0,
	    // specifies target context for links with `preload` type
	    as: 0,
	    async: HAS_BOOLEAN_VALUE,
	    autoComplete: 0,
	    // autoFocus is polyfilled/normalized by AutoFocusUtils
	    // autoFocus: HAS_BOOLEAN_VALUE,
	    autoPlay: HAS_BOOLEAN_VALUE,
	    capture: HAS_BOOLEAN_VALUE,
	    cellPadding: 0,
	    cellSpacing: 0,
	    charSet: 0,
	    challenge: 0,
	    checked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    cite: 0,
	    classID: 0,
	    className: 0,
	    cols: HAS_POSITIVE_NUMERIC_VALUE,
	    colSpan: 0,
	    content: 0,
	    contentEditable: 0,
	    contextMenu: 0,
	    controls: HAS_BOOLEAN_VALUE,
	    coords: 0,
	    crossOrigin: 0,
	    data: 0, // For `<object />` acts as `src`.
	    dateTime: 0,
	    'default': HAS_BOOLEAN_VALUE,
	    defer: HAS_BOOLEAN_VALUE,
	    dir: 0,
	    disabled: HAS_BOOLEAN_VALUE,
	    download: HAS_OVERLOADED_BOOLEAN_VALUE,
	    draggable: 0,
	    encType: 0,
	    form: 0,
	    formAction: 0,
	    formEncType: 0,
	    formMethod: 0,
	    formNoValidate: HAS_BOOLEAN_VALUE,
	    formTarget: 0,
	    frameBorder: 0,
	    headers: 0,
	    height: 0,
	    hidden: HAS_BOOLEAN_VALUE,
	    high: 0,
	    href: 0,
	    hrefLang: 0,
	    htmlFor: 0,
	    httpEquiv: 0,
	    icon: 0,
	    id: 0,
	    inputMode: 0,
	    integrity: 0,
	    is: 0,
	    keyParams: 0,
	    keyType: 0,
	    kind: 0,
	    label: 0,
	    lang: 0,
	    list: 0,
	    loop: HAS_BOOLEAN_VALUE,
	    low: 0,
	    manifest: 0,
	    marginHeight: 0,
	    marginWidth: 0,
	    max: 0,
	    maxLength: 0,
	    media: 0,
	    mediaGroup: 0,
	    method: 0,
	    min: 0,
	    minLength: 0,
	    // Caution; `option.selected` is not updated if `select.multiple` is
	    // disabled with `removeAttribute`.
	    multiple: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    muted: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    name: 0,
	    nonce: 0,
	    noValidate: HAS_BOOLEAN_VALUE,
	    open: HAS_BOOLEAN_VALUE,
	    optimum: 0,
	    pattern: 0,
	    placeholder: 0,
	    playsInline: HAS_BOOLEAN_VALUE,
	    poster: 0,
	    preload: 0,
	    profile: 0,
	    radioGroup: 0,
	    readOnly: HAS_BOOLEAN_VALUE,
	    referrerPolicy: 0,
	    rel: 0,
	    required: HAS_BOOLEAN_VALUE,
	    reversed: HAS_BOOLEAN_VALUE,
	    role: 0,
	    rows: HAS_POSITIVE_NUMERIC_VALUE,
	    rowSpan: HAS_NUMERIC_VALUE,
	    sandbox: 0,
	    scope: 0,
	    scoped: HAS_BOOLEAN_VALUE,
	    scrolling: 0,
	    seamless: HAS_BOOLEAN_VALUE,
	    selected: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    shape: 0,
	    size: HAS_POSITIVE_NUMERIC_VALUE,
	    sizes: 0,
	    span: HAS_POSITIVE_NUMERIC_VALUE,
	    spellCheck: 0,
	    src: 0,
	    srcDoc: 0,
	    srcLang: 0,
	    srcSet: 0,
	    start: HAS_NUMERIC_VALUE,
	    step: 0,
	    style: 0,
	    summary: 0,
	    tabIndex: 0,
	    target: 0,
	    title: 0,
	    // Setting .type throws on non-<input> tags
	    type: 0,
	    useMap: 0,
	    value: 0,
	    width: 0,
	    wmode: 0,
	    wrap: 0,
	
	    /**
	     * RDFa Properties
	     */
	    about: 0,
	    datatype: 0,
	    inlist: 0,
	    prefix: 0,
	    // property is also supported for OpenGraph in meta tags.
	    property: 0,
	    resource: 0,
	    'typeof': 0,
	    vocab: 0,
	
	    /**
	     * Non-standard Properties
	     */
	    // autoCapitalize and autoCorrect are supported in Mobile Safari for
	    // keyboard hints.
	    autoCapitalize: 0,
	    autoCorrect: 0,
	    // autoSave allows WebKit/Blink to persist values of input fields on page reloads
	    autoSave: 0,
	    // color is for Safari mask-icon link
	    color: 0,
	    // itemProp, itemScope, itemType are for
	    // Microdata support. See http://schema.org/docs/gs.html
	    itemProp: 0,
	    itemScope: HAS_BOOLEAN_VALUE,
	    itemType: 0,
	    // itemID and itemRef are for Microdata support as well but
	    // only specified in the WHATWG spec document. See
	    // https://html.spec.whatwg.org/multipage/microdata.html#microdata-dom-api
	    itemID: 0,
	    itemRef: 0,
	    // results show looking glass icon and recent searches on input
	    // search fields in WebKit/Blink
	    results: 0,
	    // IE-only attribute that specifies security restrictions on an iframe
	    // as an alternative to the sandbox attribute on IE<10
	    security: 0,
	    // IE-only attribute that controls focus behavior
	    unselectable: 0
	  },
	  DOMAttributeNames: {
	    acceptCharset: 'accept-charset',
	    className: 'class',
	    htmlFor: 'for',
	    httpEquiv: 'http-equiv'
	  },
	  DOMPropertyNames: {}
	};
	
	module.exports = HTMLDOMPropertyConfig;

/***/ },
/* 79 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var DOMChildrenOperations = __webpack_require__(80);
	var ReactDOMIDOperations = __webpack_require__(91);
	
	/**
	 * Abstracts away all functionality of the reconciler that requires knowledge of
	 * the browser context. TODO: These callers should be refactored to avoid the
	 * need for this injection.
	 */
	var ReactComponentBrowserEnvironment = {
	
	  processChildrenUpdates: ReactDOMIDOperations.dangerouslyProcessChildrenUpdates,
	
	  replaceNodeWithMarkup: DOMChildrenOperations.dangerouslyReplaceNodeWithMarkup
	
	};
	
	module.exports = ReactComponentBrowserEnvironment;

/***/ },
/* 80 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var DOMLazyTree = __webpack_require__(81);
	var Danger = __webpack_require__(87);
	var ReactDOMComponentTree = __webpack_require__(34);
	var ReactInstrumentation = __webpack_require__(62);
	
	var createMicrosoftUnsafeLocalFunction = __webpack_require__(84);
	var setInnerHTML = __webpack_require__(83);
	var setTextContent = __webpack_require__(85);
	
	function getNodeAfter(parentNode, node) {
	  // Special case for text components, which return [open, close] comments
	  // from getHostNode.
	  if (Array.isArray(node)) {
	    node = node[1];
	  }
	  return node ? node.nextSibling : parentNode.firstChild;
	}
	
	/**
	 * Inserts `childNode` as a child of `parentNode` at the `index`.
	 *
	 * @param {DOMElement} parentNode Parent node in which to insert.
	 * @param {DOMElement} childNode Child node to insert.
	 * @param {number} index Index at which to insert the child.
	 * @internal
	 */
	var insertChildAt = createMicrosoftUnsafeLocalFunction(function (parentNode, childNode, referenceNode) {
	  // We rely exclusively on `insertBefore(node, null)` instead of also using
	  // `appendChild(node)`. (Using `undefined` is not allowed by all browsers so
	  // we are careful to use `null`.)
	  parentNode.insertBefore(childNode, referenceNode);
	});
	
	function insertLazyTreeChildAt(parentNode, childTree, referenceNode) {
	  DOMLazyTree.insertTreeBefore(parentNode, childTree, referenceNode);
	}
	
	function moveChild(parentNode, childNode, referenceNode) {
	  if (Array.isArray(childNode)) {
	    moveDelimitedText(parentNode, childNode[0], childNode[1], referenceNode);
	  } else {
	    insertChildAt(parentNode, childNode, referenceNode);
	  }
	}
	
	function removeChild(parentNode, childNode) {
	  if (Array.isArray(childNode)) {
	    var closingComment = childNode[1];
	    childNode = childNode[0];
	    removeDelimitedText(parentNode, childNode, closingComment);
	    parentNode.removeChild(closingComment);
	  }
	  parentNode.removeChild(childNode);
	}
	
	function moveDelimitedText(parentNode, openingComment, closingComment, referenceNode) {
	  var node = openingComment;
	  while (true) {
	    var nextNode = node.nextSibling;
	    insertChildAt(parentNode, node, referenceNode);
	    if (node === closingComment) {
	      break;
	    }
	    node = nextNode;
	  }
	}
	
	function removeDelimitedText(parentNode, startNode, closingComment) {
	  while (true) {
	    var node = startNode.nextSibling;
	    if (node === closingComment) {
	      // The closing comment is removed by ReactMultiChild.
	      break;
	    } else {
	      parentNode.removeChild(node);
	    }
	  }
	}
	
	function replaceDelimitedText(openingComment, closingComment, stringText) {
	  var parentNode = openingComment.parentNode;
	  var nodeAfterComment = openingComment.nextSibling;
	  if (nodeAfterComment === closingComment) {
	    // There are no text nodes between the opening and closing comments; insert
	    // a new one if stringText isn't empty.
	    if (stringText) {
	      insertChildAt(parentNode, document.createTextNode(stringText), nodeAfterComment);
	    }
	  } else {
	    if (stringText) {
	      // Set the text content of the first node after the opening comment, and
	      // remove all following nodes up until the closing comment.
	      setTextContent(nodeAfterComment, stringText);
	      removeDelimitedText(parentNode, nodeAfterComment, closingComment);
	    } else {
	      removeDelimitedText(parentNode, openingComment, closingComment);
	    }
	  }
	
	  if (process.env.NODE_ENV !== 'production') {
	    ReactInstrumentation.debugTool.onHostOperation({
	      instanceID: ReactDOMComponentTree.getInstanceFromNode(openingComment)._debugID,
	      type: 'replace text',
	      payload: stringText
	    });
	  }
	}
	
	var dangerouslyReplaceNodeWithMarkup = Danger.dangerouslyReplaceNodeWithMarkup;
	if (process.env.NODE_ENV !== 'production') {
	  dangerouslyReplaceNodeWithMarkup = function (oldChild, markup, prevInstance) {
	    Danger.dangerouslyReplaceNodeWithMarkup(oldChild, markup);
	    if (prevInstance._debugID !== 0) {
	      ReactInstrumentation.debugTool.onHostOperation({
	        instanceID: prevInstance._debugID,
	        type: 'replace with',
	        payload: markup.toString()
	      });
	    } else {
	      var nextInstance = ReactDOMComponentTree.getInstanceFromNode(markup.node);
	      if (nextInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onHostOperation({
	          instanceID: nextInstance._debugID,
	          type: 'mount',
	          payload: markup.toString()
	        });
	      }
	    }
	  };
	}
	
	/**
	 * Operations for updating with DOM children.
	 */
	var DOMChildrenOperations = {
	
	  dangerouslyReplaceNodeWithMarkup: dangerouslyReplaceNodeWithMarkup,
	
	  replaceDelimitedText: replaceDelimitedText,
	
	  /**
	   * Updates a component's children by processing a series of updates. The
	   * update configurations are each expected to have a `parentNode` property.
	   *
	   * @param {array<object>} updates List of update configurations.
	   * @internal
	   */
	  processUpdates: function (parentNode, updates) {
	    if (process.env.NODE_ENV !== 'production') {
	      var parentNodeDebugID = ReactDOMComponentTree.getInstanceFromNode(parentNode)._debugID;
	    }
	
	    for (var k = 0; k < updates.length; k++) {
	      var update = updates[k];
	      switch (update.type) {
	        case 'INSERT_MARKUP':
	          insertLazyTreeChildAt(parentNode, update.content, getNodeAfter(parentNode, update.afterNode));
	          if (process.env.NODE_ENV !== 'production') {
	            ReactInstrumentation.debugTool.onHostOperation({
	              instanceID: parentNodeDebugID,
	              type: 'insert child',
	              payload: { toIndex: update.toIndex, content: update.content.toString() }
	            });
	          }
	          break;
	        case 'MOVE_EXISTING':
	          moveChild(parentNode, update.fromNode, getNodeAfter(parentNode, update.afterNode));
	          if (process.env.NODE_ENV !== 'production') {
	            ReactInstrumentation.debugTool.onHostOperation({
	              instanceID: parentNodeDebugID,
	              type: 'move child',
	              payload: { fromIndex: update.fromIndex, toIndex: update.toIndex }
	            });
	          }
	          break;
	        case 'SET_MARKUP':
	          setInnerHTML(parentNode, update.content);
	          if (process.env.NODE_ENV !== 'production') {
	            ReactInstrumentation.debugTool.onHostOperation({
	              instanceID: parentNodeDebugID,
	              type: 'replace children',
	              payload: update.content.toString()
	            });
	          }
	          break;
	        case 'TEXT_CONTENT':
	          setTextContent(parentNode, update.content);
	          if (process.env.NODE_ENV !== 'production') {
	            ReactInstrumentation.debugTool.onHostOperation({
	              instanceID: parentNodeDebugID,
	              type: 'replace text',
	              payload: update.content.toString()
	            });
	          }
	          break;
	        case 'REMOVE_NODE':
	          removeChild(parentNode, update.fromNode);
	          if (process.env.NODE_ENV !== 'production') {
	            ReactInstrumentation.debugTool.onHostOperation({
	              instanceID: parentNodeDebugID,
	              type: 'remove child',
	              payload: { fromIndex: update.fromIndex }
	            });
	          }
	          break;
	      }
	    }
	  }
	
	};
	
	module.exports = DOMChildrenOperations;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 81 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var DOMNamespaces = __webpack_require__(82);
	var setInnerHTML = __webpack_require__(83);
	
	var createMicrosoftUnsafeLocalFunction = __webpack_require__(84);
	var setTextContent = __webpack_require__(85);
	
	var ELEMENT_NODE_TYPE = 1;
	var DOCUMENT_FRAGMENT_NODE_TYPE = 11;
	
	/**
	 * In IE (8-11) and Edge, appending nodes with no children is dramatically
	 * faster than appending a full subtree, so we essentially queue up the
	 * .appendChild calls here and apply them so each node is added to its parent
	 * before any children are added.
	 *
	 * In other browsers, doing so is slower or neutral compared to the other order
	 * (in Firefox, twice as slow) so we only do this inversion in IE.
	 *
	 * See https://github.com/spicyj/innerhtml-vs-createelement-vs-clonenode.
	 */
	var enableLazy = typeof document !== 'undefined' && typeof document.documentMode === 'number' || typeof navigator !== 'undefined' && typeof navigator.userAgent === 'string' && /\bEdge\/\d/.test(navigator.userAgent);
	
	function insertTreeChildren(tree) {
	  if (!enableLazy) {
	    return;
	  }
	  var node = tree.node;
	  var children = tree.children;
	  if (children.length) {
	    for (var i = 0; i < children.length; i++) {
	      insertTreeBefore(node, children[i], null);
	    }
	  } else if (tree.html != null) {
	    setInnerHTML(node, tree.html);
	  } else if (tree.text != null) {
	    setTextContent(node, tree.text);
	  }
	}
	
	var insertTreeBefore = createMicrosoftUnsafeLocalFunction(function (parentNode, tree, referenceNode) {
	  // DocumentFragments aren't actually part of the DOM after insertion so
	  // appending children won't update the DOM. We need to ensure the fragment
	  // is properly populated first, breaking out of our lazy approach for just
	  // this level. Also, some <object> plugins (like Flash Player) will read
	  // <param> nodes immediately upon insertion into the DOM, so <object>
	  // must also be populated prior to insertion into the DOM.
	  if (tree.node.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE || tree.node.nodeType === ELEMENT_NODE_TYPE && tree.node.nodeName.toLowerCase() === 'object' && (tree.node.namespaceURI == null || tree.node.namespaceURI === DOMNamespaces.html)) {
	    insertTreeChildren(tree);
	    parentNode.insertBefore(tree.node, referenceNode);
	  } else {
	    parentNode.insertBefore(tree.node, referenceNode);
	    insertTreeChildren(tree);
	  }
	});
	
	function replaceChildWithTree(oldNode, newTree) {
	  oldNode.parentNode.replaceChild(newTree.node, oldNode);
	  insertTreeChildren(newTree);
	}
	
	function queueChild(parentTree, childTree) {
	  if (enableLazy) {
	    parentTree.children.push(childTree);
	  } else {
	    parentTree.node.appendChild(childTree.node);
	  }
	}
	
	function queueHTML(tree, html) {
	  if (enableLazy) {
	    tree.html = html;
	  } else {
	    setInnerHTML(tree.node, html);
	  }
	}
	
	function queueText(tree, text) {
	  if (enableLazy) {
	    tree.text = text;
	  } else {
	    setTextContent(tree.node, text);
	  }
	}
	
	function toString() {
	  return this.node.nodeName;
	}
	
	function DOMLazyTree(node) {
	  return {
	    node: node,
	    children: [],
	    html: null,
	    text: null,
	    toString: toString
	  };
	}
	
	DOMLazyTree.insertTreeBefore = insertTreeBefore;
	DOMLazyTree.replaceChildWithTree = replaceChildWithTree;
	DOMLazyTree.queueChild = queueChild;
	DOMLazyTree.queueHTML = queueHTML;
	DOMLazyTree.queueText = queueText;
	
	module.exports = DOMLazyTree;

/***/ },
/* 82 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var DOMNamespaces = {
	  html: 'http://www.w3.org/1999/xhtml',
	  mathml: 'http://www.w3.org/1998/Math/MathML',
	  svg: 'http://www.w3.org/2000/svg'
	};
	
	module.exports = DOMNamespaces;

/***/ },
/* 83 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(48);
	var DOMNamespaces = __webpack_require__(82);
	
	var WHITESPACE_TEST = /^[ \r\n\t\f]/;
	var NONVISIBLE_TEST = /<(!--|link|noscript|meta|script|style)[ \r\n\t\f\/>]/;
	
	var createMicrosoftUnsafeLocalFunction = __webpack_require__(84);
	
	// SVG temp container for IE lacking innerHTML
	var reusableSVGContainer;
	
	/**
	 * Set the innerHTML property of a node, ensuring that whitespace is preserved
	 * even in IE8.
	 *
	 * @param {DOMElement} node
	 * @param {string} html
	 * @internal
	 */
	var setInnerHTML = createMicrosoftUnsafeLocalFunction(function (node, html) {
	  // IE does not have innerHTML for SVG nodes, so instead we inject the
	  // new markup in a temp node and then move the child nodes across into
	  // the target node
	  if (node.namespaceURI === DOMNamespaces.svg && !('innerHTML' in node)) {
	    reusableSVGContainer = reusableSVGContainer || document.createElement('div');
	    reusableSVGContainer.innerHTML = '<svg>' + html + '</svg>';
	    var svgNode = reusableSVGContainer.firstChild;
	    while (svgNode.firstChild) {
	      node.appendChild(svgNode.firstChild);
	    }
	  } else {
	    node.innerHTML = html;
	  }
	});
	
	if (ExecutionEnvironment.canUseDOM) {
	  // IE8: When updating a just created node with innerHTML only leading
	  // whitespace is removed. When updating an existing node with innerHTML
	  // whitespace in root TextNodes is also collapsed.
	  // @see quirksmode.org/bugreports/archives/2004/11/innerhtml_and_t.html
	
	  // Feature detection; only IE8 is known to behave improperly like this.
	  var testElement = document.createElement('div');
	  testElement.innerHTML = ' ';
	  if (testElement.innerHTML === '') {
	    setInnerHTML = function (node, html) {
	      // Magic theory: IE8 supposedly differentiates between added and updated
	      // nodes when processing innerHTML, innerHTML on updated nodes suffers
	      // from worse whitespace behavior. Re-adding a node like this triggers
	      // the initial and more favorable whitespace behavior.
	      // TODO: What to do on a detached node?
	      if (node.parentNode) {
	        node.parentNode.replaceChild(node, node);
	      }
	
	      // We also implement a workaround for non-visible tags disappearing into
	      // thin air on IE8, this only happens if there is no visible text
	      // in-front of the non-visible tags. Piggyback on the whitespace fix
	      // and simply check if any non-visible tags appear in the source.
	      if (WHITESPACE_TEST.test(html) || html[0] === '<' && NONVISIBLE_TEST.test(html)) {
	        // Recover leading whitespace by temporarily prepending any character.
	        // \uFEFF has the potential advantage of being zero-width/invisible.
	        // UglifyJS drops U+FEFF chars when parsing, so use String.fromCharCode
	        // in hopes that this is preserved even if "\uFEFF" is transformed to
	        // the actual Unicode character (by Babel, for example).
	        // https://github.com/mishoo/UglifyJS2/blob/v2.4.20/lib/parse.js#L216
	        node.innerHTML = String.fromCharCode(0xFEFF) + html;
	
	        // deleteData leaves an empty `TextNode` which offsets the index of all
	        // children. Definitely want to avoid this.
	        var textNode = node.firstChild;
	        if (textNode.data.length === 1) {
	          node.removeChild(textNode);
	        } else {
	          textNode.deleteData(0, 1);
	        }
	      } else {
	        node.innerHTML = html;
	      }
	    };
	  }
	  testElement = null;
	}
	
	module.exports = setInnerHTML;

/***/ },
/* 84 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	/* globals MSApp */
	
	'use strict';
	
	/**
	 * Create a function which has 'unsafe' privileges (required by windows8 apps)
	 */
	
	var createMicrosoftUnsafeLocalFunction = function (func) {
	  if (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {
	    return function (arg0, arg1, arg2, arg3) {
	      MSApp.execUnsafeLocalFunction(function () {
	        return func(arg0, arg1, arg2, arg3);
	      });
	    };
	  } else {
	    return func;
	  }
	};
	
	module.exports = createMicrosoftUnsafeLocalFunction;

/***/ },
/* 85 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(48);
	var escapeTextContentForBrowser = __webpack_require__(86);
	var setInnerHTML = __webpack_require__(83);
	
	/**
	 * Set the textContent property of a node, ensuring that whitespace is preserved
	 * even in IE8. innerText is a poor substitute for textContent and, among many
	 * issues, inserts <br> instead of the literal newline chars. innerHTML behaves
	 * as it should.
	 *
	 * @param {DOMElement} node
	 * @param {string} text
	 * @internal
	 */
	var setTextContent = function (node, text) {
	  if (text) {
	    var firstChild = node.firstChild;
	
	    if (firstChild && firstChild === node.lastChild && firstChild.nodeType === 3) {
	      firstChild.nodeValue = text;
	      return;
	    }
	  }
	  node.textContent = text;
	};
	
	if (ExecutionEnvironment.canUseDOM) {
	  if (!('textContent' in document.documentElement)) {
	    setTextContent = function (node, text) {
	      if (node.nodeType === 3) {
	        node.nodeValue = text;
	        return;
	      }
	      setInnerHTML(node, escapeTextContentForBrowser(text));
	    };
	  }
	}
	
	module.exports = setTextContent;

/***/ },
/* 86 */
/***/ function(module, exports) {

	/**
	 * Copyright 2016-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * Based on the escape-html library, which is used under the MIT License below:
	 *
	 * Copyright (c) 2012-2013 TJ Holowaychuk
	 * Copyright (c) 2015 Andreas Lubbe
	 * Copyright (c) 2015 Tiancheng "Timothy" Gu
	 *
	 * Permission is hereby granted, free of charge, to any person obtaining
	 * a copy of this software and associated documentation files (the
	 * 'Software'), to deal in the Software without restriction, including
	 * without limitation the rights to use, copy, modify, merge, publish,
	 * distribute, sublicense, and/or sell copies of the Software, and to
	 * permit persons to whom the Software is furnished to do so, subject to
	 * the following conditions:
	 *
	 * The above copyright notice and this permission notice shall be
	 * included in all copies or substantial portions of the Software.
	 *
	 * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,
	 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
	 * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
	 * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
	 * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
	 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
	 *
	 */
	
	'use strict';
	
	// code copied and modified from escape-html
	/**
	 * Module variables.
	 * @private
	 */
	
	var matchHtmlRegExp = /["'&<>]/;
	
	/**
	 * Escape special characters in the given string of html.
	 *
	 * @param  {string} string The string to escape for inserting into HTML
	 * @return {string}
	 * @public
	 */
	
	function escapeHtml(string) {
	  var str = '' + string;
	  var match = matchHtmlRegExp.exec(str);
	
	  if (!match) {
	    return str;
	  }
	
	  var escape;
	  var html = '';
	  var index = 0;
	  var lastIndex = 0;
	
	  for (index = match.index; index < str.length; index++) {
	    switch (str.charCodeAt(index)) {
	      case 34:
	        // "
	        escape = '&quot;';
	        break;
	      case 38:
	        // &
	        escape = '&amp;';
	        break;
	      case 39:
	        // '
	        escape = '&#x27;'; // modified from escape-html; used to be '&#39'
	        break;
	      case 60:
	        // <
	        escape = '&lt;';
	        break;
	      case 62:
	        // >
	        escape = '&gt;';
	        break;
	      default:
	        continue;
	    }
	
	    if (lastIndex !== index) {
	      html += str.substring(lastIndex, index);
	    }
	
	    lastIndex = index + 1;
	    html += escape;
	  }
	
	  return lastIndex !== index ? html + str.substring(lastIndex, index) : html;
	}
	// end code copied and modified from escape-html
	
	
	/**
	 * Escapes text to prevent scripting attacks.
	 *
	 * @param {*} text Text value to escape.
	 * @return {string} An escaped string.
	 */
	function escapeTextContentForBrowser(text) {
	  if (typeof text === 'boolean' || typeof text === 'number') {
	    // this shortcircuit helps perf for types that we know will never have
	    // special characters, especially given that this function is used often
	    // for numeric dom ids.
	    return '' + text;
	  }
	  return escapeHtml(text);
	}
	
	module.exports = escapeTextContentForBrowser;

/***/ },
/* 87 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(35);
	
	var DOMLazyTree = __webpack_require__(81);
	var ExecutionEnvironment = __webpack_require__(48);
	
	var createNodesFromMarkup = __webpack_require__(88);
	var emptyFunction = __webpack_require__(12);
	var invariant = __webpack_require__(8);
	
	var Danger = {
	
	  /**
	   * Replaces a node with a string of markup at its current position within its
	   * parent. The markup must render into a single root node.
	   *
	   * @param {DOMElement} oldChild Child node to replace.
	   * @param {string} markup Markup to render in place of the child node.
	   * @internal
	   */
	  dangerouslyReplaceNodeWithMarkup: function (oldChild, markup) {
	    !ExecutionEnvironment.canUseDOM ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot render markup in a worker thread. Make sure `window` and `document` are available globally before requiring React when unit testing or use ReactDOMServer.renderToString() for server rendering.') : _prodInvariant('56') : void 0;
	    !markup ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Missing markup.') : _prodInvariant('57') : void 0;
	    !(oldChild.nodeName !== 'HTML') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot replace markup of the <html> node. This is because browser quirks make this unreliable and/or slow. If you want to render to the root you must use server rendering. See ReactDOMServer.renderToString().') : _prodInvariant('58') : void 0;
	
	    if (typeof markup === 'string') {
	      var newChild = createNodesFromMarkup(markup, emptyFunction)[0];
	      oldChild.parentNode.replaceChild(newChild, oldChild);
	    } else {
	      DOMLazyTree.replaceChildWithTree(oldChild, markup);
	    }
	  }
	
	};
	
	module.exports = Danger;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 88 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */
	
	/*eslint-disable fb-www/unsafe-html*/
	
	var ExecutionEnvironment = __webpack_require__(48);
	
	var createArrayFromMixed = __webpack_require__(89);
	var getMarkupWrap = __webpack_require__(90);
	var invariant = __webpack_require__(8);
	
	/**
	 * Dummy container used to render all markup.
	 */
	var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;
	
	/**
	 * Pattern used by `getNodeName`.
	 */
	var nodeNamePattern = /^\s*<(\w+)/;
	
	/**
	 * Extracts the `nodeName` of the first element in a string of markup.
	 *
	 * @param {string} markup String of markup.
	 * @return {?string} Node name of the supplied markup.
	 */
	function getNodeName(markup) {
	  var nodeNameMatch = markup.match(nodeNamePattern);
	  return nodeNameMatch && nodeNameMatch[1].toLowerCase();
	}
	
	/**
	 * Creates an array containing the nodes rendered from the supplied markup. The
	 * optionally supplied `handleScript` function will be invoked once for each
	 * <script> element that is rendered. If no `handleScript` function is supplied,
	 * an exception is thrown if any <script> elements are rendered.
	 *
	 * @param {string} markup A string of valid HTML markup.
	 * @param {?function} handleScript Invoked once for each rendered <script>.
	 * @return {array<DOMElement|DOMTextNode>} An array of rendered nodes.
	 */
	function createNodesFromMarkup(markup, handleScript) {
	  var node = dummyNode;
	  !!!dummyNode ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createNodesFromMarkup dummy not initialized') : invariant(false) : void 0;
	  var nodeName = getNodeName(markup);
	
	  var wrap = nodeName && getMarkupWrap(nodeName);
	  if (wrap) {
	    node.innerHTML = wrap[1] + markup + wrap[2];
	
	    var wrapDepth = wrap[0];
	    while (wrapDepth--) {
	      node = node.lastChild;
	    }
	  } else {
	    node.innerHTML = markup;
	  }
	
	  var scripts = node.getElementsByTagName('script');
	  if (scripts.length) {
	    !handleScript ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createNodesFromMarkup(...): Unexpected <script> element rendered.') : invariant(false) : void 0;
	    createArrayFromMixed(scripts).forEach(handleScript);
	  }
	
	  var nodes = Array.from(node.childNodes);
	  while (node.lastChild) {
	    node.removeChild(node.lastChild);
	  }
	  return nodes;
	}
	
	module.exports = createNodesFromMarkup;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 89 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */
	
	var invariant = __webpack_require__(8);
	
	/**
	 * Convert array-like objects to arrays.
	 *
	 * This API assumes the caller knows the contents of the data type. For less
	 * well defined inputs use createArrayFromMixed.
	 *
	 * @param {object|function|filelist} obj
	 * @return {array}
	 */
	function toArray(obj) {
	  var length = obj.length;
	
	  // Some browsers builtin objects can report typeof 'function' (e.g. NodeList
	  // in old versions of Safari).
	  !(!Array.isArray(obj) && (typeof obj === 'object' || typeof obj === 'function')) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Array-like object expected') : invariant(false) : void 0;
	
	  !(typeof length === 'number') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Object needs a length property') : invariant(false) : void 0;
	
	  !(length === 0 || length - 1 in obj) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Object should have keys for indices') : invariant(false) : void 0;
	
	  !(typeof obj.callee !== 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Object can\'t be `arguments`. Use rest params ' + '(function(...args) {}) or Array.from() instead.') : invariant(false) : void 0;
	
	  // Old IE doesn't give collections access to hasOwnProperty. Assume inputs
	  // without method will throw during the slice call and skip straight to the
	  // fallback.
	  if (obj.hasOwnProperty) {
	    try {
	      return Array.prototype.slice.call(obj);
	    } catch (e) {
	      // IE < 9 does not support Array#slice on collections objects
	    }
	  }
	
	  // Fall back to copying key by key. This assumes all keys have a value,
	  // so will not preserve sparsely populated inputs.
	  var ret = Array(length);
	  for (var ii = 0; ii < length; ii++) {
	    ret[ii] = obj[ii];
	  }
	  return ret;
	}
	
	/**
	 * Perform a heuristic test to determine if an object is "array-like".
	 *
	 *   A monk asked Joshu, a Zen master, "Has a dog Buddha nature?"
	 *   Joshu replied: "Mu."
	 *
	 * This function determines if its argument has "array nature": it returns
	 * true if the argument is an actual array, an `arguments' object, or an
	 * HTMLCollection (e.g. node.childNodes or node.getElementsByTagName()).
	 *
	 * It will return false for other array-like objects like Filelist.
	 *
	 * @param {*} obj
	 * @return {boolean}
	 */
	function hasArrayNature(obj) {
	  return (
	    // not null/false
	    !!obj && (
	    // arrays are objects, NodeLists are functions in Safari
	    typeof obj == 'object' || typeof obj == 'function') &&
	    // quacks like an array
	    'length' in obj &&
	    // not window
	    !('setInterval' in obj) &&
	    // no DOM node should be considered an array-like
	    // a 'select' element has 'length' and 'item' properties on IE8
	    typeof obj.nodeType != 'number' && (
	    // a real array
	    Array.isArray(obj) ||
	    // arguments
	    'callee' in obj ||
	    // HTMLCollection/NodeList
	    'item' in obj)
	  );
	}
	
	/**
	 * Ensure that the argument is an array by wrapping it in an array if it is not.
	 * Creates a copy of the argument if it is already an array.
	 *
	 * This is mostly useful idiomatically:
	 *
	 *   var createArrayFromMixed = require('createArrayFromMixed');
	 *
	 *   function takesOneOrMoreThings(things) {
	 *     things = createArrayFromMixed(things);
	 *     ...
	 *   }
	 *
	 * This allows you to treat `things' as an array, but accept scalars in the API.
	 *
	 * If you need to convert an array-like object, like `arguments`, into an array
	 * use toArray instead.
	 *
	 * @param {*} obj
	 * @return {array}
	 */
	function createArrayFromMixed(obj) {
	  if (!hasArrayNature(obj)) {
	    return [obj];
	  } else if (Array.isArray(obj)) {
	    return obj.slice();
	  } else {
	    return toArray(obj);
	  }
	}
	
	module.exports = createArrayFromMixed;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 90 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	/*eslint-disable fb-www/unsafe-html */
	
	var ExecutionEnvironment = __webpack_require__(48);
	
	var invariant = __webpack_require__(8);
	
	/**
	 * Dummy container used to detect which wraps are necessary.
	 */
	var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;
	
	/**
	 * Some browsers cannot use `innerHTML` to render certain elements standalone,
	 * so we wrap them, render the wrapped nodes, then extract the desired node.
	 *
	 * In IE8, certain elements cannot render alone, so wrap all elements ('*').
	 */
	
	var shouldWrap = {};
	
	var selectWrap = [1, '<select multiple="true">', '</select>'];
	var tableWrap = [1, '<table>', '</table>'];
	var trWrap = [3, '<table><tbody><tr>', '</tr></tbody></table>'];
	
	var svgWrap = [1, '<svg xmlns="http://www.w3.org/2000/svg">', '</svg>'];
	
	var markupWrap = {
	  '*': [1, '?<div>', '</div>'],
	
	  'area': [1, '<map>', '</map>'],
	  'col': [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],
	  'legend': [1, '<fieldset>', '</fieldset>'],
	  'param': [1, '<object>', '</object>'],
	  'tr': [2, '<table><tbody>', '</tbody></table>'],
	
	  'optgroup': selectWrap,
	  'option': selectWrap,
	
	  'caption': tableWrap,
	  'colgroup': tableWrap,
	  'tbody': tableWrap,
	  'tfoot': tableWrap,
	  'thead': tableWrap,
	
	  'td': trWrap,
	  'th': trWrap
	};
	
	// Initialize the SVG elements since we know they'll always need to be wrapped
	// consistently. If they are created inside a <div> they will be initialized in
	// the wrong namespace (and will not display).
	var svgElements = ['circle', 'clipPath', 'defs', 'ellipse', 'g', 'image', 'line', 'linearGradient', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'text', 'tspan'];
	svgElements.forEach(function (nodeName) {
	  markupWrap[nodeName] = svgWrap;
	  shouldWrap[nodeName] = true;
	});
	
	/**
	 * Gets the markup wrap configuration for the supplied `nodeName`.
	 *
	 * NOTE: This lazily detects which wraps are necessary for the current browser.
	 *
	 * @param {string} nodeName Lowercase `nodeName`.
	 * @return {?array} Markup wrap configuration, if applicable.
	 */
	function getMarkupWrap(nodeName) {
	  !!!dummyNode ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Markup wrapping node not initialized') : invariant(false) : void 0;
	  if (!markupWrap.hasOwnProperty(nodeName)) {
	    nodeName = '*';
	  }
	  if (!shouldWrap.hasOwnProperty(nodeName)) {
	    if (nodeName === '*') {
	      dummyNode.innerHTML = '<link />';
	    } else {
	      dummyNode.innerHTML = '<' + nodeName + '></' + nodeName + '>';
	    }
	    shouldWrap[nodeName] = !dummyNode.firstChild;
	  }
	  return shouldWrap[nodeName] ? markupWrap[nodeName] : null;
	}
	
	module.exports = getMarkupWrap;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 91 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var DOMChildrenOperations = __webpack_require__(80);
	var ReactDOMComponentTree = __webpack_require__(34);
	
	/**
	 * Operations used to process updates to DOM nodes.
	 */
	var ReactDOMIDOperations = {
	
	  /**
	   * Updates a component's children by processing a series of updates.
	   *
	   * @param {array<object>} updates List of update configurations.
	   * @internal
	   */
	  dangerouslyProcessChildrenUpdates: function (parentInst, updates) {
	    var node = ReactDOMComponentTree.getNodeFromInstance(parentInst);
	    DOMChildrenOperations.processUpdates(node, updates);
	  }
	};
	
	module.exports = ReactDOMIDOperations;

/***/ },
/* 92 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	/* global hasOwnProperty:true */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(35),
	    _assign = __webpack_require__(4);
	
	var AutoFocusUtils = __webpack_require__(93);
	var CSSPropertyOperations = __webpack_require__(95);
	var DOMLazyTree = __webpack_require__(81);
	var DOMNamespaces = __webpack_require__(82);
	var DOMProperty = __webpack_require__(36);
	var DOMPropertyOperations = __webpack_require__(103);
	var EventPluginHub = __webpack_require__(42);
	var EventPluginRegistry = __webpack_require__(43);
	var ReactBrowserEventEmitter = __webpack_require__(105);
	var ReactDOMComponentFlags = __webpack_require__(37);
	var ReactDOMComponentTree = __webpack_require__(34);
	var ReactDOMInput = __webpack_require__(108);
	var ReactDOMOption = __webpack_require__(111);
	var ReactDOMSelect = __webpack_require__(112);
	var ReactDOMTextarea = __webpack_require__(113);
	var ReactInstrumentation = __webpack_require__(62);
	var ReactMultiChild = __webpack_require__(114);
	var ReactServerRenderingTransaction = __webpack_require__(133);
	
	var emptyFunction = __webpack_require__(12);
	var escapeTextContentForBrowser = __webpack_require__(86);
	var invariant = __webpack_require__(8);
	var isEventSupported = __webpack_require__(70);
	var shallowEqual = __webpack_require__(123);
	var validateDOMNesting = __webpack_require__(136);
	var warning = __webpack_require__(11);
	
	var Flags = ReactDOMComponentFlags;
	var deleteListener = EventPluginHub.deleteListener;
	var getNode = ReactDOMComponentTree.getNodeFromInstance;
	var listenTo = ReactBrowserEventEmitter.listenTo;
	var registrationNameModules = EventPluginRegistry.registrationNameModules;
	
	// For quickly matching children type, to test if can be treated as content.
	var CONTENT_TYPES = { 'string': true, 'number': true };
	
	var STYLE = 'style';
	var HTML = '__html';
	var RESERVED_PROPS = {
	  children: null,
	  dangerouslySetInnerHTML: null,
	  suppressContentEditableWarning: null
	};
	
	// Node type for document fragments (Node.DOCUMENT_FRAGMENT_NODE).
	var DOC_FRAGMENT_TYPE = 11;
	
	function getDeclarationErrorAddendum(internalInstance) {
	  if (internalInstance) {
	    var owner = internalInstance._currentElement._owner || null;
	    if (owner) {
	      var name = owner.getName();
	      if (name) {
	        return ' This DOM node was rendered by `' + name + '`.';
	      }
	    }
	  }
	  return '';
	}
	
	function friendlyStringify(obj) {
	  if (typeof obj === 'object') {
	    if (Array.isArray(obj)) {
	      return '[' + obj.map(friendlyStringify).join(', ') + ']';
	    } else {
	      var pairs = [];
	      for (var key in obj) {
	        if (Object.prototype.hasOwnProperty.call(obj, key)) {
	          var keyEscaped = /^[a-z$_][\w$_]*$/i.test(key) ? key : JSON.stringify(key);
	          pairs.push(keyEscaped + ': ' + friendlyStringify(obj[key]));
	        }
	      }
	      return '{' + pairs.join(', ') + '}';
	    }
	  } else if (typeof obj === 'string') {
	    return JSON.stringify(obj);
	  } else if (typeof obj === 'function') {
	    return '[function object]';
	  }
	  // Differs from JSON.stringify in that undefined because undefined and that
	  // inf and nan don't become null
	  return String(obj);
	}
	
	var styleMutationWarning = {};
	
	function checkAndWarnForMutatedStyle(style1, style2, component) {
	  if (style1 == null || style2 == null) {
	    return;
	  }
	  if (shallowEqual(style1, style2)) {
	    return;
	  }
	
	  var componentName = component._tag;
	  var owner = component._currentElement._owner;
	  var ownerName;
	  if (owner) {
	    ownerName = owner.getName();
	  }
	
	  var hash = ownerName + '|' + componentName;
	
	  if (styleMutationWarning.hasOwnProperty(hash)) {
	    return;
	  }
	
	  styleMutationWarning[hash] = true;
	
	  process.env.NODE_ENV !== 'production' ? warning(false, '`%s` was passed a style object that has previously been mutated. ' + 'Mutating `style` is deprecated. Consider cloning it beforehand. Check ' + 'the `render` %s. Previous style: %s. Mutated style: %s.', componentName, owner ? 'of `' + ownerName + '`' : 'using <' + componentName + '>', friendlyStringify(style1), friendlyStringify(style2)) : void 0;
	}
	
	/**
	 * @param {object} component
	 * @param {?object} props
	 */
	function assertValidProps(component, props) {
	  if (!props) {
	    return;
	  }
	  // Note the use of `==` which checks for null or undefined.
	  if (voidElementTags[component._tag]) {
	    !(props.children == null && props.dangerouslySetInnerHTML == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.%s', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : _prodInvariant('137', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : void 0;
	  }
	  if (props.dangerouslySetInnerHTML != null) {
	    !(props.children == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Can only set one of `children` or `props.dangerouslySetInnerHTML`.') : _prodInvariant('60') : void 0;
	    !(typeof props.dangerouslySetInnerHTML === 'object' && HTML in props.dangerouslySetInnerHTML) ? process.env.NODE_ENV !== 'production' ? invariant(false, '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://fb.me/react-invariant-dangerously-set-inner-html for more information.') : _prodInvariant('61') : void 0;
	  }
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(props.innerHTML == null, 'Directly setting property `innerHTML` is not permitted. ' + 'For more information, lookup documentation on `dangerouslySetInnerHTML`.') : void 0;
	    process.env.NODE_ENV !== 'production' ? warning(props.suppressContentEditableWarning || !props.contentEditable || props.children == null, 'A component is `contentEditable` and contains `children` managed by ' + 'React. It is now your responsibility to guarantee that none of ' + 'those nodes are unexpectedly modified or duplicated. This is ' + 'probably not intentional.') : void 0;
	    process.env.NODE_ENV !== 'production' ? warning(props.onFocusIn == null && props.onFocusOut == null, 'React uses onFocus and onBlur instead of onFocusIn and onFocusOut. ' + 'All React events are normalized to bubble, so onFocusIn and onFocusOut ' + 'are not needed/supported by React.') : void 0;
	  }
	  !(props.style == null || typeof props.style === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + \'em\'}} when using JSX.%s', getDeclarationErrorAddendum(component)) : _prodInvariant('62', getDeclarationErrorAddendum(component)) : void 0;
	}
	
	function enqueuePutListener(inst, registrationName, listener, transaction) {
	  if (transaction instanceof ReactServerRenderingTransaction) {
	    return;
	  }
	  if (process.env.NODE_ENV !== 'production') {
	    // IE8 has no API for event capturing and the `onScroll` event doesn't
	    // bubble.
	    process.env.NODE_ENV !== 'production' ? warning(registrationName !== 'onScroll' || isEventSupported('scroll', true), 'This browser doesn\'t support the `onScroll` event') : void 0;
	  }
	  var containerInfo = inst._hostContainerInfo;
	  var isDocumentFragment = containerInfo._node && containerInfo._node.nodeType === DOC_FRAGMENT_TYPE;
	  var doc = isDocumentFragment ? containerInfo._node : containerInfo._ownerDocument;
	  listenTo(registrationName, doc);
	  transaction.getReactMountReady().enqueue(putListener, {
	    inst: inst,
	    registrationName: registrationName,
	    listener: listener
	  });
	}
	
	function putListener() {
	  var listenerToPut = this;
	  EventPluginHub.putListener(listenerToPut.inst, listenerToPut.registrationName, listenerToPut.listener);
	}
	
	function inputPostMount() {
	  var inst = this;
	  ReactDOMInput.postMountWrapper(inst);
	}
	
	function textareaPostMount() {
	  var inst = this;
	  ReactDOMTextarea.postMountWrapper(inst);
	}
	
	function optionPostMount() {
	  var inst = this;
	  ReactDOMOption.postMountWrapper(inst);
	}
	
	var setAndValidateContentChildDev = emptyFunction;
	if (process.env.NODE_ENV !== 'production') {
	  setAndValidateContentChildDev = function (content) {
	    var hasExistingContent = this._contentDebugID != null;
	    var debugID = this._debugID;
	    // This ID represents the inlined child that has no backing instance:
	    var contentDebugID = -debugID;
	
	    if (content == null) {
	      if (hasExistingContent) {
	        ReactInstrumentation.debugTool.onUnmountComponent(this._contentDebugID);
	      }
	      this._contentDebugID = null;
	      return;
	    }
	
	    validateDOMNesting(null, String(content), this, this._ancestorInfo);
	    this._contentDebugID = contentDebugID;
	    if (hasExistingContent) {
	      ReactInstrumentation.debugTool.onBeforeUpdateComponent(contentDebugID, content);
	      ReactInstrumentation.debugTool.onUpdateComponent(contentDebugID);
	    } else {
	      ReactInstrumentation.debugTool.onBeforeMountComponent(contentDebugID, content, debugID);
	      ReactInstrumentation.debugTool.onMountComponent(contentDebugID);
	      ReactInstrumentation.debugTool.onSetChildren(debugID, [contentDebugID]);
	    }
	  };
	}
	
	// There are so many media events, it makes sense to just
	// maintain a list rather than create a `trapBubbledEvent` for each
	var mediaEvents = {
	  topAbort: 'abort',
	  topCanPlay: 'canplay',
	  topCanPlayThrough: 'canplaythrough',
	  topDurationChange: 'durationchange',
	  topEmptied: 'emptied',
	  topEncrypted: 'encrypted',
	  topEnded: 'ended',
	  topError: 'error',
	  topLoadedData: 'loadeddata',
	  topLoadedMetadata: 'loadedmetadata',
	  topLoadStart: 'loadstart',
	  topPause: 'pause',
	  topPlay: 'play',
	  topPlaying: 'playing',
	  topProgress: 'progress',
	  topRateChange: 'ratechange',
	  topSeeked: 'seeked',
	  topSeeking: 'seeking',
	  topStalled: 'stalled',
	  topSuspend: 'suspend',
	  topTimeUpdate: 'timeupdate',
	  topVolumeChange: 'volumechange',
	  topWaiting: 'waiting'
	};
	
	function trapBubbledEventsLocal() {
	  var inst = this;
	  // If a component renders to null or if another component fatals and causes
	  // the state of the tree to be corrupted, `node` here can be null.
	  !inst._rootNodeID ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Must be mounted to trap events') : _prodInvariant('63') : void 0;
	  var node = getNode(inst);
	  !node ? process.env.NODE_ENV !== 'production' ? invariant(false, 'trapBubbledEvent(...): Requires node to be rendered.') : _prodInvariant('64') : void 0;
	
	  switch (inst._tag) {
	    case 'iframe':
	    case 'object':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topLoad', 'load', node)];
	      break;
	    case 'video':
	    case 'audio':
	
	      inst._wrapperState.listeners = [];
	      // Create listener for each media event
	      for (var event in mediaEvents) {
	        if (mediaEvents.hasOwnProperty(event)) {
	          inst._wrapperState.listeners.push(ReactBrowserEventEmitter.trapBubbledEvent(event, mediaEvents[event], node));
	        }
	      }
	      break;
	    case 'source':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topError', 'error', node)];
	      break;
	    case 'img':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topError', 'error', node), ReactBrowserEventEmitter.trapBubbledEvent('topLoad', 'load', node)];
	      break;
	    case 'form':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topReset', 'reset', node), ReactBrowserEventEmitter.trapBubbledEvent('topSubmit', 'submit', node)];
	      break;
	    case 'input':
	    case 'select':
	    case 'textarea':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topInvalid', 'invalid', node)];
	      break;
	  }
	}
	
	function postUpdateSelectWrapper() {
	  ReactDOMSelect.postUpdateWrapper(this);
	}
	
	// For HTML, certain tags should omit their close tag. We keep a whitelist for
	// those special-case tags.
	
	var omittedCloseTags = {
	  'area': true,
	  'base': true,
	  'br': true,
	  'col': true,
	  'embed': true,
	  'hr': true,
	  'img': true,
	  'input': true,
	  'keygen': true,
	  'link': true,
	  'meta': true,
	  'param': true,
	  'source': true,
	  'track': true,
	  'wbr': true
	};
	
	var newlineEatingTags = {
	  'listing': true,
	  'pre': true,
	  'textarea': true
	};
	
	// For HTML, certain tags cannot have children. This has the same purpose as
	// `omittedCloseTags` except that `menuitem` should still have its closing tag.
	
	var voidElementTags = _assign({
	  'menuitem': true
	}, omittedCloseTags);
	
	// We accept any tag to be rendered but since this gets injected into arbitrary
	// HTML, we want to make sure that it's a safe tag.
	// http://www.w3.org/TR/REC-xml/#NT-Name
	
	var VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/; // Simplified subset
	var validatedTagCache = {};
	var hasOwnProperty = {}.hasOwnProperty;
	
	function validateDangerousTag(tag) {
	  if (!hasOwnProperty.call(validatedTagCache, tag)) {
	    !VALID_TAG_REGEX.test(tag) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Invalid tag: %s', tag) : _prodInvariant('65', tag) : void 0;
	    validatedTagCache[tag] = true;
	  }
	}
	
	function isCustomComponent(tagName, props) {
	  return tagName.indexOf('-') >= 0 || props.is != null;
	}
	
	var globalIdCounter = 1;
	
	/**
	 * Creates a new React class that is idempotent and capable of containing other
	 * React components. It accepts event listeners and DOM properties that are
	 * valid according to `DOMProperty`.
	 *
	 *  - Event listeners: `onClick`, `onMouseDown`, etc.
	 *  - DOM properties: `className`, `name`, `title`, etc.
	 *
	 * The `style` property functions differently from the DOM API. It accepts an
	 * object mapping of style properties to values.
	 *
	 * @constructor ReactDOMComponent
	 * @extends ReactMultiChild
	 */
	function ReactDOMComponent(element) {
	  var tag = element.type;
	  validateDangerousTag(tag);
	  this._currentElement = element;
	  this._tag = tag.toLowerCase();
	  this._namespaceURI = null;
	  this._renderedChildren = null;
	  this._previousStyle = null;
	  this._previousStyleCopy = null;
	  this._hostNode = null;
	  this._hostParent = null;
	  this._rootNodeID = 0;
	  this._domID = 0;
	  this._hostContainerInfo = null;
	  this._wrapperState = null;
	  this._topLevelWrapper = null;
	  this._flags = 0;
	  if (process.env.NODE_ENV !== 'production') {
	    this._ancestorInfo = null;
	    setAndValidateContentChildDev.call(this, null);
	  }
	}
	
	ReactDOMComponent.displayName = 'ReactDOMComponent';
	
	ReactDOMComponent.Mixin = {
	
	  /**
	   * Generates root tag markup then recurses. This method has side effects and
	   * is not idempotent.
	   *
	   * @internal
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {?ReactDOMComponent} the parent component instance
	   * @param {?object} info about the host container
	   * @param {object} context
	   * @return {string} The computed markup.
	   */
	  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
	    this._rootNodeID = globalIdCounter++;
	    this._domID = hostContainerInfo._idCounter++;
	    this._hostParent = hostParent;
	    this._hostContainerInfo = hostContainerInfo;
	
	    var props = this._currentElement.props;
	
	    switch (this._tag) {
	      case 'audio':
	      case 'form':
	      case 'iframe':
	      case 'img':
	      case 'link':
	      case 'object':
	      case 'source':
	      case 'video':
	        this._wrapperState = {
	          listeners: null
	        };
	        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
	        break;
	      case 'input':
	        ReactDOMInput.mountWrapper(this, props, hostParent);
	        props = ReactDOMInput.getHostProps(this, props);
	        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
	        break;
	      case 'option':
	        ReactDOMOption.mountWrapper(this, props, hostParent);
	        props = ReactDOMOption.getHostProps(this, props);
	        break;
	      case 'select':
	        ReactDOMSelect.mountWrapper(this, props, hostParent);
	        props = ReactDOMSelect.getHostProps(this, props);
	        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
	        break;
	      case 'textarea':
	        ReactDOMTextarea.mountWrapper(this, props, hostParent);
	        props = ReactDOMTextarea.getHostProps(this, props);
	        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
	        break;
	    }
	
	    assertValidProps(this, props);
	
	    // We create tags in the namespace of their parent container, except HTML
	    // tags get no namespace.
	    var namespaceURI;
	    var parentTag;
	    if (hostParent != null) {
	      namespaceURI = hostParent._namespaceURI;
	      parentTag = hostParent._tag;
	    } else if (hostContainerInfo._tag) {
	      namespaceURI = hostContainerInfo._namespaceURI;
	      parentTag = hostContainerInfo._tag;
	    }
	    if (namespaceURI == null || namespaceURI === DOMNamespaces.svg && parentTag === 'foreignobject') {
	      namespaceURI = DOMNamespaces.html;
	    }
	    if (namespaceURI === DOMNamespaces.html) {
	      if (this._tag === 'svg') {
	        namespaceURI = DOMNamespaces.svg;
	      } else if (this._tag === 'math') {
	        namespaceURI = DOMNamespaces.mathml;
	      }
	    }
	    this._namespaceURI = namespaceURI;
	
	    if (process.env.NODE_ENV !== 'production') {
	      var parentInfo;
	      if (hostParent != null) {
	        parentInfo = hostParent._ancestorInfo;
	      } else if (hostContainerInfo._tag) {
	        parentInfo = hostContainerInfo._ancestorInfo;
	      }
	      if (parentInfo) {
	        // parentInfo should always be present except for the top-level
	        // component when server rendering
	        validateDOMNesting(this._tag, null, this, parentInfo);
	      }
	      this._ancestorInfo = validateDOMNesting.updatedAncestorInfo(parentInfo, this._tag, this);
	    }
	
	    var mountImage;
	    if (transaction.useCreateElement) {
	      var ownerDocument = hostContainerInfo._ownerDocument;
	      var el;
	      if (namespaceURI === DOMNamespaces.html) {
	        if (this._tag === 'script') {
	          // Create the script via .innerHTML so its "parser-inserted" flag is
	          // set to true and it does not execute
	          var div = ownerDocument.createElement('div');
	          var type = this._currentElement.type;
	          div.innerHTML = '<' + type + '></' + type + '>';
	          el = div.removeChild(div.firstChild);
	        } else if (props.is) {
	          el = ownerDocument.createElement(this._currentElement.type, props.is);
	        } else {
	          // Separate else branch instead of using `props.is || undefined` above becuase of a Firefox bug.
	          // See discussion in https://github.com/facebook/react/pull/6896
	          // and discussion in https://bugzilla.mozilla.org/show_bug.cgi?id=1276240
	          el = ownerDocument.createElement(this._currentElement.type);
	        }
	      } else {
	        el = ownerDocument.createElementNS(namespaceURI, this._currentElement.type);
	      }
	      ReactDOMComponentTree.precacheNode(this, el);
	      this._flags |= Flags.hasCachedChildNodes;
	      if (!this._hostParent) {
	        DOMPropertyOperations.setAttributeForRoot(el);
	      }
	      this._updateDOMProperties(null, props, transaction);
	      var lazyTree = DOMLazyTree(el);
	      this._createInitialChildren(transaction, props, context, lazyTree);
	      mountImage = lazyTree;
	    } else {
	      var tagOpen = this._createOpenTagMarkupAndPutListeners(transaction, props);
	      var tagContent = this._createContentMarkup(transaction, props, context);
	      if (!tagContent && omittedCloseTags[this._tag]) {
	        mountImage = tagOpen + '/>';
	      } else {
	        mountImage = tagOpen + '>' + tagContent + '</' + this._currentElement.type + '>';
	      }
	    }
	
	    switch (this._tag) {
	      case 'input':
	        transaction.getReactMountReady().enqueue(inputPostMount, this);
	        if (props.autoFocus) {
	          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
	        }
	        break;
	      case 'textarea':
	        transaction.getReactMountReady().enqueue(textareaPostMount, this);
	        if (props.autoFocus) {
	          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
	        }
	        break;
	      case 'select':
	        if (props.autoFocus) {
	          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
	        }
	        break;
	      case 'button':
	        if (props.autoFocus) {
	          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
	        }
	        break;
	      case 'option':
	        transaction.getReactMountReady().enqueue(optionPostMount, this);
	        break;
	    }
	
	    return mountImage;
	  },
	
	  /**
	   * Creates markup for the open tag and all attributes.
	   *
	   * This method has side effects because events get registered.
	   *
	   * Iterating over object properties is faster than iterating over arrays.
	   * @see http://jsperf.com/obj-vs-arr-iteration
	   *
	   * @private
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {object} props
	   * @return {string} Markup of opening tag.
	   */
	  _createOpenTagMarkupAndPutListeners: function (transaction, props) {
	    var ret = '<' + this._currentElement.type;
	
	    for (var propKey in props) {
	      if (!props.hasOwnProperty(propKey)) {
	        continue;
	      }
	      var propValue = props[propKey];
	      if (propValue == null) {
	        continue;
	      }
	      if (registrationNameModules.hasOwnProperty(propKey)) {
	        if (propValue) {
	          enqueuePutListener(this, propKey, propValue, transaction);
	        }
	      } else {
	        if (propKey === STYLE) {
	          if (propValue) {
	            if (process.env.NODE_ENV !== 'production') {
	              // See `_updateDOMProperties`. style block
	              this._previousStyle = propValue;
	            }
	            propValue = this._previousStyleCopy = _assign({}, props.style);
	          }
	          propValue = CSSPropertyOperations.createMarkupForStyles(propValue, this);
	        }
	        var markup = null;
	        if (this._tag != null && isCustomComponent(this._tag, props)) {
	          if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
	            markup = DOMPropertyOperations.createMarkupForCustomAttribute(propKey, propValue);
	          }
	        } else {
	          markup = DOMPropertyOperations.createMarkupForProperty(propKey, propValue);
	        }
	        if (markup) {
	          ret += ' ' + markup;
	        }
	      }
	    }
	
	    // For static pages, no need to put React ID and checksum. Saves lots of
	    // bytes.
	    if (transaction.renderToStaticMarkup) {
	      return ret;
	    }
	
	    if (!this._hostParent) {
	      ret += ' ' + DOMPropertyOperations.createMarkupForRoot();
	    }
	    ret += ' ' + DOMPropertyOperations.createMarkupForID(this._domID);
	    return ret;
	  },
	
	  /**
	   * Creates markup for the content between the tags.
	   *
	   * @private
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {object} props
	   * @param {object} context
	   * @return {string} Content markup.
	   */
	  _createContentMarkup: function (transaction, props, context) {
	    var ret = '';
	
	    // Intentional use of != to avoid catching zero/false.
	    var innerHTML = props.dangerouslySetInnerHTML;
	    if (innerHTML != null) {
	      if (innerHTML.__html != null) {
	        ret = innerHTML.__html;
	      }
	    } else {
	      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;
	      var childrenToUse = contentToUse != null ? null : props.children;
	      if (contentToUse != null) {
	        // TODO: Validate that text is allowed as a child of this node
	        ret = escapeTextContentForBrowser(contentToUse);
	        if (process.env.NODE_ENV !== 'production') {
	          setAndValidateContentChildDev.call(this, contentToUse);
	        }
	      } else if (childrenToUse != null) {
	        var mountImages = this.mountChildren(childrenToUse, transaction, context);
	        ret = mountImages.join('');
	      }
	    }
	    if (newlineEatingTags[this._tag] && ret.charAt(0) === '\n') {
	      // text/html ignores the first character in these tags if it's a newline
	      // Prefer to break application/xml over text/html (for now) by adding
	      // a newline specifically to get eaten by the parser. (Alternately for
	      // textareas, replacing "^\n" with "\r\n" doesn't get eaten, and the first
	      // \r is normalized out by HTMLTextAreaElement#value.)
	      // See: <http://www.w3.org/TR/html-polyglot/#newlines-in-textarea-and-pre>
	      // See: <http://www.w3.org/TR/html5/syntax.html#element-restrictions>
	      // See: <http://www.w3.org/TR/html5/syntax.html#newlines>
	      // See: Parsing of "textarea" "listing" and "pre" elements
	      //  from <http://www.w3.org/TR/html5/syntax.html#parsing-main-inbody>
	      return '\n' + ret;
	    } else {
	      return ret;
	    }
	  },
	
	  _createInitialChildren: function (transaction, props, context, lazyTree) {
	    // Intentional use of != to avoid catching zero/false.
	    var innerHTML = props.dangerouslySetInnerHTML;
	    if (innerHTML != null) {
	      if (innerHTML.__html != null) {
	        DOMLazyTree.queueHTML(lazyTree, innerHTML.__html);
	      }
	    } else {
	      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;
	      var childrenToUse = contentToUse != null ? null : props.children;
	      // TODO: Validate that text is allowed as a child of this node
	      if (contentToUse != null) {
	        // Avoid setting textContent when the text is empty. In IE11 setting
	        // textContent on a text area will cause the placeholder to not
	        // show within the textarea until it has been focused and blurred again.
	        // https://github.com/facebook/react/issues/6731#issuecomment-254874553
	        if (contentToUse !== '') {
	          if (process.env.NODE_ENV !== 'production') {
	            setAndValidateContentChildDev.call(this, contentToUse);
	          }
	          DOMLazyTree.queueText(lazyTree, contentToUse);
	        }
	      } else if (childrenToUse != null) {
	        var mountImages = this.mountChildren(childrenToUse, transaction, context);
	        for (var i = 0; i < mountImages.length; i++) {
	          DOMLazyTree.queueChild(lazyTree, mountImages[i]);
	        }
	      }
	    }
	  },
	
	  /**
	   * Receives a next element and updates the component.
	   *
	   * @internal
	   * @param {ReactElement} nextElement
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {object} context
	   */
	  receiveComponent: function (nextElement, transaction, context) {
	    var prevElement = this._currentElement;
	    this._currentElement = nextElement;
	    this.updateComponent(transaction, prevElement, nextElement, context);
	  },
	
	  /**
	   * Updates a DOM component after it has already been allocated and
	   * attached to the DOM. Reconciles the root DOM node, then recurses.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @param {ReactElement} prevElement
	   * @param {ReactElement} nextElement
	   * @internal
	   * @overridable
	   */
	  updateComponent: function (transaction, prevElement, nextElement, context) {
	    var lastProps = prevElement.props;
	    var nextProps = this._currentElement.props;
	
	    switch (this._tag) {
	      case 'input':
	        lastProps = ReactDOMInput.getHostProps(this, lastProps);
	        nextProps = ReactDOMInput.getHostProps(this, nextProps);
	        break;
	      case 'option':
	        lastProps = ReactDOMOption.getHostProps(this, lastProps);
	        nextProps = ReactDOMOption.getHostProps(this, nextProps);
	        break;
	      case 'select':
	        lastProps = ReactDOMSelect.getHostProps(this, lastProps);
	        nextProps = ReactDOMSelect.getHostProps(this, nextProps);
	        break;
	      case 'textarea':
	        lastProps = ReactDOMTextarea.getHostProps(this, lastProps);
	        nextProps = ReactDOMTextarea.getHostProps(this, nextProps);
	        break;
	    }
	
	    assertValidProps(this, nextProps);
	    this._updateDOMProperties(lastProps, nextProps, transaction);
	    this._updateDOMChildren(lastProps, nextProps, transaction, context);
	
	    switch (this._tag) {
	      case 'input':
	        // Update the wrapper around inputs *after* updating props. This has to
	        // happen after `_updateDOMProperties`. Otherwise HTML5 input validations
	        // raise warnings and prevent the new value from being assigned.
	        ReactDOMInput.updateWrapper(this);
	        break;
	      case 'textarea':
	        ReactDOMTextarea.updateWrapper(this);
	        break;
	      case 'select':
	        // <select> value update needs to occur after <option> children
	        // reconciliation
	        transaction.getReactMountReady().enqueue(postUpdateSelectWrapper, this);
	        break;
	    }
	  },
	
	  /**
	   * Reconciles the properties by detecting differences in property values and
	   * updating the DOM as necessary. This function is probably the single most
	   * critical path for performance optimization.
	   *
	   * TODO: Benchmark whether checking for changed values in memory actually
	   *       improves performance (especially statically positioned elements).
	   * TODO: Benchmark the effects of putting this at the top since 99% of props
	   *       do not change for a given reconciliation.
	   * TODO: Benchmark areas that can be improved with caching.
	   *
	   * @private
	   * @param {object} lastProps
	   * @param {object} nextProps
	   * @param {?DOMElement} node
	   */
	  _updateDOMProperties: function (lastProps, nextProps, transaction) {
	    var propKey;
	    var styleName;
	    var styleUpdates;
	    for (propKey in lastProps) {
	      if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey) || lastProps[propKey] == null) {
	        continue;
	      }
	      if (propKey === STYLE) {
	        var lastStyle = this._previousStyleCopy;
	        for (styleName in lastStyle) {
	          if (lastStyle.hasOwnProperty(styleName)) {
	            styleUpdates = styleUpdates || {};
	            styleUpdates[styleName] = '';
	          }
	        }
	        this._previousStyleCopy = null;
	      } else if (registrationNameModules.hasOwnProperty(propKey)) {
	        if (lastProps[propKey]) {
	          // Only call deleteListener if there was a listener previously or
	          // else willDeleteListener gets called when there wasn't actually a
	          // listener (e.g., onClick={null})
	          deleteListener(this, propKey);
	        }
	      } else if (isCustomComponent(this._tag, lastProps)) {
	        if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
	          DOMPropertyOperations.deleteValueForAttribute(getNode(this), propKey);
	        }
	      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {
	        DOMPropertyOperations.deleteValueForProperty(getNode(this), propKey);
	      }
	    }
	    for (propKey in nextProps) {
	      var nextProp = nextProps[propKey];
	      var lastProp = propKey === STYLE ? this._previousStyleCopy : lastProps != null ? lastProps[propKey] : undefined;
	      if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp || nextProp == null && lastProp == null) {
	        continue;
	      }
	      if (propKey === STYLE) {
	        if (nextProp) {
	          if (process.env.NODE_ENV !== 'production') {
	            checkAndWarnForMutatedStyle(this._previousStyleCopy, this._previousStyle, this);
	            this._previousStyle = nextProp;
	          }
	          nextProp = this._previousStyleCopy = _assign({}, nextProp);
	        } else {
	          this._previousStyleCopy = null;
	        }
	        if (lastProp) {
	          // Unset styles on `lastProp` but not on `nextProp`.
	          for (styleName in lastProp) {
	            if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {
	              styleUpdates = styleUpdates || {};
	              styleUpdates[styleName] = '';
	            }
	          }
	          // Update styles that changed since `lastProp`.
	          for (styleName in nextProp) {
	            if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {
	              styleUpdates = styleUpdates || {};
	              styleUpdates[styleName] = nextProp[styleName];
	            }
	          }
	        } else {
	          // Relies on `updateStylesByID` not mutating `styleUpdates`.
	          styleUpdates = nextProp;
	        }
	      } else if (registrationNameModules.hasOwnProperty(propKey)) {
	        if (nextProp) {
	          enqueuePutListener(this, propKey, nextProp, transaction);
	        } else if (lastProp) {
	          deleteListener(this, propKey);
	        }
	      } else if (isCustomComponent(this._tag, nextProps)) {
	        if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
	          DOMPropertyOperations.setValueForAttribute(getNode(this), propKey, nextProp);
	        }
	      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {
	        var node = getNode(this);
	        // If we're updating to null or undefined, we should remove the property
	        // from the DOM node instead of inadvertently setting to a string. This
	        // brings us in line with the same behavior we have on initial render.
	        if (nextProp != null) {
	          DOMPropertyOperations.setValueForProperty(node, propKey, nextProp);
	        } else {
	          DOMPropertyOperations.deleteValueForProperty(node, propKey);
	        }
	      }
	    }
	    if (styleUpdates) {
	      CSSPropertyOperations.setValueForStyles(getNode(this), styleUpdates, this);
	    }
	  },
	
	  /**
	   * Reconciles the children with the various properties that affect the
	   * children content.
	   *
	   * @param {object} lastProps
	   * @param {object} nextProps
	   * @param {ReactReconcileTransaction} transaction
	   * @param {object} context
	   */
	  _updateDOMChildren: function (lastProps, nextProps, transaction, context) {
	    var lastContent = CONTENT_TYPES[typeof lastProps.children] ? lastProps.children : null;
	    var nextContent = CONTENT_TYPES[typeof nextProps.children] ? nextProps.children : null;
	
	    var lastHtml = lastProps.dangerouslySetInnerHTML && lastProps.dangerouslySetInnerHTML.__html;
	    var nextHtml = nextProps.dangerouslySetInnerHTML && nextProps.dangerouslySetInnerHTML.__html;
	
	    // Note the use of `!=` which checks for null or undefined.
	    var lastChildren = lastContent != null ? null : lastProps.children;
	    var nextChildren = nextContent != null ? null : nextProps.children;
	
	    // If we're switching from children to content/html or vice versa, remove
	    // the old content
	    var lastHasContentOrHtml = lastContent != null || lastHtml != null;
	    var nextHasContentOrHtml = nextContent != null || nextHtml != null;
	    if (lastChildren != null && nextChildren == null) {
	      this.updateChildren(null, transaction, context);
	    } else if (lastHasContentOrHtml && !nextHasContentOrHtml) {
	      this.updateTextContent('');
	      if (process.env.NODE_ENV !== 'production') {
	        ReactInstrumentation.debugTool.onSetChildren(this._debugID, []);
	      }
	    }
	
	    if (nextContent != null) {
	      if (lastContent !== nextContent) {
	        this.updateTextContent('' + nextContent);
	        if (process.env.NODE_ENV !== 'production') {
	          setAndValidateContentChildDev.call(this, nextContent);
	        }
	      }
	    } else if (nextHtml != null) {
	      if (lastHtml !== nextHtml) {
	        this.updateMarkup('' + nextHtml);
	      }
	      if (process.env.NODE_ENV !== 'production') {
	        ReactInstrumentation.debugTool.onSetChildren(this._debugID, []);
	      }
	    } else if (nextChildren != null) {
	      if (process.env.NODE_ENV !== 'production') {
	        setAndValidateContentChildDev.call(this, null);
	      }
	
	      this.updateChildren(nextChildren, transaction, context);
	    }
	  },
	
	  getHostNode: function () {
	    return getNode(this);
	  },
	
	  /**
	   * Destroys all event registrations for this instance. Does not remove from
	   * the DOM. That must be done by the parent.
	   *
	   * @internal
	   */
	  unmountComponent: function (safely) {
	    switch (this._tag) {
	      case 'audio':
	      case 'form':
	      case 'iframe':
	      case 'img':
	      case 'link':
	      case 'object':
	      case 'source':
	      case 'video':
	        var listeners = this._wrapperState.listeners;
	        if (listeners) {
	          for (var i = 0; i < listeners.length; i++) {
	            listeners[i].remove();
	          }
	        }
	        break;
	      case 'html':
	      case 'head':
	      case 'body':
	        /**
	         * Components like <html> <head> and <body> can't be removed or added
	         * easily in a cross-browser way, however it's valuable to be able to
	         * take advantage of React's reconciliation for styling and <title>
	         * management. So we just document it and throw in dangerous cases.
	         */
	         true ? process.env.NODE_ENV !== 'production' ? invariant(false, '<%s> tried to unmount. Because of cross-browser quirks it is impossible to unmount some top-level components (eg <html>, <head>, and <body>) reliably and efficiently. To fix this, have a single top-level component that never unmounts render these elements.', this._tag) : _prodInvariant('66', this._tag) : void 0;
	        break;
	    }
	
	    this.unmountChildren(safely);
	    ReactDOMComponentTree.uncacheNode(this);
	    EventPluginHub.deleteAllListeners(this);
	    this._rootNodeID = 0;
	    this._domID = 0;
	    this._wrapperState = null;
	
	    if (process.env.NODE_ENV !== 'production') {
	      setAndValidateContentChildDev.call(this, null);
	    }
	  },
	
	  getPublicInstance: function () {
	    return getNode(this);
	  }
	
	};
	
	_assign(ReactDOMComponent.prototype, ReactDOMComponent.Mixin, ReactMultiChild.Mixin);
	
	module.exports = ReactDOMComponent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 93 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var ReactDOMComponentTree = __webpack_require__(34);
	
	var focusNode = __webpack_require__(94);
	
	var AutoFocusUtils = {
	  focusDOMComponent: function () {
	    focusNode(ReactDOMComponentTree.getNodeFromInstance(this));
	  }
	};
	
	module.exports = AutoFocusUtils;

/***/ },
/* 94 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	/**
	 * @param {DOMElement} node input/textarea to focus
	 */
	
	function focusNode(node) {
	  // IE8 can throw "Can't move focus to the control because it is invisible,
	  // not enabled, or of a type that does not accept the focus." for all kinds of
	  // reasons that are too expensive and fragile to test.
	  try {
	    node.focus();
	  } catch (e) {}
	}
	
	module.exports = focusNode;

/***/ },
/* 95 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var CSSProperty = __webpack_require__(96);
	var ExecutionEnvironment = __webpack_require__(48);
	var ReactInstrumentation = __webpack_require__(62);
	
	var camelizeStyleName = __webpack_require__(97);
	var dangerousStyleValue = __webpack_require__(99);
	var hyphenateStyleName = __webpack_require__(100);
	var memoizeStringOnly = __webpack_require__(102);
	var warning = __webpack_require__(11);
	
	var processStyleName = memoizeStringOnly(function (styleName) {
	  return hyphenateStyleName(styleName);
	});
	
	var hasShorthandPropertyBug = false;
	var styleFloatAccessor = 'cssFloat';
	if (ExecutionEnvironment.canUseDOM) {
	  var tempStyle = document.createElement('div').style;
	  try {
	    // IE8 throws "Invalid argument." if resetting shorthand style properties.
	    tempStyle.font = '';
	  } catch (e) {
	    hasShorthandPropertyBug = true;
	  }
	  // IE8 only supports accessing cssFloat (standard) as styleFloat
	  if (document.documentElement.style.cssFloat === undefined) {
	    styleFloatAccessor = 'styleFloat';
	  }
	}
	
	if (process.env.NODE_ENV !== 'production') {
	  // 'msTransform' is correct, but the other prefixes should be capitalized
	  var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;
	
	  // style values shouldn't contain a semicolon
	  var badStyleValueWithSemicolonPattern = /;\s*$/;
	
	  var warnedStyleNames = {};
	  var warnedStyleValues = {};
	  var warnedForNaNValue = false;
	
	  var warnHyphenatedStyleName = function (name, owner) {
	    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
	      return;
	    }
	
	    warnedStyleNames[name] = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported style property %s. Did you mean %s?%s', name, camelizeStyleName(name), checkRenderMessage(owner)) : void 0;
	  };
	
	  var warnBadVendoredStyleName = function (name, owner) {
	    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
	      return;
	    }
	
	    warnedStyleNames[name] = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported vendor-prefixed style property %s. Did you mean %s?%s', name, name.charAt(0).toUpperCase() + name.slice(1), checkRenderMessage(owner)) : void 0;
	  };
	
	  var warnStyleValueWithSemicolon = function (name, value, owner) {
	    if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {
	      return;
	    }
	
	    warnedStyleValues[value] = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Style property values shouldn\'t contain a semicolon.%s ' + 'Try "%s: %s" instead.', checkRenderMessage(owner), name, value.replace(badStyleValueWithSemicolonPattern, '')) : void 0;
	  };
	
	  var warnStyleValueIsNaN = function (name, value, owner) {
	    if (warnedForNaNValue) {
	      return;
	    }
	
	    warnedForNaNValue = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, '`NaN` is an invalid value for the `%s` css style property.%s', name, checkRenderMessage(owner)) : void 0;
	  };
	
	  var checkRenderMessage = function (owner) {
	    if (owner) {
	      var name = owner.getName();
	      if (name) {
	        return ' Check the render method of `' + name + '`.';
	      }
	    }
	    return '';
	  };
	
	  /**
	   * @param {string} name
	   * @param {*} value
	   * @param {ReactDOMComponent} component
	   */
	  var warnValidStyle = function (name, value, component) {
	    var owner;
	    if (component) {
	      owner = component._currentElement._owner;
	    }
	    if (name.indexOf('-') > -1) {
	      warnHyphenatedStyleName(name, owner);
	    } else if (badVendoredStyleNamePattern.test(name)) {
	      warnBadVendoredStyleName(name, owner);
	    } else if (badStyleValueWithSemicolonPattern.test(value)) {
	      warnStyleValueWithSemicolon(name, value, owner);
	    }
	
	    if (typeof value === 'number' && isNaN(value)) {
	      warnStyleValueIsNaN(name, value, owner);
	    }
	  };
	}
	
	/**
	 * Operations for dealing with CSS properties.
	 */
	var CSSPropertyOperations = {
	
	  /**
	   * Serializes a mapping of style properties for use as inline styles:
	   *
	   *   > createMarkupForStyles({width: '200px', height: 0})
	   *   "width:200px;height:0;"
	   *
	   * Undefined values are ignored so that declarative programming is easier.
	   * The result should be HTML-escaped before insertion into the DOM.
	   *
	   * @param {object} styles
	   * @param {ReactDOMComponent} component
	   * @return {?string}
	   */
	  createMarkupForStyles: function (styles, component) {
	    var serialized = '';
	    for (var styleName in styles) {
	      if (!styles.hasOwnProperty(styleName)) {
	        continue;
	      }
	      var styleValue = styles[styleName];
	      if (process.env.NODE_ENV !== 'production') {
	        warnValidStyle(styleName, styleValue, component);
	      }
	      if (styleValue != null) {
	        serialized += processStyleName(styleName) + ':';
	        serialized += dangerousStyleValue(styleName, styleValue, component) + ';';
	      }
	    }
	    return serialized || null;
	  },
	
	  /**
	   * Sets the value for multiple styles on a node.  If a value is specified as
	   * '' (empty string), the corresponding style property will be unset.
	   *
	   * @param {DOMElement} node
	   * @param {object} styles
	   * @param {ReactDOMComponent} component
	   */
	  setValueForStyles: function (node, styles, component) {
	    if (process.env.NODE_ENV !== 'production') {
	      ReactInstrumentation.debugTool.onHostOperation({
	        instanceID: component._debugID,
	        type: 'update styles',
	        payload: styles
	      });
	    }
	
	    var style = node.style;
	    for (var styleName in styles) {
	      if (!styles.hasOwnProperty(styleName)) {
	        continue;
	      }
	      if (process.env.NODE_ENV !== 'production') {
	        warnValidStyle(styleName, styles[styleName], component);
	      }
	      var styleValue = dangerousStyleValue(styleName, styles[styleName], component);
	      if (styleName === 'float' || styleName === 'cssFloat') {
	        styleName = styleFloatAccessor;
	      }
	      if (styleValue) {
	        style[styleName] = styleValue;
	      } else {
	        var expansion = hasShorthandPropertyBug && CSSProperty.shorthandPropertyExpansions[styleName];
	        if (expansion) {
	          // Shorthand property that IE8 won't like unsetting, so unset each
	          // component to placate it
	          for (var individualStyleName in expansion) {
	            style[individualStyleName] = '';
	          }
	        } else {
	          style[styleName] = '';
	        }
	      }
	    }
	  }
	
	};
	
	module.exports = CSSPropertyOperations;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 96 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	/**
	 * CSS properties which accept numbers but are not in units of "px".
	 */
	
	var isUnitlessNumber = {
	  animationIterationCount: true,
	  borderImageOutset: true,
	  borderImageSlice: true,
	  borderImageWidth: true,
	  boxFlex: true,
	  boxFlexGroup: true,
	  boxOrdinalGroup: true,
	  columnCount: true,
	  flex: true,
	  flexGrow: true,
	  flexPositive: true,
	  flexShrink: true,
	  flexNegative: true,
	  flexOrder: true,
	  gridRow: true,
	  gridColumn: true,
	  fontWeight: true,
	  lineClamp: true,
	  lineHeight: true,
	  opacity: true,
	  order: true,
	  orphans: true,
	  tabSize: true,
	  widows: true,
	  zIndex: true,
	  zoom: true,
	
	  // SVG-related properties
	  fillOpacity: true,
	  floodOpacity: true,
	  stopOpacity: true,
	  strokeDasharray: true,
	  strokeDashoffset: true,
	  strokeMiterlimit: true,
	  strokeOpacity: true,
	  strokeWidth: true
	};
	
	/**
	 * @param {string} prefix vendor-specific prefix, eg: Webkit
	 * @param {string} key style name, eg: transitionDuration
	 * @return {string} style name prefixed with `prefix`, properly camelCased, eg:
	 * WebkitTransitionDuration
	 */
	function prefixKey(prefix, key) {
	  return prefix + key.charAt(0).toUpperCase() + key.substring(1);
	}
	
	/**
	 * Support style names that may come passed in prefixed by adding permutations
	 * of vendor prefixes.
	 */
	var prefixes = ['Webkit', 'ms', 'Moz', 'O'];
	
	// Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an
	// infinite loop, because it iterates over the newly added props too.
	Object.keys(isUnitlessNumber).forEach(function (prop) {
	  prefixes.forEach(function (prefix) {
	    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];
	  });
	});
	
	/**
	 * Most style properties can be unset by doing .style[prop] = '' but IE8
	 * doesn't like doing that with shorthand properties so for the properties that
	 * IE8 breaks on, which are listed here, we instead unset each of the
	 * individual properties. See http://bugs.jquery.com/ticket/12385.
	 * The 4-value 'clock' properties like margin, padding, border-width seem to
	 * behave without any problems. Curiously, list-style works too without any
	 * special prodding.
	 */
	var shorthandPropertyExpansions = {
	  background: {
	    backgroundAttachment: true,
	    backgroundColor: true,
	    backgroundImage: true,
	    backgroundPositionX: true,
	    backgroundPositionY: true,
	    backgroundRepeat: true
	  },
	  backgroundPosition: {
	    backgroundPositionX: true,
	    backgroundPositionY: true
	  },
	  border: {
	    borderWidth: true,
	    borderStyle: true,
	    borderColor: true
	  },
	  borderBottom: {
	    borderBottomWidth: true,
	    borderBottomStyle: true,
	    borderBottomColor: true
	  },
	  borderLeft: {
	    borderLeftWidth: true,
	    borderLeftStyle: true,
	    borderLeftColor: true
	  },
	  borderRight: {
	    borderRightWidth: true,
	    borderRightStyle: true,
	    borderRightColor: true
	  },
	  borderTop: {
	    borderTopWidth: true,
	    borderTopStyle: true,
	    borderTopColor: true
	  },
	  font: {
	    fontStyle: true,
	    fontVariant: true,
	    fontWeight: true,
	    fontSize: true,
	    lineHeight: true,
	    fontFamily: true
	  },
	  outline: {
	    outlineWidth: true,
	    outlineStyle: true,
	    outlineColor: true
	  }
	};
	
	var CSSProperty = {
	  isUnitlessNumber: isUnitlessNumber,
	  shorthandPropertyExpansions: shorthandPropertyExpansions
	};
	
	module.exports = CSSProperty;

/***/ },
/* 97 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */
	
	'use strict';
	
	var camelize = __webpack_require__(98);
	
	var msPattern = /^-ms-/;
	
	/**
	 * Camelcases a hyphenated CSS property name, for example:
	 *
	 *   > camelizeStyleName('background-color')
	 *   < "backgroundColor"
	 *   > camelizeStyleName('-moz-transition')
	 *   < "MozTransition"
	 *   > camelizeStyleName('-ms-transition')
	 *   < "msTransition"
	 *
	 * As Andi Smith suggests
	 * (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
	 * is converted to lowercase `ms`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function camelizeStyleName(string) {
	  return camelize(string.replace(msPattern, 'ms-'));
	}
	
	module.exports = camelizeStyleName;

/***/ },
/* 98 */
/***/ function(module, exports) {

	"use strict";
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */
	
	var _hyphenPattern = /-(.)/g;
	
	/**
	 * Camelcases a hyphenated string, for example:
	 *
	 *   > camelize('background-color')
	 *   < "backgroundColor"
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function camelize(string) {
	  return string.replace(_hyphenPattern, function (_, character) {
	    return character.toUpperCase();
	  });
	}
	
	module.exports = camelize;

/***/ },
/* 99 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var CSSProperty = __webpack_require__(96);
	var warning = __webpack_require__(11);
	
	var isUnitlessNumber = CSSProperty.isUnitlessNumber;
	var styleWarnings = {};
	
	/**
	 * Convert a value into the proper css writable value. The style name `name`
	 * should be logical (no hyphens), as specified
	 * in `CSSProperty.isUnitlessNumber`.
	 *
	 * @param {string} name CSS property name such as `topMargin`.
	 * @param {*} value CSS property value such as `10px`.
	 * @param {ReactDOMComponent} component
	 * @return {string} Normalized style value with dimensions applied.
	 */
	function dangerousStyleValue(name, value, component) {
	  // Note that we've removed escapeTextForBrowser() calls here since the
	  // whole string will be escaped when the attribute is injected into
	  // the markup. If you provide unsafe user data here they can inject
	  // arbitrary CSS which may be problematic (I couldn't repro this):
	  // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet
	  // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/
	  // This is not an XSS hole but instead a potential CSS injection issue
	  // which has lead to a greater discussion about how we're going to
	  // trust URLs moving forward. See #2115901
	
	  var isEmpty = value == null || typeof value === 'boolean' || value === '';
	  if (isEmpty) {
	    return '';
	  }
	
	  var isNonNumeric = isNaN(value);
	  if (isNonNumeric || value === 0 || isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name]) {
	    return '' + value; // cast to string
	  }
	
	  if (typeof value === 'string') {
	    if (process.env.NODE_ENV !== 'production') {
	      // Allow '0' to pass through without warning. 0 is already special and
	      // doesn't require units, so we don't need to warn about it.
	      if (component && value !== '0') {
	        var owner = component._currentElement._owner;
	        var ownerName = owner ? owner.getName() : null;
	        if (ownerName && !styleWarnings[ownerName]) {
	          styleWarnings[ownerName] = {};
	        }
	        var warned = false;
	        if (ownerName) {
	          var warnings = styleWarnings[ownerName];
	          warned = warnings[name];
	          if (!warned) {
	            warnings[name] = true;
	          }
	        }
	        if (!warned) {
	          process.env.NODE_ENV !== 'production' ? warning(false, 'a `%s` tag (owner: `%s`) was passed a numeric string value ' + 'for CSS property `%s` (value: `%s`) which will be treated ' + 'as a unitless number in a future version of React.', component._currentElement.type, ownerName || 'unknown', name, value) : void 0;
	        }
	      }
	    }
	    value = value.trim();
	  }
	  return value + 'px';
	}
	
	module.exports = dangerousStyleValue;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 100 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */
	
	'use strict';
	
	var hyphenate = __webpack_require__(101);
	
	var msPattern = /^ms-/;
	
	/**
	 * Hyphenates a camelcased CSS property name, for example:
	 *
	 *   > hyphenateStyleName('backgroundColor')
	 *   < "background-color"
	 *   > hyphenateStyleName('MozTransition')
	 *   < "-moz-transition"
	 *   > hyphenateStyleName('msTransition')
	 *   < "-ms-transition"
	 *
	 * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix
	 * is converted to `-ms-`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function hyphenateStyleName(string) {
	  return hyphenate(string).replace(msPattern, '-ms-');
	}
	
	module.exports = hyphenateStyleName;

/***/ },
/* 101 */
/***/ function(module, exports) {

	'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */
	
	var _uppercasePattern = /([A-Z])/g;
	
	/**
	 * Hyphenates a camelcased string, for example:
	 *
	 *   > hyphenate('backgroundColor')
	 *   < "background-color"
	 *
	 * For CSS style names, use `hyphenateStyleName` instead which works properly
	 * with all vendor prefixes, including `ms`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function hyphenate(string) {
	  return string.replace(_uppercasePattern, '-$1').toLowerCase();
	}
	
	module.exports = hyphenate;

/***/ },
/* 102 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 * @typechecks static-only
	 */
	
	'use strict';
	
	/**
	 * Memoizes the return value of a function that accepts one string argument.
	 */
	
	function memoizeStringOnly(callback) {
	  var cache = {};
	  return function (string) {
	    if (!cache.hasOwnProperty(string)) {
	      cache[string] = callback.call(this, string);
	    }
	    return cache[string];
	  };
	}
	
	module.exports = memoizeStringOnly;

/***/ },
/* 103 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var DOMProperty = __webpack_require__(36);
	var ReactDOMComponentTree = __webpack_require__(34);
	var ReactInstrumentation = __webpack_require__(62);
	
	var quoteAttributeValueForBrowser = __webpack_require__(104);
	var warning = __webpack_require__(11);
	
	var VALID_ATTRIBUTE_NAME_REGEX = new RegExp('^[' + DOMProperty.ATTRIBUTE_NAME_START_CHAR + '][' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$');
	var illegalAttributeNameCache = {};
	var validatedAttributeNameCache = {};
	
	function isAttributeNameSafe(attributeName) {
	  if (validatedAttributeNameCache.hasOwnProperty(attributeName)) {
	    return true;
	  }
	  if (illegalAttributeNameCache.hasOwnProperty(attributeName)) {
	    return false;
	  }
	  if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {
	    validatedAttributeNameCache[attributeName] = true;
	    return true;
	  }
	  illegalAttributeNameCache[attributeName] = true;
	  process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid attribute name: `%s`', attributeName) : void 0;
	  return false;
	}
	
	function shouldIgnoreValue(propertyInfo, value) {
	  return value == null || propertyInfo.hasBooleanValue && !value || propertyInfo.hasNumericValue && isNaN(value) || propertyInfo.hasPositiveNumericValue && value < 1 || propertyInfo.hasOverloadedBooleanValue && value === false;
	}
	
	/**
	 * Operations for dealing with DOM properties.
	 */
	var DOMPropertyOperations = {
	
	  /**
	   * Creates markup for the ID property.
	   *
	   * @param {string} id Unescaped ID.
	   * @return {string} Markup string.
	   */
	  createMarkupForID: function (id) {
	    return DOMProperty.ID_ATTRIBUTE_NAME + '=' + quoteAttributeValueForBrowser(id);
	  },
	
	  setAttributeForID: function (node, id) {
	    node.setAttribute(DOMProperty.ID_ATTRIBUTE_NAME, id);
	  },
	
	  createMarkupForRoot: function () {
	    return DOMProperty.ROOT_ATTRIBUTE_NAME + '=""';
	  },
	
	  setAttributeForRoot: function (node) {
	    node.setAttribute(DOMProperty.ROOT_ATTRIBUTE_NAME, '');
	  },
	
	  /**
	   * Creates markup for a property.
	   *
	   * @param {string} name
	   * @param {*} value
	   * @return {?string} Markup string, or null if the property was invalid.
	   */
	  createMarkupForProperty: function (name, value) {
	    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
	    if (propertyInfo) {
	      if (shouldIgnoreValue(propertyInfo, value)) {
	        return '';
	      }
	      var attributeName = propertyInfo.attributeName;
	      if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
	        return attributeName + '=""';
	      }
	      return attributeName + '=' + quoteAttributeValueForBrowser(value);
	    } else if (DOMProperty.isCustomAttribute(name)) {
	      if (value == null) {
	        return '';
	      }
	      return name + '=' + quoteAttributeValueForBrowser(value);
	    }
	    return null;
	  },
	
	  /**
	   * Creates markup for a custom property.
	   *
	   * @param {string} name
	   * @param {*} value
	   * @return {string} Markup string, or empty string if the property was invalid.
	   */
	  createMarkupForCustomAttribute: function (name, value) {
	    if (!isAttributeNameSafe(name) || value == null) {
	      return '';
	    }
	    return name + '=' + quoteAttributeValueForBrowser(value);
	  },
	
	  /**
	   * Sets the value for a property on a node.
	   *
	   * @param {DOMElement} node
	   * @param {string} name
	   * @param {*} value
	   */
	  setValueForProperty: function (node, name, value) {
	    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
	    if (propertyInfo) {
	      var mutationMethod = propertyInfo.mutationMethod;
	      if (mutationMethod) {
	        mutationMethod(node, value);
	      } else if (shouldIgnoreValue(propertyInfo, value)) {
	        this.deleteValueForProperty(node, name);
	        return;
	      } else if (propertyInfo.mustUseProperty) {
	        // Contrary to `setAttribute`, object properties are properly
	        // `toString`ed by IE8/9.
	        node[propertyInfo.propertyName] = value;
	      } else {
	        var attributeName = propertyInfo.attributeName;
	        var namespace = propertyInfo.attributeNamespace;
	        // `setAttribute` with objects becomes only `[object]` in IE8/9,
	        // ('' + value) makes it output the correct toString()-value.
	        if (namespace) {
	          node.setAttributeNS(namespace, attributeName, '' + value);
	        } else if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
	          node.setAttribute(attributeName, '');
	        } else {
	          node.setAttribute(attributeName, '' + value);
	        }
	      }
	    } else if (DOMProperty.isCustomAttribute(name)) {
	      DOMPropertyOperations.setValueForAttribute(node, name, value);
	      return;
	    }
	
	    if (process.env.NODE_ENV !== 'production') {
	      var payload = {};
	      payload[name] = value;
	      ReactInstrumentation.debugTool.onHostOperation({
	        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,
	        type: 'update attribute',
	        payload: payload
	      });
	    }
	  },
	
	  setValueForAttribute: function (node, name, value) {
	    if (!isAttributeNameSafe(name)) {
	      return;
	    }
	    if (value == null) {
	      node.removeAttribute(name);
	    } else {
	      node.setAttribute(name, '' + value);
	    }
	
	    if (process.env.NODE_ENV !== 'production') {
	      var payload = {};
	      payload[name] = value;
	      ReactInstrumentation.debugTool.onHostOperation({
	        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,
	        type: 'update attribute',
	        payload: payload
	      });
	    }
	  },
	
	  /**
	   * Deletes an attributes from a node.
	   *
	   * @param {DOMElement} node
	   * @param {string} name
	   */
	  deleteValueForAttribute: function (node, name) {
	    node.removeAttribute(name);
	    if (process.env.NODE_ENV !== 'production') {
	      ReactInstrumentation.debugTool.onHostOperation({
	        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,
	        type: 'remove attribute',
	        payload: name
	      });
	    }
	  },
	
	  /**
	   * Deletes the value for a property on a node.
	   *
	   * @param {DOMElement} node
	   * @param {string} name
	   */
	  deleteValueForProperty: function (node, name) {
	    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
	    if (propertyInfo) {
	      var mutationMethod = propertyInfo.mutationMethod;
	      if (mutationMethod) {
	        mutationMethod(node, undefined);
	      } else if (propertyInfo.mustUseProperty) {
	        var propName = propertyInfo.propertyName;
	        if (propertyInfo.hasBooleanValue) {
	          node[propName] = false;
	        } else {
	          node[propName] = '';
	        }
	      } else {
	        node.removeAttribute(propertyInfo.attributeName);
	      }
	    } else if (DOMProperty.isCustomAttribute(name)) {
	      node.removeAttribute(name);
	    }
	
	    if (process.env.NODE_ENV !== 'production') {
	      ReactInstrumentation.debugTool.onHostOperation({
	        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,
	        type: 'remove attribute',
	        payload: name
	      });
	    }
	  }
	
	};
	
	module.exports = DOMPropertyOperations;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 104 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var escapeTextContentForBrowser = __webpack_require__(86);
	
	/**
	 * Escapes attribute value to prevent scripting attacks.
	 *
	 * @param {*} value Value to escape.
	 * @return {string} An escaped string.
	 */
	function quoteAttributeValueForBrowser(value) {
	  return '"' + escapeTextContentForBrowser(value) + '"';
	}
	
	module.exports = quoteAttributeValueForBrowser;

/***/ },
/* 105 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(4);
	
	var EventPluginRegistry = __webpack_require__(43);
	var ReactEventEmitterMixin = __webpack_require__(106);
	var ViewportMetrics = __webpack_require__(76);
	
	var getVendorPrefixedEventName = __webpack_require__(107);
	var isEventSupported = __webpack_require__(70);
	
	/**
	 * Summary of `ReactBrowserEventEmitter` event handling:
	 *
	 *  - Top-level delegation is used to trap most native browser events. This
	 *    may only occur in the main thread and is the responsibility of
	 *    ReactEventListener, which is injected and can therefore support pluggable
	 *    event sources. This is the only work that occurs in the main thread.
	 *
	 *  - We normalize and de-duplicate events to account for browser quirks. This
	 *    may be done in the worker thread.
	 *
	 *  - Forward these native events (with the associated top-level type used to
	 *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want
	 *    to extract any synthetic events.
	 *
	 *  - The `EventPluginHub` will then process each event by annotating them with
	 *    "dispatches", a sequence of listeners and IDs that care about that event.
	 *
	 *  - The `EventPluginHub` then dispatches the events.
	 *
	 * Overview of React and the event system:
	 *
	 * +------------+    .
	 * |    DOM     |    .
	 * +------------+    .
	 *       |           .
	 *       v           .
	 * +------------+    .
	 * | ReactEvent |    .
	 * |  Listener  |    .
	 * +------------+    .                         +-----------+
	 *       |           .               +--------+|SimpleEvent|
	 *       |           .               |         |Plugin     |
	 * +-----|------+    .               v         +-----------+
	 * |     |      |    .    +--------------+                    +------------+
	 * |     +-----------.--->|EventPluginHub|                    |    Event   |
	 * |            |    .    |              |     +-----------+  | Propagators|
	 * | ReactEvent |    .    |              |     |TapEvent   |  |------------|
	 * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|
	 * |            |    .    |              |     +-----------+  |  utilities |
	 * |     +-----------.--->|              |                    +------------+
	 * |     |      |    .    +--------------+
	 * +-----|------+    .                ^        +-----------+
	 *       |           .                |        |Enter/Leave|
	 *       +           .                +-------+|Plugin     |
	 * +-------------+   .                         +-----------+
	 * | application |   .
	 * |-------------|   .
	 * |             |   .
	 * |             |   .
	 * +-------------+   .
	 *                   .
	 *    React Core     .  General Purpose Event Plugin System
	 */
	
	var hasEventPageXY;
	var alreadyListeningTo = {};
	var isMonitoringScrollValue = false;
	var reactTopListenersCounter = 0;
	
	// For events like 'submit' which don't consistently bubble (which we trap at a
	// lower node than `document`), binding at `document` would cause duplicate
	// events so we don't include them here
	var topEventMapping = {
	  topAbort: 'abort',
	  topAnimationEnd: getVendorPrefixedEventName('animationend') || 'animationend',
	  topAnimationIteration: getVendorPrefixedEventName('animationiteration') || 'animationiteration',
	  topAnimationStart: getVendorPrefixedEventName('animationstart') || 'animationstart',
	  topBlur: 'blur',
	  topCanPlay: 'canplay',
	  topCanPlayThrough: 'canplaythrough',
	  topChange: 'change',
	  topClick: 'click',
	  topCompositionEnd: 'compositionend',
	  topCompositionStart: 'compositionstart',
	  topCompositionUpdate: 'compositionupdate',
	  topContextMenu: 'contextmenu',
	  topCopy: 'copy',
	  topCut: 'cut',
	  topDoubleClick: 'dblclick',
	  topDrag: 'drag',
	  topDragEnd: 'dragend',
	  topDragEnter: 'dragenter',
	  topDragExit: 'dragexit',
	  topDragLeave: 'dragleave',
	  topDragOver: 'dragover',
	  topDragStart: 'dragstart',
	  topDrop: 'drop',
	  topDurationChange: 'durationchange',
	  topEmptied: 'emptied',
	  topEncrypted: 'encrypted',
	  topEnded: 'ended',
	  topError: 'error',
	  topFocus: 'focus',
	  topInput: 'input',
	  topKeyDown: 'keydown',
	  topKeyPress: 'keypress',
	  topKeyUp: 'keyup',
	  topLoadedData: 'loadeddata',
	  topLoadedMetadata: 'loadedmetadata',
	  topLoadStart: 'loadstart',
	  topMouseDown: 'mousedown',
	  topMouseMove: 'mousemove',
	  topMouseOut: 'mouseout',
	  topMouseOver: 'mouseover',
	  topMouseUp: 'mouseup',
	  topPaste: 'paste',
	  topPause: 'pause',
	  topPlay: 'play',
	  topPlaying: 'playing',
	  topProgress: 'progress',
	  topRateChange: 'ratechange',
	  topScroll: 'scroll',
	  topSeeked: 'seeked',
	  topSeeking: 'seeking',
	  topSelectionChange: 'selectionchange',
	  topStalled: 'stalled',
	  topSuspend: 'suspend',
	  topTextInput: 'textInput',
	  topTimeUpdate: 'timeupdate',
	  topTouchCancel: 'touchcancel',
	  topTouchEnd: 'touchend',
	  topTouchMove: 'touchmove',
	  topTouchStart: 'touchstart',
	  topTransitionEnd: getVendorPrefixedEventName('transitionend') || 'transitionend',
	  topVolumeChange: 'volumechange',
	  topWaiting: 'waiting',
	  topWheel: 'wheel'
	};
	
	/**
	 * To ensure no conflicts with other potential React instances on the page
	 */
	var topListenersIDKey = '_reactListenersID' + String(Math.random()).slice(2);
	
	function getListeningForDocument(mountAt) {
	  // In IE8, `mountAt` is a host object and doesn't have `hasOwnProperty`
	  // directly.
	  if (!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)) {
	    mountAt[topListenersIDKey] = reactTopListenersCounter++;
	    alreadyListeningTo[mountAt[topListenersIDKey]] = {};
	  }
	  return alreadyListeningTo[mountAt[topListenersIDKey]];
	}
	
	/**
	 * `ReactBrowserEventEmitter` is used to attach top-level event listeners. For
	 * example:
	 *
	 *   EventPluginHub.putListener('myID', 'onClick', myFunction);
	 *
	 * This would allocate a "registration" of `('onClick', myFunction)` on 'myID'.
	 *
	 * @internal
	 */
	var ReactBrowserEventEmitter = _assign({}, ReactEventEmitterMixin, {
	
	  /**
	   * Injectable event backend
	   */
	  ReactEventListener: null,
	
	  injection: {
	    /**
	     * @param {object} ReactEventListener
	     */
	    injectReactEventListener: function (ReactEventListener) {
	      ReactEventListener.setHandleTopLevel(ReactBrowserEventEmitter.handleTopLevel);
	      ReactBrowserEventEmitter.ReactEventListener = ReactEventListener;
	    }
	  },
	
	  /**
	   * Sets whether or not any created callbacks should be enabled.
	   *
	   * @param {boolean} enabled True if callbacks should be enabled.
	   */
	  setEnabled: function (enabled) {
	    if (ReactBrowserEventEmitter.ReactEventListener) {
	      ReactBrowserEventEmitter.ReactEventListener.setEnabled(enabled);
	    }
	  },
	
	  /**
	   * @return {boolean} True if callbacks are enabled.
	   */
	  isEnabled: function () {
	    return !!(ReactBrowserEventEmitter.ReactEventListener && ReactBrowserEventEmitter.ReactEventListener.isEnabled());
	  },
	
	  /**
	   * We listen for bubbled touch events on the document object.
	   *
	   * Firefox v8.01 (and possibly others) exhibited strange behavior when
	   * mounting `onmousemove` events at some node that was not the document
	   * element. The symptoms were that if your mouse is not moving over something
	   * contained within that mount point (for example on the background) the
	   * top-level listeners for `onmousemove` won't be called. However, if you
	   * register the `mousemove` on the document object, then it will of course
	   * catch all `mousemove`s. This along with iOS quirks, justifies restricting
	   * top-level listeners to the document object only, at least for these
	   * movement types of events and possibly all events.
	   *
	   * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
	   *
	   * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but
	   * they bubble to document.
	   *
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   * @param {object} contentDocumentHandle Document which owns the container
	   */
	  listenTo: function (registrationName, contentDocumentHandle) {
	    var mountAt = contentDocumentHandle;
	    var isListening = getListeningForDocument(mountAt);
	    var dependencies = EventPluginRegistry.registrationNameDependencies[registrationName];
	
	    for (var i = 0; i < dependencies.length; i++) {
	      var dependency = dependencies[i];
	      if (!(isListening.hasOwnProperty(dependency) && isListening[dependency])) {
	        if (dependency === 'topWheel') {
	          if (isEventSupported('wheel')) {
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topWheel', 'wheel', mountAt);
	          } else if (isEventSupported('mousewheel')) {
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topWheel', 'mousewheel', mountAt);
	          } else {
	            // Firefox needs to capture a different mouse scroll event.
	            // @see http://www.quirksmode.org/dom/events/tests/scroll.html
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topWheel', 'DOMMouseScroll', mountAt);
	          }
	        } else if (dependency === 'topScroll') {
	
	          if (isEventSupported('scroll', true)) {
	            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent('topScroll', 'scroll', mountAt);
	          } else {
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topScroll', 'scroll', ReactBrowserEventEmitter.ReactEventListener.WINDOW_HANDLE);
	          }
	        } else if (dependency === 'topFocus' || dependency === 'topBlur') {
	
	          if (isEventSupported('focus', true)) {
	            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent('topFocus', 'focus', mountAt);
	            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent('topBlur', 'blur', mountAt);
	          } else if (isEventSupported('focusin')) {
	            // IE has `focusin` and `focusout` events which bubble.
	            // @see http://www.quirksmode.org/blog/archives/2008/04/delegating_the.html
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topFocus', 'focusin', mountAt);
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topBlur', 'focusout', mountAt);
	          }
	
	          // to make sure blur and focus event listeners are only attached once
	          isListening.topBlur = true;
	          isListening.topFocus = true;
	        } else if (topEventMapping.hasOwnProperty(dependency)) {
	          ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(dependency, topEventMapping[dependency], mountAt);
	        }
	
	        isListening[dependency] = true;
	      }
	    }
	  },
	
	  trapBubbledEvent: function (topLevelType, handlerBaseName, handle) {
	    return ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelType, handlerBaseName, handle);
	  },
	
	  trapCapturedEvent: function (topLevelType, handlerBaseName, handle) {
	    return ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelType, handlerBaseName, handle);
	  },
	
	  /**
	   * Protect against document.createEvent() returning null
	   * Some popup blocker extensions appear to do this:
	   * https://github.com/facebook/react/issues/6887
	   */
	  supportsEventPageXY: function () {
	    if (!document.createEvent) {
	      return false;
	    }
	    var ev = document.createEvent('MouseEvent');
	    return ev != null && 'pageX' in ev;
	  },
	
	  /**
	   * Listens to window scroll and resize events. We cache scroll values so that
	   * application code can access them without triggering reflows.
	   *
	   * ViewportMetrics is only used by SyntheticMouse/TouchEvent and only when
	   * pageX/pageY isn't supported (legacy browsers).
	   *
	   * NOTE: Scroll events do not bubble.
	   *
	   * @see http://www.quirksmode.org/dom/events/scroll.html
	   */
	  ensureScrollValueMonitoring: function () {
	    if (hasEventPageXY === undefined) {
	      hasEventPageXY = ReactBrowserEventEmitter.supportsEventPageXY();
	    }
	    if (!hasEventPageXY && !isMonitoringScrollValue) {
	      var refresh = ViewportMetrics.refreshScrollValues;
	      ReactBrowserEventEmitter.ReactEventListener.monitorScrollValue(refresh);
	      isMonitoringScrollValue = true;
	    }
	  }
	
	});
	
	module.exports = ReactBrowserEventEmitter;

/***/ },
/* 106 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var EventPluginHub = __webpack_require__(42);
	
	function runEventQueueInBatch(events) {
	  EventPluginHub.enqueueEvents(events);
	  EventPluginHub.processEventQueue(false);
	}
	
	var ReactEventEmitterMixin = {
	
	  /**
	   * Streams a fired top-level event to `EventPluginHub` where plugins have the
	   * opportunity to create `ReactEvent`s to be dispatched.
	   */
	  handleTopLevel: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var events = EventPluginHub.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
	    runEventQueueInBatch(events);
	  }
	};
	
	module.exports = ReactEventEmitterMixin;

/***/ },
/* 107 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(48);
	
	/**
	 * Generate a mapping of standard vendor prefixes using the defined style property and event name.
	 *
	 * @param {string} styleProp
	 * @param {string} eventName
	 * @returns {object}
	 */
	function makePrefixMap(styleProp, eventName) {
	  var prefixes = {};
	
	  prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();
	  prefixes['Webkit' + styleProp] = 'webkit' + eventName;
	  prefixes['Moz' + styleProp] = 'moz' + eventName;
	  prefixes['ms' + styleProp] = 'MS' + eventName;
	  prefixes['O' + styleProp] = 'o' + eventName.toLowerCase();
	
	  return prefixes;
	}
	
	/**
	 * A list of event names to a configurable list of vendor prefixes.
	 */
	var vendorPrefixes = {
	  animationend: makePrefixMap('Animation', 'AnimationEnd'),
	  animationiteration: makePrefixMap('Animation', 'AnimationIteration'),
	  animationstart: makePrefixMap('Animation', 'AnimationStart'),
	  transitionend: makePrefixMap('Transition', 'TransitionEnd')
	};
	
	/**
	 * Event names that have already been detected and prefixed (if applicable).
	 */
	var prefixedEventNames = {};
	
	/**
	 * Element to check for prefixes on.
	 */
	var style = {};
	
	/**
	 * Bootstrap if a DOM exists.
	 */
	if (ExecutionEnvironment.canUseDOM) {
	  style = document.createElement('div').style;
	
	  // On some platforms, in particular some releases of Android 4.x,
	  // the un-prefixed "animation" and "transition" properties are defined on the
	  // style object but the events that fire will still be prefixed, so we need
	  // to check if the un-prefixed events are usable, and if not remove them from the map.
	  if (!('AnimationEvent' in window)) {
	    delete vendorPrefixes.animationend.animation;
	    delete vendorPrefixes.animationiteration.animation;
	    delete vendorPrefixes.animationstart.animation;
	  }
	
	  // Same as above
	  if (!('TransitionEvent' in window)) {
	    delete vendorPrefixes.transitionend.transition;
	  }
	}
	
	/**
	 * Attempts to determine the correct vendor prefixed event name.
	 *
	 * @param {string} eventName
	 * @returns {string}
	 */
	function getVendorPrefixedEventName(eventName) {
	  if (prefixedEventNames[eventName]) {
	    return prefixedEventNames[eventName];
	  } else if (!vendorPrefixes[eventName]) {
	    return eventName;
	  }
	
	  var prefixMap = vendorPrefixes[eventName];
	
	  for (var styleProp in prefixMap) {
	    if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) {
	      return prefixedEventNames[eventName] = prefixMap[styleProp];
	    }
	  }
	
	  return '';
	}
	
	module.exports = getVendorPrefixedEventName;

/***/ },
/* 108 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(35),
	    _assign = __webpack_require__(4);
	
	var DOMPropertyOperations = __webpack_require__(103);
	var LinkedValueUtils = __webpack_require__(109);
	var ReactDOMComponentTree = __webpack_require__(34);
	var ReactUpdates = __webpack_require__(56);
	
	var invariant = __webpack_require__(8);
	var warning = __webpack_require__(11);
	
	var didWarnValueLink = false;
	var didWarnCheckedLink = false;
	var didWarnValueDefaultValue = false;
	var didWarnCheckedDefaultChecked = false;
	var didWarnControlledToUncontrolled = false;
	var didWarnUncontrolledToControlled = false;
	
	function forceUpdateIfMounted() {
	  if (this._rootNodeID) {
	    // DOM component is still mounted; update
	    ReactDOMInput.updateWrapper(this);
	  }
	}
	
	function isControlled(props) {
	  var usesChecked = props.type === 'checkbox' || props.type === 'radio';
	  return usesChecked ? props.checked != null : props.value != null;
	}
	
	/**
	 * Implements an <input> host component that allows setting these optional
	 * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.
	 *
	 * If `checked` or `value` are not supplied (or null/undefined), user actions
	 * that affect the checked state or value will trigger updates to the element.
	 *
	 * If they are supplied (and not null/undefined), the rendered element will not
	 * trigger updates to the element. Instead, the props must change in order for
	 * the rendered element to be updated.
	 *
	 * The rendered element will be initialized as unchecked (or `defaultChecked`)
	 * with an empty value (or `defaultValue`).
	 *
	 * @see http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html
	 */
	var ReactDOMInput = {
	  getHostProps: function (inst, props) {
	    var value = LinkedValueUtils.getValue(props);
	    var checked = LinkedValueUtils.getChecked(props);
	
	    var hostProps = _assign({
	      // Make sure we set .type before any other properties (setting .value
	      // before .type means .value is lost in IE11 and below)
	      type: undefined,
	      // Make sure we set .step before .value (setting .value before .step
	      // means .value is rounded on mount, based upon step precision)
	      step: undefined,
	      // Make sure we set .min & .max before .value (to ensure proper order
	      // in corner cases such as min or max deriving from value, e.g. Issue #7170)
	      min: undefined,
	      max: undefined
	    }, props, {
	      defaultChecked: undefined,
	      defaultValue: undefined,
	      value: value != null ? value : inst._wrapperState.initialValue,
	      checked: checked != null ? checked : inst._wrapperState.initialChecked,
	      onChange: inst._wrapperState.onChange
	    });
	
	    return hostProps;
	  },
	
	  mountWrapper: function (inst, props) {
	    if (process.env.NODE_ENV !== 'production') {
	      LinkedValueUtils.checkPropTypes('input', props, inst._currentElement._owner);
	
	      var owner = inst._currentElement._owner;
	
	      if (props.valueLink !== undefined && !didWarnValueLink) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `input` is deprecated; set `value` and `onChange` instead.') : void 0;
	        didWarnValueLink = true;
	      }
	      if (props.checkedLink !== undefined && !didWarnCheckedLink) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '`checkedLink` prop on `input` is deprecated; set `value` and `onChange` instead.') : void 0;
	        didWarnCheckedLink = true;
	      }
	      if (props.checked !== undefined && props.defaultChecked !== undefined && !didWarnCheckedDefaultChecked) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s contains an input of type %s with both checked and defaultChecked props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the checked prop, or the defaultChecked prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
	        didWarnCheckedDefaultChecked = true;
	      }
	      if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s contains an input of type %s with both value and defaultValue props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
	        didWarnValueDefaultValue = true;
	      }
	    }
	
	    var defaultValue = props.defaultValue;
	    inst._wrapperState = {
	      initialChecked: props.checked != null ? props.checked : props.defaultChecked,
	      initialValue: props.value != null ? props.value : defaultValue,
	      listeners: null,
	      onChange: _handleChange.bind(inst)
	    };
	
	    if (process.env.NODE_ENV !== 'production') {
	      inst._wrapperState.controlled = isControlled(props);
	    }
	  },
	
	  updateWrapper: function (inst) {
	    var props = inst._currentElement.props;
	
	    if (process.env.NODE_ENV !== 'production') {
	      var controlled = isControlled(props);
	      var owner = inst._currentElement._owner;
	
	      if (!inst._wrapperState.controlled && controlled && !didWarnUncontrolledToControlled) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s is changing an uncontrolled input of type %s to be controlled. ' + 'Input elements should not switch from uncontrolled to controlled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
	        didWarnUncontrolledToControlled = true;
	      }
	      if (inst._wrapperState.controlled && !controlled && !didWarnControlledToUncontrolled) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s is changing a controlled input of type %s to be uncontrolled. ' + 'Input elements should not switch from controlled to uncontrolled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
	        didWarnControlledToUncontrolled = true;
	      }
	    }
	
	    // TODO: Shouldn't this be getChecked(props)?
	    var checked = props.checked;
	    if (checked != null) {
	      DOMPropertyOperations.setValueForProperty(ReactDOMComponentTree.getNodeFromInstance(inst), 'checked', checked || false);
	    }
	
	    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	    var value = LinkedValueUtils.getValue(props);
	    if (value != null) {
	
	      // Cast `value` to a string to ensure the value is set correctly. While
	      // browsers typically do this as necessary, jsdom doesn't.
	      var newValue = '' + value;
	
	      // To avoid side effects (such as losing text selection), only set value if changed
	      if (newValue !== node.value) {
	        node.value = newValue;
	      }
	    } else {
	      if (props.value == null && props.defaultValue != null) {
	        // In Chrome, assigning defaultValue to certain input types triggers input validation.
	        // For number inputs, the display value loses trailing decimal points. For email inputs,
	        // Chrome raises "The specified value <x> is not a valid email address".
	        //
	        // Here we check to see if the defaultValue has actually changed, avoiding these problems
	        // when the user is inputting text
	        //
	        // https://github.com/facebook/react/issues/7253
	        if (node.defaultValue !== '' + props.defaultValue) {
	          node.defaultValue = '' + props.defaultValue;
	        }
	      }
	      if (props.checked == null && props.defaultChecked != null) {
	        node.defaultChecked = !!props.defaultChecked;
	      }
	    }
	  },
	
	  postMountWrapper: function (inst) {
	    var props = inst._currentElement.props;
	
	    // This is in postMount because we need access to the DOM node, which is not
	    // available until after the component has mounted.
	    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	
	    // Detach value from defaultValue. We won't do anything if we're working on
	    // submit or reset inputs as those values & defaultValues are linked. They
	    // are not resetable nodes so this operation doesn't matter and actually
	    // removes browser-default values (eg "Submit Query") when no value is
	    // provided.
	
	    switch (props.type) {
	      case 'submit':
	      case 'reset':
	        break;
	      case 'color':
	      case 'date':
	      case 'datetime':
	      case 'datetime-local':
	      case 'month':
	      case 'time':
	      case 'week':
	        // This fixes the no-show issue on iOS Safari and Android Chrome:
	        // https://github.com/facebook/react/issues/7233
	        node.value = '';
	        node.value = node.defaultValue;
	        break;
	      default:
	        node.value = node.value;
	        break;
	    }
	
	    // Normally, we'd just do `node.checked = node.checked` upon initial mount, less this bug
	    // this is needed to work around a chrome bug where setting defaultChecked
	    // will sometimes influence the value of checked (even after detachment).
	    // Reference: https://bugs.chromium.org/p/chromium/issues/detail?id=608416
	    // We need to temporarily unset name to avoid disrupting radio button groups.
	    var name = node.name;
	    if (name !== '') {
	      node.name = '';
	    }
	    node.defaultChecked = !node.defaultChecked;
	    node.defaultChecked = !node.defaultChecked;
	    if (name !== '') {
	      node.name = name;
	    }
	  }
	};
	
	function _handleChange(event) {
	  var props = this._currentElement.props;
	
	  var returnValue = LinkedValueUtils.executeOnChange(props, event);
	
	  // Here we use asap to wait until all updates have propagated, which
	  // is important when using controlled components within layers:
	  // https://github.com/facebook/react/issues/1698
	  ReactUpdates.asap(forceUpdateIfMounted, this);
	
	  var name = props.name;
	  if (props.type === 'radio' && name != null) {
	    var rootNode = ReactDOMComponentTree.getNodeFromInstance(this);
	    var queryRoot = rootNode;
	
	    while (queryRoot.parentNode) {
	      queryRoot = queryRoot.parentNode;
	    }
	
	    // If `rootNode.form` was non-null, then we could try `form.elements`,
	    // but that sometimes behaves strangely in IE8. We could also try using
	    // `form.getElementsByName`, but that will only return direct children
	    // and won't include inputs that use the HTML5 `form=` attribute. Since
	    // the input might not even be in a form, let's just use the global
	    // `querySelectorAll` to ensure we don't miss anything.
	    var group = queryRoot.querySelectorAll('input[name=' + JSON.stringify('' + name) + '][type="radio"]');
	
	    for (var i = 0; i < group.length; i++) {
	      var otherNode = group[i];
	      if (otherNode === rootNode || otherNode.form !== rootNode.form) {
	        continue;
	      }
	      // This will throw if radio buttons rendered by different copies of React
	      // and the same name are rendered into the same form (same as #1939).
	      // That's probably okay; we don't support it just as we don't support
	      // mixing React radio buttons with non-React ones.
	      var otherInstance = ReactDOMComponentTree.getInstanceFromNode(otherNode);
	      !otherInstance ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported.') : _prodInvariant('90') : void 0;
	      // If this is a controlled radio button group, forcing the input that
	      // was previously checked to update will cause it to be come re-checked
	      // as appropriate.
	      ReactUpdates.asap(forceUpdateIfMounted, otherInstance);
	    }
	  }
	
	  return returnValue;
	}
	
	module.exports = ReactDOMInput;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 109 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(35);
	
	var React = __webpack_require__(2);
	var ReactPropTypesSecret = __webpack_require__(110);
	
	var invariant = __webpack_require__(8);
	var warning = __webpack_require__(11);
	
	var hasReadOnlyValue = {
	  'button': true,
	  'checkbox': true,
	  'image': true,
	  'hidden': true,
	  'radio': true,
	  'reset': true,
	  'submit': true
	};
	
	function _assertSingleLink(inputProps) {
	  !(inputProps.checkedLink == null || inputProps.valueLink == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a valueLink. If you want to use checkedLink, you probably don\'t want to use valueLink and vice versa.') : _prodInvariant('87') : void 0;
	}
	function _assertValueLink(inputProps) {
	  _assertSingleLink(inputProps);
	  !(inputProps.value == null && inputProps.onChange == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a valueLink and a value or onChange event. If you want to use value or onChange, you probably don\'t want to use valueLink.') : _prodInvariant('88') : void 0;
	}
	
	function _assertCheckedLink(inputProps) {
	  _assertSingleLink(inputProps);
	  !(inputProps.checked == null && inputProps.onChange == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a checked property or onChange event. If you want to use checked or onChange, you probably don\'t want to use checkedLink') : _prodInvariant('89') : void 0;
	}
	
	var propTypes = {
	  value: function (props, propName, componentName) {
	    if (!props[propName] || hasReadOnlyValue[props.type] || props.onChange || props.readOnly || props.disabled) {
	      return null;
	    }
	    return new Error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
	  },
	  checked: function (props, propName, componentName) {
	    if (!props[propName] || props.onChange || props.readOnly || props.disabled) {
	      return null;
	    }
	    return new Error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
	  },
	  onChange: React.PropTypes.func
	};
	
	var loggedTypeFailures = {};
	function getDeclarationErrorAddendum(owner) {
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}
	
	/**
	 * Provide a linked `value` attribute for controlled forms. You should not use
	 * this outside of the ReactDOM controlled form components.
	 */
	var LinkedValueUtils = {
	  checkPropTypes: function (tagName, props, owner) {
	    for (var propName in propTypes) {
	      if (propTypes.hasOwnProperty(propName)) {
	        var error = propTypes[propName](props, propName, tagName, 'prop', null, ReactPropTypesSecret);
	      }
	      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
	        // Only monitor this failure once because there tends to be a lot of the
	        // same error.
	        loggedTypeFailures[error.message] = true;
	
	        var addendum = getDeclarationErrorAddendum(owner);
	        process.env.NODE_ENV !== 'production' ? warning(false, 'Failed form propType: %s%s', error.message, addendum) : void 0;
	      }
	    }
	  },
	
	  /**
	   * @param {object} inputProps Props for form component
	   * @return {*} current value of the input either from value prop or link.
	   */
	  getValue: function (inputProps) {
	    if (inputProps.valueLink) {
	      _assertValueLink(inputProps);
	      return inputProps.valueLink.value;
	    }
	    return inputProps.value;
	  },
	
	  /**
	   * @param {object} inputProps Props for form component
	   * @return {*} current checked status of the input either from checked prop
	   *             or link.
	   */
	  getChecked: function (inputProps) {
	    if (inputProps.checkedLink) {
	      _assertCheckedLink(inputProps);
	      return inputProps.checkedLink.value;
	    }
	    return inputProps.checked;
	  },
	
	  /**
	   * @param {object} inputProps Props for form component
	   * @param {SyntheticEvent} event change event to handle
	   */
	  executeOnChange: function (inputProps, event) {
	    if (inputProps.valueLink) {
	      _assertValueLink(inputProps);
	      return inputProps.valueLink.requestChange(event.target.value);
	    } else if (inputProps.checkedLink) {
	      _assertCheckedLink(inputProps);
	      return inputProps.checkedLink.requestChange(event.target.checked);
	    } else if (inputProps.onChange) {
	      return inputProps.onChange.call(undefined, event);
	    }
	  }
	};
	
	module.exports = LinkedValueUtils;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 110 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';
	
	module.exports = ReactPropTypesSecret;

/***/ },
/* 111 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(4);
	
	var React = __webpack_require__(2);
	var ReactDOMComponentTree = __webpack_require__(34);
	var ReactDOMSelect = __webpack_require__(112);
	
	var warning = __webpack_require__(11);
	var didWarnInvalidOptionChildren = false;
	
	function flattenChildren(children) {
	  var content = '';
	
	  // Flatten children and warn if they aren't strings or numbers;
	  // invalid types are ignored.
	  React.Children.forEach(children, function (child) {
	    if (child == null) {
	      return;
	    }
	    if (typeof child === 'string' || typeof child === 'number') {
	      content += child;
	    } else if (!didWarnInvalidOptionChildren) {
	      didWarnInvalidOptionChildren = true;
	      process.env.NODE_ENV !== 'production' ? warning(false, 'Only strings and numbers are supported as <option> children.') : void 0;
	    }
	  });
	
	  return content;
	}
	
	/**
	 * Implements an <option> host component that warns when `selected` is set.
	 */
	var ReactDOMOption = {
	  mountWrapper: function (inst, props, hostParent) {
	    // TODO (yungsters): Remove support for `selected` in <option>.
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(props.selected == null, 'Use the `defaultValue` or `value` props on <select> instead of ' + 'setting `selected` on <option>.') : void 0;
	    }
	
	    // Look up whether this option is 'selected'
	    var selectValue = null;
	    if (hostParent != null) {
	      var selectParent = hostParent;
	
	      if (selectParent._tag === 'optgroup') {
	        selectParent = selectParent._hostParent;
	      }
	
	      if (selectParent != null && selectParent._tag === 'select') {
	        selectValue = ReactDOMSelect.getSelectValueContext(selectParent);
	      }
	    }
	
	    // If the value is null (e.g., no specified value or after initial mount)
	    // or missing (e.g., for <datalist>), we don't change props.selected
	    var selected = null;
	    if (selectValue != null) {
	      var value;
	      if (props.value != null) {
	        value = props.value + '';
	      } else {
	        value = flattenChildren(props.children);
	      }
	      selected = false;
	      if (Array.isArray(selectValue)) {
	        // multiple
	        for (var i = 0; i < selectValue.length; i++) {
	          if ('' + selectValue[i] === value) {
	            selected = true;
	            break;
	          }
	        }
	      } else {
	        selected = '' + selectValue === value;
	      }
	    }
	
	    inst._wrapperState = { selected: selected };
	  },
	
	  postMountWrapper: function (inst) {
	    // value="" should make a value attribute (#6219)
	    var props = inst._currentElement.props;
	    if (props.value != null) {
	      var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	      node.setAttribute('value', props.value);
	    }
	  },
	
	  getHostProps: function (inst, props) {
	    var hostProps = _assign({ selected: undefined, children: undefined }, props);
	
	    // Read state only from initial mount because <select> updates value
	    // manually; we need the initial state only for server rendering
	    if (inst._wrapperState.selected != null) {
	      hostProps.selected = inst._wrapperState.selected;
	    }
	
	    var content = flattenChildren(props.children);
	
	    if (content) {
	      hostProps.children = content;
	    }
	
	    return hostProps;
	  }
	
	};
	
	module.exports = ReactDOMOption;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 112 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(4);
	
	var LinkedValueUtils = __webpack_require__(109);
	var ReactDOMComponentTree = __webpack_require__(34);
	var ReactUpdates = __webpack_require__(56);
	
	var warning = __webpack_require__(11);
	
	var didWarnValueLink = false;
	var didWarnValueDefaultValue = false;
	
	function updateOptionsIfPendingUpdateAndMounted() {
	  if (this._rootNodeID && this._wrapperState.pendingUpdate) {
	    this._wrapperState.pendingUpdate = false;
	
	    var props = this._currentElement.props;
	    var value = LinkedValueUtils.getValue(props);
	
	    if (value != null) {
	      updateOptions(this, Boolean(props.multiple), value);
	    }
	  }
	}
	
	function getDeclarationErrorAddendum(owner) {
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}
	
	var valuePropNames = ['value', 'defaultValue'];
	
	/**
	 * Validation function for `value` and `defaultValue`.
	 * @private
	 */
	function checkSelectPropTypes(inst, props) {
	  var owner = inst._currentElement._owner;
	  LinkedValueUtils.checkPropTypes('select', props, owner);
	
	  if (props.valueLink !== undefined && !didWarnValueLink) {
	    process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `select` is deprecated; set `value` and `onChange` instead.') : void 0;
	    didWarnValueLink = true;
	  }
	
	  for (var i = 0; i < valuePropNames.length; i++) {
	    var propName = valuePropNames[i];
	    if (props[propName] == null) {
	      continue;
	    }
	    var isArray = Array.isArray(props[propName]);
	    if (props.multiple && !isArray) {
	      process.env.NODE_ENV !== 'production' ? warning(false, 'The `%s` prop supplied to <select> must be an array if ' + '`multiple` is true.%s', propName, getDeclarationErrorAddendum(owner)) : void 0;
	    } else if (!props.multiple && isArray) {
	      process.env.NODE_ENV !== 'production' ? warning(false, 'The `%s` prop supplied to <select> must be a scalar ' + 'value if `multiple` is false.%s', propName, getDeclarationErrorAddendum(owner)) : void 0;
	    }
	  }
	}
	
	/**
	 * @param {ReactDOMComponent} inst
	 * @param {boolean} multiple
	 * @param {*} propValue A stringable (with `multiple`, a list of stringables).
	 * @private
	 */
	function updateOptions(inst, multiple, propValue) {
	  var selectedValue, i;
	  var options = ReactDOMComponentTree.getNodeFromInstance(inst).options;
	
	  if (multiple) {
	    selectedValue = {};
	    for (i = 0; i < propValue.length; i++) {
	      selectedValue['' + propValue[i]] = true;
	    }
	    for (i = 0; i < options.length; i++) {
	      var selected = selectedValue.hasOwnProperty(options[i].value);
	      if (options[i].selected !== selected) {
	        options[i].selected = selected;
	      }
	    }
	  } else {
	    // Do not set `select.value` as exact behavior isn't consistent across all
	    // browsers for all cases.
	    selectedValue = '' + propValue;
	    for (i = 0; i < options.length; i++) {
	      if (options[i].value === selectedValue) {
	        options[i].selected = true;
	        return;
	      }
	    }
	    if (options.length) {
	      options[0].selected = true;
	    }
	  }
	}
	
	/**
	 * Implements a <select> host component that allows optionally setting the
	 * props `value` and `defaultValue`. If `multiple` is false, the prop must be a
	 * stringable. If `multiple` is true, the prop must be an array of stringables.
	 *
	 * If `value` is not supplied (or null/undefined), user actions that change the
	 * selected option will trigger updates to the rendered options.
	 *
	 * If it is supplied (and not null/undefined), the rendered options will not
	 * update in response to user actions. Instead, the `value` prop must change in
	 * order for the rendered options to update.
	 *
	 * If `defaultValue` is provided, any options with the supplied values will be
	 * selected.
	 */
	var ReactDOMSelect = {
	  getHostProps: function (inst, props) {
	    return _assign({}, props, {
	      onChange: inst._wrapperState.onChange,
	      value: undefined
	    });
	  },
	
	  mountWrapper: function (inst, props) {
	    if (process.env.NODE_ENV !== 'production') {
	      checkSelectPropTypes(inst, props);
	    }
	
	    var value = LinkedValueUtils.getValue(props);
	    inst._wrapperState = {
	      pendingUpdate: false,
	      initialValue: value != null ? value : props.defaultValue,
	      listeners: null,
	      onChange: _handleChange.bind(inst),
	      wasMultiple: Boolean(props.multiple)
	    };
	
	    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
	      process.env.NODE_ENV !== 'production' ? warning(false, 'Select elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled select ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;
	      didWarnValueDefaultValue = true;
	    }
	  },
	
	  getSelectValueContext: function (inst) {
	    // ReactDOMOption looks at this initial value so the initial generated
	    // markup has correct `selected` attributes
	    return inst._wrapperState.initialValue;
	  },
	
	  postUpdateWrapper: function (inst) {
	    var props = inst._currentElement.props;
	
	    // After the initial mount, we control selected-ness manually so don't pass
	    // this value down
	    inst._wrapperState.initialValue = undefined;
	
	    var wasMultiple = inst._wrapperState.wasMultiple;
	    inst._wrapperState.wasMultiple = Boolean(props.multiple);
	
	    var value = LinkedValueUtils.getValue(props);
	    if (value != null) {
	      inst._wrapperState.pendingUpdate = false;
	      updateOptions(inst, Boolean(props.multiple), value);
	    } else if (wasMultiple !== Boolean(props.multiple)) {
	      // For simplicity, reapply `defaultValue` if `multiple` is toggled.
	      if (props.defaultValue != null) {
	        updateOptions(inst, Boolean(props.multiple), props.defaultValue);
	      } else {
	        // Revert the select back to its default unselected state.
	        updateOptions(inst, Boolean(props.multiple), props.multiple ? [] : '');
	      }
	    }
	  }
	};
	
	function _handleChange(event) {
	  var props = this._currentElement.props;
	  var returnValue = LinkedValueUtils.executeOnChange(props, event);
	
	  if (this._rootNodeID) {
	    this._wrapperState.pendingUpdate = true;
	  }
	  ReactUpdates.asap(updateOptionsIfPendingUpdateAndMounted, this);
	  return returnValue;
	}
	
	module.exports = ReactDOMSelect;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 113 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(35),
	    _assign = __webpack_require__(4);
	
	var LinkedValueUtils = __webpack_require__(109);
	var ReactDOMComponentTree = __webpack_require__(34);
	var ReactUpdates = __webpack_require__(56);
	
	var invariant = __webpack_require__(8);
	var warning = __webpack_require__(11);
	
	var didWarnValueLink = false;
	var didWarnValDefaultVal = false;
	
	function forceUpdateIfMounted() {
	  if (this._rootNodeID) {
	    // DOM component is still mounted; update
	    ReactDOMTextarea.updateWrapper(this);
	  }
	}
	
	/**
	 * Implements a <textarea> host component that allows setting `value`, and
	 * `defaultValue`. This differs from the traditional DOM API because value is
	 * usually set as PCDATA children.
	 *
	 * If `value` is not supplied (or null/undefined), user actions that affect the
	 * value will trigger updates to the element.
	 *
	 * If `value` is supplied (and not null/undefined), the rendered element will
	 * not trigger updates to the element. Instead, the `value` prop must change in
	 * order for the rendered element to be updated.
	 *
	 * The rendered element will be initialized with an empty value, the prop
	 * `defaultValue` if specified, or the children content (deprecated).
	 */
	var ReactDOMTextarea = {
	  getHostProps: function (inst, props) {
	    !(props.dangerouslySetInnerHTML == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, '`dangerouslySetInnerHTML` does not make sense on <textarea>.') : _prodInvariant('91') : void 0;
	
	    // Always set children to the same thing. In IE9, the selection range will
	    // get reset if `textContent` is mutated.  We could add a check in setTextContent
	    // to only set the value if/when the value differs from the node value (which would
	    // completely solve this IE9 bug), but Sebastian+Ben seemed to like this solution.
	    // The value can be a boolean or object so that's why it's forced to be a string.
	    var hostProps = _assign({}, props, {
	      value: undefined,
	      defaultValue: undefined,
	      children: '' + inst._wrapperState.initialValue,
	      onChange: inst._wrapperState.onChange
	    });
	
	    return hostProps;
	  },
	
	  mountWrapper: function (inst, props) {
	    if (process.env.NODE_ENV !== 'production') {
	      LinkedValueUtils.checkPropTypes('textarea', props, inst._currentElement._owner);
	      if (props.valueLink !== undefined && !didWarnValueLink) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `textarea` is deprecated; set `value` and `onChange` instead.') : void 0;
	        didWarnValueLink = true;
	      }
	      if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValDefaultVal) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'Textarea elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled textarea ' + 'and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;
	        didWarnValDefaultVal = true;
	      }
	    }
	
	    var value = LinkedValueUtils.getValue(props);
	    var initialValue = value;
	
	    // Only bother fetching default value if we're going to use it
	    if (value == null) {
	      var defaultValue = props.defaultValue;
	      // TODO (yungsters): Remove support for children content in <textarea>.
	      var children = props.children;
	      if (children != null) {
	        if (process.env.NODE_ENV !== 'production') {
	          process.env.NODE_ENV !== 'production' ? warning(false, 'Use the `defaultValue` or `value` props instead of setting ' + 'children on <textarea>.') : void 0;
	        }
	        !(defaultValue == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'If you supply `defaultValue` on a <textarea>, do not pass children.') : _prodInvariant('92') : void 0;
	        if (Array.isArray(children)) {
	          !(children.length <= 1) ? process.env.NODE_ENV !== 'production' ? invariant(false, '<textarea> can only have at most one child.') : _prodInvariant('93') : void 0;
	          children = children[0];
	        }
	
	        defaultValue = '' + children;
	      }
	      if (defaultValue == null) {
	        defaultValue = '';
	      }
	      initialValue = defaultValue;
	    }
	
	    inst._wrapperState = {
	      initialValue: '' + initialValue,
	      listeners: null,
	      onChange: _handleChange.bind(inst)
	    };
	  },
	
	  updateWrapper: function (inst) {
	    var props = inst._currentElement.props;
	
	    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	    var value = LinkedValueUtils.getValue(props);
	    if (value != null) {
	      // Cast `value` to a string to ensure the value is set correctly. While
	      // browsers typically do this as necessary, jsdom doesn't.
	      var newValue = '' + value;
	
	      // To avoid side effects (such as losing text selection), only set value if changed
	      if (newValue !== node.value) {
	        node.value = newValue;
	      }
	      if (props.defaultValue == null) {
	        node.defaultValue = newValue;
	      }
	    }
	    if (props.defaultValue != null) {
	      node.defaultValue = props.defaultValue;
	    }
	  },
	
	  postMountWrapper: function (inst) {
	    // This is in postMount because we need access to the DOM node, which is not
	    // available until after the component has mounted.
	    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	    var textContent = node.textContent;
	
	    // Only set node.value if textContent is equal to the expected
	    // initial value. In IE10/IE11 there is a bug where the placeholder attribute
	    // will populate textContent as well.
	    // https://developer.microsoft.com/microsoft-edge/platform/issues/101525/
	    if (textContent === inst._wrapperState.initialValue) {
	      node.value = textContent;
	    }
	  }
	};
	
	function _handleChange(event) {
	  var props = this._currentElement.props;
	  var returnValue = LinkedValueUtils.executeOnChange(props, event);
	  ReactUpdates.asap(forceUpdateIfMounted, this);
	  return returnValue;
	}
	
	module.exports = ReactDOMTextarea;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 114 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(35);
	
	var ReactComponentEnvironment = __webpack_require__(115);
	var ReactInstanceMap = __webpack_require__(116);
	var ReactInstrumentation = __webpack_require__(62);
	
	var ReactCurrentOwner = __webpack_require__(10);
	var ReactReconciler = __webpack_require__(59);
	var ReactChildReconciler = __webpack_require__(117);
	
	var emptyFunction = __webpack_require__(12);
	var flattenChildren = __webpack_require__(132);
	var invariant = __webpack_require__(8);
	
	/**
	 * Make an update for markup to be rendered and inserted at a supplied index.
	 *
	 * @param {string} markup Markup that renders into an element.
	 * @param {number} toIndex Destination index.
	 * @private
	 */
	function makeInsertMarkup(markup, afterNode, toIndex) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: 'INSERT_MARKUP',
	    content: markup,
	    fromIndex: null,
	    fromNode: null,
	    toIndex: toIndex,
	    afterNode: afterNode
	  };
	}
	
	/**
	 * Make an update for moving an existing element to another index.
	 *
	 * @param {number} fromIndex Source index of the existing element.
	 * @param {number} toIndex Destination index of the element.
	 * @private
	 */
	function makeMove(child, afterNode, toIndex) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: 'MOVE_EXISTING',
	    content: null,
	    fromIndex: child._mountIndex,
	    fromNode: ReactReconciler.getHostNode(child),
	    toIndex: toIndex,
	    afterNode: afterNode
	  };
	}
	
	/**
	 * Make an update for removing an element at an index.
	 *
	 * @param {number} fromIndex Index of the element to remove.
	 * @private
	 */
	function makeRemove(child, node) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: 'REMOVE_NODE',
	    content: null,
	    fromIndex: child._mountIndex,
	    fromNode: node,
	    toIndex: null,
	    afterNode: null
	  };
	}
	
	/**
	 * Make an update for setting the markup of a node.
	 *
	 * @param {string} markup Markup that renders into an element.
	 * @private
	 */
	function makeSetMarkup(markup) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: 'SET_MARKUP',
	    content: markup,
	    fromIndex: null,
	    fromNode: null,
	    toIndex: null,
	    afterNode: null
	  };
	}
	
	/**
	 * Make an update for setting the text content.
	 *
	 * @param {string} textContent Text content to set.
	 * @private
	 */
	function makeTextContent(textContent) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: 'TEXT_CONTENT',
	    content: textContent,
	    fromIndex: null,
	    fromNode: null,
	    toIndex: null,
	    afterNode: null
	  };
	}
	
	/**
	 * Push an update, if any, onto the queue. Creates a new queue if none is
	 * passed and always returns the queue. Mutative.
	 */
	function enqueue(queue, update) {
	  if (update) {
	    queue = queue || [];
	    queue.push(update);
	  }
	  return queue;
	}
	
	/**
	 * Processes any enqueued updates.
	 *
	 * @private
	 */
	function processQueue(inst, updateQueue) {
	  ReactComponentEnvironment.processChildrenUpdates(inst, updateQueue);
	}
	
	var setChildrenForInstrumentation = emptyFunction;
	if (process.env.NODE_ENV !== 'production') {
	  var getDebugID = function (inst) {
	    if (!inst._debugID) {
	      // Check for ART-like instances. TODO: This is silly/gross.
	      var internal;
	      if (internal = ReactInstanceMap.get(inst)) {
	        inst = internal;
	      }
	    }
	    return inst._debugID;
	  };
	  setChildrenForInstrumentation = function (children) {
	    var debugID = getDebugID(this);
	    // TODO: React Native empty components are also multichild.
	    // This means they still get into this method but don't have _debugID.
	    if (debugID !== 0) {
	      ReactInstrumentation.debugTool.onSetChildren(debugID, children ? Object.keys(children).map(function (key) {
	        return children[key]._debugID;
	      }) : []);
	    }
	  };
	}
	
	/**
	 * ReactMultiChild are capable of reconciling multiple children.
	 *
	 * @class ReactMultiChild
	 * @internal
	 */
	var ReactMultiChild = {
	
	  /**
	   * Provides common functionality for components that must reconcile multiple
	   * children. This is used by `ReactDOMComponent` to mount, update, and
	   * unmount child components.
	   *
	   * @lends {ReactMultiChild.prototype}
	   */
	  Mixin: {
	
	    _reconcilerInstantiateChildren: function (nestedChildren, transaction, context) {
	      if (process.env.NODE_ENV !== 'production') {
	        var selfDebugID = getDebugID(this);
	        if (this._currentElement) {
	          try {
	            ReactCurrentOwner.current = this._currentElement._owner;
	            return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context, selfDebugID);
	          } finally {
	            ReactCurrentOwner.current = null;
	          }
	        }
	      }
	      return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context);
	    },
	
	    _reconcilerUpdateChildren: function (prevChildren, nextNestedChildrenElements, mountImages, removedNodes, transaction, context) {
	      var nextChildren;
	      var selfDebugID = 0;
	      if (process.env.NODE_ENV !== 'production') {
	        selfDebugID = getDebugID(this);
	        if (this._currentElement) {
	          try {
	            ReactCurrentOwner.current = this._currentElement._owner;
	            nextChildren = flattenChildren(nextNestedChildrenElements, selfDebugID);
	          } finally {
	            ReactCurrentOwner.current = null;
	          }
	          ReactChildReconciler.updateChildren(prevChildren, nextChildren, mountImages, removedNodes, transaction, this, this._hostContainerInfo, context, selfDebugID);
	          return nextChildren;
	        }
	      }
	      nextChildren = flattenChildren(nextNestedChildrenElements, selfDebugID);
	      ReactChildReconciler.updateChildren(prevChildren, nextChildren, mountImages, removedNodes, transaction, this, this._hostContainerInfo, context, selfDebugID);
	      return nextChildren;
	    },
	
	    /**
	     * Generates a "mount image" for each of the supplied children. In the case
	     * of `ReactDOMComponent`, a mount image is a string of markup.
	     *
	     * @param {?object} nestedChildren Nested child maps.
	     * @return {array} An array of mounted representations.
	     * @internal
	     */
	    mountChildren: function (nestedChildren, transaction, context) {
	      var children = this._reconcilerInstantiateChildren(nestedChildren, transaction, context);
	      this._renderedChildren = children;
	
	      var mountImages = [];
	      var index = 0;
	      for (var name in children) {
	        if (children.hasOwnProperty(name)) {
	          var child = children[name];
	          var selfDebugID = 0;
	          if (process.env.NODE_ENV !== 'production') {
	            selfDebugID = getDebugID(this);
	          }
	          var mountImage = ReactReconciler.mountComponent(child, transaction, this, this._hostContainerInfo, context, selfDebugID);
	          child._mountIndex = index++;
	          mountImages.push(mountImage);
	        }
	      }
	
	      if (process.env.NODE_ENV !== 'production') {
	        setChildrenForInstrumentation.call(this, children);
	      }
	
	      return mountImages;
	    },
	
	    /**
	     * Replaces any rendered children with a text content string.
	     *
	     * @param {string} nextContent String of content.
	     * @internal
	     */
	    updateTextContent: function (nextContent) {
	      var prevChildren = this._renderedChildren;
	      // Remove any rendered children.
	      ReactChildReconciler.unmountChildren(prevChildren, false);
	      for (var name in prevChildren) {
	        if (prevChildren.hasOwnProperty(name)) {
	           true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'updateTextContent called on non-empty component.') : _prodInvariant('118') : void 0;
	        }
	      }
	      // Set new text content.
	      var updates = [makeTextContent(nextContent)];
	      processQueue(this, updates);
	    },
	
	    /**
	     * Replaces any rendered children with a markup string.
	     *
	     * @param {string} nextMarkup String of markup.
	     * @internal
	     */
	    updateMarkup: function (nextMarkup) {
	      var prevChildren = this._renderedChildren;
	      // Remove any rendered children.
	      ReactChildReconciler.unmountChildren(prevChildren, false);
	      for (var name in prevChildren) {
	        if (prevChildren.hasOwnProperty(name)) {
	           true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'updateTextContent called on non-empty component.') : _prodInvariant('118') : void 0;
	        }
	      }
	      var updates = [makeSetMarkup(nextMarkup)];
	      processQueue(this, updates);
	    },
	
	    /**
	     * Updates the rendered children with new children.
	     *
	     * @param {?object} nextNestedChildrenElements Nested child element maps.
	     * @param {ReactReconcileTransaction} transaction
	     * @internal
	     */
	    updateChildren: function (nextNestedChildrenElements, transaction, context) {
	      // Hook used by React ART
	      this._updateChildren(nextNestedChildrenElements, transaction, context);
	    },
	
	    /**
	     * @param {?object} nextNestedChildrenElements Nested child element maps.
	     * @param {ReactReconcileTransaction} transaction
	     * @final
	     * @protected
	     */
	    _updateChildren: function (nextNestedChildrenElements, transaction, context) {
	      var prevChildren = this._renderedChildren;
	      var removedNodes = {};
	      var mountImages = [];
	      var nextChildren = this._reconcilerUpdateChildren(prevChildren, nextNestedChildrenElements, mountImages, removedNodes, transaction, context);
	      if (!nextChildren && !prevChildren) {
	        return;
	      }
	      var updates = null;
	      var name;
	      // `nextIndex` will increment for each child in `nextChildren`, but
	      // `lastIndex` will be the last index visited in `prevChildren`.
	      var nextIndex = 0;
	      var lastIndex = 0;
	      // `nextMountIndex` will increment for each newly mounted child.
	      var nextMountIndex = 0;
	      var lastPlacedNode = null;
	      for (name in nextChildren) {
	        if (!nextChildren.hasOwnProperty(name)) {
	          continue;
	        }
	        var prevChild = prevChildren && prevChildren[name];
	        var nextChild = nextChildren[name];
	        if (prevChild === nextChild) {
	          updates = enqueue(updates, this.moveChild(prevChild, lastPlacedNode, nextIndex, lastIndex));
	          lastIndex = Math.max(prevChild._mountIndex, lastIndex);
	          prevChild._mountIndex = nextIndex;
	        } else {
	          if (prevChild) {
	            // Update `lastIndex` before `_mountIndex` gets unset by unmounting.
	            lastIndex = Math.max(prevChild._mountIndex, lastIndex);
	            // The `removedNodes` loop below will actually remove the child.
	          }
	          // The child must be instantiated before it's mounted.
	          updates = enqueue(updates, this._mountChildAtIndex(nextChild, mountImages[nextMountIndex], lastPlacedNode, nextIndex, transaction, context));
	          nextMountIndex++;
	        }
	        nextIndex++;
	        lastPlacedNode = ReactReconciler.getHostNode(nextChild);
	      }
	      // Remove children that are no longer present.
	      for (name in removedNodes) {
	        if (removedNodes.hasOwnProperty(name)) {
	          updates = enqueue(updates, this._unmountChild(prevChildren[name], removedNodes[name]));
	        }
	      }
	      if (updates) {
	        processQueue(this, updates);
	      }
	      this._renderedChildren = nextChildren;
	
	      if (process.env.NODE_ENV !== 'production') {
	        setChildrenForInstrumentation.call(this, nextChildren);
	      }
	    },
	
	    /**
	     * Unmounts all rendered children. This should be used to clean up children
	     * when this component is unmounted. It does not actually perform any
	     * backend operations.
	     *
	     * @internal
	     */
	    unmountChildren: function (safely) {
	      var renderedChildren = this._renderedChildren;
	      ReactChildReconciler.unmountChildren(renderedChildren, safely);
	      this._renderedChildren = null;
	    },
	
	    /**
	     * Moves a child component to the supplied index.
	     *
	     * @param {ReactComponent} child Component to move.
	     * @param {number} toIndex Destination index of the element.
	     * @param {number} lastIndex Last index visited of the siblings of `child`.
	     * @protected
	     */
	    moveChild: function (child, afterNode, toIndex, lastIndex) {
	      // If the index of `child` is less than `lastIndex`, then it needs to
	      // be moved. Otherwise, we do not need to move it because a child will be
	      // inserted or moved before `child`.
	      if (child._mountIndex < lastIndex) {
	        return makeMove(child, afterNode, toIndex);
	      }
	    },
	
	    /**
	     * Creates a child component.
	     *
	     * @param {ReactComponent} child Component to create.
	     * @param {string} mountImage Markup to insert.
	     * @protected
	     */
	    createChild: function (child, afterNode, mountImage) {
	      return makeInsertMarkup(mountImage, afterNode, child._mountIndex);
	    },
	
	    /**
	     * Removes a child component.
	     *
	     * @param {ReactComponent} child Child to remove.
	     * @protected
	     */
	    removeChild: function (child, node) {
	      return makeRemove(child, node);
	    },
	
	    /**
	     * Mounts a child with the supplied name.
	     *
	     * NOTE: This is part of `updateChildren` and is here for readability.
	     *
	     * @param {ReactComponent} child Component to mount.
	     * @param {string} name Name of the child.
	     * @param {number} index Index at which to insert the child.
	     * @param {ReactReconcileTransaction} transaction
	     * @private
	     */
	    _mountChildAtIndex: function (child, mountImage, afterNode, index, transaction, context) {
	      child._mountIndex = index;
	      return this.createChild(child, afterNode, mountImage);
	    },
	
	    /**
	     * Unmounts a rendered child.
	     *
	     * NOTE: This is part of `updateChildren` and is here for readability.
	     *
	     * @param {ReactComponent} child Component to unmount.
	     * @private
	     */
	    _unmountChild: function (child, node) {
	      var update = this.removeChild(child, node);
	      child._mountIndex = null;
	      return update;
	    }
	
	  }
	
	};
	
	module.exports = ReactMultiChild;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 115 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(35);
	
	var invariant = __webpack_require__(8);
	
	var injected = false;
	
	var ReactComponentEnvironment = {
	
	  /**
	   * Optionally injectable hook for swapping out mount images in the middle of
	   * the tree.
	   */
	  replaceNodeWithMarkup: null,
	
	  /**
	   * Optionally injectable hook for processing a queue of child updates. Will
	   * later move into MultiChildComponents.
	   */
	  processChildrenUpdates: null,
	
	  injection: {
	    injectEnvironment: function (environment) {
	      !!injected ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactCompositeComponent: injectEnvironment() can only be called once.') : _prodInvariant('104') : void 0;
	      ReactComponentEnvironment.replaceNodeWithMarkup = environment.replaceNodeWithMarkup;
	      ReactComponentEnvironment.processChildrenUpdates = environment.processChildrenUpdates;
	      injected = true;
	    }
	  }
	
	};
	
	module.exports = ReactComponentEnvironment;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 116 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	/**
	 * `ReactInstanceMap` maintains a mapping from a public facing stateful
	 * instance (key) and the internal representation (value). This allows public
	 * methods to accept the user facing instance as an argument and map them back
	 * to internal methods.
	 */
	
	// TODO: Replace this with ES6: var ReactInstanceMap = new Map();
	
	var ReactInstanceMap = {
	
	  /**
	   * This API should be called `delete` but we'd have to make sure to always
	   * transform these to strings for IE support. When this transform is fully
	   * supported we can rename it.
	   */
	  remove: function (key) {
	    key._reactInternalInstance = undefined;
	  },
	
	  get: function (key) {
	    return key._reactInternalInstance;
	  },
	
	  has: function (key) {
	    return key._reactInternalInstance !== undefined;
	  },
	
	  set: function (key, value) {
	    key._reactInternalInstance = value;
	  }
	
	};
	
	module.exports = ReactInstanceMap;

/***/ },
/* 117 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var ReactReconciler = __webpack_require__(59);
	
	var instantiateReactComponent = __webpack_require__(118);
	var KeyEscapeUtils = __webpack_require__(128);
	var shouldUpdateReactComponent = __webpack_require__(124);
	var traverseAllChildren = __webpack_require__(129);
	var warning = __webpack_require__(11);
	
	var ReactComponentTreeHook;
	
	if (typeof process !== 'undefined' && process.env && process.env.NODE_ENV === 'test') {
	  // Temporary hack.
	  // Inline requires don't work well with Jest:
	  // https://github.com/facebook/react/issues/7240
	  // Remove the inline requires when we don't need them anymore:
	  // https://github.com/facebook/react/pull/7178
	  ReactComponentTreeHook = __webpack_require__(26);
	}
	
	function instantiateChild(childInstances, child, name, selfDebugID) {
	  // We found a component instance.
	  var keyUnique = childInstances[name] === undefined;
	  if (process.env.NODE_ENV !== 'production') {
	    if (!ReactComponentTreeHook) {
	      ReactComponentTreeHook = __webpack_require__(26);
	    }
	    if (!keyUnique) {
	      process.env.NODE_ENV !== 'production' ? warning(false, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.%s', KeyEscapeUtils.unescape(name), ReactComponentTreeHook.getStackAddendumByID(selfDebugID)) : void 0;
	    }
	  }
	  if (child != null && keyUnique) {
	    childInstances[name] = instantiateReactComponent(child, true);
	  }
	}
	
	/**
	 * ReactChildReconciler provides helpers for initializing or updating a set of
	 * children. Its output is suitable for passing it onto ReactMultiChild which
	 * does diffed reordering and insertion.
	 */
	var ReactChildReconciler = {
	  /**
	   * Generates a "mount image" for each of the supplied children. In the case
	   * of `ReactDOMComponent`, a mount image is a string of markup.
	   *
	   * @param {?object} nestedChildNodes Nested child maps.
	   * @return {?object} A set of child instances.
	   * @internal
	   */
	  instantiateChildren: function (nestedChildNodes, transaction, context, selfDebugID // 0 in production and for roots
	  ) {
	    if (nestedChildNodes == null) {
	      return null;
	    }
	    var childInstances = {};
	
	    if (process.env.NODE_ENV !== 'production') {
	      traverseAllChildren(nestedChildNodes, function (childInsts, child, name) {
	        return instantiateChild(childInsts, child, name, selfDebugID);
	      }, childInstances);
	    } else {
	      traverseAllChildren(nestedChildNodes, instantiateChild, childInstances);
	    }
	    return childInstances;
	  },
	
	  /**
	   * Updates the rendered children and returns a new set of children.
	   *
	   * @param {?object} prevChildren Previously initialized set of children.
	   * @param {?object} nextChildren Flat child element maps.
	   * @param {ReactReconcileTransaction} transaction
	   * @param {object} context
	   * @return {?object} A new set of child instances.
	   * @internal
	   */
	  updateChildren: function (prevChildren, nextChildren, mountImages, removedNodes, transaction, hostParent, hostContainerInfo, context, selfDebugID // 0 in production and for roots
	  ) {
	    // We currently don't have a way to track moves here but if we use iterators
	    // instead of for..in we can zip the iterators and check if an item has
	    // moved.
	    // TODO: If nothing has changed, return the prevChildren object so that we
	    // can quickly bailout if nothing has changed.
	    if (!nextChildren && !prevChildren) {
	      return;
	    }
	    var name;
	    var prevChild;
	    for (name in nextChildren) {
	      if (!nextChildren.hasOwnProperty(name)) {
	        continue;
	      }
	      prevChild = prevChildren && prevChildren[name];
	      var prevElement = prevChild && prevChild._currentElement;
	      var nextElement = nextChildren[name];
	      if (prevChild != null && shouldUpdateReactComponent(prevElement, nextElement)) {
	        ReactReconciler.receiveComponent(prevChild, nextElement, transaction, context);
	        nextChildren[name] = prevChild;
	      } else {
	        if (prevChild) {
	          removedNodes[name] = ReactReconciler.getHostNode(prevChild);
	          ReactReconciler.unmountComponent(prevChild, false);
	        }
	        // The child must be instantiated before it's mounted.
	        var nextChildInstance = instantiateReactComponent(nextElement, true);
	        nextChildren[name] = nextChildInstance;
	        // Creating mount image now ensures refs are resolved in right order
	        // (see https://github.com/facebook/react/pull/7101 for explanation).
	        var nextChildMountImage = ReactReconciler.mountComponent(nextChildInstance, transaction, hostParent, hostContainerInfo, context, selfDebugID);
	        mountImages.push(nextChildMountImage);
	      }
	    }
	    // Unmount children that are no longer present.
	    for (name in prevChildren) {
	      if (prevChildren.hasOwnProperty(name) && !(nextChildren && nextChildren.hasOwnProperty(name))) {
	        prevChild = prevChildren[name];
	        removedNodes[name] = ReactReconciler.getHostNode(prevChild);
	        ReactReconciler.unmountComponent(prevChild, false);
	      }
	    }
	  },
	
	  /**
	   * Unmounts all rendered children. This should be used to clean up children
	   * when this component is unmounted.
	   *
	   * @param {?object} renderedChildren Previously initialized set of children.
	   * @internal
	   */
	  unmountChildren: function (renderedChildren, safely) {
	    for (var name in renderedChildren) {
	      if (renderedChildren.hasOwnProperty(name)) {
	        var renderedChild = renderedChildren[name];
	        ReactReconciler.unmountComponent(renderedChild, safely);
	      }
	    }
	  }
	
	};
	
	module.exports = ReactChildReconciler;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 118 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(35),
	    _assign = __webpack_require__(4);
	
	var ReactCompositeComponent = __webpack_require__(119);
	var ReactEmptyComponent = __webpack_require__(125);
	var ReactHostComponent = __webpack_require__(126);
	
	var getNextDebugID = __webpack_require__(127);
	var invariant = __webpack_require__(8);
	var warning = __webpack_require__(11);
	
	// To avoid a cyclic dependency, we create the final class in this module
	var ReactCompositeComponentWrapper = function (element) {
	  this.construct(element);
	};
	_assign(ReactCompositeComponentWrapper.prototype, ReactCompositeComponent, {
	  _instantiateReactComponent: instantiateReactComponent
	});
	
	function getDeclarationErrorAddendum(owner) {
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}
	
	/**
	 * Check if the type reference is a known internal type. I.e. not a user
	 * provided composite type.
	 *
	 * @param {function} type
	 * @return {boolean} Returns true if this is a valid internal type.
	 */
	function isInternalComponentType(type) {
	  return typeof type === 'function' && typeof type.prototype !== 'undefined' && typeof type.prototype.mountComponent === 'function' && typeof type.prototype.receiveComponent === 'function';
	}
	
	/**
	 * Given a ReactNode, create an instance that will actually be mounted.
	 *
	 * @param {ReactNode} node
	 * @param {boolean} shouldHaveDebugID
	 * @return {object} A new instance of the element's constructor.
	 * @protected
	 */
	function instantiateReactComponent(node, shouldHaveDebugID) {
	  var instance;
	
	  if (node === null || node === false) {
	    instance = ReactEmptyComponent.create(instantiateReactComponent);
	  } else if (typeof node === 'object') {
	    var element = node;
	    var type = element.type;
	    if (typeof type !== 'function' && typeof type !== 'string') {
	      var info = '';
	      if (process.env.NODE_ENV !== 'production') {
	        if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
	          info += ' You likely forgot to export your component from the file ' + 'it\'s defined in.';
	        }
	      }
	      info += getDeclarationErrorAddendum(element._owner);
	       true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s', type == null ? type : typeof type, info) : _prodInvariant('130', type == null ? type : typeof type, info) : void 0;
	    }
	
	    // Special case string values
	    if (typeof element.type === 'string') {
	      instance = ReactHostComponent.createInternalComponent(element);
	    } else if (isInternalComponentType(element.type)) {
	      // This is temporarily available for custom components that are not string
	      // representations. I.e. ART. Once those are updated to use the string
	      // representation, we can drop this code path.
	      instance = new element.type(element);
	
	      // We renamed this. Allow the old name for compat. :(
	      if (!instance.getHostNode) {
	        instance.getHostNode = instance.getNativeNode;
	      }
	    } else {
	      instance = new ReactCompositeComponentWrapper(element);
	    }
	  } else if (typeof node === 'string' || typeof node === 'number') {
	    instance = ReactHostComponent.createInstanceForText(node);
	  } else {
	     true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Encountered invalid React node of type %s', typeof node) : _prodInvariant('131', typeof node) : void 0;
	  }
	
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(typeof instance.mountComponent === 'function' && typeof instance.receiveComponent === 'function' && typeof instance.getHostNode === 'function' && typeof instance.unmountComponent === 'function', 'Only React Components can be mounted.') : void 0;
	  }
	
	  // These two fields are used by the DOM and ART diffing algorithms
	  // respectively. Instead of using expandos on components, we should be
	  // storing the state needed by the diffing algorithms elsewhere.
	  instance._mountIndex = 0;
	  instance._mountImage = null;
	
	  if (process.env.NODE_ENV !== 'production') {
	    instance._debugID = shouldHaveDebugID ? getNextDebugID() : 0;
	  }
	
	  // Internal instances should fully constructed at this point, so they should
	  // not get any new fields added to them at this point.
	  if (process.env.NODE_ENV !== 'production') {
	    if (Object.preventExtensions) {
	      Object.preventExtensions(instance);
	    }
	  }
	
	  return instance;
	}
	
	module.exports = instantiateReactComponent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 119 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(35),
	    _assign = __webpack_require__(4);
	
	var React = __webpack_require__(2);
	var ReactComponentEnvironment = __webpack_require__(115);
	var ReactCurrentOwner = __webpack_require__(10);
	var ReactErrorUtils = __webpack_require__(45);
	var ReactInstanceMap = __webpack_require__(116);
	var ReactInstrumentation = __webpack_require__(62);
	var ReactNodeTypes = __webpack_require__(120);
	var ReactReconciler = __webpack_require__(59);
	
	if (process.env.NODE_ENV !== 'production') {
	  var checkReactTypeSpec = __webpack_require__(121);
	}
	
	var emptyObject = __webpack_require__(20);
	var invariant = __webpack_require__(8);
	var shallowEqual = __webpack_require__(123);
	var shouldUpdateReactComponent = __webpack_require__(124);
	var warning = __webpack_require__(11);
	
	var CompositeTypes = {
	  ImpureClass: 0,
	  PureClass: 1,
	  StatelessFunctional: 2
	};
	
	function StatelessComponent(Component) {}
	StatelessComponent.prototype.render = function () {
	  var Component = ReactInstanceMap.get(this)._currentElement.type;
	  var element = Component(this.props, this.context, this.updater);
	  warnIfInvalidElement(Component, element);
	  return element;
	};
	
	function warnIfInvalidElement(Component, element) {
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(element === null || element === false || React.isValidElement(element), '%s(...): A valid React element (or null) must be returned. You may have ' + 'returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : void 0;
	    process.env.NODE_ENV !== 'production' ? warning(!Component.childContextTypes, '%s(...): childContextTypes cannot be defined on a functional component.', Component.displayName || Component.name || 'Component') : void 0;
	  }
	}
	
	function shouldConstruct(Component) {
	  return !!(Component.prototype && Component.prototype.isReactComponent);
	}
	
	function isPureComponent(Component) {
	  return !!(Component.prototype && Component.prototype.isPureReactComponent);
	}
	
	// Separated into a function to contain deoptimizations caused by try/finally.
	function measureLifeCyclePerf(fn, debugID, timerType) {
	  if (debugID === 0) {
	    // Top-level wrappers (see ReactMount) and empty components (see
	    // ReactDOMEmptyComponent) are invisible to hooks and devtools.
	    // Both are implementation details that should go away in the future.
	    return fn();
	  }
	
	  ReactInstrumentation.debugTool.onBeginLifeCycleTimer(debugID, timerType);
	  try {
	    return fn();
	  } finally {
	    ReactInstrumentation.debugTool.onEndLifeCycleTimer(debugID, timerType);
	  }
	}
	
	/**
	 * ------------------ The Life-Cycle of a Composite Component ------------------
	 *
	 * - constructor: Initialization of state. The instance is now retained.
	 *   - componentWillMount
	 *   - render
	 *   - [children's constructors]
	 *     - [children's componentWillMount and render]
	 *     - [children's componentDidMount]
	 *     - componentDidMount
	 *
	 *       Update Phases:
	 *       - componentWillReceiveProps (only called if parent updated)
	 *       - shouldComponentUpdate
	 *         - componentWillUpdate
	 *           - render
	 *           - [children's constructors or receive props phases]
	 *         - componentDidUpdate
	 *
	 *     - componentWillUnmount
	 *     - [children's componentWillUnmount]
	 *   - [children destroyed]
	 * - (destroyed): The instance is now blank, released by React and ready for GC.
	 *
	 * -----------------------------------------------------------------------------
	 */
	
	/**
	 * An incrementing ID assigned to each component when it is mounted. This is
	 * used to enforce the order in which `ReactUpdates` updates dirty components.
	 *
	 * @private
	 */
	var nextMountID = 1;
	
	/**
	 * @lends {ReactCompositeComponent.prototype}
	 */
	var ReactCompositeComponent = {
	
	  /**
	   * Base constructor for all composite component.
	   *
	   * @param {ReactElement} element
	   * @final
	   * @internal
	   */
	  construct: function (element) {
	    this._currentElement = element;
	    this._rootNodeID = 0;
	    this._compositeType = null;
	    this._instance = null;
	    this._hostParent = null;
	    this._hostContainerInfo = null;
	
	    // See ReactUpdateQueue
	    this._updateBatchNumber = null;
	    this._pendingElement = null;
	    this._pendingStateQueue = null;
	    this._pendingReplaceState = false;
	    this._pendingForceUpdate = false;
	
	    this._renderedNodeType = null;
	    this._renderedComponent = null;
	    this._context = null;
	    this._mountOrder = 0;
	    this._topLevelWrapper = null;
	
	    // See ReactUpdates and ReactUpdateQueue.
	    this._pendingCallbacks = null;
	
	    // ComponentWillUnmount shall only be called once
	    this._calledComponentWillUnmount = false;
	
	    if (process.env.NODE_ENV !== 'production') {
	      this._warnedAboutRefsInRender = false;
	    }
	  },
	
	  /**
	   * Initializes the component, renders markup, and registers event listeners.
	   *
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {?object} hostParent
	   * @param {?object} hostContainerInfo
	   * @param {?object} context
	   * @return {?string} Rendered markup to be inserted into the DOM.
	   * @final
	   * @internal
	   */
	  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
	    var _this = this;
	
	    this._context = context;
	    this._mountOrder = nextMountID++;
	    this._hostParent = hostParent;
	    this._hostContainerInfo = hostContainerInfo;
	
	    var publicProps = this._currentElement.props;
	    var publicContext = this._processContext(context);
	
	    var Component = this._currentElement.type;
	
	    var updateQueue = transaction.getUpdateQueue();
	
	    // Initialize the public class
	    var doConstruct = shouldConstruct(Component);
	    var inst = this._constructComponent(doConstruct, publicProps, publicContext, updateQueue);
	    var renderedElement;
	
	    // Support functional components
	    if (!doConstruct && (inst == null || inst.render == null)) {
	      renderedElement = inst;
	      warnIfInvalidElement(Component, renderedElement);
	      !(inst === null || inst === false || React.isValidElement(inst)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s(...): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : _prodInvariant('105', Component.displayName || Component.name || 'Component') : void 0;
	      inst = new StatelessComponent(Component);
	      this._compositeType = CompositeTypes.StatelessFunctional;
	    } else {
	      if (isPureComponent(Component)) {
	        this._compositeType = CompositeTypes.PureClass;
	      } else {
	        this._compositeType = CompositeTypes.ImpureClass;
	      }
	    }
	
	    if (process.env.NODE_ENV !== 'production') {
	      // This will throw later in _renderValidatedComponent, but add an early
	      // warning now to help debugging
	      if (inst.render == null) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): No `render` method found on the returned component ' + 'instance: you may have forgotten to define `render`.', Component.displayName || Component.name || 'Component') : void 0;
	      }
	
	      var propsMutated = inst.props !== publicProps;
	      var componentName = Component.displayName || Component.name || 'Component';
	
	      process.env.NODE_ENV !== 'production' ? warning(inst.props === undefined || !propsMutated, '%s(...): When calling super() in `%s`, make sure to pass ' + 'up the same props that your component\'s constructor was passed.', componentName, componentName) : void 0;
	    }
	
	    // These should be set up in the constructor, but as a convenience for
	    // simpler class abstractions, we set them up after the fact.
	    inst.props = publicProps;
	    inst.context = publicContext;
	    inst.refs = emptyObject;
	    inst.updater = updateQueue;
	
	    this._instance = inst;
	
	    // Store a reference from the instance back to the internal representation
	    ReactInstanceMap.set(inst, this);
	
	    if (process.env.NODE_ENV !== 'production') {
	      // Since plain JS classes are defined without any special initialization
	      // logic, we can not catch common errors early. Therefore, we have to
	      // catch them here, at initialization time, instead.
	      process.env.NODE_ENV !== 'production' ? warning(!inst.getInitialState || inst.getInitialState.isReactClassApproved || inst.state, 'getInitialState was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Did you mean to define a state property instead?', this.getName() || 'a component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(!inst.getDefaultProps || inst.getDefaultProps.isReactClassApproved, 'getDefaultProps was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Use a static property to define defaultProps instead.', this.getName() || 'a component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(!inst.propTypes, 'propTypes was defined as an instance property on %s. Use a static ' + 'property to define propTypes instead.', this.getName() || 'a component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(!inst.contextTypes, 'contextTypes was defined as an instance property on %s. Use a ' + 'static property to define contextTypes instead.', this.getName() || 'a component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentShouldUpdate !== 'function', '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', this.getName() || 'A component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentDidUnmount !== 'function', '%s has a method called ' + 'componentDidUnmount(). But there is no such lifecycle method. ' + 'Did you mean componentWillUnmount()?', this.getName() || 'A component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentWillRecieveProps !== 'function', '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', this.getName() || 'A component') : void 0;
	    }
	
	    var initialState = inst.state;
	    if (initialState === undefined) {
	      inst.state = initialState = null;
	    }
	    !(typeof initialState === 'object' && !Array.isArray(initialState)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.state: must be set to an object or null', this.getName() || 'ReactCompositeComponent') : _prodInvariant('106', this.getName() || 'ReactCompositeComponent') : void 0;
	
	    this._pendingStateQueue = null;
	    this._pendingReplaceState = false;
	    this._pendingForceUpdate = false;
	
	    var markup;
	    if (inst.unstable_handleError) {
	      markup = this.performInitialMountWithErrorHandling(renderedElement, hostParent, hostContainerInfo, transaction, context);
	    } else {
	      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
	    }
	
	    if (inst.componentDidMount) {
	      if (process.env.NODE_ENV !== 'production') {
	        transaction.getReactMountReady().enqueue(function () {
	          measureLifeCyclePerf(function () {
	            return inst.componentDidMount();
	          }, _this._debugID, 'componentDidMount');
	        });
	      } else {
	        transaction.getReactMountReady().enqueue(inst.componentDidMount, inst);
	      }
	    }
	
	    return markup;
	  },
	
	  _constructComponent: function (doConstruct, publicProps, publicContext, updateQueue) {
	    if (process.env.NODE_ENV !== 'production') {
	      ReactCurrentOwner.current = this;
	      try {
	        return this._constructComponentWithoutOwner(doConstruct, publicProps, publicContext, updateQueue);
	      } finally {
	        ReactCurrentOwner.current = null;
	      }
	    } else {
	      return this._constructComponentWithoutOwner(doConstruct, publicProps, publicContext, updateQueue);
	    }
	  },
	
	  _constructComponentWithoutOwner: function (doConstruct, publicProps, publicContext, updateQueue) {
	    var Component = this._currentElement.type;
	
	    if (doConstruct) {
	      if (process.env.NODE_ENV !== 'production') {
	        return measureLifeCyclePerf(function () {
	          return new Component(publicProps, publicContext, updateQueue);
	        }, this._debugID, 'ctor');
	      } else {
	        return new Component(publicProps, publicContext, updateQueue);
	      }
	    }
	
	    // This can still be an instance in case of factory components
	    // but we'll count this as time spent rendering as the more common case.
	    if (process.env.NODE_ENV !== 'production') {
	      return measureLifeCyclePerf(function () {
	        return Component(publicProps, publicContext, updateQueue);
	      }, this._debugID, 'render');
	    } else {
	      return Component(publicProps, publicContext, updateQueue);
	    }
	  },
	
	  performInitialMountWithErrorHandling: function (renderedElement, hostParent, hostContainerInfo, transaction, context) {
	    var markup;
	    var checkpoint = transaction.checkpoint();
	    try {
	      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
	    } catch (e) {
	      // Roll back to checkpoint, handle error (which may add items to the transaction), and take a new checkpoint
	      transaction.rollback(checkpoint);
	      this._instance.unstable_handleError(e);
	      if (this._pendingStateQueue) {
	        this._instance.state = this._processPendingState(this._instance.props, this._instance.context);
	      }
	      checkpoint = transaction.checkpoint();
	
	      this._renderedComponent.unmountComponent(true);
	      transaction.rollback(checkpoint);
	
	      // Try again - we've informed the component about the error, so they can render an error message this time.
	      // If this throws again, the error will bubble up (and can be caught by a higher error boundary).
	      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
	    }
	    return markup;
	  },
	
	  performInitialMount: function (renderedElement, hostParent, hostContainerInfo, transaction, context) {
	    var inst = this._instance;
	
	    var debugID = 0;
	    if (process.env.NODE_ENV !== 'production') {
	      debugID = this._debugID;
	    }
	
	    if (inst.componentWillMount) {
	      if (process.env.NODE_ENV !== 'production') {
	        measureLifeCyclePerf(function () {
	          return inst.componentWillMount();
	        }, debugID, 'componentWillMount');
	      } else {
	        inst.componentWillMount();
	      }
	      // When mounting, calls to `setState` by `componentWillMount` will set
	      // `this._pendingStateQueue` without triggering a re-render.
	      if (this._pendingStateQueue) {
	        inst.state = this._processPendingState(inst.props, inst.context);
	      }
	    }
	
	    // If not a stateless component, we now render
	    if (renderedElement === undefined) {
	      renderedElement = this._renderValidatedComponent();
	    }
	
	    var nodeType = ReactNodeTypes.getType(renderedElement);
	    this._renderedNodeType = nodeType;
	    var child = this._instantiateReactComponent(renderedElement, nodeType !== ReactNodeTypes.EMPTY /* shouldHaveDebugID */
	    );
	    this._renderedComponent = child;
	
	    var markup = ReactReconciler.mountComponent(child, transaction, hostParent, hostContainerInfo, this._processChildContext(context), debugID);
	
	    if (process.env.NODE_ENV !== 'production') {
	      if (debugID !== 0) {
	        var childDebugIDs = child._debugID !== 0 ? [child._debugID] : [];
	        ReactInstrumentation.debugTool.onSetChildren(debugID, childDebugIDs);
	      }
	    }
	
	    return markup;
	  },
	
	  getHostNode: function () {
	    return ReactReconciler.getHostNode(this._renderedComponent);
	  },
	
	  /**
	   * Releases any resources allocated by `mountComponent`.
	   *
	   * @final
	   * @internal
	   */
	  unmountComponent: function (safely) {
	    if (!this._renderedComponent) {
	      return;
	    }
	
	    var inst = this._instance;
	
	    if (inst.componentWillUnmount && !inst._calledComponentWillUnmount) {
	      inst._calledComponentWillUnmount = true;
	
	      if (safely) {
	        var name = this.getName() + '.componentWillUnmount()';
	        ReactErrorUtils.invokeGuardedCallback(name, inst.componentWillUnmount.bind(inst));
	      } else {
	        if (process.env.NODE_ENV !== 'production') {
	          measureLifeCyclePerf(function () {
	            return inst.componentWillUnmount();
	          }, this._debugID, 'componentWillUnmount');
	        } else {
	          inst.componentWillUnmount();
	        }
	      }
	    }
	
	    if (this._renderedComponent) {
	      ReactReconciler.unmountComponent(this._renderedComponent, safely);
	      this._renderedNodeType = null;
	      this._renderedComponent = null;
	      this._instance = null;
	    }
	
	    // Reset pending fields
	    // Even if this component is scheduled for another update in ReactUpdates,
	    // it would still be ignored because these fields are reset.
	    this._pendingStateQueue = null;
	    this._pendingReplaceState = false;
	    this._pendingForceUpdate = false;
	    this._pendingCallbacks = null;
	    this._pendingElement = null;
	
	    // These fields do not really need to be reset since this object is no
	    // longer accessible.
	    this._context = null;
	    this._rootNodeID = 0;
	    this._topLevelWrapper = null;
	
	    // Delete the reference from the instance to this internal representation
	    // which allow the internals to be properly cleaned up even if the user
	    // leaks a reference to the public instance.
	    ReactInstanceMap.remove(inst);
	
	    // Some existing components rely on inst.props even after they've been
	    // destroyed (in event handlers).
	    // TODO: inst.props = null;
	    // TODO: inst.state = null;
	    // TODO: inst.context = null;
	  },
	
	  /**
	   * Filters the context object to only contain keys specified in
	   * `contextTypes`
	   *
	   * @param {object} context
	   * @return {?object}
	   * @private
	   */
	  _maskContext: function (context) {
	    var Component = this._currentElement.type;
	    var contextTypes = Component.contextTypes;
	    if (!contextTypes) {
	      return emptyObject;
	    }
	    var maskedContext = {};
	    for (var contextName in contextTypes) {
	      maskedContext[contextName] = context[contextName];
	    }
	    return maskedContext;
	  },
	
	  /**
	   * Filters the context object to only contain keys specified in
	   * `contextTypes`, and asserts that they are valid.
	   *
	   * @param {object} context
	   * @return {?object}
	   * @private
	   */
	  _processContext: function (context) {
	    var maskedContext = this._maskContext(context);
	    if (process.env.NODE_ENV !== 'production') {
	      var Component = this._currentElement.type;
	      if (Component.contextTypes) {
	        this._checkContextTypes(Component.contextTypes, maskedContext, 'context');
	      }
	    }
	    return maskedContext;
	  },
	
	  /**
	   * @param {object} currentContext
	   * @return {object}
	   * @private
	   */
	  _processChildContext: function (currentContext) {
	    var Component = this._currentElement.type;
	    var inst = this._instance;
	    var childContext;
	
	    if (inst.getChildContext) {
	      if (process.env.NODE_ENV !== 'production') {
	        ReactInstrumentation.debugTool.onBeginProcessingChildContext();
	        try {
	          childContext = inst.getChildContext();
	        } finally {
	          ReactInstrumentation.debugTool.onEndProcessingChildContext();
	        }
	      } else {
	        childContext = inst.getChildContext();
	      }
	    }
	
	    if (childContext) {
	      !(typeof Component.childContextTypes === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().', this.getName() || 'ReactCompositeComponent') : _prodInvariant('107', this.getName() || 'ReactCompositeComponent') : void 0;
	      if (process.env.NODE_ENV !== 'production') {
	        this._checkContextTypes(Component.childContextTypes, childContext, 'childContext');
	      }
	      for (var name in childContext) {
	        !(name in Component.childContextTypes) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getChildContext(): key "%s" is not defined in childContextTypes.', this.getName() || 'ReactCompositeComponent', name) : _prodInvariant('108', this.getName() || 'ReactCompositeComponent', name) : void 0;
	      }
	      return _assign({}, currentContext, childContext);
	    }
	    return currentContext;
	  },
	
	  /**
	   * Assert that the context types are valid
	   *
	   * @param {object} typeSpecs Map of context field to a ReactPropType
	   * @param {object} values Runtime values that need to be type-checked
	   * @param {string} location e.g. "prop", "context", "child context"
	   * @private
	   */
	  _checkContextTypes: function (typeSpecs, values, location) {
	    if (process.env.NODE_ENV !== 'production') {
	      checkReactTypeSpec(typeSpecs, values, location, this.getName(), null, this._debugID);
	    }
	  },
	
	  receiveComponent: function (nextElement, transaction, nextContext) {
	    var prevElement = this._currentElement;
	    var prevContext = this._context;
	
	    this._pendingElement = null;
	
	    this.updateComponent(transaction, prevElement, nextElement, prevContext, nextContext);
	  },
	
	  /**
	   * If any of `_pendingElement`, `_pendingStateQueue`, or `_pendingForceUpdate`
	   * is set, update the component.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  performUpdateIfNecessary: function (transaction) {
	    if (this._pendingElement != null) {
	      ReactReconciler.receiveComponent(this, this._pendingElement, transaction, this._context);
	    } else if (this._pendingStateQueue !== null || this._pendingForceUpdate) {
	      this.updateComponent(transaction, this._currentElement, this._currentElement, this._context, this._context);
	    } else {
	      this._updateBatchNumber = null;
	    }
	  },
	
	  /**
	   * Perform an update to a mounted component. The componentWillReceiveProps and
	   * shouldComponentUpdate methods are called, then (assuming the update isn't
	   * skipped) the remaining update lifecycle methods are called and the DOM
	   * representation is updated.
	   *
	   * By default, this implements React's rendering and reconciliation algorithm.
	   * Sophisticated clients may wish to override this.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @param {ReactElement} prevParentElement
	   * @param {ReactElement} nextParentElement
	   * @internal
	   * @overridable
	   */
	  updateComponent: function (transaction, prevParentElement, nextParentElement, prevUnmaskedContext, nextUnmaskedContext) {
	    var inst = this._instance;
	    !(inst != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Attempted to update component `%s` that has already been unmounted (or failed to mount).', this.getName() || 'ReactCompositeComponent') : _prodInvariant('136', this.getName() || 'ReactCompositeComponent') : void 0;
	
	    var willReceive = false;
	    var nextContext;
	
	    // Determine if the context has changed or not
	    if (this._context === nextUnmaskedContext) {
	      nextContext = inst.context;
	    } else {
	      nextContext = this._processContext(nextUnmaskedContext);
	      willReceive = true;
	    }
	
	    var prevProps = prevParentElement.props;
	    var nextProps = nextParentElement.props;
	
	    // Not a simple state update but a props update
	    if (prevParentElement !== nextParentElement) {
	      willReceive = true;
	    }
	
	    // An update here will schedule an update but immediately set
	    // _pendingStateQueue which will ensure that any state updates gets
	    // immediately reconciled instead of waiting for the next batch.
	    if (willReceive && inst.componentWillReceiveProps) {
	      if (process.env.NODE_ENV !== 'production') {
	        measureLifeCyclePerf(function () {
	          return inst.componentWillReceiveProps(nextProps, nextContext);
	        }, this._debugID, 'componentWillReceiveProps');
	      } else {
	        inst.componentWillReceiveProps(nextProps, nextContext);
	      }
	    }
	
	    var nextState = this._processPendingState(nextProps, nextContext);
	    var shouldUpdate = true;
	
	    if (!this._pendingForceUpdate) {
	      if (inst.shouldComponentUpdate) {
	        if (process.env.NODE_ENV !== 'production') {
	          shouldUpdate = measureLifeCyclePerf(function () {
	            return inst.shouldComponentUpdate(nextProps, nextState, nextContext);
	          }, this._debugID, 'shouldComponentUpdate');
	        } else {
	          shouldUpdate = inst.shouldComponentUpdate(nextProps, nextState, nextContext);
	        }
	      } else {
	        if (this._compositeType === CompositeTypes.PureClass) {
	          shouldUpdate = !shallowEqual(prevProps, nextProps) || !shallowEqual(inst.state, nextState);
	        }
	      }
	    }
	
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(shouldUpdate !== undefined, '%s.shouldComponentUpdate(): Returned undefined instead of a ' + 'boolean value. Make sure to return true or false.', this.getName() || 'ReactCompositeComponent') : void 0;
	    }
	
	    this._updateBatchNumber = null;
	    if (shouldUpdate) {
	      this._pendingForceUpdate = false;
	      // Will set `this.props`, `this.state` and `this.context`.
	      this._performComponentUpdate(nextParentElement, nextProps, nextState, nextContext, transaction, nextUnmaskedContext);
	    } else {
	      // If it's determined that a component should not update, we still want
	      // to set props and state but we shortcut the rest of the update.
	      this._currentElement = nextParentElement;
	      this._context = nextUnmaskedContext;
	      inst.props = nextProps;
	      inst.state = nextState;
	      inst.context = nextContext;
	    }
	  },
	
	  _processPendingState: function (props, context) {
	    var inst = this._instance;
	    var queue = this._pendingStateQueue;
	    var replace = this._pendingReplaceState;
	    this._pendingReplaceState = false;
	    this._pendingStateQueue = null;
	
	    if (!queue) {
	      return inst.state;
	    }
	
	    if (replace && queue.length === 1) {
	      return queue[0];
	    }
	
	    var nextState = _assign({}, replace ? queue[0] : inst.state);
	    for (var i = replace ? 1 : 0; i < queue.length; i++) {
	      var partial = queue[i];
	      _assign(nextState, typeof partial === 'function' ? partial.call(inst, nextState, props, context) : partial);
	    }
	
	    return nextState;
	  },
	
	  /**
	   * Merges new props and state, notifies delegate methods of update and
	   * performs update.
	   *
	   * @param {ReactElement} nextElement Next element
	   * @param {object} nextProps Next public object to set as properties.
	   * @param {?object} nextState Next object to set as state.
	   * @param {?object} nextContext Next public object to set as context.
	   * @param {ReactReconcileTransaction} transaction
	   * @param {?object} unmaskedContext
	   * @private
	   */
	  _performComponentUpdate: function (nextElement, nextProps, nextState, nextContext, transaction, unmaskedContext) {
	    var _this2 = this;
	
	    var inst = this._instance;
	
	    var hasComponentDidUpdate = Boolean(inst.componentDidUpdate);
	    var prevProps;
	    var prevState;
	    var prevContext;
	    if (hasComponentDidUpdate) {
	      prevProps = inst.props;
	      prevState = inst.state;
	      prevContext = inst.context;
	    }
	
	    if (inst.componentWillUpdate) {
	      if (process.env.NODE_ENV !== 'production') {
	        measureLifeCyclePerf(function () {
	          return inst.componentWillUpdate(nextProps, nextState, nextContext);
	        }, this._debugID, 'componentWillUpdate');
	      } else {
	        inst.componentWillUpdate(nextProps, nextState, nextContext);
	      }
	    }
	
	    this._currentElement = nextElement;
	    this._context = unmaskedContext;
	    inst.props = nextProps;
	    inst.state = nextState;
	    inst.context = nextContext;
	
	    this._updateRenderedComponent(transaction, unmaskedContext);
	
	    if (hasComponentDidUpdate) {
	      if (process.env.NODE_ENV !== 'production') {
	        transaction.getReactMountReady().enqueue(function () {
	          measureLifeCyclePerf(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), _this2._debugID, 'componentDidUpdate');
	        });
	      } else {
	        transaction.getReactMountReady().enqueue(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), inst);
	      }
	    }
	  },
	
	  /**
	   * Call the component's `render` method and update the DOM accordingly.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  _updateRenderedComponent: function (transaction, context) {
	    var prevComponentInstance = this._renderedComponent;
	    var prevRenderedElement = prevComponentInstance._currentElement;
	    var nextRenderedElement = this._renderValidatedComponent();
	
	    var debugID = 0;
	    if (process.env.NODE_ENV !== 'production') {
	      debugID = this._debugID;
	    }
	
	    if (shouldUpdateReactComponent(prevRenderedElement, nextRenderedElement)) {
	      ReactReconciler.receiveComponent(prevComponentInstance, nextRenderedElement, transaction, this._processChildContext(context));
	    } else {
	      var oldHostNode = ReactReconciler.getHostNode(prevComponentInstance);
	      ReactReconciler.unmountComponent(prevComponentInstance, false);
	
	      var nodeType = ReactNodeTypes.getType(nextRenderedElement);
	      this._renderedNodeType = nodeType;
	      var child = this._instantiateReactComponent(nextRenderedElement, nodeType !== ReactNodeTypes.EMPTY /* shouldHaveDebugID */
	      );
	      this._renderedComponent = child;
	
	      var nextMarkup = ReactReconciler.mountComponent(child, transaction, this._hostParent, this._hostContainerInfo, this._processChildContext(context), debugID);
	
	      if (process.env.NODE_ENV !== 'production') {
	        if (debugID !== 0) {
	          var childDebugIDs = child._debugID !== 0 ? [child._debugID] : [];
	          ReactInstrumentation.debugTool.onSetChildren(debugID, childDebugIDs);
	        }
	      }
	
	      this._replaceNodeWithMarkup(oldHostNode, nextMarkup, prevComponentInstance);
	    }
	  },
	
	  /**
	   * Overridden in shallow rendering.
	   *
	   * @protected
	   */
	  _replaceNodeWithMarkup: function (oldHostNode, nextMarkup, prevInstance) {
	    ReactComponentEnvironment.replaceNodeWithMarkup(oldHostNode, nextMarkup, prevInstance);
	  },
	
	  /**
	   * @protected
	   */
	  _renderValidatedComponentWithoutOwnerOrContext: function () {
	    var inst = this._instance;
	    var renderedElement;
	
	    if (process.env.NODE_ENV !== 'production') {
	      renderedElement = measureLifeCyclePerf(function () {
	        return inst.render();
	      }, this._debugID, 'render');
	    } else {
	      renderedElement = inst.render();
	    }
	
	    if (process.env.NODE_ENV !== 'production') {
	      // We allow auto-mocks to proceed as if they're returning null.
	      if (renderedElement === undefined && inst.render._isMockFunction) {
	        // This is probably bad practice. Consider warning here and
	        // deprecating this convenience.
	        renderedElement = null;
	      }
	    }
	
	    return renderedElement;
	  },
	
	  /**
	   * @private
	   */
	  _renderValidatedComponent: function () {
	    var renderedElement;
	    if (process.env.NODE_ENV !== 'production' || this._compositeType !== CompositeTypes.StatelessFunctional) {
	      ReactCurrentOwner.current = this;
	      try {
	        renderedElement = this._renderValidatedComponentWithoutOwnerOrContext();
	      } finally {
	        ReactCurrentOwner.current = null;
	      }
	    } else {
	      renderedElement = this._renderValidatedComponentWithoutOwnerOrContext();
	    }
	    !(
	    // TODO: An `isValidNode` function would probably be more appropriate
	    renderedElement === null || renderedElement === false || React.isValidElement(renderedElement)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.render(): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.', this.getName() || 'ReactCompositeComponent') : _prodInvariant('109', this.getName() || 'ReactCompositeComponent') : void 0;
	
	    return renderedElement;
	  },
	
	  /**
	   * Lazily allocates the refs object and stores `component` as `ref`.
	   *
	   * @param {string} ref Reference name.
	   * @param {component} component Component to store as `ref`.
	   * @final
	   * @private
	   */
	  attachRef: function (ref, component) {
	    var inst = this.getPublicInstance();
	    !(inst != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Stateless function components cannot have refs.') : _prodInvariant('110') : void 0;
	    var publicComponentInstance = component.getPublicInstance();
	    if (process.env.NODE_ENV !== 'production') {
	      var componentName = component && component.getName ? component.getName() : 'a component';
	      process.env.NODE_ENV !== 'production' ? warning(publicComponentInstance != null || component._compositeType !== CompositeTypes.StatelessFunctional, 'Stateless function components cannot be given refs ' + '(See ref "%s" in %s created by %s). ' + 'Attempts to access this ref will fail.', ref, componentName, this.getName()) : void 0;
	    }
	    var refs = inst.refs === emptyObject ? inst.refs = {} : inst.refs;
	    refs[ref] = publicComponentInstance;
	  },
	
	  /**
	   * Detaches a reference name.
	   *
	   * @param {string} ref Name to dereference.
	   * @final
	   * @private
	   */
	  detachRef: function (ref) {
	    var refs = this.getPublicInstance().refs;
	    delete refs[ref];
	  },
	
	  /**
	   * Get a text description of the component that can be used to identify it
	   * in error messages.
	   * @return {string} The name or null.
	   * @internal
	   */
	  getName: function () {
	    var type = this._currentElement.type;
	    var constructor = this._instance && this._instance.constructor;
	    return type.displayName || constructor && constructor.displayName || type.name || constructor && constructor.name || null;
	  },
	
	  /**
	   * Get the publicly accessible representation of this component - i.e. what
	   * is exposed by refs and returned by render. Can be null for stateless
	   * components.
	   *
	   * @return {ReactComponent} the public component instance.
	   * @internal
	   */
	  getPublicInstance: function () {
	    var inst = this._instance;
	    if (this._compositeType === CompositeTypes.StatelessFunctional) {
	      return null;
	    }
	    return inst;
	  },
	
	  // Stub
	  _instantiateReactComponent: null
	
	};
	
	module.exports = ReactCompositeComponent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 120 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(35);
	
	var React = __webpack_require__(2);
	
	var invariant = __webpack_require__(8);
	
	var ReactNodeTypes = {
	  HOST: 0,
	  COMPOSITE: 1,
	  EMPTY: 2,
	
	  getType: function (node) {
	    if (node === null || node === false) {
	      return ReactNodeTypes.EMPTY;
	    } else if (React.isValidElement(node)) {
	      if (typeof node.type === 'function') {
	        return ReactNodeTypes.COMPOSITE;
	      } else {
	        return ReactNodeTypes.HOST;
	      }
	    }
	     true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Unexpected node: %s', node) : _prodInvariant('26', node) : void 0;
	  }
	};
	
	module.exports = ReactNodeTypes;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 121 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(35);
	
	var ReactPropTypeLocationNames = __webpack_require__(122);
	var ReactPropTypesSecret = __webpack_require__(110);
	
	var invariant = __webpack_require__(8);
	var warning = __webpack_require__(11);
	
	var ReactComponentTreeHook;
	
	if (typeof process !== 'undefined' && process.env && process.env.NODE_ENV === 'test') {
	  // Temporary hack.
	  // Inline requires don't work well with Jest:
	  // https://github.com/facebook/react/issues/7240
	  // Remove the inline requires when we don't need them anymore:
	  // https://github.com/facebook/react/pull/7178
	  ReactComponentTreeHook = __webpack_require__(26);
	}
	
	var loggedTypeFailures = {};
	
	/**
	 * Assert that the values match with the type specs.
	 * Error messages are memorized and will only be shown once.
	 *
	 * @param {object} typeSpecs Map of name to a ReactPropType
	 * @param {object} values Runtime values that need to be type-checked
	 * @param {string} location e.g. "prop", "context", "child context"
	 * @param {string} componentName Name of the component for error messages.
	 * @param {?object} element The React element that is being type-checked
	 * @param {?number} debugID The React component instance that is being type-checked
	 * @private
	 */
	function checkReactTypeSpec(typeSpecs, values, location, componentName, element, debugID) {
	  for (var typeSpecName in typeSpecs) {
	    if (typeSpecs.hasOwnProperty(typeSpecName)) {
	      var error;
	      // Prop type validation may throw. In case they do, we don't want to
	      // fail the render phase where it didn't fail before. So we log it.
	      // After these have been cleaned up, we'll let them throw.
	      try {
	        // This is intentionally an invariant that gets caught. It's the same
	        // behavior as without this statement except with a better message.
	        !(typeof typeSpecs[typeSpecName] === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s: %s type `%s` is invalid; it must be a function, usually from React.PropTypes.', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : _prodInvariant('84', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : void 0;
	        error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
	      } catch (ex) {
	        error = ex;
	      }
	      process.env.NODE_ENV !== 'production' ? warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName, typeof error) : void 0;
	      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
	        // Only monitor this failure once because there tends to be a lot of the
	        // same error.
	        loggedTypeFailures[error.message] = true;
	
	        var componentStackInfo = '';
	
	        if (process.env.NODE_ENV !== 'production') {
	          if (!ReactComponentTreeHook) {
	            ReactComponentTreeHook = __webpack_require__(26);
	          }
	          if (debugID !== null) {
	            componentStackInfo = ReactComponentTreeHook.getStackAddendumByID(debugID);
	          } else if (element !== null) {
	            componentStackInfo = ReactComponentTreeHook.getCurrentStackAddendum(element);
	          }
	        }
	
	        process.env.NODE_ENV !== 'production' ? warning(false, 'Failed %s type: %s%s', location, error.message, componentStackInfo) : void 0;
	      }
	    }
	  }
	}
	
	module.exports = checkReactTypeSpec;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 122 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var ReactPropTypeLocationNames = {};
	
	if (process.env.NODE_ENV !== 'production') {
	  ReactPropTypeLocationNames = {
	    prop: 'prop',
	    context: 'context',
	    childContext: 'child context'
	  };
	}
	
	module.exports = ReactPropTypeLocationNames;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 123 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 * 
	 */
	
	/*eslint-disable no-self-compare */
	
	'use strict';
	
	var hasOwnProperty = Object.prototype.hasOwnProperty;
	
	/**
	 * inlined Object.is polyfill to avoid requiring consumers ship their own
	 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
	 */
	function is(x, y) {
	  // SameValue algorithm
	  if (x === y) {
	    // Steps 1-5, 7-10
	    // Steps 6.b-6.e: +0 != -0
	    // Added the nonzero y check to make Flow happy, but it is redundant
	    return x !== 0 || y !== 0 || 1 / x === 1 / y;
	  } else {
	    // Step 6.a: NaN == NaN
	    return x !== x && y !== y;
	  }
	}
	
	/**
	 * Performs equality by iterating through keys on an object and returning false
	 * when any key has values which are not strictly equal between the arguments.
	 * Returns true when the values of all keys are strictly equal.
	 */
	function shallowEqual(objA, objB) {
	  if (is(objA, objB)) {
	    return true;
	  }
	
	  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
	    return false;
	  }
	
	  var keysA = Object.keys(objA);
	  var keysB = Object.keys(objB);
	
	  if (keysA.length !== keysB.length) {
	    return false;
	  }
	
	  // Test for A's keys different from B.
	  for (var i = 0; i < keysA.length; i++) {
	    if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {
	      return false;
	    }
	  }
	
	  return true;
	}
	
	module.exports = shallowEqual;

/***/ },
/* 124 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	/**
	 * Given a `prevElement` and `nextElement`, determines if the existing
	 * instance should be updated as opposed to being destroyed or replaced by a new
	 * instance. Both arguments are elements. This ensures that this logic can
	 * operate on stateless trees without any backing instance.
	 *
	 * @param {?object} prevElement
	 * @param {?object} nextElement
	 * @return {boolean} True if the existing instance should be updated.
	 * @protected
	 */
	
	function shouldUpdateReactComponent(prevElement, nextElement) {
	  var prevEmpty = prevElement === null || prevElement === false;
	  var nextEmpty = nextElement === null || nextElement === false;
	  if (prevEmpty || nextEmpty) {
	    return prevEmpty === nextEmpty;
	  }
	
	  var prevType = typeof prevElement;
	  var nextType = typeof nextElement;
	  if (prevType === 'string' || prevType === 'number') {
	    return nextType === 'string' || nextType === 'number';
	  } else {
	    return nextType === 'object' && prevElement.type === nextElement.type && prevElement.key === nextElement.key;
	  }
	}
	
	module.exports = shouldUpdateReactComponent;

/***/ },
/* 125 */
/***/ function(module, exports) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var emptyComponentFactory;
	
	var ReactEmptyComponentInjection = {
	  injectEmptyComponentFactory: function (factory) {
	    emptyComponentFactory = factory;
	  }
	};
	
	var ReactEmptyComponent = {
	  create: function (instantiate) {
	    return emptyComponentFactory(instantiate);
	  }
	};
	
	ReactEmptyComponent.injection = ReactEmptyComponentInjection;
	
	module.exports = ReactEmptyComponent;

/***/ },
/* 126 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(35);
	
	var invariant = __webpack_require__(8);
	
	var genericComponentClass = null;
	var textComponentClass = null;
	
	var ReactHostComponentInjection = {
	  // This accepts a class that receives the tag string. This is a catch all
	  // that can render any kind of tag.
	  injectGenericComponentClass: function (componentClass) {
	    genericComponentClass = componentClass;
	  },
	  // This accepts a text component class that takes the text string to be
	  // rendered as props.
	  injectTextComponentClass: function (componentClass) {
	    textComponentClass = componentClass;
	  }
	};
	
	/**
	 * Get a host internal component class for a specific tag.
	 *
	 * @param {ReactElement} element The element to create.
	 * @return {function} The internal class constructor function.
	 */
	function createInternalComponent(element) {
	  !genericComponentClass ? process.env.NODE_ENV !== 'production' ? invariant(false, 'There is no registered component for the tag %s', element.type) : _prodInvariant('111', element.type) : void 0;
	  return new genericComponentClass(element);
	}
	
	/**
	 * @param {ReactText} text
	 * @return {ReactComponent}
	 */
	function createInstanceForText(text) {
	  return new textComponentClass(text);
	}
	
	/**
	 * @param {ReactComponent} component
	 * @return {boolean}
	 */
	function isTextComponent(component) {
	  return component instanceof textComponentClass;
	}
	
	var ReactHostComponent = {
	  createInternalComponent: createInternalComponent,
	  createInstanceForText: createInstanceForText,
	  isTextComponent: isTextComponent,
	  injection: ReactHostComponentInjection
	};
	
	module.exports = ReactHostComponent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 127 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var nextDebugID = 1;
	
	function getNextDebugID() {
	  return nextDebugID++;
	}
	
	module.exports = getNextDebugID;

/***/ },
/* 128 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	/**
	 * Escape and wrap key so it is safe to use as a reactid
	 *
	 * @param {string} key to be escaped.
	 * @return {string} the escaped key.
	 */
	
	function escape(key) {
	  var escapeRegex = /[=:]/g;
	  var escaperLookup = {
	    '=': '=0',
	    ':': '=2'
	  };
	  var escapedString = ('' + key).replace(escapeRegex, function (match) {
	    return escaperLookup[match];
	  });
	
	  return '$' + escapedString;
	}
	
	/**
	 * Unescape and unwrap key for human-readable display
	 *
	 * @param {string} key to unescape.
	 * @return {string} the unescaped key.
	 */
	function unescape(key) {
	  var unescapeRegex = /(=0|=2)/g;
	  var unescaperLookup = {
	    '=0': '=',
	    '=2': ':'
	  };
	  var keySubstring = key[0] === '.' && key[1] === '$' ? key.substring(2) : key.substring(1);
	
	  return ('' + keySubstring).replace(unescapeRegex, function (match) {
	    return unescaperLookup[match];
	  });
	}
	
	var KeyEscapeUtils = {
	  escape: escape,
	  unescape: unescape
	};
	
	module.exports = KeyEscapeUtils;

/***/ },
/* 129 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(35);
	
	var ReactCurrentOwner = __webpack_require__(10);
	var REACT_ELEMENT_TYPE = __webpack_require__(130);
	
	var getIteratorFn = __webpack_require__(131);
	var invariant = __webpack_require__(8);
	var KeyEscapeUtils = __webpack_require__(128);
	var warning = __webpack_require__(11);
	
	var SEPARATOR = '.';
	var SUBSEPARATOR = ':';
	
	/**
	 * This is inlined from ReactElement since this file is shared between
	 * isomorphic and renderers. We could extract this to a
	 *
	 */
	
	/**
	 * TODO: Test that a single child and an array with one item have the same key
	 * pattern.
	 */
	
	var didWarnAboutMaps = false;
	
	/**
	 * Generate a key string that identifies a component within a set.
	 *
	 * @param {*} component A component that could contain a manual key.
	 * @param {number} index Index that is used if a manual key is not provided.
	 * @return {string}
	 */
	function getComponentKey(component, index) {
	  // Do some typechecking here since we call this blindly. We want to ensure
	  // that we don't block potential future ES APIs.
	  if (component && typeof component === 'object' && component.key != null) {
	    // Explicit key
	    return KeyEscapeUtils.escape(component.key);
	  }
	  // Implicit key determined by the index in the set
	  return index.toString(36);
	}
	
	/**
	 * @param {?*} children Children tree container.
	 * @param {!string} nameSoFar Name of the key path so far.
	 * @param {!function} callback Callback to invoke with each child found.
	 * @param {?*} traverseContext Used to pass information throughout the traversal
	 * process.
	 * @return {!number} The number of children in this subtree.
	 */
	function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
	  var type = typeof children;
	
	  if (type === 'undefined' || type === 'boolean') {
	    // All of the above are perceived as null.
	    children = null;
	  }
	
	  if (children === null || type === 'string' || type === 'number' ||
	  // The following is inlined from ReactElement. This means we can optimize
	  // some checks. React Fiber also inlines this logic for similar purposes.
	  type === 'object' && children.$$typeof === REACT_ELEMENT_TYPE) {
	    callback(traverseContext, children,
	    // If it's the only child, treat the name as if it was wrapped in an array
	    // so that it's consistent if the number of children grows.
	    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);
	    return 1;
	  }
	
	  var child;
	  var nextName;
	  var subtreeCount = 0; // Count of children found in the current subtree.
	  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;
	
	  if (Array.isArray(children)) {
	    for (var i = 0; i < children.length; i++) {
	      child = children[i];
	      nextName = nextNamePrefix + getComponentKey(child, i);
	      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	    }
	  } else {
	    var iteratorFn = getIteratorFn(children);
	    if (iteratorFn) {
	      var iterator = iteratorFn.call(children);
	      var step;
	      if (iteratorFn !== children.entries) {
	        var ii = 0;
	        while (!(step = iterator.next()).done) {
	          child = step.value;
	          nextName = nextNamePrefix + getComponentKey(child, ii++);
	          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	        }
	      } else {
	        if (process.env.NODE_ENV !== 'production') {
	          var mapsAsChildrenAddendum = '';
	          if (ReactCurrentOwner.current) {
	            var mapsAsChildrenOwnerName = ReactCurrentOwner.current.getName();
	            if (mapsAsChildrenOwnerName) {
	              mapsAsChildrenAddendum = ' Check the render method of `' + mapsAsChildrenOwnerName + '`.';
	            }
	          }
	          process.env.NODE_ENV !== 'production' ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.%s', mapsAsChildrenAddendum) : void 0;
	          didWarnAboutMaps = true;
	        }
	        // Iterator will provide entry [k,v] tuples rather than values.
	        while (!(step = iterator.next()).done) {
	          var entry = step.value;
	          if (entry) {
	            child = entry[1];
	            nextName = nextNamePrefix + KeyEscapeUtils.escape(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);
	            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	          }
	        }
	      }
	    } else if (type === 'object') {
	      var addendum = '';
	      if (process.env.NODE_ENV !== 'production') {
	        addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';
	        if (children._isReactElement) {
	          addendum = ' It looks like you\'re using an element created by a different ' + 'version of React. Make sure to use only one copy of React.';
	        }
	        if (ReactCurrentOwner.current) {
	          var name = ReactCurrentOwner.current.getName();
	          if (name) {
	            addendum += ' Check the render method of `' + name + '`.';
	          }
	        }
	      }
	      var childrenString = String(children);
	       true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : _prodInvariant('31', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : void 0;
	    }
	  }
	
	  return subtreeCount;
	}
	
	/**
	 * Traverses children that are typically specified as `props.children`, but
	 * might also be specified through attributes:
	 *
	 * - `traverseAllChildren(this.props.children, ...)`
	 * - `traverseAllChildren(this.props.leftPanelChildren, ...)`
	 *
	 * The `traverseContext` is an optional argument that is passed through the
	 * entire traversal. It can be used to store accumulations or anything else that
	 * the callback might find relevant.
	 *
	 * @param {?*} children Children tree object.
	 * @param {!function} callback To invoke upon traversing each child.
	 * @param {?*} traverseContext Context for traversal.
	 * @return {!number} The number of children in this subtree.
	 */
	function traverseAllChildren(children, callback, traverseContext) {
	  if (children == null) {
	    return 0;
	  }
	
	  return traverseAllChildrenImpl(children, '', callback, traverseContext);
	}
	
	module.exports = traverseAllChildren;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 130 */
/***/ function(module, exports) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	// The Symbol used to tag the ReactElement type. If there is no native Symbol
	// nor polyfill, then a plain number is used for performance.
	
	var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;
	
	module.exports = REACT_ELEMENT_TYPE;

/***/ },
/* 131 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	/* global Symbol */
	
	var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
	var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.
	
	/**
	 * Returns the iterator method function contained on the iterable object.
	 *
	 * Be sure to invoke the function with the iterable as context:
	 *
	 *     var iteratorFn = getIteratorFn(myIterable);
	 *     if (iteratorFn) {
	 *       var iterator = iteratorFn.call(myIterable);
	 *       ...
	 *     }
	 *
	 * @param {?object} maybeIterable
	 * @return {?function}
	 */
	function getIteratorFn(maybeIterable) {
	  var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
	  if (typeof iteratorFn === 'function') {
	    return iteratorFn;
	  }
	}
	
	module.exports = getIteratorFn;

/***/ },
/* 132 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var KeyEscapeUtils = __webpack_require__(128);
	var traverseAllChildren = __webpack_require__(129);
	var warning = __webpack_require__(11);
	
	var ReactComponentTreeHook;
	
	if (typeof process !== 'undefined' && process.env && process.env.NODE_ENV === 'test') {
	  // Temporary hack.
	  // Inline requires don't work well with Jest:
	  // https://github.com/facebook/react/issues/7240
	  // Remove the inline requires when we don't need them anymore:
	  // https://github.com/facebook/react/pull/7178
	  ReactComponentTreeHook = __webpack_require__(26);
	}
	
	/**
	 * @param {function} traverseContext Context passed through traversal.
	 * @param {?ReactComponent} child React child component.
	 * @param {!string} name String name of key path to child.
	 * @param {number=} selfDebugID Optional debugID of the current internal instance.
	 */
	function flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID) {
	  // We found a component instance.
	  if (traverseContext && typeof traverseContext === 'object') {
	    var result = traverseContext;
	    var keyUnique = result[name] === undefined;
	    if (process.env.NODE_ENV !== 'production') {
	      if (!ReactComponentTreeHook) {
	        ReactComponentTreeHook = __webpack_require__(26);
	      }
	      if (!keyUnique) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.%s', KeyEscapeUtils.unescape(name), ReactComponentTreeHook.getStackAddendumByID(selfDebugID)) : void 0;
	      }
	    }
	    if (keyUnique && child != null) {
	      result[name] = child;
	    }
	  }
	}
	
	/**
	 * Flattens children that are typically specified as `props.children`. Any null
	 * children will not be included in the resulting object.
	 * @return {!object} flattened children keyed by name.
	 */
	function flattenChildren(children, selfDebugID) {
	  if (children == null) {
	    return children;
	  }
	  var result = {};
	
	  if (process.env.NODE_ENV !== 'production') {
	    traverseAllChildren(children, function (traverseContext, child, name) {
	      return flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID);
	    }, result);
	  } else {
	    traverseAllChildren(children, flattenSingleChildIntoContext, result);
	  }
	  return result;
	}
	
	module.exports = flattenChildren;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 133 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(4);
	
	var PooledClass = __webpack_require__(50);
	var Transaction = __webpack_require__(68);
	var ReactInstrumentation = __webpack_require__(62);
	var ReactServerUpdateQueue = __webpack_require__(134);
	
	/**
	 * Executed within the scope of the `Transaction` instance. Consider these as
	 * being member methods, but with an implied ordering while being isolated from
	 * each other.
	 */
	var TRANSACTION_WRAPPERS = [];
	
	if (process.env.NODE_ENV !== 'production') {
	  TRANSACTION_WRAPPERS.push({
	    initialize: ReactInstrumentation.debugTool.onBeginFlush,
	    close: ReactInstrumentation.debugTool.onEndFlush
	  });
	}
	
	var noopCallbackQueue = {
	  enqueue: function () {}
	};
	
	/**
	 * @class ReactServerRenderingTransaction
	 * @param {boolean} renderToStaticMarkup
	 */
	function ReactServerRenderingTransaction(renderToStaticMarkup) {
	  this.reinitializeTransaction();
	  this.renderToStaticMarkup = renderToStaticMarkup;
	  this.useCreateElement = false;
	  this.updateQueue = new ReactServerUpdateQueue(this);
	}
	
	var Mixin = {
	  /**
	   * @see Transaction
	   * @abstract
	   * @final
	   * @return {array} Empty list of operation wrap procedures.
	   */
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  },
	
	  /**
	   * @return {object} The queue to collect `onDOMReady` callbacks with.
	   */
	  getReactMountReady: function () {
	    return noopCallbackQueue;
	  },
	
	  /**
	   * @return {object} The queue to collect React async events.
	   */
	  getUpdateQueue: function () {
	    return this.updateQueue;
	  },
	
	  /**
	   * `PooledClass` looks for this, and will invoke this before allowing this
	   * instance to be reused.
	   */
	  destructor: function () {},
	
	  checkpoint: function () {},
	
	  rollback: function () {}
	};
	
	_assign(ReactServerRenderingTransaction.prototype, Transaction, Mixin);
	
	PooledClass.addPoolingTo(ReactServerRenderingTransaction);
	
	module.exports = ReactServerRenderingTransaction;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 134 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var ReactUpdateQueue = __webpack_require__(135);
	
	var warning = __webpack_require__(11);
	
	function warnNoop(publicInstance, callerName) {
	  if (process.env.NODE_ENV !== 'production') {
	    var constructor = publicInstance.constructor;
	    process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): Can only update a mounting component. ' + 'This usually means you called %s() outside componentWillMount() on the server. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, constructor && (constructor.displayName || constructor.name) || 'ReactClass') : void 0;
	  }
	}
	
	/**
	 * This is the update queue used for server rendering.
	 * It delegates to ReactUpdateQueue while server rendering is in progress and
	 * switches to ReactNoopUpdateQueue after the transaction has completed.
	 * @class ReactServerUpdateQueue
	 * @param {Transaction} transaction
	 */
	
	var ReactServerUpdateQueue = function () {
	  function ReactServerUpdateQueue(transaction) {
	    _classCallCheck(this, ReactServerUpdateQueue);
	
	    this.transaction = transaction;
	  }
	
	  /**
	   * Checks whether or not this composite component is mounted.
	   * @param {ReactClass} publicInstance The instance we want to test.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */
	
	
	  ReactServerUpdateQueue.prototype.isMounted = function isMounted(publicInstance) {
	    return false;
	  };
	
	  /**
	   * Enqueue a callback that will be executed after all the pending updates
	   * have processed.
	   *
	   * @param {ReactClass} publicInstance The instance to use as `this` context.
	   * @param {?function} callback Called after state is updated.
	   * @internal
	   */
	
	
	  ReactServerUpdateQueue.prototype.enqueueCallback = function enqueueCallback(publicInstance, callback, callerName) {
	    if (this.transaction.isInTransaction()) {
	      ReactUpdateQueue.enqueueCallback(publicInstance, callback, callerName);
	    }
	  };
	
	  /**
	   * Forces an update. This should only be invoked when it is known with
	   * certainty that we are **not** in a DOM transaction.
	   *
	   * You may want to call this when you know that some deeper aspect of the
	   * component's state has changed but `setState` was not called.
	   *
	   * This will not invoke `shouldComponentUpdate`, but it will invoke
	   * `componentWillUpdate` and `componentDidUpdate`.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @internal
	   */
	
	
	  ReactServerUpdateQueue.prototype.enqueueForceUpdate = function enqueueForceUpdate(publicInstance) {
	    if (this.transaction.isInTransaction()) {
	      ReactUpdateQueue.enqueueForceUpdate(publicInstance);
	    } else {
	      warnNoop(publicInstance, 'forceUpdate');
	    }
	  };
	
	  /**
	   * Replaces all of the state. Always use this or `setState` to mutate state.
	   * You should treat `this.state` as immutable.
	   *
	   * There is no guarantee that `this.state` will be immediately updated, so
	   * accessing `this.state` after calling this method may return the old value.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object|function} completeState Next state.
	   * @internal
	   */
	
	
	  ReactServerUpdateQueue.prototype.enqueueReplaceState = function enqueueReplaceState(publicInstance, completeState) {
	    if (this.transaction.isInTransaction()) {
	      ReactUpdateQueue.enqueueReplaceState(publicInstance, completeState);
	    } else {
	      warnNoop(publicInstance, 'replaceState');
	    }
	  };
	
	  /**
	   * Sets a subset of the state. This only exists because _pendingState is
	   * internal. This provides a merging strategy that is not available to deep
	   * properties which is confusing. TODO: Expose pendingState or don't use it
	   * during the merge.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object|function} partialState Next partial state to be merged with state.
	   * @internal
	   */
	
	
	  ReactServerUpdateQueue.prototype.enqueueSetState = function enqueueSetState(publicInstance, partialState) {
	    if (this.transaction.isInTransaction()) {
	      ReactUpdateQueue.enqueueSetState(publicInstance, partialState);
	    } else {
	      warnNoop(publicInstance, 'setState');
	    }
	  };
	
	  return ReactServerUpdateQueue;
	}();
	
	module.exports = ReactServerUpdateQueue;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 135 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(35);
	
	var ReactCurrentOwner = __webpack_require__(10);
	var ReactInstanceMap = __webpack_require__(116);
	var ReactInstrumentation = __webpack_require__(62);
	var ReactUpdates = __webpack_require__(56);
	
	var invariant = __webpack_require__(8);
	var warning = __webpack_require__(11);
	
	function enqueueUpdate(internalInstance) {
	  ReactUpdates.enqueueUpdate(internalInstance);
	}
	
	function formatUnexpectedArgument(arg) {
	  var type = typeof arg;
	  if (type !== 'object') {
	    return type;
	  }
	  var displayName = arg.constructor && arg.constructor.name || type;
	  var keys = Object.keys(arg);
	  if (keys.length > 0 && keys.length < 20) {
	    return displayName + ' (keys: ' + keys.join(', ') + ')';
	  }
	  return displayName;
	}
	
	function getInternalInstanceReadyForUpdate(publicInstance, callerName) {
	  var internalInstance = ReactInstanceMap.get(publicInstance);
	  if (!internalInstance) {
	    if (process.env.NODE_ENV !== 'production') {
	      var ctor = publicInstance.constructor;
	      // Only warn when we have a callerName. Otherwise we should be silent.
	      // We're probably calling from enqueueCallback. We don't want to warn
	      // there because we already warned for the corresponding lifecycle method.
	      process.env.NODE_ENV !== 'production' ? warning(!callerName, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, ctor && (ctor.displayName || ctor.name) || 'ReactClass') : void 0;
	    }
	    return null;
	  }
	
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, '%s(...): Cannot update during an existing state transition (such as ' + 'within `render` or another component\'s constructor). Render methods ' + 'should be a pure function of props and state; constructor ' + 'side-effects are an anti-pattern, but can be moved to ' + '`componentWillMount`.', callerName) : void 0;
	  }
	
	  return internalInstance;
	}
	
	/**
	 * ReactUpdateQueue allows for state updates to be scheduled into a later
	 * reconciliation step.
	 */
	var ReactUpdateQueue = {
	
	  /**
	   * Checks whether or not this composite component is mounted.
	   * @param {ReactClass} publicInstance The instance we want to test.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */
	  isMounted: function (publicInstance) {
	    if (process.env.NODE_ENV !== 'production') {
	      var owner = ReactCurrentOwner.current;
	      if (owner !== null) {
	        process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing isMounted inside its render() function. ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : void 0;
	        owner._warnedAboutRefsInRender = true;
	      }
	    }
	    var internalInstance = ReactInstanceMap.get(publicInstance);
	    if (internalInstance) {
	      // During componentWillMount and render this will still be null but after
	      // that will always render to something. At least for now. So we can use
	      // this hack.
	      return !!internalInstance._renderedComponent;
	    } else {
	      return false;
	    }
	  },
	
	  /**
	   * Enqueue a callback that will be executed after all the pending updates
	   * have processed.
	   *
	   * @param {ReactClass} publicInstance The instance to use as `this` context.
	   * @param {?function} callback Called after state is updated.
	   * @param {string} callerName Name of the calling function in the public API.
	   * @internal
	   */
	  enqueueCallback: function (publicInstance, callback, callerName) {
	    ReactUpdateQueue.validateCallback(callback, callerName);
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance);
	
	    // Previously we would throw an error if we didn't have an internal
	    // instance. Since we want to make it a no-op instead, we mirror the same
	    // behavior we have in other enqueue* methods.
	    // We also need to ignore callbacks in componentWillMount. See
	    // enqueueUpdates.
	    if (!internalInstance) {
	      return null;
	    }
	
	    if (internalInstance._pendingCallbacks) {
	      internalInstance._pendingCallbacks.push(callback);
	    } else {
	      internalInstance._pendingCallbacks = [callback];
	    }
	    // TODO: The callback here is ignored when setState is called from
	    // componentWillMount. Either fix it or disallow doing so completely in
	    // favor of getInitialState. Alternatively, we can disallow
	    // componentWillMount during server-side rendering.
	    enqueueUpdate(internalInstance);
	  },
	
	  enqueueCallbackInternal: function (internalInstance, callback) {
	    if (internalInstance._pendingCallbacks) {
	      internalInstance._pendingCallbacks.push(callback);
	    } else {
	      internalInstance._pendingCallbacks = [callback];
	    }
	    enqueueUpdate(internalInstance);
	  },
	
	  /**
	   * Forces an update. This should only be invoked when it is known with
	   * certainty that we are **not** in a DOM transaction.
	   *
	   * You may want to call this when you know that some deeper aspect of the
	   * component's state has changed but `setState` was not called.
	   *
	   * This will not invoke `shouldComponentUpdate`, but it will invoke
	   * `componentWillUpdate` and `componentDidUpdate`.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @internal
	   */
	  enqueueForceUpdate: function (publicInstance) {
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'forceUpdate');
	
	    if (!internalInstance) {
	      return;
	    }
	
	    internalInstance._pendingForceUpdate = true;
	
	    enqueueUpdate(internalInstance);
	  },
	
	  /**
	   * Replaces all of the state. Always use this or `setState` to mutate state.
	   * You should treat `this.state` as immutable.
	   *
	   * There is no guarantee that `this.state` will be immediately updated, so
	   * accessing `this.state` after calling this method may return the old value.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} completeState Next state.
	   * @internal
	   */
	  enqueueReplaceState: function (publicInstance, completeState) {
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'replaceState');
	
	    if (!internalInstance) {
	      return;
	    }
	
	    internalInstance._pendingStateQueue = [completeState];
	    internalInstance._pendingReplaceState = true;
	
	    enqueueUpdate(internalInstance);
	  },
	
	  /**
	   * Sets a subset of the state. This only exists because _pendingState is
	   * internal. This provides a merging strategy that is not available to deep
	   * properties which is confusing. TODO: Expose pendingState or don't use it
	   * during the merge.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} partialState Next partial state to be merged with state.
	   * @internal
	   */
	  enqueueSetState: function (publicInstance, partialState) {
	    if (process.env.NODE_ENV !== 'production') {
	      ReactInstrumentation.debugTool.onSetState();
	      process.env.NODE_ENV !== 'production' ? warning(partialState != null, 'setState(...): You passed an undefined or null state object; ' + 'instead, use forceUpdate().') : void 0;
	    }
	
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'setState');
	
	    if (!internalInstance) {
	      return;
	    }
	
	    var queue = internalInstance._pendingStateQueue || (internalInstance._pendingStateQueue = []);
	    queue.push(partialState);
	
	    enqueueUpdate(internalInstance);
	  },
	
	  enqueueElementInternal: function (internalInstance, nextElement, nextContext) {
	    internalInstance._pendingElement = nextElement;
	    // TODO: introduce _pendingContext instead of setting it directly.
	    internalInstance._context = nextContext;
	    enqueueUpdate(internalInstance);
	  },
	
	  validateCallback: function (callback, callerName) {
	    !(!callback || typeof callback === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.', callerName, formatUnexpectedArgument(callback)) : _prodInvariant('122', callerName, formatUnexpectedArgument(callback)) : void 0;
	  }
	
	};
	
	module.exports = ReactUpdateQueue;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 136 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(4);
	
	var emptyFunction = __webpack_require__(12);
	var warning = __webpack_require__(11);
	
	var validateDOMNesting = emptyFunction;
	
	if (process.env.NODE_ENV !== 'production') {
	  // This validation code was written based on the HTML5 parsing spec:
	  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
	  //
	  // Note: this does not catch all invalid nesting, nor does it try to (as it's
	  // not clear what practical benefit doing so provides); instead, we warn only
	  // for cases where the parser will give a parse tree differing from what React
	  // intended. For example, <b><div></div></b> is invalid but we don't warn
	  // because it still parses correctly; we do warn for other cases like nested
	  // <p> tags where the beginning of the second element implicitly closes the
	  // first, causing a confusing mess.
	
	  // https://html.spec.whatwg.org/multipage/syntax.html#special
	  var specialTags = ['address', 'applet', 'area', 'article', 'aside', 'base', 'basefont', 'bgsound', 'blockquote', 'body', 'br', 'button', 'caption', 'center', 'col', 'colgroup', 'dd', 'details', 'dir', 'div', 'dl', 'dt', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'iframe', 'img', 'input', 'isindex', 'li', 'link', 'listing', 'main', 'marquee', 'menu', 'menuitem', 'meta', 'nav', 'noembed', 'noframes', 'noscript', 'object', 'ol', 'p', 'param', 'plaintext', 'pre', 'script', 'section', 'select', 'source', 'style', 'summary', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul', 'wbr', 'xmp'];
	
	  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
	  var inScopeTags = ['applet', 'caption', 'html', 'table', 'td', 'th', 'marquee', 'object', 'template',
	
	  // https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point
	  // TODO: Distinguish by namespace here -- for <title>, including it here
	  // errs on the side of fewer warnings
	  'foreignObject', 'desc', 'title'];
	
	  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-button-scope
	  var buttonScopeTags = inScopeTags.concat(['button']);
	
	  // https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags
	  var impliedEndTags = ['dd', 'dt', 'li', 'option', 'optgroup', 'p', 'rp', 'rt'];
	
	  var emptyAncestorInfo = {
	    current: null,
	
	    formTag: null,
	    aTagInScope: null,
	    buttonTagInScope: null,
	    nobrTagInScope: null,
	    pTagInButtonScope: null,
	
	    listItemTagAutoclosing: null,
	    dlItemTagAutoclosing: null
	  };
	
	  var updatedAncestorInfo = function (oldInfo, tag, instance) {
	    var ancestorInfo = _assign({}, oldInfo || emptyAncestorInfo);
	    var info = { tag: tag, instance: instance };
	
	    if (inScopeTags.indexOf(tag) !== -1) {
	      ancestorInfo.aTagInScope = null;
	      ancestorInfo.buttonTagInScope = null;
	      ancestorInfo.nobrTagInScope = null;
	    }
	    if (buttonScopeTags.indexOf(tag) !== -1) {
	      ancestorInfo.pTagInButtonScope = null;
	    }
	
	    // See rules for 'li', 'dd', 'dt' start tags in
	    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
	    if (specialTags.indexOf(tag) !== -1 && tag !== 'address' && tag !== 'div' && tag !== 'p') {
	      ancestorInfo.listItemTagAutoclosing = null;
	      ancestorInfo.dlItemTagAutoclosing = null;
	    }
	
	    ancestorInfo.current = info;
	
	    if (tag === 'form') {
	      ancestorInfo.formTag = info;
	    }
	    if (tag === 'a') {
	      ancestorInfo.aTagInScope = info;
	    }
	    if (tag === 'button') {
	      ancestorInfo.buttonTagInScope = info;
	    }
	    if (tag === 'nobr') {
	      ancestorInfo.nobrTagInScope = info;
	    }
	    if (tag === 'p') {
	      ancestorInfo.pTagInButtonScope = info;
	    }
	    if (tag === 'li') {
	      ancestorInfo.listItemTagAutoclosing = info;
	    }
	    if (tag === 'dd' || tag === 'dt') {
	      ancestorInfo.dlItemTagAutoclosing = info;
	    }
	
	    return ancestorInfo;
	  };
	
	  /**
	   * Returns whether
	   */
	  var isTagValidWithParent = function (tag, parentTag) {
	    // First, let's check if we're in an unusual parsing mode...
	    switch (parentTag) {
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect
	      case 'select':
	        return tag === 'option' || tag === 'optgroup' || tag === '#text';
	      case 'optgroup':
	        return tag === 'option' || tag === '#text';
	      // Strictly speaking, seeing an <option> doesn't mean we're in a <select>
	      // but
	      case 'option':
	        return tag === '#text';
	
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption
	      // No special behavior since these rules fall back to "in body" mode for
	      // all except special table nodes which cause bad parsing behavior anyway.
	
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr
	      case 'tr':
	        return tag === 'th' || tag === 'td' || tag === 'style' || tag === 'script' || tag === 'template';
	
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody
	      case 'tbody':
	      case 'thead':
	      case 'tfoot':
	        return tag === 'tr' || tag === 'style' || tag === 'script' || tag === 'template';
	
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup
	      case 'colgroup':
	        return tag === 'col' || tag === 'template';
	
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable
	      case 'table':
	        return tag === 'caption' || tag === 'colgroup' || tag === 'tbody' || tag === 'tfoot' || tag === 'thead' || tag === 'style' || tag === 'script' || tag === 'template';
	
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead
	      case 'head':
	        return tag === 'base' || tag === 'basefont' || tag === 'bgsound' || tag === 'link' || tag === 'meta' || tag === 'title' || tag === 'noscript' || tag === 'noframes' || tag === 'style' || tag === 'script' || tag === 'template';
	
	      // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element
	      case 'html':
	        return tag === 'head' || tag === 'body';
	      case '#document':
	        return tag === 'html';
	    }
	
	    // Probably in the "in body" parsing mode, so we outlaw only tag combos
	    // where the parsing rules cause implicit opens or closes to be added.
	    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
	    switch (tag) {
	      case 'h1':
	      case 'h2':
	      case 'h3':
	      case 'h4':
	      case 'h5':
	      case 'h6':
	        return parentTag !== 'h1' && parentTag !== 'h2' && parentTag !== 'h3' && parentTag !== 'h4' && parentTag !== 'h5' && parentTag !== 'h6';
	
	      case 'rp':
	      case 'rt':
	        return impliedEndTags.indexOf(parentTag) === -1;
	
	      case 'body':
	      case 'caption':
	      case 'col':
	      case 'colgroup':
	      case 'frame':
	      case 'head':
	      case 'html':
	      case 'tbody':
	      case 'td':
	      case 'tfoot':
	      case 'th':
	      case 'thead':
	      case 'tr':
	        // These tags are only valid with a few parents that have special child
	        // parsing rules -- if we're down here, then none of those matched and
	        // so we allow it only if we don't know what the parent is, as all other
	        // cases are invalid.
	        return parentTag == null;
	    }
	
	    return true;
	  };
	
	  /**
	   * Returns whether
	   */
	  var findInvalidAncestorForTag = function (tag, ancestorInfo) {
	    switch (tag) {
	      case 'address':
	      case 'article':
	      case 'aside':
	      case 'blockquote':
	      case 'center':
	      case 'details':
	      case 'dialog':
	      case 'dir':
	      case 'div':
	      case 'dl':
	      case 'fieldset':
	      case 'figcaption':
	      case 'figure':
	      case 'footer':
	      case 'header':
	      case 'hgroup':
	      case 'main':
	      case 'menu':
	      case 'nav':
	      case 'ol':
	      case 'p':
	      case 'section':
	      case 'summary':
	      case 'ul':
	
	      case 'pre':
	      case 'listing':
	
	      case 'table':
	
	      case 'hr':
	
	      case 'xmp':
	
	      case 'h1':
	      case 'h2':
	      case 'h3':
	      case 'h4':
	      case 'h5':
	      case 'h6':
	        return ancestorInfo.pTagInButtonScope;
	
	      case 'form':
	        return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;
	
	      case 'li':
	        return ancestorInfo.listItemTagAutoclosing;
	
	      case 'dd':
	      case 'dt':
	        return ancestorInfo.dlItemTagAutoclosing;
	
	      case 'button':
	        return ancestorInfo.buttonTagInScope;
	
	      case 'a':
	        // Spec says something about storing a list of markers, but it sounds
	        // equivalent to this check.
	        return ancestorInfo.aTagInScope;
	
	      case 'nobr':
	        return ancestorInfo.nobrTagInScope;
	    }
	
	    return null;
	  };
	
	  /**
	   * Given a ReactCompositeComponent instance, return a list of its recursive
	   * owners, starting at the root and ending with the instance itself.
	   */
	  var findOwnerStack = function (instance) {
	    if (!instance) {
	      return [];
	    }
	
	    var stack = [];
	    do {
	      stack.push(instance);
	    } while (instance = instance._currentElement._owner);
	    stack.reverse();
	    return stack;
	  };
	
	  var didWarn = {};
	
	  validateDOMNesting = function (childTag, childText, childInstance, ancestorInfo) {
	    ancestorInfo = ancestorInfo || emptyAncestorInfo;
	    var parentInfo = ancestorInfo.current;
	    var parentTag = parentInfo && parentInfo.tag;
	
	    if (childText != null) {
	      process.env.NODE_ENV !== 'production' ? warning(childTag == null, 'validateDOMNesting: when childText is passed, childTag should be null') : void 0;
	      childTag = '#text';
	    }
	
	    var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;
	    var invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);
	    var problematic = invalidParent || invalidAncestor;
	
	    if (problematic) {
	      var ancestorTag = problematic.tag;
	      var ancestorInstance = problematic.instance;
	
	      var childOwner = childInstance && childInstance._currentElement._owner;
	      var ancestorOwner = ancestorInstance && ancestorInstance._currentElement._owner;
	
	      var childOwners = findOwnerStack(childOwner);
	      var ancestorOwners = findOwnerStack(ancestorOwner);
	
	      var minStackLen = Math.min(childOwners.length, ancestorOwners.length);
	      var i;
	
	      var deepestCommon = -1;
	      for (i = 0; i < minStackLen; i++) {
	        if (childOwners[i] === ancestorOwners[i]) {
	          deepestCommon = i;
	        } else {
	          break;
	        }
	      }
	
	      var UNKNOWN = '(unknown)';
	      var childOwnerNames = childOwners.slice(deepestCommon + 1).map(function (inst) {
	        return inst.getName() || UNKNOWN;
	      });
	      var ancestorOwnerNames = ancestorOwners.slice(deepestCommon + 1).map(function (inst) {
	        return inst.getName() || UNKNOWN;
	      });
	      var ownerInfo = [].concat(
	      // If the parent and child instances have a common owner ancestor, start
	      // with that -- otherwise we just start with the parent's owners.
	      deepestCommon !== -1 ? childOwners[deepestCommon].getName() || UNKNOWN : [], ancestorOwnerNames, ancestorTag,
	      // If we're warning about an invalid (non-parent) ancestry, add '...'
	      invalidAncestor ? ['...'] : [], childOwnerNames, childTag).join(' > ');
	
	      var warnKey = !!invalidParent + '|' + childTag + '|' + ancestorTag + '|' + ownerInfo;
	      if (didWarn[warnKey]) {
	        return;
	      }
	      didWarn[warnKey] = true;
	
	      var tagDisplayName = childTag;
	      var whitespaceInfo = '';
	      if (childTag === '#text') {
	        if (/\S/.test(childText)) {
	          tagDisplayName = 'Text nodes';
	        } else {
	          tagDisplayName = 'Whitespace text nodes';
	          whitespaceInfo = ' Make sure you don\'t have any extra whitespace between tags on ' + 'each line of your source code.';
	        }
	      } else {
	        tagDisplayName = '<' + childTag + '>';
	      }
	
	      if (invalidParent) {
	        var info = '';
	        if (ancestorTag === 'table' && childTag === 'tr') {
	          info += ' Add a <tbody> to your code to match the DOM tree generated by ' + 'the browser.';
	        }
	        process.env.NODE_ENV !== 'production' ? warning(false, 'validateDOMNesting(...): %s cannot appear as a child of <%s>.%s ' + 'See %s.%s', tagDisplayName, ancestorTag, whitespaceInfo, ownerInfo, info) : void 0;
	      } else {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'validateDOMNesting(...): %s cannot appear as a descendant of ' + '<%s>. See %s.', tagDisplayName, ancestorTag, ownerInfo) : void 0;
	      }
	    }
	  };
	
	  validateDOMNesting.updatedAncestorInfo = updatedAncestorInfo;
	
	  // For testing
	  validateDOMNesting.isTagValidInContext = function (tag, ancestorInfo) {
	    ancestorInfo = ancestorInfo || emptyAncestorInfo;
	    var parentInfo = ancestorInfo.current;
	    var parentTag = parentInfo && parentInfo.tag;
	    return isTagValidWithParent(tag, parentTag) && !findInvalidAncestorForTag(tag, ancestorInfo);
	  };
	}
	
	module.exports = validateDOMNesting;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 137 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(4);
	
	var DOMLazyTree = __webpack_require__(81);
	var ReactDOMComponentTree = __webpack_require__(34);
	
	var ReactDOMEmptyComponent = function (instantiate) {
	  // ReactCompositeComponent uses this:
	  this._currentElement = null;
	  // ReactDOMComponentTree uses these:
	  this._hostNode = null;
	  this._hostParent = null;
	  this._hostContainerInfo = null;
	  this._domID = 0;
	};
	_assign(ReactDOMEmptyComponent.prototype, {
	  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
	    var domID = hostContainerInfo._idCounter++;
	    this._domID = domID;
	    this._hostParent = hostParent;
	    this._hostContainerInfo = hostContainerInfo;
	
	    var nodeValue = ' react-empty: ' + this._domID + ' ';
	    if (transaction.useCreateElement) {
	      var ownerDocument = hostContainerInfo._ownerDocument;
	      var node = ownerDocument.createComment(nodeValue);
	      ReactDOMComponentTree.precacheNode(this, node);
	      return DOMLazyTree(node);
	    } else {
	      if (transaction.renderToStaticMarkup) {
	        // Normally we'd insert a comment node, but since this is a situation
	        // where React won't take over (static pages), we can simply return
	        // nothing.
	        return '';
	      }
	      return '<!--' + nodeValue + '-->';
	    }
	  },
	  receiveComponent: function () {},
	  getHostNode: function () {
	    return ReactDOMComponentTree.getNodeFromInstance(this);
	  },
	  unmountComponent: function () {
	    ReactDOMComponentTree.uncacheNode(this);
	  }
	});
	
	module.exports = ReactDOMEmptyComponent;

/***/ },
/* 138 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(35);
	
	var invariant = __webpack_require__(8);
	
	/**
	 * Return the lowest common ancestor of A and B, or null if they are in
	 * different trees.
	 */
	function getLowestCommonAncestor(instA, instB) {
	  !('_hostNode' in instA) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;
	  !('_hostNode' in instB) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;
	
	  var depthA = 0;
	  for (var tempA = instA; tempA; tempA = tempA._hostParent) {
	    depthA++;
	  }
	  var depthB = 0;
	  for (var tempB = instB; tempB; tempB = tempB._hostParent) {
	    depthB++;
	  }
	
	  // If A is deeper, crawl up.
	  while (depthA - depthB > 0) {
	    instA = instA._hostParent;
	    depthA--;
	  }
	
	  // If B is deeper, crawl up.
	  while (depthB - depthA > 0) {
	    instB = instB._hostParent;
	    depthB--;
	  }
	
	  // Walk in lockstep until we find a match.
	  var depth = depthA;
	  while (depth--) {
	    if (instA === instB) {
	      return instA;
	    }
	    instA = instA._hostParent;
	    instB = instB._hostParent;
	  }
	  return null;
	}
	
	/**
	 * Return if A is an ancestor of B.
	 */
	function isAncestor(instA, instB) {
	  !('_hostNode' in instA) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'isAncestor: Invalid argument.') : _prodInvariant('35') : void 0;
	  !('_hostNode' in instB) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'isAncestor: Invalid argument.') : _prodInvariant('35') : void 0;
	
	  while (instB) {
	    if (instB === instA) {
	      return true;
	    }
	    instB = instB._hostParent;
	  }
	  return false;
	}
	
	/**
	 * Return the parent instance of the passed-in instance.
	 */
	function getParentInstance(inst) {
	  !('_hostNode' in inst) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getParentInstance: Invalid argument.') : _prodInvariant('36') : void 0;
	
	  return inst._hostParent;
	}
	
	/**
	 * Simulates the traversal of a two-phase, capture/bubble event dispatch.
	 */
	function traverseTwoPhase(inst, fn, arg) {
	  var path = [];
	  while (inst) {
	    path.push(inst);
	    inst = inst._hostParent;
	  }
	  var i;
	  for (i = path.length; i-- > 0;) {
	    fn(path[i], 'captured', arg);
	  }
	  for (i = 0; i < path.length; i++) {
	    fn(path[i], 'bubbled', arg);
	  }
	}
	
	/**
	 * Traverses the ID hierarchy and invokes the supplied `cb` on any IDs that
	 * should would receive a `mouseEnter` or `mouseLeave` event.
	 *
	 * Does not invoke the callback on the nearest common ancestor because nothing
	 * "entered" or "left" that element.
	 */
	function traverseEnterLeave(from, to, fn, argFrom, argTo) {
	  var common = from && to ? getLowestCommonAncestor(from, to) : null;
	  var pathFrom = [];
	  while (from && from !== common) {
	    pathFrom.push(from);
	    from = from._hostParent;
	  }
	  var pathTo = [];
	  while (to && to !== common) {
	    pathTo.push(to);
	    to = to._hostParent;
	  }
	  var i;
	  for (i = 0; i < pathFrom.length; i++) {
	    fn(pathFrom[i], 'bubbled', argFrom);
	  }
	  for (i = pathTo.length; i-- > 0;) {
	    fn(pathTo[i], 'captured', argTo);
	  }
	}
	
	module.exports = {
	  isAncestor: isAncestor,
	  getLowestCommonAncestor: getLowestCommonAncestor,
	  getParentInstance: getParentInstance,
	  traverseTwoPhase: traverseTwoPhase,
	  traverseEnterLeave: traverseEnterLeave
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 139 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(35),
	    _assign = __webpack_require__(4);
	
	var DOMChildrenOperations = __webpack_require__(80);
	var DOMLazyTree = __webpack_require__(81);
	var ReactDOMComponentTree = __webpack_require__(34);
	
	var escapeTextContentForBrowser = __webpack_require__(86);
	var invariant = __webpack_require__(8);
	var validateDOMNesting = __webpack_require__(136);
	
	/**
	 * Text nodes violate a couple assumptions that React makes about components:
	 *
	 *  - When mounting text into the DOM, adjacent text nodes are merged.
	 *  - Text nodes cannot be assigned a React root ID.
	 *
	 * This component is used to wrap strings between comment nodes so that they
	 * can undergo the same reconciliation that is applied to elements.
	 *
	 * TODO: Investigate representing React components in the DOM with text nodes.
	 *
	 * @class ReactDOMTextComponent
	 * @extends ReactComponent
	 * @internal
	 */
	var ReactDOMTextComponent = function (text) {
	  // TODO: This is really a ReactText (ReactNode), not a ReactElement
	  this._currentElement = text;
	  this._stringText = '' + text;
	  // ReactDOMComponentTree uses these:
	  this._hostNode = null;
	  this._hostParent = null;
	
	  // Properties
	  this._domID = 0;
	  this._mountIndex = 0;
	  this._closingComment = null;
	  this._commentNodes = null;
	};
	
	_assign(ReactDOMTextComponent.prototype, {
	
	  /**
	   * Creates the markup for this text node. This node is not intended to have
	   * any features besides containing text content.
	   *
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @return {string} Markup for this text node.
	   * @internal
	   */
	  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
	    if (process.env.NODE_ENV !== 'production') {
	      var parentInfo;
	      if (hostParent != null) {
	        parentInfo = hostParent._ancestorInfo;
	      } else if (hostContainerInfo != null) {
	        parentInfo = hostContainerInfo._ancestorInfo;
	      }
	      if (parentInfo) {
	        // parentInfo should always be present except for the top-level
	        // component when server rendering
	        validateDOMNesting(null, this._stringText, this, parentInfo);
	      }
	    }
	
	    var domID = hostContainerInfo._idCounter++;
	    var openingValue = ' react-text: ' + domID + ' ';
	    var closingValue = ' /react-text ';
	    this._domID = domID;
	    this._hostParent = hostParent;
	    if (transaction.useCreateElement) {
	      var ownerDocument = hostContainerInfo._ownerDocument;
	      var openingComment = ownerDocument.createComment(openingValue);
	      var closingComment = ownerDocument.createComment(closingValue);
	      var lazyTree = DOMLazyTree(ownerDocument.createDocumentFragment());
	      DOMLazyTree.queueChild(lazyTree, DOMLazyTree(openingComment));
	      if (this._stringText) {
	        DOMLazyTree.queueChild(lazyTree, DOMLazyTree(ownerDocument.createTextNode(this._stringText)));
	      }
	      DOMLazyTree.queueChild(lazyTree, DOMLazyTree(closingComment));
	      ReactDOMComponentTree.precacheNode(this, openingComment);
	      this._closingComment = closingComment;
	      return lazyTree;
	    } else {
	      var escapedText = escapeTextContentForBrowser(this._stringText);
	
	      if (transaction.renderToStaticMarkup) {
	        // Normally we'd wrap this between comment nodes for the reasons stated
	        // above, but since this is a situation where React won't take over
	        // (static pages), we can simply return the text as it is.
	        return escapedText;
	      }
	
	      return '<!--' + openingValue + '-->' + escapedText + '<!--' + closingValue + '-->';
	    }
	  },
	
	  /**
	   * Updates this component by updating the text content.
	   *
	   * @param {ReactText} nextText The next text content
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  receiveComponent: function (nextText, transaction) {
	    if (nextText !== this._currentElement) {
	      this._currentElement = nextText;
	      var nextStringText = '' + nextText;
	      if (nextStringText !== this._stringText) {
	        // TODO: Save this as pending props and use performUpdateIfNecessary
	        // and/or updateComponent to do the actual update for consistency with
	        // other component types?
	        this._stringText = nextStringText;
	        var commentNodes = this.getHostNode();
	        DOMChildrenOperations.replaceDelimitedText(commentNodes[0], commentNodes[1], nextStringText);
	      }
	    }
	  },
	
	  getHostNode: function () {
	    var hostNode = this._commentNodes;
	    if (hostNode) {
	      return hostNode;
	    }
	    if (!this._closingComment) {
	      var openingComment = ReactDOMComponentTree.getNodeFromInstance(this);
	      var node = openingComment.nextSibling;
	      while (true) {
	        !(node != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Missing closing comment for text component %s', this._domID) : _prodInvariant('67', this._domID) : void 0;
	        if (node.nodeType === 8 && node.nodeValue === ' /react-text ') {
	          this._closingComment = node;
	          break;
	        }
	        node = node.nextSibling;
	      }
	    }
	    hostNode = [this._hostNode, this._closingComment];
	    this._commentNodes = hostNode;
	    return hostNode;
	  },
	
	  unmountComponent: function () {
	    this._closingComment = null;
	    this._commentNodes = null;
	    ReactDOMComponentTree.uncacheNode(this);
	  }
	
	});
	
	module.exports = ReactDOMTextComponent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 140 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(4);
	
	var ReactUpdates = __webpack_require__(56);
	var Transaction = __webpack_require__(68);
	
	var emptyFunction = __webpack_require__(12);
	
	var RESET_BATCHED_UPDATES = {
	  initialize: emptyFunction,
	  close: function () {
	    ReactDefaultBatchingStrategy.isBatchingUpdates = false;
	  }
	};
	
	var FLUSH_BATCHED_UPDATES = {
	  initialize: emptyFunction,
	  close: ReactUpdates.flushBatchedUpdates.bind(ReactUpdates)
	};
	
	var TRANSACTION_WRAPPERS = [FLUSH_BATCHED_UPDATES, RESET_BATCHED_UPDATES];
	
	function ReactDefaultBatchingStrategyTransaction() {
	  this.reinitializeTransaction();
	}
	
	_assign(ReactDefaultBatchingStrategyTransaction.prototype, Transaction, {
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  }
	});
	
	var transaction = new ReactDefaultBatchingStrategyTransaction();
	
	var ReactDefaultBatchingStrategy = {
	  isBatchingUpdates: false,
	
	  /**
	   * Call the provided function in a context within which calls to `setState`
	   * and friends are batched such that components aren't updated unnecessarily.
	   */
	  batchedUpdates: function (callback, a, b, c, d, e) {
	    var alreadyBatchingUpdates = ReactDefaultBatchingStrategy.isBatchingUpdates;
	
	    ReactDefaultBatchingStrategy.isBatchingUpdates = true;
	
	    // The code is written this way to avoid extra allocations
	    if (alreadyBatchingUpdates) {
	      return callback(a, b, c, d, e);
	    } else {
	      return transaction.perform(callback, null, a, b, c, d, e);
	    }
	  }
	};
	
	module.exports = ReactDefaultBatchingStrategy;

/***/ },
/* 141 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(4);
	
	var EventListener = __webpack_require__(142);
	var ExecutionEnvironment = __webpack_require__(48);
	var PooledClass = __webpack_require__(50);
	var ReactDOMComponentTree = __webpack_require__(34);
	var ReactUpdates = __webpack_require__(56);
	
	var getEventTarget = __webpack_require__(69);
	var getUnboundedScrollPosition = __webpack_require__(143);
	
	/**
	 * Find the deepest React component completely containing the root of the
	 * passed-in instance (for use when entire React trees are nested within each
	 * other). If React trees are not nested, returns null.
	 */
	function findParent(inst) {
	  // TODO: It may be a good idea to cache this to prevent unnecessary DOM
	  // traversal, but caching is difficult to do correctly without using a
	  // mutation observer to listen for all DOM changes.
	  while (inst._hostParent) {
	    inst = inst._hostParent;
	  }
	  var rootNode = ReactDOMComponentTree.getNodeFromInstance(inst);
	  var container = rootNode.parentNode;
	  return ReactDOMComponentTree.getClosestInstanceFromNode(container);
	}
	
	// Used to store ancestor hierarchy in top level callback
	function TopLevelCallbackBookKeeping(topLevelType, nativeEvent) {
	  this.topLevelType = topLevelType;
	  this.nativeEvent = nativeEvent;
	  this.ancestors = [];
	}
	_assign(TopLevelCallbackBookKeeping.prototype, {
	  destructor: function () {
	    this.topLevelType = null;
	    this.nativeEvent = null;
	    this.ancestors.length = 0;
	  }
	});
	PooledClass.addPoolingTo(TopLevelCallbackBookKeeping, PooledClass.twoArgumentPooler);
	
	function handleTopLevelImpl(bookKeeping) {
	  var nativeEventTarget = getEventTarget(bookKeeping.nativeEvent);
	  var targetInst = ReactDOMComponentTree.getClosestInstanceFromNode(nativeEventTarget);
	
	  // Loop through the hierarchy, in case there's any nested components.
	  // It's important that we build the array of ancestors before calling any
	  // event handlers, because event handlers can modify the DOM, leading to
	  // inconsistencies with ReactMount's node cache. See #1105.
	  var ancestor = targetInst;
	  do {
	    bookKeeping.ancestors.push(ancestor);
	    ancestor = ancestor && findParent(ancestor);
	  } while (ancestor);
	
	  for (var i = 0; i < bookKeeping.ancestors.length; i++) {
	    targetInst = bookKeeping.ancestors[i];
	    ReactEventListener._handleTopLevel(bookKeeping.topLevelType, targetInst, bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));
	  }
	}
	
	function scrollValueMonitor(cb) {
	  var scrollPosition = getUnboundedScrollPosition(window);
	  cb(scrollPosition);
	}
	
	var ReactEventListener = {
	  _enabled: true,
	  _handleTopLevel: null,
	
	  WINDOW_HANDLE: ExecutionEnvironment.canUseDOM ? window : null,
	
	  setHandleTopLevel: function (handleTopLevel) {
	    ReactEventListener._handleTopLevel = handleTopLevel;
	  },
	
	  setEnabled: function (enabled) {
	    ReactEventListener._enabled = !!enabled;
	  },
	
	  isEnabled: function () {
	    return ReactEventListener._enabled;
	  },
	
	  /**
	   * Traps top-level events by using event bubbling.
	   *
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {string} handlerBaseName Event name (e.g. "click").
	   * @param {object} element Element on which to attach listener.
	   * @return {?object} An object with a remove function which will forcefully
	   *                  remove the listener.
	   * @internal
	   */
	  trapBubbledEvent: function (topLevelType, handlerBaseName, element) {
	    if (!element) {
	      return null;
	    }
	    return EventListener.listen(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
	  },
	
	  /**
	   * Traps a top-level event by using event capturing.
	   *
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {string} handlerBaseName Event name (e.g. "click").
	   * @param {object} element Element on which to attach listener.
	   * @return {?object} An object with a remove function which will forcefully
	   *                  remove the listener.
	   * @internal
	   */
	  trapCapturedEvent: function (topLevelType, handlerBaseName, element) {
	    if (!element) {
	      return null;
	    }
	    return EventListener.capture(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
	  },
	
	  monitorScrollValue: function (refresh) {
	    var callback = scrollValueMonitor.bind(null, refresh);
	    EventListener.listen(window, 'scroll', callback);
	  },
	
	  dispatchEvent: function (topLevelType, nativeEvent) {
	    if (!ReactEventListener._enabled) {
	      return;
	    }
	
	    var bookKeeping = TopLevelCallbackBookKeeping.getPooled(topLevelType, nativeEvent);
	    try {
	      // Event queue being processed in the same cycle allows
	      // `preventDefault`.
	      ReactUpdates.batchedUpdates(handleTopLevelImpl, bookKeeping);
	    } finally {
	      TopLevelCallbackBookKeeping.release(bookKeeping);
	    }
	  }
	};
	
	module.exports = ReactEventListener;

/***/ },
/* 142 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @typechecks
	 */
	
	var emptyFunction = __webpack_require__(12);
	
	/**
	 * Upstream version of event listener. Does not take into account specific
	 * nature of platform.
	 */
	var EventListener = {
	  /**
	   * Listen to DOM events during the bubble phase.
	   *
	   * @param {DOMEventTarget} target DOM element to register listener on.
	   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
	   * @param {function} callback Callback function.
	   * @return {object} Object with a `remove` method.
	   */
	  listen: function listen(target, eventType, callback) {
	    if (target.addEventListener) {
	      target.addEventListener(eventType, callback, false);
	      return {
	        remove: function remove() {
	          target.removeEventListener(eventType, callback, false);
	        }
	      };
	    } else if (target.attachEvent) {
	      target.attachEvent('on' + eventType, callback);
	      return {
	        remove: function remove() {
	          target.detachEvent('on' + eventType, callback);
	        }
	      };
	    }
	  },
	
	  /**
	   * Listen to DOM events during the capture phase.
	   *
	   * @param {DOMEventTarget} target DOM element to register listener on.
	   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
	   * @param {function} callback Callback function.
	   * @return {object} Object with a `remove` method.
	   */
	  capture: function capture(target, eventType, callback) {
	    if (target.addEventListener) {
	      target.addEventListener(eventType, callback, true);
	      return {
	        remove: function remove() {
	          target.removeEventListener(eventType, callback, true);
	        }
	      };
	    } else {
	      if (process.env.NODE_ENV !== 'production') {
	        console.error('Attempted to listen to events during the capture phase on a ' + 'browser that does not support the capture phase. Your application ' + 'will not receive some events.');
	      }
	      return {
	        remove: emptyFunction
	      };
	    }
	  },
	
	  registerDefault: function registerDefault() {}
	};
	
	module.exports = EventListener;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 143 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */
	
	'use strict';
	
	/**
	 * Gets the scroll position of the supplied element or window.
	 *
	 * The return values are unbounded, unlike `getScrollPosition`. This means they
	 * may be negative or exceed the element boundaries (which is possible using
	 * inertial scrolling).
	 *
	 * @param {DOMWindow|DOMElement} scrollable
	 * @return {object} Map with `x` and `y` keys.
	 */
	
	function getUnboundedScrollPosition(scrollable) {
	  if (scrollable === window) {
	    return {
	      x: window.pageXOffset || document.documentElement.scrollLeft,
	      y: window.pageYOffset || document.documentElement.scrollTop
	    };
	  }
	  return {
	    x: scrollable.scrollLeft,
	    y: scrollable.scrollTop
	  };
	}
	
	module.exports = getUnboundedScrollPosition;

/***/ },
/* 144 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var DOMProperty = __webpack_require__(36);
	var EventPluginHub = __webpack_require__(42);
	var EventPluginUtils = __webpack_require__(44);
	var ReactComponentEnvironment = __webpack_require__(115);
	var ReactEmptyComponent = __webpack_require__(125);
	var ReactBrowserEventEmitter = __webpack_require__(105);
	var ReactHostComponent = __webpack_require__(126);
	var ReactUpdates = __webpack_require__(56);
	
	var ReactInjection = {
	  Component: ReactComponentEnvironment.injection,
	  DOMProperty: DOMProperty.injection,
	  EmptyComponent: ReactEmptyComponent.injection,
	  EventPluginHub: EventPluginHub.injection,
	  EventPluginUtils: EventPluginUtils.injection,
	  EventEmitter: ReactBrowserEventEmitter.injection,
	  HostComponent: ReactHostComponent.injection,
	  Updates: ReactUpdates.injection
	};
	
	module.exports = ReactInjection;

/***/ },
/* 145 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(4);
	
	var CallbackQueue = __webpack_require__(57);
	var PooledClass = __webpack_require__(50);
	var ReactBrowserEventEmitter = __webpack_require__(105);
	var ReactInputSelection = __webpack_require__(146);
	var ReactInstrumentation = __webpack_require__(62);
	var Transaction = __webpack_require__(68);
	var ReactUpdateQueue = __webpack_require__(135);
	
	/**
	 * Ensures that, when possible, the selection range (currently selected text
	 * input) is not disturbed by performing the transaction.
	 */
	var SELECTION_RESTORATION = {
	  /**
	   * @return {Selection} Selection information.
	   */
	  initialize: ReactInputSelection.getSelectionInformation,
	  /**
	   * @param {Selection} sel Selection information returned from `initialize`.
	   */
	  close: ReactInputSelection.restoreSelection
	};
	
	/**
	 * Suppresses events (blur/focus) that could be inadvertently dispatched due to
	 * high level DOM manipulations (like temporarily removing a text input from the
	 * DOM).
	 */
	var EVENT_SUPPRESSION = {
	  /**
	   * @return {boolean} The enabled status of `ReactBrowserEventEmitter` before
	   * the reconciliation.
	   */
	  initialize: function () {
	    var currentlyEnabled = ReactBrowserEventEmitter.isEnabled();
	    ReactBrowserEventEmitter.setEnabled(false);
	    return currentlyEnabled;
	  },
	
	  /**
	   * @param {boolean} previouslyEnabled Enabled status of
	   *   `ReactBrowserEventEmitter` before the reconciliation occurred. `close`
	   *   restores the previous value.
	   */
	  close: function (previouslyEnabled) {
	    ReactBrowserEventEmitter.setEnabled(previouslyEnabled);
	  }
	};
	
	/**
	 * Provides a queue for collecting `componentDidMount` and
	 * `componentDidUpdate` callbacks during the transaction.
	 */
	var ON_DOM_READY_QUEUEING = {
	  /**
	   * Initializes the internal `onDOMReady` queue.
	   */
	  initialize: function () {
	    this.reactMountReady.reset();
	  },
	
	  /**
	   * After DOM is flushed, invoke all registered `onDOMReady` callbacks.
	   */
	  close: function () {
	    this.reactMountReady.notifyAll();
	  }
	};
	
	/**
	 * Executed within the scope of the `Transaction` instance. Consider these as
	 * being member methods, but with an implied ordering while being isolated from
	 * each other.
	 */
	var TRANSACTION_WRAPPERS = [SELECTION_RESTORATION, EVENT_SUPPRESSION, ON_DOM_READY_QUEUEING];
	
	if (process.env.NODE_ENV !== 'production') {
	  TRANSACTION_WRAPPERS.push({
	    initialize: ReactInstrumentation.debugTool.onBeginFlush,
	    close: ReactInstrumentation.debugTool.onEndFlush
	  });
	}
	
	/**
	 * Currently:
	 * - The order that these are listed in the transaction is critical:
	 * - Suppresses events.
	 * - Restores selection range.
	 *
	 * Future:
	 * - Restore document/overflow scroll positions that were unintentionally
	 *   modified via DOM insertions above the top viewport boundary.
	 * - Implement/integrate with customized constraint based layout system and keep
	 *   track of which dimensions must be remeasured.
	 *
	 * @class ReactReconcileTransaction
	 */
	function ReactReconcileTransaction(useCreateElement) {
	  this.reinitializeTransaction();
	  // Only server-side rendering really needs this option (see
	  // `ReactServerRendering`), but server-side uses
	  // `ReactServerRenderingTransaction` instead. This option is here so that it's
	  // accessible and defaults to false when `ReactDOMComponent` and
	  // `ReactDOMTextComponent` checks it in `mountComponent`.`
	  this.renderToStaticMarkup = false;
	  this.reactMountReady = CallbackQueue.getPooled(null);
	  this.useCreateElement = useCreateElement;
	}
	
	var Mixin = {
	  /**
	   * @see Transaction
	   * @abstract
	   * @final
	   * @return {array<object>} List of operation wrap procedures.
	   *   TODO: convert to array<TransactionWrapper>
	   */
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  },
	
	  /**
	   * @return {object} The queue to collect `onDOMReady` callbacks with.
	   */
	  getReactMountReady: function () {
	    return this.reactMountReady;
	  },
	
	  /**
	   * @return {object} The queue to collect React async events.
	   */
	  getUpdateQueue: function () {
	    return ReactUpdateQueue;
	  },
	
	  /**
	   * Save current transaction state -- if the return value from this method is
	   * passed to `rollback`, the transaction will be reset to that state.
	   */
	  checkpoint: function () {
	    // reactMountReady is the our only stateful wrapper
	    return this.reactMountReady.checkpoint();
	  },
	
	  rollback: function (checkpoint) {
	    this.reactMountReady.rollback(checkpoint);
	  },
	
	  /**
	   * `PooledClass` looks for this, and will invoke this before allowing this
	   * instance to be reused.
	   */
	  destructor: function () {
	    CallbackQueue.release(this.reactMountReady);
	    this.reactMountReady = null;
	  }
	};
	
	_assign(ReactReconcileTransaction.prototype, Transaction, Mixin);
	
	PooledClass.addPoolingTo(ReactReconcileTransaction);
	
	module.exports = ReactReconcileTransaction;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 146 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var ReactDOMSelection = __webpack_require__(147);
	
	var containsNode = __webpack_require__(149);
	var focusNode = __webpack_require__(94);
	var getActiveElement = __webpack_require__(152);
	
	function isInDocument(node) {
	  return containsNode(document.documentElement, node);
	}
	
	/**
	 * @ReactInputSelection: React input selection module. Based on Selection.js,
	 * but modified to be suitable for react and has a couple of bug fixes (doesn't
	 * assume buttons have range selections allowed).
	 * Input selection module for React.
	 */
	var ReactInputSelection = {
	
	  hasSelectionCapabilities: function (elem) {
	    var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
	    return nodeName && (nodeName === 'input' && elem.type === 'text' || nodeName === 'textarea' || elem.contentEditable === 'true');
	  },
	
	  getSelectionInformation: function () {
	    var focusedElem = getActiveElement();
	    return {
	      focusedElem: focusedElem,
	      selectionRange: ReactInputSelection.hasSelectionCapabilities(focusedElem) ? ReactInputSelection.getSelection(focusedElem) : null
	    };
	  },
	
	  /**
	   * @restoreSelection: If any selection information was potentially lost,
	   * restore it. This is useful when performing operations that could remove dom
	   * nodes and place them back in, resulting in focus being lost.
	   */
	  restoreSelection: function (priorSelectionInformation) {
	    var curFocusedElem = getActiveElement();
	    var priorFocusedElem = priorSelectionInformation.focusedElem;
	    var priorSelectionRange = priorSelectionInformation.selectionRange;
	    if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {
	      if (ReactInputSelection.hasSelectionCapabilities(priorFocusedElem)) {
	        ReactInputSelection.setSelection(priorFocusedElem, priorSelectionRange);
	      }
	      focusNode(priorFocusedElem);
	    }
	  },
	
	  /**
	   * @getSelection: Gets the selection bounds of a focused textarea, input or
	   * contentEditable node.
	   * -@input: Look up selection bounds of this input
	   * -@return {start: selectionStart, end: selectionEnd}
	   */
	  getSelection: function (input) {
	    var selection;
	
	    if ('selectionStart' in input) {
	      // Modern browser with input or textarea.
	      selection = {
	        start: input.selectionStart,
	        end: input.selectionEnd
	      };
	    } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {
	      // IE8 input.
	      var range = document.selection.createRange();
	      // There can only be one selection per document in IE, so it must
	      // be in our element.
	      if (range.parentElement() === input) {
	        selection = {
	          start: -range.moveStart('character', -input.value.length),
	          end: -range.moveEnd('character', -input.value.length)
	        };
	      }
	    } else {
	      // Content editable or old IE textarea.
	      selection = ReactDOMSelection.getOffsets(input);
	    }
	
	    return selection || { start: 0, end: 0 };
	  },
	
	  /**
	   * @setSelection: Sets the selection bounds of a textarea or input and focuses
	   * the input.
	   * -@input     Set selection bounds of this input or textarea
	   * -@offsets   Object of same form that is returned from get*
	   */
	  setSelection: function (input, offsets) {
	    var start = offsets.start;
	    var end = offsets.end;
	    if (end === undefined) {
	      end = start;
	    }
	
	    if ('selectionStart' in input) {
	      input.selectionStart = start;
	      input.selectionEnd = Math.min(end, input.value.length);
	    } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {
	      var range = input.createTextRange();
	      range.collapse(true);
	      range.moveStart('character', start);
	      range.moveEnd('character', end - start);
	      range.select();
	    } else {
	      ReactDOMSelection.setOffsets(input, offsets);
	    }
	  }
	};
	
	module.exports = ReactInputSelection;

/***/ },
/* 147 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(48);
	
	var getNodeForCharacterOffset = __webpack_require__(148);
	var getTextContentAccessor = __webpack_require__(51);
	
	/**
	 * While `isCollapsed` is available on the Selection object and `collapsed`
	 * is available on the Range object, IE11 sometimes gets them wrong.
	 * If the anchor/focus nodes and offsets are the same, the range is collapsed.
	 */
	function isCollapsed(anchorNode, anchorOffset, focusNode, focusOffset) {
	  return anchorNode === focusNode && anchorOffset === focusOffset;
	}
	
	/**
	 * Get the appropriate anchor and focus node/offset pairs for IE.
	 *
	 * The catch here is that IE's selection API doesn't provide information
	 * about whether the selection is forward or backward, so we have to
	 * behave as though it's always forward.
	 *
	 * IE text differs from modern selection in that it behaves as though
	 * block elements end with a new line. This means character offsets will
	 * differ between the two APIs.
	 *
	 * @param {DOMElement} node
	 * @return {object}
	 */
	function getIEOffsets(node) {
	  var selection = document.selection;
	  var selectedRange = selection.createRange();
	  var selectedLength = selectedRange.text.length;
	
	  // Duplicate selection so we can move range without breaking user selection.
	  var fromStart = selectedRange.duplicate();
	  fromStart.moveToElementText(node);
	  fromStart.setEndPoint('EndToStart', selectedRange);
	
	  var startOffset = fromStart.text.length;
	  var endOffset = startOffset + selectedLength;
	
	  return {
	    start: startOffset,
	    end: endOffset
	  };
	}
	
	/**
	 * @param {DOMElement} node
	 * @return {?object}
	 */
	function getModernOffsets(node) {
	  var selection = window.getSelection && window.getSelection();
	
	  if (!selection || selection.rangeCount === 0) {
	    return null;
	  }
	
	  var anchorNode = selection.anchorNode;
	  var anchorOffset = selection.anchorOffset;
	  var focusNode = selection.focusNode;
	  var focusOffset = selection.focusOffset;
	
	  var currentRange = selection.getRangeAt(0);
	
	  // In Firefox, range.startContainer and range.endContainer can be "anonymous
	  // divs", e.g. the up/down buttons on an <input type="number">. Anonymous
	  // divs do not seem to expose properties, triggering a "Permission denied
	  // error" if any of its properties are accessed. The only seemingly possible
	  // way to avoid erroring is to access a property that typically works for
	  // non-anonymous divs and catch any error that may otherwise arise. See
	  // https://bugzilla.mozilla.org/show_bug.cgi?id=208427
	  try {
	    /* eslint-disable no-unused-expressions */
	    currentRange.startContainer.nodeType;
	    currentRange.endContainer.nodeType;
	    /* eslint-enable no-unused-expressions */
	  } catch (e) {
	    return null;
	  }
	
	  // If the node and offset values are the same, the selection is collapsed.
	  // `Selection.isCollapsed` is available natively, but IE sometimes gets
	  // this value wrong.
	  var isSelectionCollapsed = isCollapsed(selection.anchorNode, selection.anchorOffset, selection.focusNode, selection.focusOffset);
	
	  var rangeLength = isSelectionCollapsed ? 0 : currentRange.toString().length;
	
	  var tempRange = currentRange.cloneRange();
	  tempRange.selectNodeContents(node);
	  tempRange.setEnd(currentRange.startContainer, currentRange.startOffset);
	
	  var isTempRangeCollapsed = isCollapsed(tempRange.startContainer, tempRange.startOffset, tempRange.endContainer, tempRange.endOffset);
	
	  var start = isTempRangeCollapsed ? 0 : tempRange.toString().length;
	  var end = start + rangeLength;
	
	  // Detect whether the selection is backward.
	  var detectionRange = document.createRange();
	  detectionRange.setStart(anchorNode, anchorOffset);
	  detectionRange.setEnd(focusNode, focusOffset);
	  var isBackward = detectionRange.collapsed;
	
	  return {
	    start: isBackward ? end : start,
	    end: isBackward ? start : end
	  };
	}
	
	/**
	 * @param {DOMElement|DOMTextNode} node
	 * @param {object} offsets
	 */
	function setIEOffsets(node, offsets) {
	  var range = document.selection.createRange().duplicate();
	  var start, end;
	
	  if (offsets.end === undefined) {
	    start = offsets.start;
	    end = start;
	  } else if (offsets.start > offsets.end) {
	    start = offsets.end;
	    end = offsets.start;
	  } else {
	    start = offsets.start;
	    end = offsets.end;
	  }
	
	  range.moveToElementText(node);
	  range.moveStart('character', start);
	  range.setEndPoint('EndToStart', range);
	  range.moveEnd('character', end - start);
	  range.select();
	}
	
	/**
	 * In modern non-IE browsers, we can support both forward and backward
	 * selections.
	 *
	 * Note: IE10+ supports the Selection object, but it does not support
	 * the `extend` method, which means that even in modern IE, it's not possible
	 * to programmatically create a backward selection. Thus, for all IE
	 * versions, we use the old IE API to create our selections.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @param {object} offsets
	 */
	function setModernOffsets(node, offsets) {
	  if (!window.getSelection) {
	    return;
	  }
	
	  var selection = window.getSelection();
	  var length = node[getTextContentAccessor()].length;
	  var start = Math.min(offsets.start, length);
	  var end = offsets.end === undefined ? start : Math.min(offsets.end, length);
	
	  // IE 11 uses modern selection, but doesn't support the extend method.
	  // Flip backward selections, so we can set with a single range.
	  if (!selection.extend && start > end) {
	    var temp = end;
	    end = start;
	    start = temp;
	  }
	
	  var startMarker = getNodeForCharacterOffset(node, start);
	  var endMarker = getNodeForCharacterOffset(node, end);
	
	  if (startMarker && endMarker) {
	    var range = document.createRange();
	    range.setStart(startMarker.node, startMarker.offset);
	    selection.removeAllRanges();
	
	    if (start > end) {
	      selection.addRange(range);
	      selection.extend(endMarker.node, endMarker.offset);
	    } else {
	      range.setEnd(endMarker.node, endMarker.offset);
	      selection.addRange(range);
	    }
	  }
	}
	
	var useIEOffsets = ExecutionEnvironment.canUseDOM && 'selection' in document && !('getSelection' in window);
	
	var ReactDOMSelection = {
	  /**
	   * @param {DOMElement} node
	   */
	  getOffsets: useIEOffsets ? getIEOffsets : getModernOffsets,
	
	  /**
	   * @param {DOMElement|DOMTextNode} node
	   * @param {object} offsets
	   */
	  setOffsets: useIEOffsets ? setIEOffsets : setModernOffsets
	};
	
	module.exports = ReactDOMSelection;

/***/ },
/* 148 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	/**
	 * Given any node return the first leaf node without children.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @return {DOMElement|DOMTextNode}
	 */
	
	function getLeafNode(node) {
	  while (node && node.firstChild) {
	    node = node.firstChild;
	  }
	  return node;
	}
	
	/**
	 * Get the next sibling within a container. This will walk up the
	 * DOM if a node's siblings have been exhausted.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @return {?DOMElement|DOMTextNode}
	 */
	function getSiblingNode(node) {
	  while (node) {
	    if (node.nextSibling) {
	      return node.nextSibling;
	    }
	    node = node.parentNode;
	  }
	}
	
	/**
	 * Get object describing the nodes which contain characters at offset.
	 *
	 * @param {DOMElement|DOMTextNode} root
	 * @param {number} offset
	 * @return {?object}
	 */
	function getNodeForCharacterOffset(root, offset) {
	  var node = getLeafNode(root);
	  var nodeStart = 0;
	  var nodeEnd = 0;
	
	  while (node) {
	    if (node.nodeType === 3) {
	      nodeEnd = nodeStart + node.textContent.length;
	
	      if (nodeStart <= offset && nodeEnd >= offset) {
	        return {
	          node: node,
	          offset: offset - nodeStart
	        };
	      }
	
	      nodeStart = nodeEnd;
	    }
	
	    node = getLeafNode(getSiblingNode(node));
	  }
	}
	
	module.exports = getNodeForCharacterOffset;

/***/ },
/* 149 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	var isTextNode = __webpack_require__(150);
	
	/*eslint-disable no-bitwise */
	
	/**
	 * Checks if a given DOM node contains or is another DOM node.
	 */
	function containsNode(outerNode, innerNode) {
	  if (!outerNode || !innerNode) {
	    return false;
	  } else if (outerNode === innerNode) {
	    return true;
	  } else if (isTextNode(outerNode)) {
	    return false;
	  } else if (isTextNode(innerNode)) {
	    return containsNode(outerNode, innerNode.parentNode);
	  } else if ('contains' in outerNode) {
	    return outerNode.contains(innerNode);
	  } else if (outerNode.compareDocumentPosition) {
	    return !!(outerNode.compareDocumentPosition(innerNode) & 16);
	  } else {
	    return false;
	  }
	}
	
	module.exports = containsNode;

/***/ },
/* 150 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */
	
	var isNode = __webpack_require__(151);
	
	/**
	 * @param {*} object The object to check.
	 * @return {boolean} Whether or not the object is a DOM text node.
	 */
	function isTextNode(object) {
	  return isNode(object) && object.nodeType == 3;
	}
	
	module.exports = isTextNode;

/***/ },
/* 151 */
/***/ function(module, exports) {

	'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */
	
	/**
	 * @param {*} object The object to check.
	 * @return {boolean} Whether or not the object is a DOM node.
	 */
	function isNode(object) {
	  return !!(object && (typeof Node === 'function' ? object instanceof Node : typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));
	}
	
	module.exports = isNode;

/***/ },
/* 152 */
/***/ function(module, exports) {

	'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */
	
	/* eslint-disable fb-www/typeof-undefined */
	
	/**
	 * Same as document.activeElement but wraps in a try-catch block. In IE it is
	 * not safe to call document.activeElement if there is nothing focused.
	 *
	 * The activeElement will be null only if the document or document body is not
	 * yet defined.
	 */
	function getActiveElement() /*?DOMElement*/{
	  if (typeof document === 'undefined') {
	    return null;
	  }
	  try {
	    return document.activeElement || document.body;
	  } catch (e) {
	    return document.body;
	  }
	}
	
	module.exports = getActiveElement;

/***/ },
/* 153 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var NS = {
	  xlink: 'http://www.w3.org/1999/xlink',
	  xml: 'http://www.w3.org/XML/1998/namespace'
	};
	
	// We use attributes for everything SVG so let's avoid some duplication and run
	// code instead.
	// The following are all specified in the HTML config already so we exclude here.
	// - class (as className)
	// - color
	// - height
	// - id
	// - lang
	// - max
	// - media
	// - method
	// - min
	// - name
	// - style
	// - target
	// - type
	// - width
	var ATTRS = {
	  accentHeight: 'accent-height',
	  accumulate: 0,
	  additive: 0,
	  alignmentBaseline: 'alignment-baseline',
	  allowReorder: 'allowReorder',
	  alphabetic: 0,
	  amplitude: 0,
	  arabicForm: 'arabic-form',
	  ascent: 0,
	  attributeName: 'attributeName',
	  attributeType: 'attributeType',
	  autoReverse: 'autoReverse',
	  azimuth: 0,
	  baseFrequency: 'baseFrequency',
	  baseProfile: 'baseProfile',
	  baselineShift: 'baseline-shift',
	  bbox: 0,
	  begin: 0,
	  bias: 0,
	  by: 0,
	  calcMode: 'calcMode',
	  capHeight: 'cap-height',
	  clip: 0,
	  clipPath: 'clip-path',
	  clipRule: 'clip-rule',
	  clipPathUnits: 'clipPathUnits',
	  colorInterpolation: 'color-interpolation',
	  colorInterpolationFilters: 'color-interpolation-filters',
	  colorProfile: 'color-profile',
	  colorRendering: 'color-rendering',
	  contentScriptType: 'contentScriptType',
	  contentStyleType: 'contentStyleType',
	  cursor: 0,
	  cx: 0,
	  cy: 0,
	  d: 0,
	  decelerate: 0,
	  descent: 0,
	  diffuseConstant: 'diffuseConstant',
	  direction: 0,
	  display: 0,
	  divisor: 0,
	  dominantBaseline: 'dominant-baseline',
	  dur: 0,
	  dx: 0,
	  dy: 0,
	  edgeMode: 'edgeMode',
	  elevation: 0,
	  enableBackground: 'enable-background',
	  end: 0,
	  exponent: 0,
	  externalResourcesRequired: 'externalResourcesRequired',
	  fill: 0,
	  fillOpacity: 'fill-opacity',
	  fillRule: 'fill-rule',
	  filter: 0,
	  filterRes: 'filterRes',
	  filterUnits: 'filterUnits',
	  floodColor: 'flood-color',
	  floodOpacity: 'flood-opacity',
	  focusable: 0,
	  fontFamily: 'font-family',
	  fontSize: 'font-size',
	  fontSizeAdjust: 'font-size-adjust',
	  fontStretch: 'font-stretch',
	  fontStyle: 'font-style',
	  fontVariant: 'font-variant',
	  fontWeight: 'font-weight',
	  format: 0,
	  from: 0,
	  fx: 0,
	  fy: 0,
	  g1: 0,
	  g2: 0,
	  glyphName: 'glyph-name',
	  glyphOrientationHorizontal: 'glyph-orientation-horizontal',
	  glyphOrientationVertical: 'glyph-orientation-vertical',
	  glyphRef: 'glyphRef',
	  gradientTransform: 'gradientTransform',
	  gradientUnits: 'gradientUnits',
	  hanging: 0,
	  horizAdvX: 'horiz-adv-x',
	  horizOriginX: 'horiz-origin-x',
	  ideographic: 0,
	  imageRendering: 'image-rendering',
	  'in': 0,
	  in2: 0,
	  intercept: 0,
	  k: 0,
	  k1: 0,
	  k2: 0,
	  k3: 0,
	  k4: 0,
	  kernelMatrix: 'kernelMatrix',
	  kernelUnitLength: 'kernelUnitLength',
	  kerning: 0,
	  keyPoints: 'keyPoints',
	  keySplines: 'keySplines',
	  keyTimes: 'keyTimes',
	  lengthAdjust: 'lengthAdjust',
	  letterSpacing: 'letter-spacing',
	  lightingColor: 'lighting-color',
	  limitingConeAngle: 'limitingConeAngle',
	  local: 0,
	  markerEnd: 'marker-end',
	  markerMid: 'marker-mid',
	  markerStart: 'marker-start',
	  markerHeight: 'markerHeight',
	  markerUnits: 'markerUnits',
	  markerWidth: 'markerWidth',
	  mask: 0,
	  maskContentUnits: 'maskContentUnits',
	  maskUnits: 'maskUnits',
	  mathematical: 0,
	  mode: 0,
	  numOctaves: 'numOctaves',
	  offset: 0,
	  opacity: 0,
	  operator: 0,
	  order: 0,
	  orient: 0,
	  orientation: 0,
	  origin: 0,
	  overflow: 0,
	  overlinePosition: 'overline-position',
	  overlineThickness: 'overline-thickness',
	  paintOrder: 'paint-order',
	  panose1: 'panose-1',
	  pathLength: 'pathLength',
	  patternContentUnits: 'patternContentUnits',
	  patternTransform: 'patternTransform',
	  patternUnits: 'patternUnits',
	  pointerEvents: 'pointer-events',
	  points: 0,
	  pointsAtX: 'pointsAtX',
	  pointsAtY: 'pointsAtY',
	  pointsAtZ: 'pointsAtZ',
	  preserveAlpha: 'preserveAlpha',
	  preserveAspectRatio: 'preserveAspectRatio',
	  primitiveUnits: 'primitiveUnits',
	  r: 0,
	  radius: 0,
	  refX: 'refX',
	  refY: 'refY',
	  renderingIntent: 'rendering-intent',
	  repeatCount: 'repeatCount',
	  repeatDur: 'repeatDur',
	  requiredExtensions: 'requiredExtensions',
	  requiredFeatures: 'requiredFeatures',
	  restart: 0,
	  result: 0,
	  rotate: 0,
	  rx: 0,
	  ry: 0,
	  scale: 0,
	  seed: 0,
	  shapeRendering: 'shape-rendering',
	  slope: 0,
	  spacing: 0,
	  specularConstant: 'specularConstant',
	  specularExponent: 'specularExponent',
	  speed: 0,
	  spreadMethod: 'spreadMethod',
	  startOffset: 'startOffset',
	  stdDeviation: 'stdDeviation',
	  stemh: 0,
	  stemv: 0,
	  stitchTiles: 'stitchTiles',
	  stopColor: 'stop-color',
	  stopOpacity: 'stop-opacity',
	  strikethroughPosition: 'strikethrough-position',
	  strikethroughThickness: 'strikethrough-thickness',
	  string: 0,
	  stroke: 0,
	  strokeDasharray: 'stroke-dasharray',
	  strokeDashoffset: 'stroke-dashoffset',
	  strokeLinecap: 'stroke-linecap',
	  strokeLinejoin: 'stroke-linejoin',
	  strokeMiterlimit: 'stroke-miterlimit',
	  strokeOpacity: 'stroke-opacity',
	  strokeWidth: 'stroke-width',
	  surfaceScale: 'surfaceScale',
	  systemLanguage: 'systemLanguage',
	  tableValues: 'tableValues',
	  targetX: 'targetX',
	  targetY: 'targetY',
	  textAnchor: 'text-anchor',
	  textDecoration: 'text-decoration',
	  textRendering: 'text-rendering',
	  textLength: 'textLength',
	  to: 0,
	  transform: 0,
	  u1: 0,
	  u2: 0,
	  underlinePosition: 'underline-position',
	  underlineThickness: 'underline-thickness',
	  unicode: 0,
	  unicodeBidi: 'unicode-bidi',
	  unicodeRange: 'unicode-range',
	  unitsPerEm: 'units-per-em',
	  vAlphabetic: 'v-alphabetic',
	  vHanging: 'v-hanging',
	  vIdeographic: 'v-ideographic',
	  vMathematical: 'v-mathematical',
	  values: 0,
	  vectorEffect: 'vector-effect',
	  version: 0,
	  vertAdvY: 'vert-adv-y',
	  vertOriginX: 'vert-origin-x',
	  vertOriginY: 'vert-origin-y',
	  viewBox: 'viewBox',
	  viewTarget: 'viewTarget',
	  visibility: 0,
	  widths: 0,
	  wordSpacing: 'word-spacing',
	  writingMode: 'writing-mode',
	  x: 0,
	  xHeight: 'x-height',
	  x1: 0,
	  x2: 0,
	  xChannelSelector: 'xChannelSelector',
	  xlinkActuate: 'xlink:actuate',
	  xlinkArcrole: 'xlink:arcrole',
	  xlinkHref: 'xlink:href',
	  xlinkRole: 'xlink:role',
	  xlinkShow: 'xlink:show',
	  xlinkTitle: 'xlink:title',
	  xlinkType: 'xlink:type',
	  xmlBase: 'xml:base',
	  xmlns: 0,
	  xmlnsXlink: 'xmlns:xlink',
	  xmlLang: 'xml:lang',
	  xmlSpace: 'xml:space',
	  y: 0,
	  y1: 0,
	  y2: 0,
	  yChannelSelector: 'yChannelSelector',
	  z: 0,
	  zoomAndPan: 'zoomAndPan'
	};
	
	var SVGDOMPropertyConfig = {
	  Properties: {},
	  DOMAttributeNamespaces: {
	    xlinkActuate: NS.xlink,
	    xlinkArcrole: NS.xlink,
	    xlinkHref: NS.xlink,
	    xlinkRole: NS.xlink,
	    xlinkShow: NS.xlink,
	    xlinkTitle: NS.xlink,
	    xlinkType: NS.xlink,
	    xmlBase: NS.xml,
	    xmlLang: NS.xml,
	    xmlSpace: NS.xml
	  },
	  DOMAttributeNames: {}
	};
	
	Object.keys(ATTRS).forEach(function (key) {
	  SVGDOMPropertyConfig.Properties[key] = 0;
	  if (ATTRS[key]) {
	    SVGDOMPropertyConfig.DOMAttributeNames[key] = ATTRS[key];
	  }
	});
	
	module.exports = SVGDOMPropertyConfig;

/***/ },
/* 154 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var EventPropagators = __webpack_require__(41);
	var ExecutionEnvironment = __webpack_require__(48);
	var ReactDOMComponentTree = __webpack_require__(34);
	var ReactInputSelection = __webpack_require__(146);
	var SyntheticEvent = __webpack_require__(53);
	
	var getActiveElement = __webpack_require__(152);
	var isTextInputElement = __webpack_require__(71);
	var shallowEqual = __webpack_require__(123);
	
	var skipSelectionChangeEvent = ExecutionEnvironment.canUseDOM && 'documentMode' in document && document.documentMode <= 11;
	
	var eventTypes = {
	  select: {
	    phasedRegistrationNames: {
	      bubbled: 'onSelect',
	      captured: 'onSelectCapture'
	    },
	    dependencies: ['topBlur', 'topContextMenu', 'topFocus', 'topKeyDown', 'topKeyUp', 'topMouseDown', 'topMouseUp', 'topSelectionChange']
	  }
	};
	
	var activeElement = null;
	var activeElementInst = null;
	var lastSelection = null;
	var mouseDown = false;
	
	// Track whether a listener exists for this plugin. If none exist, we do
	// not extract events. See #3639.
	var hasListener = false;
	
	/**
	 * Get an object which is a unique representation of the current selection.
	 *
	 * The return value will not be consistent across nodes or browsers, but
	 * two identical selections on the same node will return identical objects.
	 *
	 * @param {DOMElement} node
	 * @return {object}
	 */
	function getSelection(node) {
	  if ('selectionStart' in node && ReactInputSelection.hasSelectionCapabilities(node)) {
	    return {
	      start: node.selectionStart,
	      end: node.selectionEnd
	    };
	  } else if (window.getSelection) {
	    var selection = window.getSelection();
	    return {
	      anchorNode: selection.anchorNode,
	      anchorOffset: selection.anchorOffset,
	      focusNode: selection.focusNode,
	      focusOffset: selection.focusOffset
	    };
	  } else if (document.selection) {
	    var range = document.selection.createRange();
	    return {
	      parentElement: range.parentElement(),
	      text: range.text,
	      top: range.boundingTop,
	      left: range.boundingLeft
	    };
	  }
	}
	
	/**
	 * Poll selection to see whether it's changed.
	 *
	 * @param {object} nativeEvent
	 * @return {?SyntheticEvent}
	 */
	function constructSelectEvent(nativeEvent, nativeEventTarget) {
	  // Ensure we have the right element, and that the user is not dragging a
	  // selection (this matches native `select` event behavior). In HTML5, select
	  // fires only on input and textarea thus if there's no focused element we
	  // won't dispatch.
	  if (mouseDown || activeElement == null || activeElement !== getActiveElement()) {
	    return null;
	  }
	
	  // Only fire when selection has actually changed.
	  var currentSelection = getSelection(activeElement);
	  if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {
	    lastSelection = currentSelection;
	
	    var syntheticEvent = SyntheticEvent.getPooled(eventTypes.select, activeElementInst, nativeEvent, nativeEventTarget);
	
	    syntheticEvent.type = 'select';
	    syntheticEvent.target = activeElement;
	
	    EventPropagators.accumulateTwoPhaseDispatches(syntheticEvent);
	
	    return syntheticEvent;
	  }
	
	  return null;
	}
	
	/**
	 * This plugin creates an `onSelect` event that normalizes select events
	 * across form elements.
	 *
	 * Supported elements are:
	 * - input (see `isTextInputElement`)
	 * - textarea
	 * - contentEditable
	 *
	 * This differs from native browser implementations in the following ways:
	 * - Fires on contentEditable fields as well as inputs.
	 * - Fires for collapsed selection.
	 * - Fires after user input.
	 */
	var SelectEventPlugin = {
	
	  eventTypes: eventTypes,
	
	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    if (!hasListener) {
	      return null;
	    }
	
	    var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;
	
	    switch (topLevelType) {
	      // Track the input node that has focus.
	      case 'topFocus':
	        if (isTextInputElement(targetNode) || targetNode.contentEditable === 'true') {
	          activeElement = targetNode;
	          activeElementInst = targetInst;
	          lastSelection = null;
	        }
	        break;
	      case 'topBlur':
	        activeElement = null;
	        activeElementInst = null;
	        lastSelection = null;
	        break;
	
	      // Don't fire the event while the user is dragging. This matches the
	      // semantics of the native select event.
	      case 'topMouseDown':
	        mouseDown = true;
	        break;
	      case 'topContextMenu':
	      case 'topMouseUp':
	        mouseDown = false;
	        return constructSelectEvent(nativeEvent, nativeEventTarget);
	
	      // Chrome and IE fire non-standard event when selection is changed (and
	      // sometimes when it hasn't). IE's event fires out of order with respect
	      // to key and input events on deletion, so we discard it.
	      //
	      // Firefox doesn't support selectionchange, so check selection status
	      // after each key entry. The selection changes after keydown and before
	      // keyup, but we check on keydown as well in the case of holding down a
	      // key, when multiple keydown events are fired but only one keyup is.
	      // This is also our approach for IE handling, for the reason above.
	      case 'topSelectionChange':
	        if (skipSelectionChangeEvent) {
	          break;
	        }
	      // falls through
	      case 'topKeyDown':
	      case 'topKeyUp':
	        return constructSelectEvent(nativeEvent, nativeEventTarget);
	    }
	
	    return null;
	  },
	
	  didPutListener: function (inst, registrationName, listener) {
	    if (registrationName === 'onSelect') {
	      hasListener = true;
	    }
	  }
	};
	
	module.exports = SelectEventPlugin;

/***/ },
/* 155 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(35);
	
	var EventListener = __webpack_require__(142);
	var EventPropagators = __webpack_require__(41);
	var ReactDOMComponentTree = __webpack_require__(34);
	var SyntheticAnimationEvent = __webpack_require__(156);
	var SyntheticClipboardEvent = __webpack_require__(157);
	var SyntheticEvent = __webpack_require__(53);
	var SyntheticFocusEvent = __webpack_require__(158);
	var SyntheticKeyboardEvent = __webpack_require__(159);
	var SyntheticMouseEvent = __webpack_require__(74);
	var SyntheticDragEvent = __webpack_require__(162);
	var SyntheticTouchEvent = __webpack_require__(163);
	var SyntheticTransitionEvent = __webpack_require__(164);
	var SyntheticUIEvent = __webpack_require__(75);
	var SyntheticWheelEvent = __webpack_require__(165);
	
	var emptyFunction = __webpack_require__(12);
	var getEventCharCode = __webpack_require__(160);
	var invariant = __webpack_require__(8);
	
	/**
	 * Turns
	 * ['abort', ...]
	 * into
	 * eventTypes = {
	 *   'abort': {
	 *     phasedRegistrationNames: {
	 *       bubbled: 'onAbort',
	 *       captured: 'onAbortCapture',
	 *     },
	 *     dependencies: ['topAbort'],
	 *   },
	 *   ...
	 * };
	 * topLevelEventsToDispatchConfig = {
	 *   'topAbort': { sameConfig }
	 * };
	 */
	var eventTypes = {};
	var topLevelEventsToDispatchConfig = {};
	['abort', 'animationEnd', 'animationIteration', 'animationStart', 'blur', 'canPlay', 'canPlayThrough', 'click', 'contextMenu', 'copy', 'cut', 'doubleClick', 'drag', 'dragEnd', 'dragEnter', 'dragExit', 'dragLeave', 'dragOver', 'dragStart', 'drop', 'durationChange', 'emptied', 'encrypted', 'ended', 'error', 'focus', 'input', 'invalid', 'keyDown', 'keyPress', 'keyUp', 'load', 'loadedData', 'loadedMetadata', 'loadStart', 'mouseDown', 'mouseMove', 'mouseOut', 'mouseOver', 'mouseUp', 'paste', 'pause', 'play', 'playing', 'progress', 'rateChange', 'reset', 'scroll', 'seeked', 'seeking', 'stalled', 'submit', 'suspend', 'timeUpdate', 'touchCancel', 'touchEnd', 'touchMove', 'touchStart', 'transitionEnd', 'volumeChange', 'waiting', 'wheel'].forEach(function (event) {
	  var capitalizedEvent = event[0].toUpperCase() + event.slice(1);
	  var onEvent = 'on' + capitalizedEvent;
	  var topEvent = 'top' + capitalizedEvent;
	
	  var type = {
	    phasedRegistrationNames: {
	      bubbled: onEvent,
	      captured: onEvent + 'Capture'
	    },
	    dependencies: [topEvent]
	  };
	  eventTypes[event] = type;
	  topLevelEventsToDispatchConfig[topEvent] = type;
	});
	
	var onClickListeners = {};
	
	function getDictionaryKey(inst) {
	  // Prevents V8 performance issue:
	  // https://github.com/facebook/react/pull/7232
	  return '.' + inst._rootNodeID;
	}
	
	function isInteractive(tag) {
	  return tag === 'button' || tag === 'input' || tag === 'select' || tag === 'textarea';
	}
	
	var SimpleEventPlugin = {
	
	  eventTypes: eventTypes,
	
	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];
	    if (!dispatchConfig) {
	      return null;
	    }
	    var EventConstructor;
	    switch (topLevelType) {
	      case 'topAbort':
	      case 'topCanPlay':
	      case 'topCanPlayThrough':
	      case 'topDurationChange':
	      case 'topEmptied':
	      case 'topEncrypted':
	      case 'topEnded':
	      case 'topError':
	      case 'topInput':
	      case 'topInvalid':
	      case 'topLoad':
	      case 'topLoadedData':
	      case 'topLoadedMetadata':
	      case 'topLoadStart':
	      case 'topPause':
	      case 'topPlay':
	      case 'topPlaying':
	      case 'topProgress':
	      case 'topRateChange':
	      case 'topReset':
	      case 'topSeeked':
	      case 'topSeeking':
	      case 'topStalled':
	      case 'topSubmit':
	      case 'topSuspend':
	      case 'topTimeUpdate':
	      case 'topVolumeChange':
	      case 'topWaiting':
	        // HTML Events
	        // @see http://www.w3.org/TR/html5/index.html#events-0
	        EventConstructor = SyntheticEvent;
	        break;
	      case 'topKeyPress':
	        // Firefox creates a keypress event for function keys too. This removes
	        // the unwanted keypress events. Enter is however both printable and
	        // non-printable. One would expect Tab to be as well (but it isn't).
	        if (getEventCharCode(nativeEvent) === 0) {
	          return null;
	        }
	      /* falls through */
	      case 'topKeyDown':
	      case 'topKeyUp':
	        EventConstructor = SyntheticKeyboardEvent;
	        break;
	      case 'topBlur':
	      case 'topFocus':
	        EventConstructor = SyntheticFocusEvent;
	        break;
	      case 'topClick':
	        // Firefox creates a click event on right mouse clicks. This removes the
	        // unwanted click events.
	        if (nativeEvent.button === 2) {
	          return null;
	        }
	      /* falls through */
	      case 'topDoubleClick':
	      case 'topMouseDown':
	      case 'topMouseMove':
	      case 'topMouseUp':
	      // TODO: Disabled elements should not respond to mouse events
	      /* falls through */
	      case 'topMouseOut':
	      case 'topMouseOver':
	      case 'topContextMenu':
	        EventConstructor = SyntheticMouseEvent;
	        break;
	      case 'topDrag':
	      case 'topDragEnd':
	      case 'topDragEnter':
	      case 'topDragExit':
	      case 'topDragLeave':
	      case 'topDragOver':
	      case 'topDragStart':
	      case 'topDrop':
	        EventConstructor = SyntheticDragEvent;
	        break;
	      case 'topTouchCancel':
	      case 'topTouchEnd':
	      case 'topTouchMove':
	      case 'topTouchStart':
	        EventConstructor = SyntheticTouchEvent;
	        break;
	      case 'topAnimationEnd':
	      case 'topAnimationIteration':
	      case 'topAnimationStart':
	        EventConstructor = SyntheticAnimationEvent;
	        break;
	      case 'topTransitionEnd':
	        EventConstructor = SyntheticTransitionEvent;
	        break;
	      case 'topScroll':
	        EventConstructor = SyntheticUIEvent;
	        break;
	      case 'topWheel':
	        EventConstructor = SyntheticWheelEvent;
	        break;
	      case 'topCopy':
	      case 'topCut':
	      case 'topPaste':
	        EventConstructor = SyntheticClipboardEvent;
	        break;
	    }
	    !EventConstructor ? process.env.NODE_ENV !== 'production' ? invariant(false, 'SimpleEventPlugin: Unhandled event type, `%s`.', topLevelType) : _prodInvariant('86', topLevelType) : void 0;
	    var event = EventConstructor.getPooled(dispatchConfig, targetInst, nativeEvent, nativeEventTarget);
	    EventPropagators.accumulateTwoPhaseDispatches(event);
	    return event;
	  },
	
	  didPutListener: function (inst, registrationName, listener) {
	    // Mobile Safari does not fire properly bubble click events on
	    // non-interactive elements, which means delegated click listeners do not
	    // fire. The workaround for this bug involves attaching an empty click
	    // listener on the target node.
	    // http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
	    if (registrationName === 'onClick' && !isInteractive(inst._tag)) {
	      var key = getDictionaryKey(inst);
	      var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	      if (!onClickListeners[key]) {
	        onClickListeners[key] = EventListener.listen(node, 'click', emptyFunction);
	      }
	    }
	  },
	
	  willDeleteListener: function (inst, registrationName) {
	    if (registrationName === 'onClick' && !isInteractive(inst._tag)) {
	      var key = getDictionaryKey(inst);
	      onClickListeners[key].remove();
	      delete onClickListeners[key];
	    }
	  }
	
	};
	
	module.exports = SimpleEventPlugin;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 156 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var SyntheticEvent = __webpack_require__(53);
	
	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/css3-animations/#AnimationEvent-interface
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/AnimationEvent
	 */
	var AnimationEventInterface = {
	  animationName: null,
	  elapsedTime: null,
	  pseudoElement: null
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticEvent}
	 */
	function SyntheticAnimationEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticEvent.augmentClass(SyntheticAnimationEvent, AnimationEventInterface);
	
	module.exports = SyntheticAnimationEvent;

/***/ },
/* 157 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var SyntheticEvent = __webpack_require__(53);
	
	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/clipboard-apis/
	 */
	var ClipboardEventInterface = {
	  clipboardData: function (event) {
	    return 'clipboardData' in event ? event.clipboardData : window.clipboardData;
	  }
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticClipboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticEvent.augmentClass(SyntheticClipboardEvent, ClipboardEventInterface);
	
	module.exports = SyntheticClipboardEvent;

/***/ },
/* 158 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var SyntheticUIEvent = __webpack_require__(75);
	
	/**
	 * @interface FocusEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var FocusEventInterface = {
	  relatedTarget: null
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticFocusEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticUIEvent.augmentClass(SyntheticFocusEvent, FocusEventInterface);
	
	module.exports = SyntheticFocusEvent;

/***/ },
/* 159 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var SyntheticUIEvent = __webpack_require__(75);
	
	var getEventCharCode = __webpack_require__(160);
	var getEventKey = __webpack_require__(161);
	var getEventModifierState = __webpack_require__(77);
	
	/**
	 * @interface KeyboardEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var KeyboardEventInterface = {
	  key: getEventKey,
	  location: null,
	  ctrlKey: null,
	  shiftKey: null,
	  altKey: null,
	  metaKey: null,
	  repeat: null,
	  locale: null,
	  getModifierState: getEventModifierState,
	  // Legacy Interface
	  charCode: function (event) {
	    // `charCode` is the result of a KeyPress event and represents the value of
	    // the actual printable character.
	
	    // KeyPress is deprecated, but its replacement is not yet final and not
	    // implemented in any major browser. Only KeyPress has charCode.
	    if (event.type === 'keypress') {
	      return getEventCharCode(event);
	    }
	    return 0;
	  },
	  keyCode: function (event) {
	    // `keyCode` is the result of a KeyDown/Up event and represents the value of
	    // physical keyboard key.
	
	    // The actual meaning of the value depends on the users' keyboard layout
	    // which cannot be detected. Assuming that it is a US keyboard layout
	    // provides a surprisingly accurate mapping for US and European users.
	    // Due to this, it is left to the user to implement at this time.
	    if (event.type === 'keydown' || event.type === 'keyup') {
	      return event.keyCode;
	    }
	    return 0;
	  },
	  which: function (event) {
	    // `which` is an alias for either `keyCode` or `charCode` depending on the
	    // type of the event.
	    if (event.type === 'keypress') {
	      return getEventCharCode(event);
	    }
	    if (event.type === 'keydown' || event.type === 'keyup') {
	      return event.keyCode;
	    }
	    return 0;
	  }
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticKeyboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticUIEvent.augmentClass(SyntheticKeyboardEvent, KeyboardEventInterface);
	
	module.exports = SyntheticKeyboardEvent;

/***/ },
/* 160 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	/**
	 * `charCode` represents the actual "character code" and is safe to use with
	 * `String.fromCharCode`. As such, only keys that correspond to printable
	 * characters produce a valid `charCode`, the only exception to this is Enter.
	 * The Tab-key is considered non-printable and does not have a `charCode`,
	 * presumably because it does not produce a tab-character in browsers.
	 *
	 * @param {object} nativeEvent Native browser event.
	 * @return {number} Normalized `charCode` property.
	 */
	
	function getEventCharCode(nativeEvent) {
	  var charCode;
	  var keyCode = nativeEvent.keyCode;
	
	  if ('charCode' in nativeEvent) {
	    charCode = nativeEvent.charCode;
	
	    // FF does not set `charCode` for the Enter-key, check against `keyCode`.
	    if (charCode === 0 && keyCode === 13) {
	      charCode = 13;
	    }
	  } else {
	    // IE8 does not implement `charCode`, but `keyCode` has the correct value.
	    charCode = keyCode;
	  }
	
	  // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.
	  // Must not discard the (non-)printable Enter-key.
	  if (charCode >= 32 || charCode === 13) {
	    return charCode;
	  }
	
	  return 0;
	}
	
	module.exports = getEventCharCode;

/***/ },
/* 161 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var getEventCharCode = __webpack_require__(160);
	
	/**
	 * Normalization of deprecated HTML5 `key` values
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
	 */
	var normalizeKey = {
	  'Esc': 'Escape',
	  'Spacebar': ' ',
	  'Left': 'ArrowLeft',
	  'Up': 'ArrowUp',
	  'Right': 'ArrowRight',
	  'Down': 'ArrowDown',
	  'Del': 'Delete',
	  'Win': 'OS',
	  'Menu': 'ContextMenu',
	  'Apps': 'ContextMenu',
	  'Scroll': 'ScrollLock',
	  'MozPrintableKey': 'Unidentified'
	};
	
	/**
	 * Translation from legacy `keyCode` to HTML5 `key`
	 * Only special keys supported, all others depend on keyboard layout or browser
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
	 */
	var translateToKey = {
	  8: 'Backspace',
	  9: 'Tab',
	  12: 'Clear',
	  13: 'Enter',
	  16: 'Shift',
	  17: 'Control',
	  18: 'Alt',
	  19: 'Pause',
	  20: 'CapsLock',
	  27: 'Escape',
	  32: ' ',
	  33: 'PageUp',
	  34: 'PageDown',
	  35: 'End',
	  36: 'Home',
	  37: 'ArrowLeft',
	  38: 'ArrowUp',
	  39: 'ArrowRight',
	  40: 'ArrowDown',
	  45: 'Insert',
	  46: 'Delete',
	  112: 'F1', 113: 'F2', 114: 'F3', 115: 'F4', 116: 'F5', 117: 'F6',
	  118: 'F7', 119: 'F8', 120: 'F9', 121: 'F10', 122: 'F11', 123: 'F12',
	  144: 'NumLock',
	  145: 'ScrollLock',
	  224: 'Meta'
	};
	
	/**
	 * @param {object} nativeEvent Native browser event.
	 * @return {string} Normalized `key` property.
	 */
	function getEventKey(nativeEvent) {
	  if (nativeEvent.key) {
	    // Normalize inconsistent values reported by browsers due to
	    // implementations of a working draft specification.
	
	    // FireFox implements `key` but returns `MozPrintableKey` for all
	    // printable characters (normalized to `Unidentified`), ignore it.
	    var key = normalizeKey[nativeEvent.key] || nativeEvent.key;
	    if (key !== 'Unidentified') {
	      return key;
	    }
	  }
	
	  // Browser does not implement `key`, polyfill as much of it as we can.
	  if (nativeEvent.type === 'keypress') {
	    var charCode = getEventCharCode(nativeEvent);
	
	    // The enter-key is technically both printable and non-printable and can
	    // thus be captured by `keypress`, no other non-printable key should.
	    return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);
	  }
	  if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {
	    // While user keyboard layout determines the actual meaning of each
	    // `keyCode` value, almost all function keys have a universal value.
	    return translateToKey[nativeEvent.keyCode] || 'Unidentified';
	  }
	  return '';
	}
	
	module.exports = getEventKey;

/***/ },
/* 162 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var SyntheticMouseEvent = __webpack_require__(74);
	
	/**
	 * @interface DragEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var DragEventInterface = {
	  dataTransfer: null
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticDragEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticMouseEvent.augmentClass(SyntheticDragEvent, DragEventInterface);
	
	module.exports = SyntheticDragEvent;

/***/ },
/* 163 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var SyntheticUIEvent = __webpack_require__(75);
	
	var getEventModifierState = __webpack_require__(77);
	
	/**
	 * @interface TouchEvent
	 * @see http://www.w3.org/TR/touch-events/
	 */
	var TouchEventInterface = {
	  touches: null,
	  targetTouches: null,
	  changedTouches: null,
	  altKey: null,
	  metaKey: null,
	  ctrlKey: null,
	  shiftKey: null,
	  getModifierState: getEventModifierState
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticTouchEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticUIEvent.augmentClass(SyntheticTouchEvent, TouchEventInterface);
	
	module.exports = SyntheticTouchEvent;

/***/ },
/* 164 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var SyntheticEvent = __webpack_require__(53);
	
	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/2009/WD-css3-transitions-20090320/#transition-events-
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/TransitionEvent
	 */
	var TransitionEventInterface = {
	  propertyName: null,
	  elapsedTime: null,
	  pseudoElement: null
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticEvent}
	 */
	function SyntheticTransitionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticEvent.augmentClass(SyntheticTransitionEvent, TransitionEventInterface);
	
	module.exports = SyntheticTransitionEvent;

/***/ },
/* 165 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var SyntheticMouseEvent = __webpack_require__(74);
	
	/**
	 * @interface WheelEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var WheelEventInterface = {
	  deltaX: function (event) {
	    return 'deltaX' in event ? event.deltaX :
	    // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).
	    'wheelDeltaX' in event ? -event.wheelDeltaX : 0;
	  },
	  deltaY: function (event) {
	    return 'deltaY' in event ? event.deltaY :
	    // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).
	    'wheelDeltaY' in event ? -event.wheelDeltaY :
	    // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).
	    'wheelDelta' in event ? -event.wheelDelta : 0;
	  },
	  deltaZ: null,
	
	  // Browsers without "deltaMode" is reporting in raw wheel delta where one
	  // notch on the scroll is always +/- 120, roughly equivalent to pixels.
	  // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or
	  // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.
	  deltaMode: null
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticMouseEvent}
	 */
	function SyntheticWheelEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticMouseEvent.augmentClass(SyntheticWheelEvent, WheelEventInterface);
	
	module.exports = SyntheticWheelEvent;

/***/ },
/* 166 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(35);
	
	var DOMLazyTree = __webpack_require__(81);
	var DOMProperty = __webpack_require__(36);
	var React = __webpack_require__(2);
	var ReactBrowserEventEmitter = __webpack_require__(105);
	var ReactCurrentOwner = __webpack_require__(10);
	var ReactDOMComponentTree = __webpack_require__(34);
	var ReactDOMContainerInfo = __webpack_require__(167);
	var ReactDOMFeatureFlags = __webpack_require__(168);
	var ReactFeatureFlags = __webpack_require__(58);
	var ReactInstanceMap = __webpack_require__(116);
	var ReactInstrumentation = __webpack_require__(62);
	var ReactMarkupChecksum = __webpack_require__(169);
	var ReactReconciler = __webpack_require__(59);
	var ReactUpdateQueue = __webpack_require__(135);
	var ReactUpdates = __webpack_require__(56);
	
	var emptyObject = __webpack_require__(20);
	var instantiateReactComponent = __webpack_require__(118);
	var invariant = __webpack_require__(8);
	var setInnerHTML = __webpack_require__(83);
	var shouldUpdateReactComponent = __webpack_require__(124);
	var warning = __webpack_require__(11);
	
	var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
	var ROOT_ATTR_NAME = DOMProperty.ROOT_ATTRIBUTE_NAME;
	
	var ELEMENT_NODE_TYPE = 1;
	var DOC_NODE_TYPE = 9;
	var DOCUMENT_FRAGMENT_NODE_TYPE = 11;
	
	var instancesByReactRootID = {};
	
	/**
	 * Finds the index of the first character
	 * that's not common between the two given strings.
	 *
	 * @return {number} the index of the character where the strings diverge
	 */
	function firstDifferenceIndex(string1, string2) {
	  var minLen = Math.min(string1.length, string2.length);
	  for (var i = 0; i < minLen; i++) {
	    if (string1.charAt(i) !== string2.charAt(i)) {
	      return i;
	    }
	  }
	  return string1.length === string2.length ? -1 : minLen;
	}
	
	/**
	 * @param {DOMElement|DOMDocument} container DOM element that may contain
	 * a React component
	 * @return {?*} DOM element that may have the reactRoot ID, or null.
	 */
	function getReactRootElementInContainer(container) {
	  if (!container) {
	    return null;
	  }
	
	  if (container.nodeType === DOC_NODE_TYPE) {
	    return container.documentElement;
	  } else {
	    return container.firstChild;
	  }
	}
	
	function internalGetID(node) {
	  // If node is something like a window, document, or text node, none of
	  // which support attributes or a .getAttribute method, gracefully return
	  // the empty string, as if the attribute were missing.
	  return node.getAttribute && node.getAttribute(ATTR_NAME) || '';
	}
	
	/**
	 * Mounts this component and inserts it into the DOM.
	 *
	 * @param {ReactComponent} componentInstance The instance to mount.
	 * @param {DOMElement} container DOM element to mount into.
	 * @param {ReactReconcileTransaction} transaction
	 * @param {boolean} shouldReuseMarkup If true, do not insert markup
	 */
	function mountComponentIntoNode(wrapperInstance, container, transaction, shouldReuseMarkup, context) {
	  var markerName;
	  if (ReactFeatureFlags.logTopLevelRenders) {
	    var wrappedElement = wrapperInstance._currentElement.props.child;
	    var type = wrappedElement.type;
	    markerName = 'React mount: ' + (typeof type === 'string' ? type : type.displayName || type.name);
	    console.time(markerName);
	  }
	
	  var markup = ReactReconciler.mountComponent(wrapperInstance, transaction, null, ReactDOMContainerInfo(wrapperInstance, container), context, 0 /* parentDebugID */
	  );
	
	  if (markerName) {
	    console.timeEnd(markerName);
	  }
	
	  wrapperInstance._renderedComponent._topLevelWrapper = wrapperInstance;
	  ReactMount._mountImageIntoNode(markup, container, wrapperInstance, shouldReuseMarkup, transaction);
	}
	
	/**
	 * Batched mount.
	 *
	 * @param {ReactComponent} componentInstance The instance to mount.
	 * @param {DOMElement} container DOM element to mount into.
	 * @param {boolean} shouldReuseMarkup If true, do not insert markup
	 */
	function batchedMountComponentIntoNode(componentInstance, container, shouldReuseMarkup, context) {
	  var transaction = ReactUpdates.ReactReconcileTransaction.getPooled(
	  /* useCreateElement */
	  !shouldReuseMarkup && ReactDOMFeatureFlags.useCreateElement);
	  transaction.perform(mountComponentIntoNode, null, componentInstance, container, transaction, shouldReuseMarkup, context);
	  ReactUpdates.ReactReconcileTransaction.release(transaction);
	}
	
	/**
	 * Unmounts a component and removes it from the DOM.
	 *
	 * @param {ReactComponent} instance React component instance.
	 * @param {DOMElement} container DOM element to unmount from.
	 * @final
	 * @internal
	 * @see {ReactMount.unmountComponentAtNode}
	 */
	function unmountComponentFromNode(instance, container, safely) {
	  if (process.env.NODE_ENV !== 'production') {
	    ReactInstrumentation.debugTool.onBeginFlush();
	  }
	  ReactReconciler.unmountComponent(instance, safely);
	  if (process.env.NODE_ENV !== 'production') {
	    ReactInstrumentation.debugTool.onEndFlush();
	  }
	
	  if (container.nodeType === DOC_NODE_TYPE) {
	    container = container.documentElement;
	  }
	
	  // http://jsperf.com/emptying-a-node
	  while (container.lastChild) {
	    container.removeChild(container.lastChild);
	  }
	}
	
	/**
	 * True if the supplied DOM node has a direct React-rendered child that is
	 * not a React root element. Useful for warning in `render`,
	 * `unmountComponentAtNode`, etc.
	 *
	 * @param {?DOMElement} node The candidate DOM node.
	 * @return {boolean} True if the DOM element contains a direct child that was
	 * rendered by React but is not a root element.
	 * @internal
	 */
	function hasNonRootReactChild(container) {
	  var rootEl = getReactRootElementInContainer(container);
	  if (rootEl) {
	    var inst = ReactDOMComponentTree.getInstanceFromNode(rootEl);
	    return !!(inst && inst._hostParent);
	  }
	}
	
	/**
	 * True if the supplied DOM node is a React DOM element and
	 * it has been rendered by another copy of React.
	 *
	 * @param {?DOMElement} node The candidate DOM node.
	 * @return {boolean} True if the DOM has been rendered by another copy of React
	 * @internal
	 */
	function nodeIsRenderedByOtherInstance(container) {
	  var rootEl = getReactRootElementInContainer(container);
	  return !!(rootEl && isReactNode(rootEl) && !ReactDOMComponentTree.getInstanceFromNode(rootEl));
	}
	
	/**
	 * True if the supplied DOM node is a valid node element.
	 *
	 * @param {?DOMElement} node The candidate DOM node.
	 * @return {boolean} True if the DOM is a valid DOM node.
	 * @internal
	 */
	function isValidContainer(node) {
	  return !!(node && (node.nodeType === ELEMENT_NODE_TYPE || node.nodeType === DOC_NODE_TYPE || node.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE));
	}
	
	/**
	 * True if the supplied DOM node is a valid React node element.
	 *
	 * @param {?DOMElement} node The candidate DOM node.
	 * @return {boolean} True if the DOM is a valid React DOM node.
	 * @internal
	 */
	function isReactNode(node) {
	  return isValidContainer(node) && (node.hasAttribute(ROOT_ATTR_NAME) || node.hasAttribute(ATTR_NAME));
	}
	
	function getHostRootInstanceInContainer(container) {
	  var rootEl = getReactRootElementInContainer(container);
	  var prevHostInstance = rootEl && ReactDOMComponentTree.getInstanceFromNode(rootEl);
	  return prevHostInstance && !prevHostInstance._hostParent ? prevHostInstance : null;
	}
	
	function getTopLevelWrapperInContainer(container) {
	  var root = getHostRootInstanceInContainer(container);
	  return root ? root._hostContainerInfo._topLevelWrapper : null;
	}
	
	/**
	 * Temporary (?) hack so that we can store all top-level pending updates on
	 * composites instead of having to worry about different types of components
	 * here.
	 */
	var topLevelRootCounter = 1;
	var TopLevelWrapper = function () {
	  this.rootID = topLevelRootCounter++;
	};
	TopLevelWrapper.prototype.isReactComponent = {};
	if (process.env.NODE_ENV !== 'production') {
	  TopLevelWrapper.displayName = 'TopLevelWrapper';
	}
	TopLevelWrapper.prototype.render = function () {
	  return this.props.child;
	};
	TopLevelWrapper.isReactTopLevelWrapper = true;
	
	/**
	 * Mounting is the process of initializing a React component by creating its
	 * representative DOM elements and inserting them into a supplied `container`.
	 * Any prior content inside `container` is destroyed in the process.
	 *
	 *   ReactMount.render(
	 *     component,
	 *     document.getElementById('container')
	 *   );
	 *
	 *   <div id="container">                   <-- Supplied `container`.
	 *     <div data-reactid=".3">              <-- Rendered reactRoot of React
	 *       // ...                                 component.
	 *     </div>
	 *   </div>
	 *
	 * Inside of `container`, the first element rendered is the "reactRoot".
	 */
	var ReactMount = {
	
	  TopLevelWrapper: TopLevelWrapper,
	
	  /**
	   * Used by devtools. The keys are not important.
	   */
	  _instancesByReactRootID: instancesByReactRootID,
	
	  /**
	   * This is a hook provided to support rendering React components while
	   * ensuring that the apparent scroll position of its `container` does not
	   * change.
	   *
	   * @param {DOMElement} container The `container` being rendered into.
	   * @param {function} renderCallback This must be called once to do the render.
	   */
	  scrollMonitor: function (container, renderCallback) {
	    renderCallback();
	  },
	
	  /**
	   * Take a component that's already mounted into the DOM and replace its props
	   * @param {ReactComponent} prevComponent component instance already in the DOM
	   * @param {ReactElement} nextElement component instance to render
	   * @param {DOMElement} container container to render into
	   * @param {?function} callback function triggered on completion
	   */
	  _updateRootComponent: function (prevComponent, nextElement, nextContext, container, callback) {
	    ReactMount.scrollMonitor(container, function () {
	      ReactUpdateQueue.enqueueElementInternal(prevComponent, nextElement, nextContext);
	      if (callback) {
	        ReactUpdateQueue.enqueueCallbackInternal(prevComponent, callback);
	      }
	    });
	
	    return prevComponent;
	  },
	
	  /**
	   * Render a new component into the DOM. Hooked by hooks!
	   *
	   * @param {ReactElement} nextElement element to render
	   * @param {DOMElement} container container to render into
	   * @param {boolean} shouldReuseMarkup if we should skip the markup insertion
	   * @return {ReactComponent} nextComponent
	   */
	  _renderNewRootComponent: function (nextElement, container, shouldReuseMarkup, context) {
	    // Various parts of our code (such as ReactCompositeComponent's
	    // _renderValidatedComponent) assume that calls to render aren't nested;
	    // verify that that's the case.
	    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, '_renderNewRootComponent(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from ' + 'render is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;
	
	    !isValidContainer(container) ? process.env.NODE_ENV !== 'production' ? invariant(false, '_registerComponent(...): Target container is not a DOM element.') : _prodInvariant('37') : void 0;
	
	    ReactBrowserEventEmitter.ensureScrollValueMonitoring();
	    var componentInstance = instantiateReactComponent(nextElement, false);
	
	    // The initial render is synchronous but any updates that happen during
	    // rendering, in componentWillMount or componentDidMount, will be batched
	    // according to the current batching strategy.
	
	    ReactUpdates.batchedUpdates(batchedMountComponentIntoNode, componentInstance, container, shouldReuseMarkup, context);
	
	    var wrapperID = componentInstance._instance.rootID;
	    instancesByReactRootID[wrapperID] = componentInstance;
	
	    return componentInstance;
	  },
	
	  /**
	   * Renders a React component into the DOM in the supplied `container`.
	   *
	   * If the React component was previously rendered into `container`, this will
	   * perform an update on it and only mutate the DOM as necessary to reflect the
	   * latest React component.
	   *
	   * @param {ReactComponent} parentComponent The conceptual parent of this render tree.
	   * @param {ReactElement} nextElement Component element to render.
	   * @param {DOMElement} container DOM element to render into.
	   * @param {?function} callback function triggered on completion
	   * @return {ReactComponent} Component instance rendered in `container`.
	   */
	  renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {
	    !(parentComponent != null && ReactInstanceMap.has(parentComponent)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'parentComponent must be a valid React Component') : _prodInvariant('38') : void 0;
	    return ReactMount._renderSubtreeIntoContainer(parentComponent, nextElement, container, callback);
	  },
	
	  _renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {
	    ReactUpdateQueue.validateCallback(callback, 'ReactDOM.render');
	    !React.isValidElement(nextElement) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactDOM.render(): Invalid component element.%s', typeof nextElement === 'string' ? ' Instead of passing a string like \'div\', pass ' + 'React.createElement(\'div\') or <div />.' : typeof nextElement === 'function' ? ' Instead of passing a class like Foo, pass ' + 'React.createElement(Foo) or <Foo />.' :
	    // Check if it quacks like an element
	    nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : _prodInvariant('39', typeof nextElement === 'string' ? ' Instead of passing a string like \'div\', pass ' + 'React.createElement(\'div\') or <div />.' : typeof nextElement === 'function' ? ' Instead of passing a class like Foo, pass ' + 'React.createElement(Foo) or <Foo />.' : nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : void 0;
	
	    process.env.NODE_ENV !== 'production' ? warning(!container || !container.tagName || container.tagName.toUpperCase() !== 'BODY', 'render(): Rendering components directly into document.body is ' + 'discouraged, since its children are often manipulated by third-party ' + 'scripts and browser extensions. This may lead to subtle ' + 'reconciliation issues. Try rendering into a container element created ' + 'for your app.') : void 0;
	
	    var nextWrappedElement = React.createElement(TopLevelWrapper, { child: nextElement });
	
	    var nextContext;
	    if (parentComponent) {
	      var parentInst = ReactInstanceMap.get(parentComponent);
	      nextContext = parentInst._processChildContext(parentInst._context);
	    } else {
	      nextContext = emptyObject;
	    }
	
	    var prevComponent = getTopLevelWrapperInContainer(container);
	
	    if (prevComponent) {
	      var prevWrappedElement = prevComponent._currentElement;
	      var prevElement = prevWrappedElement.props.child;
	      if (shouldUpdateReactComponent(prevElement, nextElement)) {
	        var publicInst = prevComponent._renderedComponent.getPublicInstance();
	        var updatedCallback = callback && function () {
	          callback.call(publicInst);
	        };
	        ReactMount._updateRootComponent(prevComponent, nextWrappedElement, nextContext, container, updatedCallback);
	        return publicInst;
	      } else {
	        ReactMount.unmountComponentAtNode(container);
	      }
	    }
	
	    var reactRootElement = getReactRootElementInContainer(container);
	    var containerHasReactMarkup = reactRootElement && !!internalGetID(reactRootElement);
	    var containerHasNonRootReactChild = hasNonRootReactChild(container);
	
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, 'render(...): Replacing React-rendered children with a new root ' + 'component. If you intended to update the children of this node, ' + 'you should instead have the existing children update their state ' + 'and render the new components instead of calling ReactDOM.render.') : void 0;
	
	      if (!containerHasReactMarkup || reactRootElement.nextSibling) {
	        var rootElementSibling = reactRootElement;
	        while (rootElementSibling) {
	          if (internalGetID(rootElementSibling)) {
	            process.env.NODE_ENV !== 'production' ? warning(false, 'render(): Target node has markup rendered by React, but there ' + 'are unrelated nodes as well. This is most commonly caused by ' + 'white-space inserted around server-rendered markup.') : void 0;
	            break;
	          }
	          rootElementSibling = rootElementSibling.nextSibling;
	        }
	      }
	    }
	
	    var shouldReuseMarkup = containerHasReactMarkup && !prevComponent && !containerHasNonRootReactChild;
	    var component = ReactMount._renderNewRootComponent(nextWrappedElement, container, shouldReuseMarkup, nextContext)._renderedComponent.getPublicInstance();
	    if (callback) {
	      callback.call(component);
	    }
	    return component;
	  },
	
	  /**
	   * Renders a React component into the DOM in the supplied `container`.
	   * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.render
	   *
	   * If the React component was previously rendered into `container`, this will
	   * perform an update on it and only mutate the DOM as necessary to reflect the
	   * latest React component.
	   *
	   * @param {ReactElement} nextElement Component element to render.
	   * @param {DOMElement} container DOM element to render into.
	   * @param {?function} callback function triggered on completion
	   * @return {ReactComponent} Component instance rendered in `container`.
	   */
	  render: function (nextElement, container, callback) {
	    return ReactMount._renderSubtreeIntoContainer(null, nextElement, container, callback);
	  },
	
	  /**
	   * Unmounts and destroys the React component rendered in the `container`.
	   * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.unmountcomponentatnode
	   *
	   * @param {DOMElement} container DOM element containing a React component.
	   * @return {boolean} True if a component was found in and unmounted from
	   *                   `container`
	   */
	  unmountComponentAtNode: function (container) {
	    // Various parts of our code (such as ReactCompositeComponent's
	    // _renderValidatedComponent) assume that calls to render aren't nested;
	    // verify that that's the case. (Strictly speaking, unmounting won't cause a
	    // render but we still don't expect to be in a render call here.)
	    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, 'unmountComponentAtNode(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from render ' + 'is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;
	
	    !isValidContainer(container) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'unmountComponentAtNode(...): Target container is not a DOM element.') : _prodInvariant('40') : void 0;
	
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(!nodeIsRenderedByOtherInstance(container), 'unmountComponentAtNode(): The node you\'re attempting to unmount ' + 'was rendered by another copy of React.') : void 0;
	    }
	
	    var prevComponent = getTopLevelWrapperInContainer(container);
	    if (!prevComponent) {
	      // Check if the node being unmounted was rendered by React, but isn't a
	      // root node.
	      var containerHasNonRootReactChild = hasNonRootReactChild(container);
	
	      // Check if the container itself is a React root node.
	      var isContainerReactRoot = container.nodeType === 1 && container.hasAttribute(ROOT_ATTR_NAME);
	
	      if (process.env.NODE_ENV !== 'production') {
	        process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, 'unmountComponentAtNode(): The node you\'re attempting to unmount ' + 'was rendered by React and is not a top-level container. %s', isContainerReactRoot ? 'You may have accidentally passed in a React root node instead ' + 'of its container.' : 'Instead, have the parent component update its state and ' + 'rerender in order to remove this component.') : void 0;
	      }
	
	      return false;
	    }
	    delete instancesByReactRootID[prevComponent._instance.rootID];
	    ReactUpdates.batchedUpdates(unmountComponentFromNode, prevComponent, container, false);
	    return true;
	  },
	
	  _mountImageIntoNode: function (markup, container, instance, shouldReuseMarkup, transaction) {
	    !isValidContainer(container) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mountComponentIntoNode(...): Target container is not valid.') : _prodInvariant('41') : void 0;
	
	    if (shouldReuseMarkup) {
	      var rootElement = getReactRootElementInContainer(container);
	      if (ReactMarkupChecksum.canReuseMarkup(markup, rootElement)) {
	        ReactDOMComponentTree.precacheNode(instance, rootElement);
	        return;
	      } else {
	        var checksum = rootElement.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
	        rootElement.removeAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
	
	        var rootMarkup = rootElement.outerHTML;
	        rootElement.setAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME, checksum);
	
	        var normalizedMarkup = markup;
	        if (process.env.NODE_ENV !== 'production') {
	          // because rootMarkup is retrieved from the DOM, various normalizations
	          // will have occurred which will not be present in `markup`. Here,
	          // insert markup into a <div> or <iframe> depending on the container
	          // type to perform the same normalizations before comparing.
	          var normalizer;
	          if (container.nodeType === ELEMENT_NODE_TYPE) {
	            normalizer = document.createElement('div');
	            normalizer.innerHTML = markup;
	            normalizedMarkup = normalizer.innerHTML;
	          } else {
	            normalizer = document.createElement('iframe');
	            document.body.appendChild(normalizer);
	            normalizer.contentDocument.write(markup);
	            normalizedMarkup = normalizer.contentDocument.documentElement.outerHTML;
	            document.body.removeChild(normalizer);
	          }
	        }
	
	        var diffIndex = firstDifferenceIndex(normalizedMarkup, rootMarkup);
	        var difference = ' (client) ' + normalizedMarkup.substring(diffIndex - 20, diffIndex + 20) + '\n (server) ' + rootMarkup.substring(diffIndex - 20, diffIndex + 20);
	
	        !(container.nodeType !== DOC_NODE_TYPE) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'You\'re trying to render a component to the document using server rendering but the checksum was invalid. This usually means you rendered a different component type or props on the client from the one on the server, or your render() methods are impure. React cannot handle this case due to cross-browser quirks by rendering at the document root. You should look for environment dependent code in your components and ensure the props are the same client and server side:\n%s', difference) : _prodInvariant('42', difference) : void 0;
	
	        if (process.env.NODE_ENV !== 'production') {
	          process.env.NODE_ENV !== 'production' ? warning(false, 'React attempted to reuse markup in a container but the ' + 'checksum was invalid. This generally means that you are ' + 'using server rendering and the markup generated on the ' + 'server was not what the client was expecting. React injected ' + 'new markup to compensate which works but you have lost many ' + 'of the benefits of server rendering. Instead, figure out ' + 'why the markup being generated is different on the client ' + 'or server:\n%s', difference) : void 0;
	        }
	      }
	    }
	
	    !(container.nodeType !== DOC_NODE_TYPE) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'You\'re trying to render a component to the document but you didn\'t use server rendering. We can\'t do this without using server rendering due to cross-browser quirks. See ReactDOMServer.renderToString() for server rendering.') : _prodInvariant('43') : void 0;
	
	    if (transaction.useCreateElement) {
	      while (container.lastChild) {
	        container.removeChild(container.lastChild);
	      }
	      DOMLazyTree.insertTreeBefore(container, markup, null);
	    } else {
	      setInnerHTML(container, markup);
	      ReactDOMComponentTree.precacheNode(instance, container.firstChild);
	    }
	
	    if (process.env.NODE_ENV !== 'production') {
	      var hostNode = ReactDOMComponentTree.getInstanceFromNode(container.firstChild);
	      if (hostNode._debugID !== 0) {
	        ReactInstrumentation.debugTool.onHostOperation({
	          instanceID: hostNode._debugID,
	          type: 'mount',
	          payload: markup.toString()
	        });
	      }
	    }
	  }
	};
	
	module.exports = ReactMount;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 167 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var validateDOMNesting = __webpack_require__(136);
	
	var DOC_NODE_TYPE = 9;
	
	function ReactDOMContainerInfo(topLevelWrapper, node) {
	  var info = {
	    _topLevelWrapper: topLevelWrapper,
	    _idCounter: 1,
	    _ownerDocument: node ? node.nodeType === DOC_NODE_TYPE ? node : node.ownerDocument : null,
	    _node: node,
	    _tag: node ? node.nodeName.toLowerCase() : null,
	    _namespaceURI: node ? node.namespaceURI : null
	  };
	  if (process.env.NODE_ENV !== 'production') {
	    info._ancestorInfo = node ? validateDOMNesting.updatedAncestorInfo(null, info._tag, null) : null;
	  }
	  return info;
	}
	
	module.exports = ReactDOMContainerInfo;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 168 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var ReactDOMFeatureFlags = {
	  useCreateElement: true,
	  useFiber: false
	};
	
	module.exports = ReactDOMFeatureFlags;

/***/ },
/* 169 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var adler32 = __webpack_require__(170);
	
	var TAG_END = /\/?>/;
	var COMMENT_START = /^<\!\-\-/;
	
	var ReactMarkupChecksum = {
	  CHECKSUM_ATTR_NAME: 'data-react-checksum',
	
	  /**
	   * @param {string} markup Markup string
	   * @return {string} Markup string with checksum attribute attached
	   */
	  addChecksumToMarkup: function (markup) {
	    var checksum = adler32(markup);
	
	    // Add checksum (handle both parent tags, comments and self-closing tags)
	    if (COMMENT_START.test(markup)) {
	      return markup;
	    } else {
	      return markup.replace(TAG_END, ' ' + ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '="' + checksum + '"$&');
	    }
	  },
	
	  /**
	   * @param {string} markup to use
	   * @param {DOMElement} element root React element
	   * @returns {boolean} whether or not the markup is the same
	   */
	  canReuseMarkup: function (markup, element) {
	    var existingChecksum = element.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
	    existingChecksum = existingChecksum && parseInt(existingChecksum, 10);
	    var markupChecksum = adler32(markup);
	    return markupChecksum === existingChecksum;
	  }
	};
	
	module.exports = ReactMarkupChecksum;

/***/ },
/* 170 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var MOD = 65521;
	
	// adler32 is not cryptographically strong, and is only used to sanity check that
	// markup generated on the server matches the markup generated on the client.
	// This implementation (a modified version of the SheetJS version) has been optimized
	// for our use case, at the expense of conforming to the adler32 specification
	// for non-ascii inputs.
	function adler32(data) {
	  var a = 1;
	  var b = 0;
	  var i = 0;
	  var l = data.length;
	  var m = l & ~0x3;
	  while (i < m) {
	    var n = Math.min(i + 4096, m);
	    for (; i < n; i += 4) {
	      b += (a += data.charCodeAt(i)) + (a += data.charCodeAt(i + 1)) + (a += data.charCodeAt(i + 2)) + (a += data.charCodeAt(i + 3));
	    }
	    a %= MOD;
	    b %= MOD;
	  }
	  for (; i < l; i++) {
	    b += a += data.charCodeAt(i);
	  }
	  a %= MOD;
	  b %= MOD;
	  return a | b << 16;
	}
	
	module.exports = adler32;

/***/ },
/* 171 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	module.exports = '15.4.2';

/***/ },
/* 172 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(35);
	
	var ReactCurrentOwner = __webpack_require__(10);
	var ReactDOMComponentTree = __webpack_require__(34);
	var ReactInstanceMap = __webpack_require__(116);
	
	var getHostComponentFromComposite = __webpack_require__(173);
	var invariant = __webpack_require__(8);
	var warning = __webpack_require__(11);
	
	/**
	 * Returns the DOM node rendered by this element.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.finddomnode
	 *
	 * @param {ReactComponent|DOMElement} componentOrElement
	 * @return {?DOMElement} The root node of this element.
	 */
	function findDOMNode(componentOrElement) {
	  if (process.env.NODE_ENV !== 'production') {
	    var owner = ReactCurrentOwner.current;
	    if (owner !== null) {
	      process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing findDOMNode inside its render(). ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : void 0;
	      owner._warnedAboutRefsInRender = true;
	    }
	  }
	  if (componentOrElement == null) {
	    return null;
	  }
	  if (componentOrElement.nodeType === 1) {
	    return componentOrElement;
	  }
	
	  var inst = ReactInstanceMap.get(componentOrElement);
	  if (inst) {
	    inst = getHostComponentFromComposite(inst);
	    return inst ? ReactDOMComponentTree.getNodeFromInstance(inst) : null;
	  }
	
	  if (typeof componentOrElement.render === 'function') {
	     true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'findDOMNode was called on an unmounted component.') : _prodInvariant('44') : void 0;
	  } else {
	     true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Element appears to be neither ReactComponent nor DOMNode (keys: %s)', Object.keys(componentOrElement)) : _prodInvariant('45', Object.keys(componentOrElement)) : void 0;
	  }
	}
	
	module.exports = findDOMNode;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 173 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var ReactNodeTypes = __webpack_require__(120);
	
	function getHostComponentFromComposite(inst) {
	  var type;
	
	  while ((type = inst._renderedNodeType) === ReactNodeTypes.COMPOSITE) {
	    inst = inst._renderedComponent;
	  }
	
	  if (type === ReactNodeTypes.HOST) {
	    return inst._renderedComponent;
	  } else if (type === ReactNodeTypes.EMPTY) {
	    return null;
	  }
	}
	
	module.exports = getHostComponentFromComposite;

/***/ },
/* 174 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var ReactMount = __webpack_require__(166);
	
	module.exports = ReactMount.renderSubtreeIntoContainer;

/***/ },
/* 175 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var DOMProperty = __webpack_require__(36);
	var EventPluginRegistry = __webpack_require__(43);
	var ReactComponentTreeHook = __webpack_require__(26);
	
	var warning = __webpack_require__(11);
	
	if (process.env.NODE_ENV !== 'production') {
	  var reactProps = {
	    children: true,
	    dangerouslySetInnerHTML: true,
	    key: true,
	    ref: true,
	
	    autoFocus: true,
	    defaultValue: true,
	    valueLink: true,
	    defaultChecked: true,
	    checkedLink: true,
	    innerHTML: true,
	    suppressContentEditableWarning: true,
	    onFocusIn: true,
	    onFocusOut: true
	  };
	  var warnedProperties = {};
	
	  var validateProperty = function (tagName, name, debugID) {
	    if (DOMProperty.properties.hasOwnProperty(name) || DOMProperty.isCustomAttribute(name)) {
	      return true;
	    }
	    if (reactProps.hasOwnProperty(name) && reactProps[name] || warnedProperties.hasOwnProperty(name) && warnedProperties[name]) {
	      return true;
	    }
	    if (EventPluginRegistry.registrationNameModules.hasOwnProperty(name)) {
	      return true;
	    }
	    warnedProperties[name] = true;
	    var lowerCasedName = name.toLowerCase();
	
	    // data-* attributes should be lowercase; suggest the lowercase version
	    var standardName = DOMProperty.isCustomAttribute(lowerCasedName) ? lowerCasedName : DOMProperty.getPossibleStandardName.hasOwnProperty(lowerCasedName) ? DOMProperty.getPossibleStandardName[lowerCasedName] : null;
	
	    var registrationName = EventPluginRegistry.possibleRegistrationNames.hasOwnProperty(lowerCasedName) ? EventPluginRegistry.possibleRegistrationNames[lowerCasedName] : null;
	
	    if (standardName != null) {
	      process.env.NODE_ENV !== 'production' ? warning(false, 'Unknown DOM property %s. Did you mean %s?%s', name, standardName, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
	      return true;
	    } else if (registrationName != null) {
	      process.env.NODE_ENV !== 'production' ? warning(false, 'Unknown event handler property %s. Did you mean `%s`?%s', name, registrationName, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
	      return true;
	    } else {
	      // We were unable to guess which prop the user intended.
	      // It is likely that the user was just blindly spreading/forwarding props
	      // Components should be careful to only render valid props/attributes.
	      // Warning will be invoked in warnUnknownProperties to allow grouping.
	      return false;
	    }
	  };
	}
	
	var warnUnknownProperties = function (debugID, element) {
	  var unknownProps = [];
	  for (var key in element.props) {
	    var isValid = validateProperty(element.type, key, debugID);
	    if (!isValid) {
	      unknownProps.push(key);
	    }
	  }
	
	  var unknownPropString = unknownProps.map(function (prop) {
	    return '`' + prop + '`';
	  }).join(', ');
	
	  if (unknownProps.length === 1) {
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Unknown prop %s on <%s> tag. Remove this prop from the element. ' + 'For details, see https://fb.me/react-unknown-prop%s', unknownPropString, element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
	  } else if (unknownProps.length > 1) {
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Unknown props %s on <%s> tag. Remove these props from the element. ' + 'For details, see https://fb.me/react-unknown-prop%s', unknownPropString, element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
	  }
	};
	
	function handleElement(debugID, element) {
	  if (element == null || typeof element.type !== 'string') {
	    return;
	  }
	  if (element.type.indexOf('-') >= 0 || element.props.is) {
	    return;
	  }
	  warnUnknownProperties(debugID, element);
	}
	
	var ReactDOMUnknownPropertyHook = {
	  onBeforeMountComponent: function (debugID, element) {
	    handleElement(debugID, element);
	  },
	  onBeforeUpdateComponent: function (debugID, element) {
	    handleElement(debugID, element);
	  }
	};
	
	module.exports = ReactDOMUnknownPropertyHook;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 176 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var ReactComponentTreeHook = __webpack_require__(26);
	
	var warning = __webpack_require__(11);
	
	var didWarnValueNull = false;
	
	function handleElement(debugID, element) {
	  if (element == null) {
	    return;
	  }
	  if (element.type !== 'input' && element.type !== 'textarea' && element.type !== 'select') {
	    return;
	  }
	  if (element.props != null && element.props.value === null && !didWarnValueNull) {
	    process.env.NODE_ENV !== 'production' ? warning(false, '`value` prop on `%s` should not be null. ' + 'Consider using the empty string to clear the component or `undefined` ' + 'for uncontrolled components.%s', element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
	
	    didWarnValueNull = true;
	  }
	}
	
	var ReactDOMNullInputValuePropHook = {
	  onBeforeMountComponent: function (debugID, element) {
	    handleElement(debugID, element);
	  },
	  onBeforeUpdateComponent: function (debugID, element) {
	    handleElement(debugID, element);
	  }
	};
	
	module.exports = ReactDOMNullInputValuePropHook;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 177 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var DOMProperty = __webpack_require__(36);
	var ReactComponentTreeHook = __webpack_require__(26);
	
	var warning = __webpack_require__(11);
	
	var warnedProperties = {};
	var rARIA = new RegExp('^(aria)-[' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$');
	
	function validateProperty(tagName, name, debugID) {
	  if (warnedProperties.hasOwnProperty(name) && warnedProperties[name]) {
	    return true;
	  }
	
	  if (rARIA.test(name)) {
	    var lowerCasedName = name.toLowerCase();
	    var standardName = DOMProperty.getPossibleStandardName.hasOwnProperty(lowerCasedName) ? DOMProperty.getPossibleStandardName[lowerCasedName] : null;
	
	    // If this is an aria-* attribute, but is not listed in the known DOM
	    // DOM properties, then it is an invalid aria-* attribute.
	    if (standardName == null) {
	      warnedProperties[name] = true;
	      return false;
	    }
	    // aria-* attributes should be lowercase; suggest the lowercase version.
	    if (name !== standardName) {
	      process.env.NODE_ENV !== 'production' ? warning(false, 'Unknown ARIA attribute %s. Did you mean %s?%s', name, standardName, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
	      warnedProperties[name] = true;
	      return true;
	    }
	  }
	
	  return true;
	}
	
	function warnInvalidARIAProps(debugID, element) {
	  var invalidProps = [];
	
	  for (var key in element.props) {
	    var isValid = validateProperty(element.type, key, debugID);
	    if (!isValid) {
	      invalidProps.push(key);
	    }
	  }
	
	  var unknownPropString = invalidProps.map(function (prop) {
	    return '`' + prop + '`';
	  }).join(', ');
	
	  if (invalidProps.length === 1) {
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid aria prop %s on <%s> tag. ' + 'For details, see https://fb.me/invalid-aria-prop%s', unknownPropString, element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
	  } else if (invalidProps.length > 1) {
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid aria props %s on <%s> tag. ' + 'For details, see https://fb.me/invalid-aria-prop%s', unknownPropString, element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
	  }
	}
	
	function handleElement(debugID, element) {
	  if (element == null || typeof element.type !== 'string') {
	    return;
	  }
	  if (element.type.indexOf('-') >= 0 || element.props.is) {
	    return;
	  }
	
	  warnInvalidARIAProps(debugID, element);
	}
	
	var ReactDOMInvalidARIAHook = {
	  onBeforeMountComponent: function (debugID, element) {
	    if (process.env.NODE_ENV !== 'production') {
	      handleElement(debugID, element);
	    }
	  },
	  onBeforeUpdateComponent: function (debugID, element) {
	    if (process.env.NODE_ENV !== 'production') {
	      handleElement(debugID, element);
	    }
	  }
	};
	
	module.exports = ReactDOMInvalidARIAHook;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 178 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _redux = __webpack_require__(179);
	
	var _root_reducer = __webpack_require__(200);
	
	var _root_reducer2 = _interopRequireDefault(_root_reducer);
	
	var _reduxThunk = __webpack_require__(307);
	
	var _reduxThunk2 = _interopRequireDefault(_reduxThunk);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var configureStore = function configureStore() {
	  var preloadedState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	  return (0, _redux.createStore)(_root_reducer2.default, preloadedState, (0, _redux.applyMiddleware)(_reduxThunk2.default));
	};
	
	exports.default = configureStore;

/***/ },
/* 179 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';
	
	exports.__esModule = true;
	exports.compose = exports.applyMiddleware = exports.bindActionCreators = exports.combineReducers = exports.createStore = undefined;
	
	var _createStore = __webpack_require__(180);
	
	var _createStore2 = _interopRequireDefault(_createStore);
	
	var _combineReducers = __webpack_require__(195);
	
	var _combineReducers2 = _interopRequireDefault(_combineReducers);
	
	var _bindActionCreators = __webpack_require__(197);
	
	var _bindActionCreators2 = _interopRequireDefault(_bindActionCreators);
	
	var _applyMiddleware = __webpack_require__(198);
	
	var _applyMiddleware2 = _interopRequireDefault(_applyMiddleware);
	
	var _compose = __webpack_require__(199);
	
	var _compose2 = _interopRequireDefault(_compose);
	
	var _warning = __webpack_require__(196);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	/*
	* This is a dummy function to check if the function name has been altered by minification.
	* If the function has been minified and NODE_ENV !== 'production', warn the user.
	*/
	function isCrushed() {}
	
	if (process.env.NODE_ENV !== 'production' && typeof isCrushed.name === 'string' && isCrushed.name !== 'isCrushed') {
	  (0, _warning2['default'])('You are currently using minified code outside of NODE_ENV === \'production\'. ' + 'This means that you are running a slower development build of Redux. ' + 'You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify ' + 'or DefinePlugin for webpack (http://stackoverflow.com/questions/30030031) ' + 'to ensure you have the correct code for your production build.');
	}
	
	exports.createStore = _createStore2['default'];
	exports.combineReducers = _combineReducers2['default'];
	exports.bindActionCreators = _bindActionCreators2['default'];
	exports.applyMiddleware = _applyMiddleware2['default'];
	exports.compose = _compose2['default'];
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 180 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.ActionTypes = undefined;
	exports['default'] = createStore;
	
	var _isPlainObject = __webpack_require__(181);
	
	var _isPlainObject2 = _interopRequireDefault(_isPlainObject);
	
	var _symbolObservable = __webpack_require__(191);
	
	var _symbolObservable2 = _interopRequireDefault(_symbolObservable);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	/**
	 * These are private action types reserved by Redux.
	 * For any unknown actions, you must return the current state.
	 * If the current state is undefined, you must return the initial state.
	 * Do not reference these action types directly in your code.
	 */
	var ActionTypes = exports.ActionTypes = {
	  INIT: '@@redux/INIT'
	};
	
	/**
	 * Creates a Redux store that holds the state tree.
	 * The only way to change the data in the store is to call `dispatch()` on it.
	 *
	 * There should only be a single store in your app. To specify how different
	 * parts of the state tree respond to actions, you may combine several reducers
	 * into a single reducer function by using `combineReducers`.
	 *
	 * @param {Function} reducer A function that returns the next state tree, given
	 * the current state tree and the action to handle.
	 *
	 * @param {any} [preloadedState] The initial state. You may optionally specify it
	 * to hydrate the state from the server in universal apps, or to restore a
	 * previously serialized user session.
	 * If you use `combineReducers` to produce the root reducer function, this must be
	 * an object with the same shape as `combineReducers` keys.
	 *
	 * @param {Function} enhancer The store enhancer. You may optionally specify it
	 * to enhance the store with third-party capabilities such as middleware,
	 * time travel, persistence, etc. The only store enhancer that ships with Redux
	 * is `applyMiddleware()`.
	 *
	 * @returns {Store} A Redux store that lets you read the state, dispatch actions
	 * and subscribe to changes.
	 */
	function createStore(reducer, preloadedState, enhancer) {
	  var _ref2;
	
	  if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {
	    enhancer = preloadedState;
	    preloadedState = undefined;
	  }
	
	  if (typeof enhancer !== 'undefined') {
	    if (typeof enhancer !== 'function') {
	      throw new Error('Expected the enhancer to be a function.');
	    }
	
	    return enhancer(createStore)(reducer, preloadedState);
	  }
	
	  if (typeof reducer !== 'function') {
	    throw new Error('Expected the reducer to be a function.');
	  }
	
	  var currentReducer = reducer;
	  var currentState = preloadedState;
	  var currentListeners = [];
	  var nextListeners = currentListeners;
	  var isDispatching = false;
	
	  function ensureCanMutateNextListeners() {
	    if (nextListeners === currentListeners) {
	      nextListeners = currentListeners.slice();
	    }
	  }
	
	  /**
	   * Reads the state tree managed by the store.
	   *
	   * @returns {any} The current state tree of your application.
	   */
	  function getState() {
	    return currentState;
	  }
	
	  /**
	   * Adds a change listener. It will be called any time an action is dispatched,
	   * and some part of the state tree may potentially have changed. You may then
	   * call `getState()` to read the current state tree inside the callback.
	   *
	   * You may call `dispatch()` from a change listener, with the following
	   * caveats:
	   *
	   * 1. The subscriptions are snapshotted just before every `dispatch()` call.
	   * If you subscribe or unsubscribe while the listeners are being invoked, this
	   * will not have any effect on the `dispatch()` that is currently in progress.
	   * However, the next `dispatch()` call, whether nested or not, will use a more
	   * recent snapshot of the subscription list.
	   *
	   * 2. The listener should not expect to see all state changes, as the state
	   * might have been updated multiple times during a nested `dispatch()` before
	   * the listener is called. It is, however, guaranteed that all subscribers
	   * registered before the `dispatch()` started will be called with the latest
	   * state by the time it exits.
	   *
	   * @param {Function} listener A callback to be invoked on every dispatch.
	   * @returns {Function} A function to remove this change listener.
	   */
	  function subscribe(listener) {
	    if (typeof listener !== 'function') {
	      throw new Error('Expected listener to be a function.');
	    }
	
	    var isSubscribed = true;
	
	    ensureCanMutateNextListeners();
	    nextListeners.push(listener);
	
	    return function unsubscribe() {
	      if (!isSubscribed) {
	        return;
	      }
	
	      isSubscribed = false;
	
	      ensureCanMutateNextListeners();
	      var index = nextListeners.indexOf(listener);
	      nextListeners.splice(index, 1);
	    };
	  }
	
	  /**
	   * Dispatches an action. It is the only way to trigger a state change.
	   *
	   * The `reducer` function, used to create the store, will be called with the
	   * current state tree and the given `action`. Its return value will
	   * be considered the **next** state of the tree, and the change listeners
	   * will be notified.
	   *
	   * The base implementation only supports plain object actions. If you want to
	   * dispatch a Promise, an Observable, a thunk, or something else, you need to
	   * wrap your store creating function into the corresponding middleware. For
	   * example, see the documentation for the `redux-thunk` package. Even the
	   * middleware will eventually dispatch plain object actions using this method.
	   *
	   * @param {Object} action A plain object representing “what changed”. It is
	   * a good idea to keep actions serializable so you can record and replay user
	   * sessions, or use the time travelling `redux-devtools`. An action must have
	   * a `type` property which may not be `undefined`. It is a good idea to use
	   * string constants for action types.
	   *
	   * @returns {Object} For convenience, the same action object you dispatched.
	   *
	   * Note that, if you use a custom middleware, it may wrap `dispatch()` to
	   * return something else (for example, a Promise you can await).
	   */
	  function dispatch(action) {
	    if (!(0, _isPlainObject2['default'])(action)) {
	      throw new Error('Actions must be plain objects. ' + 'Use custom middleware for async actions.');
	    }
	
	    if (typeof action.type === 'undefined') {
	      throw new Error('Actions may not have an undefined "type" property. ' + 'Have you misspelled a constant?');
	    }
	
	    if (isDispatching) {
	      throw new Error('Reducers may not dispatch actions.');
	    }
	
	    try {
	      isDispatching = true;
	      currentState = currentReducer(currentState, action);
	    } finally {
	      isDispatching = false;
	    }
	
	    var listeners = currentListeners = nextListeners;
	    for (var i = 0; i < listeners.length; i++) {
	      listeners[i]();
	    }
	
	    return action;
	  }
	
	  /**
	   * Replaces the reducer currently used by the store to calculate the state.
	   *
	   * You might need this if your app implements code splitting and you want to
	   * load some of the reducers dynamically. You might also need this if you
	   * implement a hot reloading mechanism for Redux.
	   *
	   * @param {Function} nextReducer The reducer for the store to use instead.
	   * @returns {void}
	   */
	  function replaceReducer(nextReducer) {
	    if (typeof nextReducer !== 'function') {
	      throw new Error('Expected the nextReducer to be a function.');
	    }
	
	    currentReducer = nextReducer;
	    dispatch({ type: ActionTypes.INIT });
	  }
	
	  /**
	   * Interoperability point for observable/reactive libraries.
	   * @returns {observable} A minimal observable of state changes.
	   * For more information, see the observable proposal:
	   * https://github.com/zenparsing/es-observable
	   */
	  function observable() {
	    var _ref;
	
	    var outerSubscribe = subscribe;
	    return _ref = {
	      /**
	       * The minimal observable subscription method.
	       * @param {Object} observer Any object that can be used as an observer.
	       * The observer object should have a `next` method.
	       * @returns {subscription} An object with an `unsubscribe` method that can
	       * be used to unsubscribe the observable from the store, and prevent further
	       * emission of values from the observable.
	       */
	      subscribe: function subscribe(observer) {
	        if (typeof observer !== 'object') {
	          throw new TypeError('Expected the observer to be an object.');
	        }
	
	        function observeState() {
	          if (observer.next) {
	            observer.next(getState());
	          }
	        }
	
	        observeState();
	        var unsubscribe = outerSubscribe(observeState);
	        return { unsubscribe: unsubscribe };
	      }
	    }, _ref[_symbolObservable2['default']] = function () {
	      return this;
	    }, _ref;
	  }
	
	  // When a store is created, an "INIT" action is dispatched so that every
	  // reducer returns their initial state. This effectively populates
	  // the initial state tree.
	  dispatch({ type: ActionTypes.INIT });
	
	  return _ref2 = {
	    dispatch: dispatch,
	    subscribe: subscribe,
	    getState: getState,
	    replaceReducer: replaceReducer
	  }, _ref2[_symbolObservable2['default']] = observable, _ref2;
	}

/***/ },
/* 181 */
/***/ function(module, exports, __webpack_require__) {

	var baseGetTag = __webpack_require__(182),
	    getPrototype = __webpack_require__(188),
	    isObjectLike = __webpack_require__(190);
	
	/** `Object#toString` result references. */
	var objectTag = '[object Object]';
	
	/** Used for built-in method references. */
	var funcProto = Function.prototype,
	    objectProto = Object.prototype;
	
	/** Used to resolve the decompiled source of functions. */
	var funcToString = funcProto.toString;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/** Used to infer the `Object` constructor. */
	var objectCtorString = funcToString.call(Object);
	
	/**
	 * Checks if `value` is a plain object, that is, an object created by the
	 * `Object` constructor or one with a `[[Prototype]]` of `null`.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.8.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
	 * @example
	 *
	 * function Foo() {
	 *   this.a = 1;
	 * }
	 *
	 * _.isPlainObject(new Foo);
	 * // => false
	 *
	 * _.isPlainObject([1, 2, 3]);
	 * // => false
	 *
	 * _.isPlainObject({ 'x': 0, 'y': 0 });
	 * // => true
	 *
	 * _.isPlainObject(Object.create(null));
	 * // => true
	 */
	function isPlainObject(value) {
	  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
	    return false;
	  }
	  var proto = getPrototype(value);
	  if (proto === null) {
	    return true;
	  }
	  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
	  return typeof Ctor == 'function' && Ctor instanceof Ctor &&
	    funcToString.call(Ctor) == objectCtorString;
	}
	
	module.exports = isPlainObject;


/***/ },
/* 182 */
/***/ function(module, exports, __webpack_require__) {

	var Symbol = __webpack_require__(183),
	    getRawTag = __webpack_require__(186),
	    objectToString = __webpack_require__(187);
	
	/** `Object#toString` result references. */
	var nullTag = '[object Null]',
	    undefinedTag = '[object Undefined]';
	
	/** Built-in value references. */
	var symToStringTag = Symbol ? Symbol.toStringTag : undefined;
	
	/**
	 * The base implementation of `getTag` without fallbacks for buggy environments.
	 *
	 * @private
	 * @param {*} value The value to query.
	 * @returns {string} Returns the `toStringTag`.
	 */
	function baseGetTag(value) {
	  if (value == null) {
	    return value === undefined ? undefinedTag : nullTag;
	  }
	  return (symToStringTag && symToStringTag in Object(value))
	    ? getRawTag(value)
	    : objectToString(value);
	}
	
	module.exports = baseGetTag;


/***/ },
/* 183 */
/***/ function(module, exports, __webpack_require__) {

	var root = __webpack_require__(184);
	
	/** Built-in value references. */
	var Symbol = root.Symbol;
	
	module.exports = Symbol;


/***/ },
/* 184 */
/***/ function(module, exports, __webpack_require__) {

	var freeGlobal = __webpack_require__(185);
	
	/** Detect free variable `self`. */
	var freeSelf = typeof self == 'object' && self && self.Object === Object && self;
	
	/** Used as a reference to the global object. */
	var root = freeGlobal || freeSelf || Function('return this')();
	
	module.exports = root;


/***/ },
/* 185 */
/***/ function(module, exports) {

	/* WEBPACK VAR INJECTION */(function(global) {/** Detect free variable `global` from Node.js. */
	var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;
	
	module.exports = freeGlobal;
	
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 186 */
/***/ function(module, exports, __webpack_require__) {

	var Symbol = __webpack_require__(183);
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * Used to resolve the
	 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var nativeObjectToString = objectProto.toString;
	
	/** Built-in value references. */
	var symToStringTag = Symbol ? Symbol.toStringTag : undefined;
	
	/**
	 * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
	 *
	 * @private
	 * @param {*} value The value to query.
	 * @returns {string} Returns the raw `toStringTag`.
	 */
	function getRawTag(value) {
	  var isOwn = hasOwnProperty.call(value, symToStringTag),
	      tag = value[symToStringTag];
	
	  try {
	    value[symToStringTag] = undefined;
	    var unmasked = true;
	  } catch (e) {}
	
	  var result = nativeObjectToString.call(value);
	  if (unmasked) {
	    if (isOwn) {
	      value[symToStringTag] = tag;
	    } else {
	      delete value[symToStringTag];
	    }
	  }
	  return result;
	}
	
	module.exports = getRawTag;


/***/ },
/* 187 */
/***/ function(module, exports) {

	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/**
	 * Used to resolve the
	 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var nativeObjectToString = objectProto.toString;
	
	/**
	 * Converts `value` to a string using `Object.prototype.toString`.
	 *
	 * @private
	 * @param {*} value The value to convert.
	 * @returns {string} Returns the converted string.
	 */
	function objectToString(value) {
	  return nativeObjectToString.call(value);
	}
	
	module.exports = objectToString;


/***/ },
/* 188 */
/***/ function(module, exports, __webpack_require__) {

	var overArg = __webpack_require__(189);
	
	/** Built-in value references. */
	var getPrototype = overArg(Object.getPrototypeOf, Object);
	
	module.exports = getPrototype;


/***/ },
/* 189 */
/***/ function(module, exports) {

	/**
	 * Creates a unary function that invokes `func` with its argument transformed.
	 *
	 * @private
	 * @param {Function} func The function to wrap.
	 * @param {Function} transform The argument transform.
	 * @returns {Function} Returns the new function.
	 */
	function overArg(func, transform) {
	  return function(arg) {
	    return func(transform(arg));
	  };
	}
	
	module.exports = overArg;


/***/ },
/* 190 */
/***/ function(module, exports) {

	/**
	 * Checks if `value` is object-like. A value is object-like if it's not `null`
	 * and has a `typeof` result of "object".
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
	 * @example
	 *
	 * _.isObjectLike({});
	 * // => true
	 *
	 * _.isObjectLike([1, 2, 3]);
	 * // => true
	 *
	 * _.isObjectLike(_.noop);
	 * // => false
	 *
	 * _.isObjectLike(null);
	 * // => false
	 */
	function isObjectLike(value) {
	  return value != null && typeof value == 'object';
	}
	
	module.exports = isObjectLike;


/***/ },
/* 191 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(192);


/***/ },
/* 192 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global, module) {'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _ponyfill = __webpack_require__(194);
	
	var _ponyfill2 = _interopRequireDefault(_ponyfill);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var root; /* global window */
	
	
	if (typeof self !== 'undefined') {
	  root = self;
	} else if (typeof window !== 'undefined') {
	  root = window;
	} else if (typeof global !== 'undefined') {
	  root = global;
	} else if (true) {
	  root = module;
	} else {
	  root = Function('return this')();
	}
	
	var result = (0, _ponyfill2['default'])(root);
	exports['default'] = result;
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(193)(module)))

/***/ },
/* 193 */
/***/ function(module, exports) {

	module.exports = function(module) {
		if(!module.webpackPolyfill) {
			module.deprecate = function() {};
			module.paths = [];
			// module.parent = undefined by default
			module.children = [];
			module.webpackPolyfill = 1;
		}
		return module;
	}


/***/ },
/* 194 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports['default'] = symbolObservablePonyfill;
	function symbolObservablePonyfill(root) {
		var result;
		var _Symbol = root.Symbol;
	
		if (typeof _Symbol === 'function') {
			if (_Symbol.observable) {
				result = _Symbol.observable;
			} else {
				result = _Symbol('observable');
				_Symbol.observable = result;
			}
		} else {
			result = '@@observable';
		}
	
		return result;
	};

/***/ },
/* 195 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';
	
	exports.__esModule = true;
	exports['default'] = combineReducers;
	
	var _createStore = __webpack_require__(180);
	
	var _isPlainObject = __webpack_require__(181);
	
	var _isPlainObject2 = _interopRequireDefault(_isPlainObject);
	
	var _warning = __webpack_require__(196);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	function getUndefinedStateErrorMessage(key, action) {
	  var actionType = action && action.type;
	  var actionName = actionType && '"' + actionType.toString() + '"' || 'an action';
	
	  return 'Given action ' + actionName + ', reducer "' + key + '" returned undefined. ' + 'To ignore an action, you must explicitly return the previous state.';
	}
	
	function getUnexpectedStateShapeWarningMessage(inputState, reducers, action, unexpectedKeyCache) {
	  var reducerKeys = Object.keys(reducers);
	  var argumentName = action && action.type === _createStore.ActionTypes.INIT ? 'preloadedState argument passed to createStore' : 'previous state received by the reducer';
	
	  if (reducerKeys.length === 0) {
	    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';
	  }
	
	  if (!(0, _isPlainObject2['default'])(inputState)) {
	    return 'The ' + argumentName + ' has unexpected type of "' + {}.toString.call(inputState).match(/\s([a-z|A-Z]+)/)[1] + '". Expected argument to be an object with the following ' + ('keys: "' + reducerKeys.join('", "') + '"');
	  }
	
	  var unexpectedKeys = Object.keys(inputState).filter(function (key) {
	    return !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key];
	  });
	
	  unexpectedKeys.forEach(function (key) {
	    unexpectedKeyCache[key] = true;
	  });
	
	  if (unexpectedKeys.length > 0) {
	    return 'Unexpected ' + (unexpectedKeys.length > 1 ? 'keys' : 'key') + ' ' + ('"' + unexpectedKeys.join('", "') + '" found in ' + argumentName + '. ') + 'Expected to find one of the known reducer keys instead: ' + ('"' + reducerKeys.join('", "') + '". Unexpected keys will be ignored.');
	  }
	}
	
	function assertReducerSanity(reducers) {
	  Object.keys(reducers).forEach(function (key) {
	    var reducer = reducers[key];
	    var initialState = reducer(undefined, { type: _createStore.ActionTypes.INIT });
	
	    if (typeof initialState === 'undefined') {
	      throw new Error('Reducer "' + key + '" returned undefined during initialization. ' + 'If the state passed to the reducer is undefined, you must ' + 'explicitly return the initial state. The initial state may ' + 'not be undefined.');
	    }
	
	    var type = '@@redux/PROBE_UNKNOWN_ACTION_' + Math.random().toString(36).substring(7).split('').join('.');
	    if (typeof reducer(undefined, { type: type }) === 'undefined') {
	      throw new Error('Reducer "' + key + '" returned undefined when probed with a random type. ' + ('Don\'t try to handle ' + _createStore.ActionTypes.INIT + ' or other actions in "redux/*" ') + 'namespace. They are considered private. Instead, you must return the ' + 'current state for any unknown actions, unless it is undefined, ' + 'in which case you must return the initial state, regardless of the ' + 'action type. The initial state may not be undefined.');
	    }
	  });
	}
	
	/**
	 * Turns an object whose values are different reducer functions, into a single
	 * reducer function. It will call every child reducer, and gather their results
	 * into a single state object, whose keys correspond to the keys of the passed
	 * reducer functions.
	 *
	 * @param {Object} reducers An object whose values correspond to different
	 * reducer functions that need to be combined into one. One handy way to obtain
	 * it is to use ES6 `import * as reducers` syntax. The reducers may never return
	 * undefined for any action. Instead, they should return their initial state
	 * if the state passed to them was undefined, and the current state for any
	 * unrecognized action.
	 *
	 * @returns {Function} A reducer function that invokes every reducer inside the
	 * passed object, and builds a state object with the same shape.
	 */
	function combineReducers(reducers) {
	  var reducerKeys = Object.keys(reducers);
	  var finalReducers = {};
	  for (var i = 0; i < reducerKeys.length; i++) {
	    var key = reducerKeys[i];
	
	    if (process.env.NODE_ENV !== 'production') {
	      if (typeof reducers[key] === 'undefined') {
	        (0, _warning2['default'])('No reducer provided for key "' + key + '"');
	      }
	    }
	
	    if (typeof reducers[key] === 'function') {
	      finalReducers[key] = reducers[key];
	    }
	  }
	  var finalReducerKeys = Object.keys(finalReducers);
	
	  if (process.env.NODE_ENV !== 'production') {
	    var unexpectedKeyCache = {};
	  }
	
	  var sanityError;
	  try {
	    assertReducerSanity(finalReducers);
	  } catch (e) {
	    sanityError = e;
	  }
	
	  return function combination() {
	    var state = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	    var action = arguments[1];
	
	    if (sanityError) {
	      throw sanityError;
	    }
	
	    if (process.env.NODE_ENV !== 'production') {
	      var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action, unexpectedKeyCache);
	      if (warningMessage) {
	        (0, _warning2['default'])(warningMessage);
	      }
	    }
	
	    var hasChanged = false;
	    var nextState = {};
	    for (var i = 0; i < finalReducerKeys.length; i++) {
	      var key = finalReducerKeys[i];
	      var reducer = finalReducers[key];
	      var previousStateForKey = state[key];
	      var nextStateForKey = reducer(previousStateForKey, action);
	      if (typeof nextStateForKey === 'undefined') {
	        var errorMessage = getUndefinedStateErrorMessage(key, action);
	        throw new Error(errorMessage);
	      }
	      nextState[key] = nextStateForKey;
	      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;
	    }
	    return hasChanged ? nextState : state;
	  };
	}
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 196 */
/***/ function(module, exports) {

	'use strict';
	
	exports.__esModule = true;
	exports['default'] = warning;
	/**
	 * Prints a warning in the console if it exists.
	 *
	 * @param {String} message The warning message.
	 * @returns {void}
	 */
	function warning(message) {
	  /* eslint-disable no-console */
	  if (typeof console !== 'undefined' && typeof console.error === 'function') {
	    console.error(message);
	  }
	  /* eslint-enable no-console */
	  try {
	    // This error was thrown as a convenience so that if you enable
	    // "break on all exceptions" in your console,
	    // it would pause the execution at this line.
	    throw new Error(message);
	    /* eslint-disable no-empty */
	  } catch (e) {}
	  /* eslint-enable no-empty */
	}

/***/ },
/* 197 */
/***/ function(module, exports) {

	'use strict';
	
	exports.__esModule = true;
	exports['default'] = bindActionCreators;
	function bindActionCreator(actionCreator, dispatch) {
	  return function () {
	    return dispatch(actionCreator.apply(undefined, arguments));
	  };
	}
	
	/**
	 * Turns an object whose values are action creators, into an object with the
	 * same keys, but with every function wrapped into a `dispatch` call so they
	 * may be invoked directly. This is just a convenience method, as you can call
	 * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.
	 *
	 * For convenience, you can also pass a single function as the first argument,
	 * and get a function in return.
	 *
	 * @param {Function|Object} actionCreators An object whose values are action
	 * creator functions. One handy way to obtain it is to use ES6 `import * as`
	 * syntax. You may also pass a single function.
	 *
	 * @param {Function} dispatch The `dispatch` function available on your Redux
	 * store.
	 *
	 * @returns {Function|Object} The object mimicking the original object, but with
	 * every action creator wrapped into the `dispatch` call. If you passed a
	 * function as `actionCreators`, the return value will also be a single
	 * function.
	 */
	function bindActionCreators(actionCreators, dispatch) {
	  if (typeof actionCreators === 'function') {
	    return bindActionCreator(actionCreators, dispatch);
	  }
	
	  if (typeof actionCreators !== 'object' || actionCreators === null) {
	    throw new Error('bindActionCreators expected an object or a function, instead received ' + (actionCreators === null ? 'null' : typeof actionCreators) + '. ' + 'Did you write "import ActionCreators from" instead of "import * as ActionCreators from"?');
	  }
	
	  var keys = Object.keys(actionCreators);
	  var boundActionCreators = {};
	  for (var i = 0; i < keys.length; i++) {
	    var key = keys[i];
	    var actionCreator = actionCreators[key];
	    if (typeof actionCreator === 'function') {
	      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);
	    }
	  }
	  return boundActionCreators;
	}

/***/ },
/* 198 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	exports['default'] = applyMiddleware;
	
	var _compose = __webpack_require__(199);
	
	var _compose2 = _interopRequireDefault(_compose);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	/**
	 * Creates a store enhancer that applies middleware to the dispatch method
	 * of the Redux store. This is handy for a variety of tasks, such as expressing
	 * asynchronous actions in a concise manner, or logging every action payload.
	 *
	 * See `redux-thunk` package as an example of the Redux middleware.
	 *
	 * Because middleware is potentially asynchronous, this should be the first
	 * store enhancer in the composition chain.
	 *
	 * Note that each middleware will be given the `dispatch` and `getState` functions
	 * as named arguments.
	 *
	 * @param {...Function} middlewares The middleware chain to be applied.
	 * @returns {Function} A store enhancer applying the middleware.
	 */
	function applyMiddleware() {
	  for (var _len = arguments.length, middlewares = Array(_len), _key = 0; _key < _len; _key++) {
	    middlewares[_key] = arguments[_key];
	  }
	
	  return function (createStore) {
	    return function (reducer, preloadedState, enhancer) {
	      var store = createStore(reducer, preloadedState, enhancer);
	      var _dispatch = store.dispatch;
	      var chain = [];
	
	      var middlewareAPI = {
	        getState: store.getState,
	        dispatch: function dispatch(action) {
	          return _dispatch(action);
	        }
	      };
	      chain = middlewares.map(function (middleware) {
	        return middleware(middlewareAPI);
	      });
	      _dispatch = _compose2['default'].apply(undefined, chain)(store.dispatch);
	
	      return _extends({}, store, {
	        dispatch: _dispatch
	      });
	    };
	  };
	}

/***/ },
/* 199 */
/***/ function(module, exports) {

	"use strict";
	
	exports.__esModule = true;
	exports["default"] = compose;
	/**
	 * Composes single-argument functions from right to left. The rightmost
	 * function can take multiple arguments as it provides the signature for
	 * the resulting composite function.
	 *
	 * @param {...Function} funcs The functions to compose.
	 * @returns {Function} A function obtained by composing the argument functions
	 * from right to left. For example, compose(f, g, h) is identical to doing
	 * (...args) => f(g(h(...args))).
	 */
	
	function compose() {
	  for (var _len = arguments.length, funcs = Array(_len), _key = 0; _key < _len; _key++) {
	    funcs[_key] = arguments[_key];
	  }
	
	  if (funcs.length === 0) {
	    return function (arg) {
	      return arg;
	    };
	  }
	
	  if (funcs.length === 1) {
	    return funcs[0];
	  }
	
	  var last = funcs[funcs.length - 1];
	  var rest = funcs.slice(0, -1);
	  return function () {
	    return rest.reduceRight(function (composed, f) {
	      return f(composed);
	    }, last.apply(undefined, arguments));
	  };
	}

/***/ },
/* 200 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _redux = __webpack_require__(179);
	
	var _session_reducer = __webpack_require__(201);
	
	var _session_reducer2 = _interopRequireDefault(_session_reducer);
	
	var _error_reducer = __webpack_require__(290);
	
	var _error_reducer2 = _interopRequireDefault(_error_reducer);
	
	var _search_reducer = __webpack_require__(291);
	
	var _search_reducer2 = _interopRequireDefault(_search_reducer);
	
	var _listing_reducer = __webpack_require__(294);
	
	var _listing_reducer2 = _interopRequireDefault(_listing_reducer);
	
	var _option_reducer = __webpack_require__(296);
	
	var _option_reducer2 = _interopRequireDefault(_option_reducer);
	
	var _filter_reducer = __webpack_require__(299);
	
	var _filter_reducer2 = _interopRequireDefault(_filter_reducer);
	
	var _current_user_listing_reducer = __webpack_require__(301);
	
	var _current_user_listing_reducer2 = _interopRequireDefault(_current_user_listing_reducer);
	
	var _current_user_rental_reducer = __webpack_require__(305);
	
	var _current_user_rental_reducer2 = _interopRequireDefault(_current_user_rental_reducer);
	
	var _user_profile_reducer = __webpack_require__(306);
	
	var _user_profile_reducer2 = _interopRequireDefault(_user_profile_reducer);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var rootReducer = (0, _redux.combineReducers)({
	  session: _session_reducer2.default,
	  errors: _error_reducer2.default,
	  search: _search_reducer2.default,
	  listing: _listing_reducer2.default,
	  options: _option_reducer2.default,
	  filters: _filter_reducer2.default,
	  currentUserListings: _current_user_listing_reducer2.default,
	  currentUserRentals: _current_user_rental_reducer2.default,
	  userProfile: _user_profile_reducer2.default
	});
	
	exports.default = rootReducer;

/***/ },
/* 201 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _session_actions = __webpack_require__(202);
	
	var _merge = __webpack_require__(205);
	
	var _merge2 = _interopRequireDefault(_merge);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var _defaultState = {
	  currentUser: null
	};
	
	var sessionReducer = function sessionReducer() {
	  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _defaultState;
	  var action = arguments[1];
	
	  Object.freeze(state);
	  switch (action.type) {
	    case _session_actions.RECEIVE_CURRENT_USER:
	      return {
	        currentUser: action.currentUser
	      };
	    case _session_actions.LOGOUT_CURRENT_USER:
	      return _defaultState;
	    default:
	      return state;
	  }
	};
	
	exports.default = sessionReducer;

/***/ },
/* 202 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.logout = exports.login = exports.signup = exports.logOutCurrentUser = exports.receiveCurrentUser = exports.LOGOUT_CURRENT_USER = exports.RECEIVE_CURRENT_USER = undefined;
	
	var _session_api_util = __webpack_require__(203);
	
	var SessionAPIUtil = _interopRequireWildcard(_session_api_util);
	
	var _error_actions = __webpack_require__(204);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	var RECEIVE_CURRENT_USER = exports.RECEIVE_CURRENT_USER = "RECEIVE_CURRENT_USER";
	var LOGOUT_CURRENT_USER = exports.LOGOUT_CURRENT_USER = "LOGOUT_CURRENT_USER";
	
	///*** Error Handling
	
	///***
	
	var receiveCurrentUser = exports.receiveCurrentUser = function receiveCurrentUser(currentUser) {
	  return {
	    type: RECEIVE_CURRENT_USER,
	    currentUser: currentUser
	  };
	};
	
	var logOutCurrentUser = exports.logOutCurrentUser = function logOutCurrentUser() {
	  return {
	    type: LOGOUT_CURRENT_USER
	  };
	};
	
	var signup = exports.signup = function signup(signupInfo) {
	  return function (dispatch) {
	    return SessionAPIUtil.signup(signupInfo).then(function (user) {
	      return dispatch(receiveCurrentUser(user));
	    }).then(function (user) {
	      return dispatch((0, _error_actions.clearSessionErrors)());
	    }).fail(function (errors) {
	      return dispatch((0, _error_actions.receiveSessionErrors)(errors.responseJSON));
	    });
	  };
	};
	
	var login = exports.login = function login(loginInfo) {
	  return function (dispatch) {
	    return SessionAPIUtil.login(loginInfo).then(function (user) {
	      return dispatch(receiveCurrentUser(user));
	    }).then(function (user) {
	      return dispatch((0, _error_actions.clearSessionErrors)());
	    }).fail(function (errors) {
	      return dispatch((0, _error_actions.receiveSessionErrors)(errors.responseJSON));
	    });
	  };
	};
	
	var logout = exports.logout = function logout() {
	  return function (dispatch) {
	    return SessionAPIUtil.logout().then(function () {
	      return dispatch(logOutCurrentUser());
	    }).fail(function (errors) {
	      return dispatch((0, _error_actions.receiveSessionErrors)(errors.responseJSON));
	    });
	  };
	};

/***/ },
/* 203 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var signup = exports.signup = function signup(signupInfo) {
	  return $.ajax({
	    method: 'POST',
	    url: '/api/users',
	    data: signupInfo
	  });
	};
	
	var login = exports.login = function login(loginInfo) {
	  return $.ajax({
	    method: 'POST',
	    url: '/api/session',
	    data: loginInfo
	  });
	};
	
	var logout = exports.logout = function logout() {
	  return $.ajax({
	    method: 'DELETE',
	    url: '/api/session'
	  });
	};

/***/ },
/* 204 */
/***/ function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var RECEIVE_SESSION_ERRORS = exports.RECEIVE_SESSION_ERRORS = "RECEIVE_SESSION_ERRORS";
	var CLEAR_SESSION_ERRORS = exports.CLEAR_SESSION_ERRORS = "CLEAR_SESSION_ERRORS";
	
	var receiveSessionErrors = exports.receiveSessionErrors = function receiveSessionErrors(errors) {
	  return {
	    type: RECEIVE_SESSION_ERRORS,
	    errors: errors
	  };
	};
	
	var clearSessionErrors = exports.clearSessionErrors = function clearSessionErrors() {
	  return {
	    type: CLEAR_SESSION_ERRORS
	  };
	};

/***/ },
/* 205 */
/***/ function(module, exports, __webpack_require__) {

	var baseMerge = __webpack_require__(206),
	    createAssigner = __webpack_require__(280);
	
	/**
	 * This method is like `_.assign` except that it recursively merges own and
	 * inherited enumerable string keyed properties of source objects into the
	 * destination object. Source properties that resolve to `undefined` are
	 * skipped if a destination value exists. Array and plain object properties
	 * are merged recursively. Other objects and value types are overridden by
	 * assignment. Source objects are applied from left to right. Subsequent
	 * sources overwrite property assignments of previous sources.
	 *
	 * **Note:** This method mutates `object`.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.5.0
	 * @category Object
	 * @param {Object} object The destination object.
	 * @param {...Object} [sources] The source objects.
	 * @returns {Object} Returns `object`.
	 * @example
	 *
	 * var object = {
	 *   'a': [{ 'b': 2 }, { 'd': 4 }]
	 * };
	 *
	 * var other = {
	 *   'a': [{ 'c': 3 }, { 'e': 5 }]
	 * };
	 *
	 * _.merge(object, other);
	 * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }
	 */
	var merge = createAssigner(function(object, source, srcIndex) {
	  baseMerge(object, source, srcIndex);
	});
	
	module.exports = merge;


/***/ },
/* 206 */
/***/ function(module, exports, __webpack_require__) {

	var Stack = __webpack_require__(207),
	    assignMergeValue = __webpack_require__(245),
	    baseFor = __webpack_require__(248),
	    baseMergeDeep = __webpack_require__(250),
	    isObject = __webpack_require__(225),
	    keysIn = __webpack_require__(274);
	
	/**
	 * The base implementation of `_.merge` without support for multiple sources.
	 *
	 * @private
	 * @param {Object} object The destination object.
	 * @param {Object} source The source object.
	 * @param {number} srcIndex The index of `source`.
	 * @param {Function} [customizer] The function to customize merged values.
	 * @param {Object} [stack] Tracks traversed source values and their merged
	 *  counterparts.
	 */
	function baseMerge(object, source, srcIndex, customizer, stack) {
	  if (object === source) {
	    return;
	  }
	  baseFor(source, function(srcValue, key) {
	    if (isObject(srcValue)) {
	      stack || (stack = new Stack);
	      baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);
	    }
	    else {
	      var newValue = customizer
	        ? customizer(object[key], srcValue, (key + ''), object, source, stack)
	        : undefined;
	
	      if (newValue === undefined) {
	        newValue = srcValue;
	      }
	      assignMergeValue(object, key, newValue);
	    }
	  }, keysIn);
	}
	
	module.exports = baseMerge;


/***/ },
/* 207 */
/***/ function(module, exports, __webpack_require__) {

	var ListCache = __webpack_require__(208),
	    stackClear = __webpack_require__(216),
	    stackDelete = __webpack_require__(217),
	    stackGet = __webpack_require__(218),
	    stackHas = __webpack_require__(219),
	    stackSet = __webpack_require__(220);
	
	/**
	 * Creates a stack cache object to store key-value pairs.
	 *
	 * @private
	 * @constructor
	 * @param {Array} [entries] The key-value pairs to cache.
	 */
	function Stack(entries) {
	  var data = this.__data__ = new ListCache(entries);
	  this.size = data.size;
	}
	
	// Add methods to `Stack`.
	Stack.prototype.clear = stackClear;
	Stack.prototype['delete'] = stackDelete;
	Stack.prototype.get = stackGet;
	Stack.prototype.has = stackHas;
	Stack.prototype.set = stackSet;
	
	module.exports = Stack;


/***/ },
/* 208 */
/***/ function(module, exports, __webpack_require__) {

	var listCacheClear = __webpack_require__(209),
	    listCacheDelete = __webpack_require__(210),
	    listCacheGet = __webpack_require__(213),
	    listCacheHas = __webpack_require__(214),
	    listCacheSet = __webpack_require__(215);
	
	/**
	 * Creates an list cache object.
	 *
	 * @private
	 * @constructor
	 * @param {Array} [entries] The key-value pairs to cache.
	 */
	function ListCache(entries) {
	  var index = -1,
	      length = entries == null ? 0 : entries.length;
	
	  this.clear();
	  while (++index < length) {
	    var entry = entries[index];
	    this.set(entry[0], entry[1]);
	  }
	}
	
	// Add methods to `ListCache`.
	ListCache.prototype.clear = listCacheClear;
	ListCache.prototype['delete'] = listCacheDelete;
	ListCache.prototype.get = listCacheGet;
	ListCache.prototype.has = listCacheHas;
	ListCache.prototype.set = listCacheSet;
	
	module.exports = ListCache;


/***/ },
/* 209 */
/***/ function(module, exports) {

	/**
	 * Removes all key-value entries from the list cache.
	 *
	 * @private
	 * @name clear
	 * @memberOf ListCache
	 */
	function listCacheClear() {
	  this.__data__ = [];
	  this.size = 0;
	}
	
	module.exports = listCacheClear;


/***/ },
/* 210 */
/***/ function(module, exports, __webpack_require__) {

	var assocIndexOf = __webpack_require__(211);
	
	/** Used for built-in method references. */
	var arrayProto = Array.prototype;
	
	/** Built-in value references. */
	var splice = arrayProto.splice;
	
	/**
	 * Removes `key` and its value from the list cache.
	 *
	 * @private
	 * @name delete
	 * @memberOf ListCache
	 * @param {string} key The key of the value to remove.
	 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	 */
	function listCacheDelete(key) {
	  var data = this.__data__,
	      index = assocIndexOf(data, key);
	
	  if (index < 0) {
	    return false;
	  }
	  var lastIndex = data.length - 1;
	  if (index == lastIndex) {
	    data.pop();
	  } else {
	    splice.call(data, index, 1);
	  }
	  --this.size;
	  return true;
	}
	
	module.exports = listCacheDelete;


/***/ },
/* 211 */
/***/ function(module, exports, __webpack_require__) {

	var eq = __webpack_require__(212);
	
	/**
	 * Gets the index at which the `key` is found in `array` of key-value pairs.
	 *
	 * @private
	 * @param {Array} array The array to inspect.
	 * @param {*} key The key to search for.
	 * @returns {number} Returns the index of the matched value, else `-1`.
	 */
	function assocIndexOf(array, key) {
	  var length = array.length;
	  while (length--) {
	    if (eq(array[length][0], key)) {
	      return length;
	    }
	  }
	  return -1;
	}
	
	module.exports = assocIndexOf;


/***/ },
/* 212 */
/***/ function(module, exports) {

	/**
	 * Performs a
	 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	 * comparison between two values to determine if they are equivalent.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to compare.
	 * @param {*} other The other value to compare.
	 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
	 * @example
	 *
	 * var object = { 'a': 1 };
	 * var other = { 'a': 1 };
	 *
	 * _.eq(object, object);
	 * // => true
	 *
	 * _.eq(object, other);
	 * // => false
	 *
	 * _.eq('a', 'a');
	 * // => true
	 *
	 * _.eq('a', Object('a'));
	 * // => false
	 *
	 * _.eq(NaN, NaN);
	 * // => true
	 */
	function eq(value, other) {
	  return value === other || (value !== value && other !== other);
	}
	
	module.exports = eq;


/***/ },
/* 213 */
/***/ function(module, exports, __webpack_require__) {

	var assocIndexOf = __webpack_require__(211);
	
	/**
	 * Gets the list cache value for `key`.
	 *
	 * @private
	 * @name get
	 * @memberOf ListCache
	 * @param {string} key The key of the value to get.
	 * @returns {*} Returns the entry value.
	 */
	function listCacheGet(key) {
	  var data = this.__data__,
	      index = assocIndexOf(data, key);
	
	  return index < 0 ? undefined : data[index][1];
	}
	
	module.exports = listCacheGet;


/***/ },
/* 214 */
/***/ function(module, exports, __webpack_require__) {

	var assocIndexOf = __webpack_require__(211);
	
	/**
	 * Checks if a list cache value for `key` exists.
	 *
	 * @private
	 * @name has
	 * @memberOf ListCache
	 * @param {string} key The key of the entry to check.
	 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	 */
	function listCacheHas(key) {
	  return assocIndexOf(this.__data__, key) > -1;
	}
	
	module.exports = listCacheHas;


/***/ },
/* 215 */
/***/ function(module, exports, __webpack_require__) {

	var assocIndexOf = __webpack_require__(211);
	
	/**
	 * Sets the list cache `key` to `value`.
	 *
	 * @private
	 * @name set
	 * @memberOf ListCache
	 * @param {string} key The key of the value to set.
	 * @param {*} value The value to set.
	 * @returns {Object} Returns the list cache instance.
	 */
	function listCacheSet(key, value) {
	  var data = this.__data__,
	      index = assocIndexOf(data, key);
	
	  if (index < 0) {
	    ++this.size;
	    data.push([key, value]);
	  } else {
	    data[index][1] = value;
	  }
	  return this;
	}
	
	module.exports = listCacheSet;


/***/ },
/* 216 */
/***/ function(module, exports, __webpack_require__) {

	var ListCache = __webpack_require__(208);
	
	/**
	 * Removes all key-value entries from the stack.
	 *
	 * @private
	 * @name clear
	 * @memberOf Stack
	 */
	function stackClear() {
	  this.__data__ = new ListCache;
	  this.size = 0;
	}
	
	module.exports = stackClear;


/***/ },
/* 217 */
/***/ function(module, exports) {

	/**
	 * Removes `key` and its value from the stack.
	 *
	 * @private
	 * @name delete
	 * @memberOf Stack
	 * @param {string} key The key of the value to remove.
	 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	 */
	function stackDelete(key) {
	  var data = this.__data__,
	      result = data['delete'](key);
	
	  this.size = data.size;
	  return result;
	}
	
	module.exports = stackDelete;


/***/ },
/* 218 */
/***/ function(module, exports) {

	/**
	 * Gets the stack value for `key`.
	 *
	 * @private
	 * @name get
	 * @memberOf Stack
	 * @param {string} key The key of the value to get.
	 * @returns {*} Returns the entry value.
	 */
	function stackGet(key) {
	  return this.__data__.get(key);
	}
	
	module.exports = stackGet;


/***/ },
/* 219 */
/***/ function(module, exports) {

	/**
	 * Checks if a stack value for `key` exists.
	 *
	 * @private
	 * @name has
	 * @memberOf Stack
	 * @param {string} key The key of the entry to check.
	 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	 */
	function stackHas(key) {
	  return this.__data__.has(key);
	}
	
	module.exports = stackHas;


/***/ },
/* 220 */
/***/ function(module, exports, __webpack_require__) {

	var ListCache = __webpack_require__(208),
	    Map = __webpack_require__(221),
	    MapCache = __webpack_require__(230);
	
	/** Used as the size to enable large array optimizations. */
	var LARGE_ARRAY_SIZE = 200;
	
	/**
	 * Sets the stack `key` to `value`.
	 *
	 * @private
	 * @name set
	 * @memberOf Stack
	 * @param {string} key The key of the value to set.
	 * @param {*} value The value to set.
	 * @returns {Object} Returns the stack cache instance.
	 */
	function stackSet(key, value) {
	  var data = this.__data__;
	  if (data instanceof ListCache) {
	    var pairs = data.__data__;
	    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {
	      pairs.push([key, value]);
	      this.size = ++data.size;
	      return this;
	    }
	    data = this.__data__ = new MapCache(pairs);
	  }
	  data.set(key, value);
	  this.size = data.size;
	  return this;
	}
	
	module.exports = stackSet;


/***/ },
/* 221 */
/***/ function(module, exports, __webpack_require__) {

	var getNative = __webpack_require__(222),
	    root = __webpack_require__(184);
	
	/* Built-in method references that are verified to be native. */
	var Map = getNative(root, 'Map');
	
	module.exports = Map;


/***/ },
/* 222 */
/***/ function(module, exports, __webpack_require__) {

	var baseIsNative = __webpack_require__(223),
	    getValue = __webpack_require__(229);
	
	/**
	 * Gets the native function at `key` of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @param {string} key The key of the method to get.
	 * @returns {*} Returns the function if it's native, else `undefined`.
	 */
	function getNative(object, key) {
	  var value = getValue(object, key);
	  return baseIsNative(value) ? value : undefined;
	}
	
	module.exports = getNative;


/***/ },
/* 223 */
/***/ function(module, exports, __webpack_require__) {

	var isFunction = __webpack_require__(224),
	    isMasked = __webpack_require__(226),
	    isObject = __webpack_require__(225),
	    toSource = __webpack_require__(228);
	
	/**
	 * Used to match `RegExp`
	 * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
	 */
	var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;
	
	/** Used to detect host constructors (Safari). */
	var reIsHostCtor = /^\[object .+?Constructor\]$/;
	
	/** Used for built-in method references. */
	var funcProto = Function.prototype,
	    objectProto = Object.prototype;
	
	/** Used to resolve the decompiled source of functions. */
	var funcToString = funcProto.toString;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/** Used to detect if a method is native. */
	var reIsNative = RegExp('^' +
	  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&')
	  .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
	);
	
	/**
	 * The base implementation of `_.isNative` without bad shim checks.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a native function,
	 *  else `false`.
	 */
	function baseIsNative(value) {
	  if (!isObject(value) || isMasked(value)) {
	    return false;
	  }
	  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
	  return pattern.test(toSource(value));
	}
	
	module.exports = baseIsNative;


/***/ },
/* 224 */
/***/ function(module, exports, __webpack_require__) {

	var baseGetTag = __webpack_require__(182),
	    isObject = __webpack_require__(225);
	
	/** `Object#toString` result references. */
	var asyncTag = '[object AsyncFunction]',
	    funcTag = '[object Function]',
	    genTag = '[object GeneratorFunction]',
	    proxyTag = '[object Proxy]';
	
	/**
	 * Checks if `value` is classified as a `Function` object.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a function, else `false`.
	 * @example
	 *
	 * _.isFunction(_);
	 * // => true
	 *
	 * _.isFunction(/abc/);
	 * // => false
	 */
	function isFunction(value) {
	  if (!isObject(value)) {
	    return false;
	  }
	  // The use of `Object#toString` avoids issues with the `typeof` operator
	  // in Safari 9 which returns 'object' for typed arrays and other constructors.
	  var tag = baseGetTag(value);
	  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
	}
	
	module.exports = isFunction;


/***/ },
/* 225 */
/***/ function(module, exports) {

	/**
	 * Checks if `value` is the
	 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
	 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
	 * @example
	 *
	 * _.isObject({});
	 * // => true
	 *
	 * _.isObject([1, 2, 3]);
	 * // => true
	 *
	 * _.isObject(_.noop);
	 * // => true
	 *
	 * _.isObject(null);
	 * // => false
	 */
	function isObject(value) {
	  var type = typeof value;
	  return value != null && (type == 'object' || type == 'function');
	}
	
	module.exports = isObject;


/***/ },
/* 226 */
/***/ function(module, exports, __webpack_require__) {

	var coreJsData = __webpack_require__(227);
	
	/** Used to detect methods masquerading as native. */
	var maskSrcKey = (function() {
	  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
	  return uid ? ('Symbol(src)_1.' + uid) : '';
	}());
	
	/**
	 * Checks if `func` has its source masked.
	 *
	 * @private
	 * @param {Function} func The function to check.
	 * @returns {boolean} Returns `true` if `func` is masked, else `false`.
	 */
	function isMasked(func) {
	  return !!maskSrcKey && (maskSrcKey in func);
	}
	
	module.exports = isMasked;


/***/ },
/* 227 */
/***/ function(module, exports, __webpack_require__) {

	var root = __webpack_require__(184);
	
	/** Used to detect overreaching core-js shims. */
	var coreJsData = root['__core-js_shared__'];
	
	module.exports = coreJsData;


/***/ },
/* 228 */
/***/ function(module, exports) {

	/** Used for built-in method references. */
	var funcProto = Function.prototype;
	
	/** Used to resolve the decompiled source of functions. */
	var funcToString = funcProto.toString;
	
	/**
	 * Converts `func` to its source code.
	 *
	 * @private
	 * @param {Function} func The function to convert.
	 * @returns {string} Returns the source code.
	 */
	function toSource(func) {
	  if (func != null) {
	    try {
	      return funcToString.call(func);
	    } catch (e) {}
	    try {
	      return (func + '');
	    } catch (e) {}
	  }
	  return '';
	}
	
	module.exports = toSource;


/***/ },
/* 229 */
/***/ function(module, exports) {

	/**
	 * Gets the value at `key` of `object`.
	 *
	 * @private
	 * @param {Object} [object] The object to query.
	 * @param {string} key The key of the property to get.
	 * @returns {*} Returns the property value.
	 */
	function getValue(object, key) {
	  return object == null ? undefined : object[key];
	}
	
	module.exports = getValue;


/***/ },
/* 230 */
/***/ function(module, exports, __webpack_require__) {

	var mapCacheClear = __webpack_require__(231),
	    mapCacheDelete = __webpack_require__(239),
	    mapCacheGet = __webpack_require__(242),
	    mapCacheHas = __webpack_require__(243),
	    mapCacheSet = __webpack_require__(244);
	
	/**
	 * Creates a map cache object to store key-value pairs.
	 *
	 * @private
	 * @constructor
	 * @param {Array} [entries] The key-value pairs to cache.
	 */
	function MapCache(entries) {
	  var index = -1,
	      length = entries == null ? 0 : entries.length;
	
	  this.clear();
	  while (++index < length) {
	    var entry = entries[index];
	    this.set(entry[0], entry[1]);
	  }
	}
	
	// Add methods to `MapCache`.
	MapCache.prototype.clear = mapCacheClear;
	MapCache.prototype['delete'] = mapCacheDelete;
	MapCache.prototype.get = mapCacheGet;
	MapCache.prototype.has = mapCacheHas;
	MapCache.prototype.set = mapCacheSet;
	
	module.exports = MapCache;


/***/ },
/* 231 */
/***/ function(module, exports, __webpack_require__) {

	var Hash = __webpack_require__(232),
	    ListCache = __webpack_require__(208),
	    Map = __webpack_require__(221);
	
	/**
	 * Removes all key-value entries from the map.
	 *
	 * @private
	 * @name clear
	 * @memberOf MapCache
	 */
	function mapCacheClear() {
	  this.size = 0;
	  this.__data__ = {
	    'hash': new Hash,
	    'map': new (Map || ListCache),
	    'string': new Hash
	  };
	}
	
	module.exports = mapCacheClear;


/***/ },
/* 232 */
/***/ function(module, exports, __webpack_require__) {

	var hashClear = __webpack_require__(233),
	    hashDelete = __webpack_require__(235),
	    hashGet = __webpack_require__(236),
	    hashHas = __webpack_require__(237),
	    hashSet = __webpack_require__(238);
	
	/**
	 * Creates a hash object.
	 *
	 * @private
	 * @constructor
	 * @param {Array} [entries] The key-value pairs to cache.
	 */
	function Hash(entries) {
	  var index = -1,
	      length = entries == null ? 0 : entries.length;
	
	  this.clear();
	  while (++index < length) {
	    var entry = entries[index];
	    this.set(entry[0], entry[1]);
	  }
	}
	
	// Add methods to `Hash`.
	Hash.prototype.clear = hashClear;
	Hash.prototype['delete'] = hashDelete;
	Hash.prototype.get = hashGet;
	Hash.prototype.has = hashHas;
	Hash.prototype.set = hashSet;
	
	module.exports = Hash;


/***/ },
/* 233 */
/***/ function(module, exports, __webpack_require__) {

	var nativeCreate = __webpack_require__(234);
	
	/**
	 * Removes all key-value entries from the hash.
	 *
	 * @private
	 * @name clear
	 * @memberOf Hash
	 */
	function hashClear() {
	  this.__data__ = nativeCreate ? nativeCreate(null) : {};
	  this.size = 0;
	}
	
	module.exports = hashClear;


/***/ },
/* 234 */
/***/ function(module, exports, __webpack_require__) {

	var getNative = __webpack_require__(222);
	
	/* Built-in method references that are verified to be native. */
	var nativeCreate = getNative(Object, 'create');
	
	module.exports = nativeCreate;


/***/ },
/* 235 */
/***/ function(module, exports) {

	/**
	 * Removes `key` and its value from the hash.
	 *
	 * @private
	 * @name delete
	 * @memberOf Hash
	 * @param {Object} hash The hash to modify.
	 * @param {string} key The key of the value to remove.
	 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	 */
	function hashDelete(key) {
	  var result = this.has(key) && delete this.__data__[key];
	  this.size -= result ? 1 : 0;
	  return result;
	}
	
	module.exports = hashDelete;


/***/ },
/* 236 */
/***/ function(module, exports, __webpack_require__) {

	var nativeCreate = __webpack_require__(234);
	
	/** Used to stand-in for `undefined` hash values. */
	var HASH_UNDEFINED = '__lodash_hash_undefined__';
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * Gets the hash value for `key`.
	 *
	 * @private
	 * @name get
	 * @memberOf Hash
	 * @param {string} key The key of the value to get.
	 * @returns {*} Returns the entry value.
	 */
	function hashGet(key) {
	  var data = this.__data__;
	  if (nativeCreate) {
	    var result = data[key];
	    return result === HASH_UNDEFINED ? undefined : result;
	  }
	  return hasOwnProperty.call(data, key) ? data[key] : undefined;
	}
	
	module.exports = hashGet;


/***/ },
/* 237 */
/***/ function(module, exports, __webpack_require__) {

	var nativeCreate = __webpack_require__(234);
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * Checks if a hash value for `key` exists.
	 *
	 * @private
	 * @name has
	 * @memberOf Hash
	 * @param {string} key The key of the entry to check.
	 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	 */
	function hashHas(key) {
	  var data = this.__data__;
	  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);
	}
	
	module.exports = hashHas;


/***/ },
/* 238 */
/***/ function(module, exports, __webpack_require__) {

	var nativeCreate = __webpack_require__(234);
	
	/** Used to stand-in for `undefined` hash values. */
	var HASH_UNDEFINED = '__lodash_hash_undefined__';
	
	/**
	 * Sets the hash `key` to `value`.
	 *
	 * @private
	 * @name set
	 * @memberOf Hash
	 * @param {string} key The key of the value to set.
	 * @param {*} value The value to set.
	 * @returns {Object} Returns the hash instance.
	 */
	function hashSet(key, value) {
	  var data = this.__data__;
	  this.size += this.has(key) ? 0 : 1;
	  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;
	  return this;
	}
	
	module.exports = hashSet;


/***/ },
/* 239 */
/***/ function(module, exports, __webpack_require__) {

	var getMapData = __webpack_require__(240);
	
	/**
	 * Removes `key` and its value from the map.
	 *
	 * @private
	 * @name delete
	 * @memberOf MapCache
	 * @param {string} key The key of the value to remove.
	 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	 */
	function mapCacheDelete(key) {
	  var result = getMapData(this, key)['delete'](key);
	  this.size -= result ? 1 : 0;
	  return result;
	}
	
	module.exports = mapCacheDelete;


/***/ },
/* 240 */
/***/ function(module, exports, __webpack_require__) {

	var isKeyable = __webpack_require__(241);
	
	/**
	 * Gets the data for `map`.
	 *
	 * @private
	 * @param {Object} map The map to query.
	 * @param {string} key The reference key.
	 * @returns {*} Returns the map data.
	 */
	function getMapData(map, key) {
	  var data = map.__data__;
	  return isKeyable(key)
	    ? data[typeof key == 'string' ? 'string' : 'hash']
	    : data.map;
	}
	
	module.exports = getMapData;


/***/ },
/* 241 */
/***/ function(module, exports) {

	/**
	 * Checks if `value` is suitable for use as unique object key.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
	 */
	function isKeyable(value) {
	  var type = typeof value;
	  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')
	    ? (value !== '__proto__')
	    : (value === null);
	}
	
	module.exports = isKeyable;


/***/ },
/* 242 */
/***/ function(module, exports, __webpack_require__) {

	var getMapData = __webpack_require__(240);
	
	/**
	 * Gets the map value for `key`.
	 *
	 * @private
	 * @name get
	 * @memberOf MapCache
	 * @param {string} key The key of the value to get.
	 * @returns {*} Returns the entry value.
	 */
	function mapCacheGet(key) {
	  return getMapData(this, key).get(key);
	}
	
	module.exports = mapCacheGet;


/***/ },
/* 243 */
/***/ function(module, exports, __webpack_require__) {

	var getMapData = __webpack_require__(240);
	
	/**
	 * Checks if a map value for `key` exists.
	 *
	 * @private
	 * @name has
	 * @memberOf MapCache
	 * @param {string} key The key of the entry to check.
	 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	 */
	function mapCacheHas(key) {
	  return getMapData(this, key).has(key);
	}
	
	module.exports = mapCacheHas;


/***/ },
/* 244 */
/***/ function(module, exports, __webpack_require__) {

	var getMapData = __webpack_require__(240);
	
	/**
	 * Sets the map `key` to `value`.
	 *
	 * @private
	 * @name set
	 * @memberOf MapCache
	 * @param {string} key The key of the value to set.
	 * @param {*} value The value to set.
	 * @returns {Object} Returns the map cache instance.
	 */
	function mapCacheSet(key, value) {
	  var data = getMapData(this, key),
	      size = data.size;
	
	  data.set(key, value);
	  this.size += data.size == size ? 0 : 1;
	  return this;
	}
	
	module.exports = mapCacheSet;


/***/ },
/* 245 */
/***/ function(module, exports, __webpack_require__) {

	var baseAssignValue = __webpack_require__(246),
	    eq = __webpack_require__(212);
	
	/**
	 * This function is like `assignValue` except that it doesn't assign
	 * `undefined` values.
	 *
	 * @private
	 * @param {Object} object The object to modify.
	 * @param {string} key The key of the property to assign.
	 * @param {*} value The value to assign.
	 */
	function assignMergeValue(object, key, value) {
	  if ((value !== undefined && !eq(object[key], value)) ||
	      (value === undefined && !(key in object))) {
	    baseAssignValue(object, key, value);
	  }
	}
	
	module.exports = assignMergeValue;


/***/ },
/* 246 */
/***/ function(module, exports, __webpack_require__) {

	var defineProperty = __webpack_require__(247);
	
	/**
	 * The base implementation of `assignValue` and `assignMergeValue` without
	 * value checks.
	 *
	 * @private
	 * @param {Object} object The object to modify.
	 * @param {string} key The key of the property to assign.
	 * @param {*} value The value to assign.
	 */
	function baseAssignValue(object, key, value) {
	  if (key == '__proto__' && defineProperty) {
	    defineProperty(object, key, {
	      'configurable': true,
	      'enumerable': true,
	      'value': value,
	      'writable': true
	    });
	  } else {
	    object[key] = value;
	  }
	}
	
	module.exports = baseAssignValue;


/***/ },
/* 247 */
/***/ function(module, exports, __webpack_require__) {

	var getNative = __webpack_require__(222);
	
	var defineProperty = (function() {
	  try {
	    var func = getNative(Object, 'defineProperty');
	    func({}, '', {});
	    return func;
	  } catch (e) {}
	}());
	
	module.exports = defineProperty;


/***/ },
/* 248 */
/***/ function(module, exports, __webpack_require__) {

	var createBaseFor = __webpack_require__(249);
	
	/**
	 * The base implementation of `baseForOwn` which iterates over `object`
	 * properties returned by `keysFunc` and invokes `iteratee` for each property.
	 * Iteratee functions may exit iteration early by explicitly returning `false`.
	 *
	 * @private
	 * @param {Object} object The object to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @param {Function} keysFunc The function to get the keys of `object`.
	 * @returns {Object} Returns `object`.
	 */
	var baseFor = createBaseFor();
	
	module.exports = baseFor;


/***/ },
/* 249 */
/***/ function(module, exports) {

	/**
	 * Creates a base function for methods like `_.forIn` and `_.forOwn`.
	 *
	 * @private
	 * @param {boolean} [fromRight] Specify iterating from right to left.
	 * @returns {Function} Returns the new base function.
	 */
	function createBaseFor(fromRight) {
	  return function(object, iteratee, keysFunc) {
	    var index = -1,
	        iterable = Object(object),
	        props = keysFunc(object),
	        length = props.length;
	
	    while (length--) {
	      var key = props[fromRight ? length : ++index];
	      if (iteratee(iterable[key], key, iterable) === false) {
	        break;
	      }
	    }
	    return object;
	  };
	}
	
	module.exports = createBaseFor;


/***/ },
/* 250 */
/***/ function(module, exports, __webpack_require__) {

	var assignMergeValue = __webpack_require__(245),
	    cloneBuffer = __webpack_require__(251),
	    cloneTypedArray = __webpack_require__(252),
	    copyArray = __webpack_require__(255),
	    initCloneObject = __webpack_require__(256),
	    isArguments = __webpack_require__(259),
	    isArray = __webpack_require__(261),
	    isArrayLikeObject = __webpack_require__(262),
	    isBuffer = __webpack_require__(265),
	    isFunction = __webpack_require__(224),
	    isObject = __webpack_require__(225),
	    isPlainObject = __webpack_require__(181),
	    isTypedArray = __webpack_require__(267),
	    toPlainObject = __webpack_require__(271);
	
	/**
	 * A specialized version of `baseMerge` for arrays and objects which performs
	 * deep merges and tracks traversed objects enabling objects with circular
	 * references to be merged.
	 *
	 * @private
	 * @param {Object} object The destination object.
	 * @param {Object} source The source object.
	 * @param {string} key The key of the value to merge.
	 * @param {number} srcIndex The index of `source`.
	 * @param {Function} mergeFunc The function to merge values.
	 * @param {Function} [customizer] The function to customize assigned values.
	 * @param {Object} [stack] Tracks traversed source values and their merged
	 *  counterparts.
	 */
	function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {
	  var objValue = object[key],
	      srcValue = source[key],
	      stacked = stack.get(srcValue);
	
	  if (stacked) {
	    assignMergeValue(object, key, stacked);
	    return;
	  }
	  var newValue = customizer
	    ? customizer(objValue, srcValue, (key + ''), object, source, stack)
	    : undefined;
	
	  var isCommon = newValue === undefined;
	
	  if (isCommon) {
	    var isArr = isArray(srcValue),
	        isBuff = !isArr && isBuffer(srcValue),
	        isTyped = !isArr && !isBuff && isTypedArray(srcValue);
	
	    newValue = srcValue;
	    if (isArr || isBuff || isTyped) {
	      if (isArray(objValue)) {
	        newValue = objValue;
	      }
	      else if (isArrayLikeObject(objValue)) {
	        newValue = copyArray(objValue);
	      }
	      else if (isBuff) {
	        isCommon = false;
	        newValue = cloneBuffer(srcValue, true);
	      }
	      else if (isTyped) {
	        isCommon = false;
	        newValue = cloneTypedArray(srcValue, true);
	      }
	      else {
	        newValue = [];
	      }
	    }
	    else if (isPlainObject(srcValue) || isArguments(srcValue)) {
	      newValue = objValue;
	      if (isArguments(objValue)) {
	        newValue = toPlainObject(objValue);
	      }
	      else if (!isObject(objValue) || (srcIndex && isFunction(objValue))) {
	        newValue = initCloneObject(srcValue);
	      }
	    }
	    else {
	      isCommon = false;
	    }
	  }
	  if (isCommon) {
	    // Recursively merge objects and arrays (susceptible to call stack limits).
	    stack.set(srcValue, newValue);
	    mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
	    stack['delete'](srcValue);
	  }
	  assignMergeValue(object, key, newValue);
	}
	
	module.exports = baseMergeDeep;


/***/ },
/* 251 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(module) {var root = __webpack_require__(184);
	
	/** Detect free variable `exports`. */
	var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;
	
	/** Detect free variable `module`. */
	var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;
	
	/** Detect the popular CommonJS extension `module.exports`. */
	var moduleExports = freeModule && freeModule.exports === freeExports;
	
	/** Built-in value references. */
	var Buffer = moduleExports ? root.Buffer : undefined,
	    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;
	
	/**
	 * Creates a clone of  `buffer`.
	 *
	 * @private
	 * @param {Buffer} buffer The buffer to clone.
	 * @param {boolean} [isDeep] Specify a deep clone.
	 * @returns {Buffer} Returns the cloned buffer.
	 */
	function cloneBuffer(buffer, isDeep) {
	  if (isDeep) {
	    return buffer.slice();
	  }
	  var length = buffer.length,
	      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);
	
	  buffer.copy(result);
	  return result;
	}
	
	module.exports = cloneBuffer;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(193)(module)))

/***/ },
/* 252 */
/***/ function(module, exports, __webpack_require__) {

	var cloneArrayBuffer = __webpack_require__(253);
	
	/**
	 * Creates a clone of `typedArray`.
	 *
	 * @private
	 * @param {Object} typedArray The typed array to clone.
	 * @param {boolean} [isDeep] Specify a deep clone.
	 * @returns {Object} Returns the cloned typed array.
	 */
	function cloneTypedArray(typedArray, isDeep) {
	  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
	  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
	}
	
	module.exports = cloneTypedArray;


/***/ },
/* 253 */
/***/ function(module, exports, __webpack_require__) {

	var Uint8Array = __webpack_require__(254);
	
	/**
	 * Creates a clone of `arrayBuffer`.
	 *
	 * @private
	 * @param {ArrayBuffer} arrayBuffer The array buffer to clone.
	 * @returns {ArrayBuffer} Returns the cloned array buffer.
	 */
	function cloneArrayBuffer(arrayBuffer) {
	  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
	  new Uint8Array(result).set(new Uint8Array(arrayBuffer));
	  return result;
	}
	
	module.exports = cloneArrayBuffer;


/***/ },
/* 254 */
/***/ function(module, exports, __webpack_require__) {

	var root = __webpack_require__(184);
	
	/** Built-in value references. */
	var Uint8Array = root.Uint8Array;
	
	module.exports = Uint8Array;


/***/ },
/* 255 */
/***/ function(module, exports) {

	/**
	 * Copies the values of `source` to `array`.
	 *
	 * @private
	 * @param {Array} source The array to copy values from.
	 * @param {Array} [array=[]] The array to copy values to.
	 * @returns {Array} Returns `array`.
	 */
	function copyArray(source, array) {
	  var index = -1,
	      length = source.length;
	
	  array || (array = Array(length));
	  while (++index < length) {
	    array[index] = source[index];
	  }
	  return array;
	}
	
	module.exports = copyArray;


/***/ },
/* 256 */
/***/ function(module, exports, __webpack_require__) {

	var baseCreate = __webpack_require__(257),
	    getPrototype = __webpack_require__(188),
	    isPrototype = __webpack_require__(258);
	
	/**
	 * Initializes an object clone.
	 *
	 * @private
	 * @param {Object} object The object to clone.
	 * @returns {Object} Returns the initialized clone.
	 */
	function initCloneObject(object) {
	  return (typeof object.constructor == 'function' && !isPrototype(object))
	    ? baseCreate(getPrototype(object))
	    : {};
	}
	
	module.exports = initCloneObject;


/***/ },
/* 257 */
/***/ function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(225);
	
	/** Built-in value references. */
	var objectCreate = Object.create;
	
	/**
	 * The base implementation of `_.create` without support for assigning
	 * properties to the created object.
	 *
	 * @private
	 * @param {Object} proto The object to inherit from.
	 * @returns {Object} Returns the new object.
	 */
	var baseCreate = (function() {
	  function object() {}
	  return function(proto) {
	    if (!isObject(proto)) {
	      return {};
	    }
	    if (objectCreate) {
	      return objectCreate(proto);
	    }
	    object.prototype = proto;
	    var result = new object;
	    object.prototype = undefined;
	    return result;
	  };
	}());
	
	module.exports = baseCreate;


/***/ },
/* 258 */
/***/ function(module, exports) {

	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/**
	 * Checks if `value` is likely a prototype object.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
	 */
	function isPrototype(value) {
	  var Ctor = value && value.constructor,
	      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;
	
	  return value === proto;
	}
	
	module.exports = isPrototype;


/***/ },
/* 259 */
/***/ function(module, exports, __webpack_require__) {

	var baseIsArguments = __webpack_require__(260),
	    isObjectLike = __webpack_require__(190);
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/** Built-in value references. */
	var propertyIsEnumerable = objectProto.propertyIsEnumerable;
	
	/**
	 * Checks if `value` is likely an `arguments` object.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
	 *  else `false`.
	 * @example
	 *
	 * _.isArguments(function() { return arguments; }());
	 * // => true
	 *
	 * _.isArguments([1, 2, 3]);
	 * // => false
	 */
	var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {
	  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&
	    !propertyIsEnumerable.call(value, 'callee');
	};
	
	module.exports = isArguments;


/***/ },
/* 260 */
/***/ function(module, exports, __webpack_require__) {

	var baseGetTag = __webpack_require__(182),
	    isObjectLike = __webpack_require__(190);
	
	/** `Object#toString` result references. */
	var argsTag = '[object Arguments]';
	
	/**
	 * The base implementation of `_.isArguments`.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
	 */
	function baseIsArguments(value) {
	  return isObjectLike(value) && baseGetTag(value) == argsTag;
	}
	
	module.exports = baseIsArguments;


/***/ },
/* 261 */
/***/ function(module, exports) {

	/**
	 * Checks if `value` is classified as an `Array` object.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an array, else `false`.
	 * @example
	 *
	 * _.isArray([1, 2, 3]);
	 * // => true
	 *
	 * _.isArray(document.body.children);
	 * // => false
	 *
	 * _.isArray('abc');
	 * // => false
	 *
	 * _.isArray(_.noop);
	 * // => false
	 */
	var isArray = Array.isArray;
	
	module.exports = isArray;


/***/ },
/* 262 */
/***/ function(module, exports, __webpack_require__) {

	var isArrayLike = __webpack_require__(263),
	    isObjectLike = __webpack_require__(190);
	
	/**
	 * This method is like `_.isArrayLike` except that it also checks if `value`
	 * is an object.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an array-like object,
	 *  else `false`.
	 * @example
	 *
	 * _.isArrayLikeObject([1, 2, 3]);
	 * // => true
	 *
	 * _.isArrayLikeObject(document.body.children);
	 * // => true
	 *
	 * _.isArrayLikeObject('abc');
	 * // => false
	 *
	 * _.isArrayLikeObject(_.noop);
	 * // => false
	 */
	function isArrayLikeObject(value) {
	  return isObjectLike(value) && isArrayLike(value);
	}
	
	module.exports = isArrayLikeObject;


/***/ },
/* 263 */
/***/ function(module, exports, __webpack_require__) {

	var isFunction = __webpack_require__(224),
	    isLength = __webpack_require__(264);
	
	/**
	 * Checks if `value` is array-like. A value is considered array-like if it's
	 * not a function and has a `value.length` that's an integer greater than or
	 * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
	 * @example
	 *
	 * _.isArrayLike([1, 2, 3]);
	 * // => true
	 *
	 * _.isArrayLike(document.body.children);
	 * // => true
	 *
	 * _.isArrayLike('abc');
	 * // => true
	 *
	 * _.isArrayLike(_.noop);
	 * // => false
	 */
	function isArrayLike(value) {
	  return value != null && isLength(value.length) && !isFunction(value);
	}
	
	module.exports = isArrayLike;


/***/ },
/* 264 */
/***/ function(module, exports) {

	/** Used as references for various `Number` constants. */
	var MAX_SAFE_INTEGER = 9007199254740991;
	
	/**
	 * Checks if `value` is a valid array-like length.
	 *
	 * **Note:** This method is loosely based on
	 * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
	 * @example
	 *
	 * _.isLength(3);
	 * // => true
	 *
	 * _.isLength(Number.MIN_VALUE);
	 * // => false
	 *
	 * _.isLength(Infinity);
	 * // => false
	 *
	 * _.isLength('3');
	 * // => false
	 */
	function isLength(value) {
	  return typeof value == 'number' &&
	    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
	}
	
	module.exports = isLength;


/***/ },
/* 265 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(module) {var root = __webpack_require__(184),
	    stubFalse = __webpack_require__(266);
	
	/** Detect free variable `exports`. */
	var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;
	
	/** Detect free variable `module`. */
	var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;
	
	/** Detect the popular CommonJS extension `module.exports`. */
	var moduleExports = freeModule && freeModule.exports === freeExports;
	
	/** Built-in value references. */
	var Buffer = moduleExports ? root.Buffer : undefined;
	
	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;
	
	/**
	 * Checks if `value` is a buffer.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.3.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
	 * @example
	 *
	 * _.isBuffer(new Buffer(2));
	 * // => true
	 *
	 * _.isBuffer(new Uint8Array(2));
	 * // => false
	 */
	var isBuffer = nativeIsBuffer || stubFalse;
	
	module.exports = isBuffer;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(193)(module)))

/***/ },
/* 266 */
/***/ function(module, exports) {

	/**
	 * This method returns `false`.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.13.0
	 * @category Util
	 * @returns {boolean} Returns `false`.
	 * @example
	 *
	 * _.times(2, _.stubFalse);
	 * // => [false, false]
	 */
	function stubFalse() {
	  return false;
	}
	
	module.exports = stubFalse;


/***/ },
/* 267 */
/***/ function(module, exports, __webpack_require__) {

	var baseIsTypedArray = __webpack_require__(268),
	    baseUnary = __webpack_require__(269),
	    nodeUtil = __webpack_require__(270);
	
	/* Node.js helper references. */
	var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;
	
	/**
	 * Checks if `value` is classified as a typed array.
	 *
	 * @static
	 * @memberOf _
	 * @since 3.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
	 * @example
	 *
	 * _.isTypedArray(new Uint8Array);
	 * // => true
	 *
	 * _.isTypedArray([]);
	 * // => false
	 */
	var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;
	
	module.exports = isTypedArray;


/***/ },
/* 268 */
/***/ function(module, exports, __webpack_require__) {

	var baseGetTag = __webpack_require__(182),
	    isLength = __webpack_require__(264),
	    isObjectLike = __webpack_require__(190);
	
	/** `Object#toString` result references. */
	var argsTag = '[object Arguments]',
	    arrayTag = '[object Array]',
	    boolTag = '[object Boolean]',
	    dateTag = '[object Date]',
	    errorTag = '[object Error]',
	    funcTag = '[object Function]',
	    mapTag = '[object Map]',
	    numberTag = '[object Number]',
	    objectTag = '[object Object]',
	    regexpTag = '[object RegExp]',
	    setTag = '[object Set]',
	    stringTag = '[object String]',
	    weakMapTag = '[object WeakMap]';
	
	var arrayBufferTag = '[object ArrayBuffer]',
	    dataViewTag = '[object DataView]',
	    float32Tag = '[object Float32Array]',
	    float64Tag = '[object Float64Array]',
	    int8Tag = '[object Int8Array]',
	    int16Tag = '[object Int16Array]',
	    int32Tag = '[object Int32Array]',
	    uint8Tag = '[object Uint8Array]',
	    uint8ClampedTag = '[object Uint8ClampedArray]',
	    uint16Tag = '[object Uint16Array]',
	    uint32Tag = '[object Uint32Array]';
	
	/** Used to identify `toStringTag` values of typed arrays. */
	var typedArrayTags = {};
	typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =
	typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =
	typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =
	typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =
	typedArrayTags[uint32Tag] = true;
	typedArrayTags[argsTag] = typedArrayTags[arrayTag] =
	typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =
	typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =
	typedArrayTags[errorTag] = typedArrayTags[funcTag] =
	typedArrayTags[mapTag] = typedArrayTags[numberTag] =
	typedArrayTags[objectTag] = typedArrayTags[regexpTag] =
	typedArrayTags[setTag] = typedArrayTags[stringTag] =
	typedArrayTags[weakMapTag] = false;
	
	/**
	 * The base implementation of `_.isTypedArray` without Node.js optimizations.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
	 */
	function baseIsTypedArray(value) {
	  return isObjectLike(value) &&
	    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
	}
	
	module.exports = baseIsTypedArray;


/***/ },
/* 269 */
/***/ function(module, exports) {

	/**
	 * The base implementation of `_.unary` without support for storing metadata.
	 *
	 * @private
	 * @param {Function} func The function to cap arguments for.
	 * @returns {Function} Returns the new capped function.
	 */
	function baseUnary(func) {
	  return function(value) {
	    return func(value);
	  };
	}
	
	module.exports = baseUnary;


/***/ },
/* 270 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(module) {var freeGlobal = __webpack_require__(185);
	
	/** Detect free variable `exports`. */
	var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;
	
	/** Detect free variable `module`. */
	var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;
	
	/** Detect the popular CommonJS extension `module.exports`. */
	var moduleExports = freeModule && freeModule.exports === freeExports;
	
	/** Detect free variable `process` from Node.js. */
	var freeProcess = moduleExports && freeGlobal.process;
	
	/** Used to access faster Node.js helpers. */
	var nodeUtil = (function() {
	  try {
	    return freeProcess && freeProcess.binding && freeProcess.binding('util');
	  } catch (e) {}
	}());
	
	module.exports = nodeUtil;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(193)(module)))

/***/ },
/* 271 */
/***/ function(module, exports, __webpack_require__) {

	var copyObject = __webpack_require__(272),
	    keysIn = __webpack_require__(274);
	
	/**
	 * Converts `value` to a plain object flattening inherited enumerable string
	 * keyed properties of `value` to own properties of the plain object.
	 *
	 * @static
	 * @memberOf _
	 * @since 3.0.0
	 * @category Lang
	 * @param {*} value The value to convert.
	 * @returns {Object} Returns the converted plain object.
	 * @example
	 *
	 * function Foo() {
	 *   this.b = 2;
	 * }
	 *
	 * Foo.prototype.c = 3;
	 *
	 * _.assign({ 'a': 1 }, new Foo);
	 * // => { 'a': 1, 'b': 2 }
	 *
	 * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));
	 * // => { 'a': 1, 'b': 2, 'c': 3 }
	 */
	function toPlainObject(value) {
	  return copyObject(value, keysIn(value));
	}
	
	module.exports = toPlainObject;


/***/ },
/* 272 */
/***/ function(module, exports, __webpack_require__) {

	var assignValue = __webpack_require__(273),
	    baseAssignValue = __webpack_require__(246);
	
	/**
	 * Copies properties of `source` to `object`.
	 *
	 * @private
	 * @param {Object} source The object to copy properties from.
	 * @param {Array} props The property identifiers to copy.
	 * @param {Object} [object={}] The object to copy properties to.
	 * @param {Function} [customizer] The function to customize copied values.
	 * @returns {Object} Returns `object`.
	 */
	function copyObject(source, props, object, customizer) {
	  var isNew = !object;
	  object || (object = {});
	
	  var index = -1,
	      length = props.length;
	
	  while (++index < length) {
	    var key = props[index];
	
	    var newValue = customizer
	      ? customizer(object[key], source[key], key, object, source)
	      : undefined;
	
	    if (newValue === undefined) {
	      newValue = source[key];
	    }
	    if (isNew) {
	      baseAssignValue(object, key, newValue);
	    } else {
	      assignValue(object, key, newValue);
	    }
	  }
	  return object;
	}
	
	module.exports = copyObject;


/***/ },
/* 273 */
/***/ function(module, exports, __webpack_require__) {

	var baseAssignValue = __webpack_require__(246),
	    eq = __webpack_require__(212);
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * Assigns `value` to `key` of `object` if the existing value is not equivalent
	 * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	 * for equality comparisons.
	 *
	 * @private
	 * @param {Object} object The object to modify.
	 * @param {string} key The key of the property to assign.
	 * @param {*} value The value to assign.
	 */
	function assignValue(object, key, value) {
	  var objValue = object[key];
	  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||
	      (value === undefined && !(key in object))) {
	    baseAssignValue(object, key, value);
	  }
	}
	
	module.exports = assignValue;


/***/ },
/* 274 */
/***/ function(module, exports, __webpack_require__) {

	var arrayLikeKeys = __webpack_require__(275),
	    baseKeysIn = __webpack_require__(278),
	    isArrayLike = __webpack_require__(263);
	
	/**
	 * Creates an array of the own and inherited enumerable property names of `object`.
	 *
	 * **Note:** Non-object values are coerced to objects.
	 *
	 * @static
	 * @memberOf _
	 * @since 3.0.0
	 * @category Object
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names.
	 * @example
	 *
	 * function Foo() {
	 *   this.a = 1;
	 *   this.b = 2;
	 * }
	 *
	 * Foo.prototype.c = 3;
	 *
	 * _.keysIn(new Foo);
	 * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
	 */
	function keysIn(object) {
	  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
	}
	
	module.exports = keysIn;


/***/ },
/* 275 */
/***/ function(module, exports, __webpack_require__) {

	var baseTimes = __webpack_require__(276),
	    isArguments = __webpack_require__(259),
	    isArray = __webpack_require__(261),
	    isBuffer = __webpack_require__(265),
	    isIndex = __webpack_require__(277),
	    isTypedArray = __webpack_require__(267);
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * Creates an array of the enumerable property names of the array-like `value`.
	 *
	 * @private
	 * @param {*} value The value to query.
	 * @param {boolean} inherited Specify returning inherited property names.
	 * @returns {Array} Returns the array of property names.
	 */
	function arrayLikeKeys(value, inherited) {
	  var isArr = isArray(value),
	      isArg = !isArr && isArguments(value),
	      isBuff = !isArr && !isArg && isBuffer(value),
	      isType = !isArr && !isArg && !isBuff && isTypedArray(value),
	      skipIndexes = isArr || isArg || isBuff || isType,
	      result = skipIndexes ? baseTimes(value.length, String) : [],
	      length = result.length;
	
	  for (var key in value) {
	    if ((inherited || hasOwnProperty.call(value, key)) &&
	        !(skipIndexes && (
	           // Safari 9 has enumerable `arguments.length` in strict mode.
	           key == 'length' ||
	           // Node.js 0.10 has enumerable non-index properties on buffers.
	           (isBuff && (key == 'offset' || key == 'parent')) ||
	           // PhantomJS 2 has enumerable non-index properties on typed arrays.
	           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||
	           // Skip index properties.
	           isIndex(key, length)
	        ))) {
	      result.push(key);
	    }
	  }
	  return result;
	}
	
	module.exports = arrayLikeKeys;


/***/ },
/* 276 */
/***/ function(module, exports) {

	/**
	 * The base implementation of `_.times` without support for iteratee shorthands
	 * or max array length checks.
	 *
	 * @private
	 * @param {number} n The number of times to invoke `iteratee`.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @returns {Array} Returns the array of results.
	 */
	function baseTimes(n, iteratee) {
	  var index = -1,
	      result = Array(n);
	
	  while (++index < n) {
	    result[index] = iteratee(index);
	  }
	  return result;
	}
	
	module.exports = baseTimes;


/***/ },
/* 277 */
/***/ function(module, exports) {

	/** Used as references for various `Number` constants. */
	var MAX_SAFE_INTEGER = 9007199254740991;
	
	/** Used to detect unsigned integer values. */
	var reIsUint = /^(?:0|[1-9]\d*)$/;
	
	/**
	 * Checks if `value` is a valid array-like index.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
	 * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
	 */
	function isIndex(value, length) {
	  length = length == null ? MAX_SAFE_INTEGER : length;
	  return !!length &&
	    (typeof value == 'number' || reIsUint.test(value)) &&
	    (value > -1 && value % 1 == 0 && value < length);
	}
	
	module.exports = isIndex;


/***/ },
/* 278 */
/***/ function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(225),
	    isPrototype = __webpack_require__(258),
	    nativeKeysIn = __webpack_require__(279);
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names.
	 */
	function baseKeysIn(object) {
	  if (!isObject(object)) {
	    return nativeKeysIn(object);
	  }
	  var isProto = isPrototype(object),
	      result = [];
	
	  for (var key in object) {
	    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
	      result.push(key);
	    }
	  }
	  return result;
	}
	
	module.exports = baseKeysIn;


/***/ },
/* 279 */
/***/ function(module, exports) {

	/**
	 * This function is like
	 * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
	 * except that it includes inherited enumerable properties.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names.
	 */
	function nativeKeysIn(object) {
	  var result = [];
	  if (object != null) {
	    for (var key in Object(object)) {
	      result.push(key);
	    }
	  }
	  return result;
	}
	
	module.exports = nativeKeysIn;


/***/ },
/* 280 */
/***/ function(module, exports, __webpack_require__) {

	var baseRest = __webpack_require__(281),
	    isIterateeCall = __webpack_require__(289);
	
	/**
	 * Creates a function like `_.assign`.
	 *
	 * @private
	 * @param {Function} assigner The function to assign values.
	 * @returns {Function} Returns the new assigner function.
	 */
	function createAssigner(assigner) {
	  return baseRest(function(object, sources) {
	    var index = -1,
	        length = sources.length,
	        customizer = length > 1 ? sources[length - 1] : undefined,
	        guard = length > 2 ? sources[2] : undefined;
	
	    customizer = (assigner.length > 3 && typeof customizer == 'function')
	      ? (length--, customizer)
	      : undefined;
	
	    if (guard && isIterateeCall(sources[0], sources[1], guard)) {
	      customizer = length < 3 ? undefined : customizer;
	      length = 1;
	    }
	    object = Object(object);
	    while (++index < length) {
	      var source = sources[index];
	      if (source) {
	        assigner(object, source, index, customizer);
	      }
	    }
	    return object;
	  });
	}
	
	module.exports = createAssigner;


/***/ },
/* 281 */
/***/ function(module, exports, __webpack_require__) {

	var identity = __webpack_require__(282),
	    overRest = __webpack_require__(283),
	    setToString = __webpack_require__(285);
	
	/**
	 * The base implementation of `_.rest` which doesn't validate or coerce arguments.
	 *
	 * @private
	 * @param {Function} func The function to apply a rest parameter to.
	 * @param {number} [start=func.length-1] The start position of the rest parameter.
	 * @returns {Function} Returns the new function.
	 */
	function baseRest(func, start) {
	  return setToString(overRest(func, start, identity), func + '');
	}
	
	module.exports = baseRest;


/***/ },
/* 282 */
/***/ function(module, exports) {

	/**
	 * This method returns the first argument it receives.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Util
	 * @param {*} value Any value.
	 * @returns {*} Returns `value`.
	 * @example
	 *
	 * var object = { 'a': 1 };
	 *
	 * console.log(_.identity(object) === object);
	 * // => true
	 */
	function identity(value) {
	  return value;
	}
	
	module.exports = identity;


/***/ },
/* 283 */
/***/ function(module, exports, __webpack_require__) {

	var apply = __webpack_require__(284);
	
	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeMax = Math.max;
	
	/**
	 * A specialized version of `baseRest` which transforms the rest array.
	 *
	 * @private
	 * @param {Function} func The function to apply a rest parameter to.
	 * @param {number} [start=func.length-1] The start position of the rest parameter.
	 * @param {Function} transform The rest array transform.
	 * @returns {Function} Returns the new function.
	 */
	function overRest(func, start, transform) {
	  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);
	  return function() {
	    var args = arguments,
	        index = -1,
	        length = nativeMax(args.length - start, 0),
	        array = Array(length);
	
	    while (++index < length) {
	      array[index] = args[start + index];
	    }
	    index = -1;
	    var otherArgs = Array(start + 1);
	    while (++index < start) {
	      otherArgs[index] = args[index];
	    }
	    otherArgs[start] = transform(array);
	    return apply(func, this, otherArgs);
	  };
	}
	
	module.exports = overRest;


/***/ },
/* 284 */
/***/ function(module, exports) {

	/**
	 * A faster alternative to `Function#apply`, this function invokes `func`
	 * with the `this` binding of `thisArg` and the arguments of `args`.
	 *
	 * @private
	 * @param {Function} func The function to invoke.
	 * @param {*} thisArg The `this` binding of `func`.
	 * @param {Array} args The arguments to invoke `func` with.
	 * @returns {*} Returns the result of `func`.
	 */
	function apply(func, thisArg, args) {
	  switch (args.length) {
	    case 0: return func.call(thisArg);
	    case 1: return func.call(thisArg, args[0]);
	    case 2: return func.call(thisArg, args[0], args[1]);
	    case 3: return func.call(thisArg, args[0], args[1], args[2]);
	  }
	  return func.apply(thisArg, args);
	}
	
	module.exports = apply;


/***/ },
/* 285 */
/***/ function(module, exports, __webpack_require__) {

	var baseSetToString = __webpack_require__(286),
	    shortOut = __webpack_require__(288);
	
	/**
	 * Sets the `toString` method of `func` to return `string`.
	 *
	 * @private
	 * @param {Function} func The function to modify.
	 * @param {Function} string The `toString` result.
	 * @returns {Function} Returns `func`.
	 */
	var setToString = shortOut(baseSetToString);
	
	module.exports = setToString;


/***/ },
/* 286 */
/***/ function(module, exports, __webpack_require__) {

	var constant = __webpack_require__(287),
	    defineProperty = __webpack_require__(247),
	    identity = __webpack_require__(282);
	
	/**
	 * The base implementation of `setToString` without support for hot loop shorting.
	 *
	 * @private
	 * @param {Function} func The function to modify.
	 * @param {Function} string The `toString` result.
	 * @returns {Function} Returns `func`.
	 */
	var baseSetToString = !defineProperty ? identity : function(func, string) {
	  return defineProperty(func, 'toString', {
	    'configurable': true,
	    'enumerable': false,
	    'value': constant(string),
	    'writable': true
	  });
	};
	
	module.exports = baseSetToString;


/***/ },
/* 287 */
/***/ function(module, exports) {

	/**
	 * Creates a function that returns `value`.
	 *
	 * @static
	 * @memberOf _
	 * @since 2.4.0
	 * @category Util
	 * @param {*} value The value to return from the new function.
	 * @returns {Function} Returns the new constant function.
	 * @example
	 *
	 * var objects = _.times(2, _.constant({ 'a': 1 }));
	 *
	 * console.log(objects);
	 * // => [{ 'a': 1 }, { 'a': 1 }]
	 *
	 * console.log(objects[0] === objects[1]);
	 * // => true
	 */
	function constant(value) {
	  return function() {
	    return value;
	  };
	}
	
	module.exports = constant;


/***/ },
/* 288 */
/***/ function(module, exports) {

	/** Used to detect hot functions by number of calls within a span of milliseconds. */
	var HOT_COUNT = 800,
	    HOT_SPAN = 16;
	
	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeNow = Date.now;
	
	/**
	 * Creates a function that'll short out and invoke `identity` instead
	 * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`
	 * milliseconds.
	 *
	 * @private
	 * @param {Function} func The function to restrict.
	 * @returns {Function} Returns the new shortable function.
	 */
	function shortOut(func) {
	  var count = 0,
	      lastCalled = 0;
	
	  return function() {
	    var stamp = nativeNow(),
	        remaining = HOT_SPAN - (stamp - lastCalled);
	
	    lastCalled = stamp;
	    if (remaining > 0) {
	      if (++count >= HOT_COUNT) {
	        return arguments[0];
	      }
	    } else {
	      count = 0;
	    }
	    return func.apply(undefined, arguments);
	  };
	}
	
	module.exports = shortOut;


/***/ },
/* 289 */
/***/ function(module, exports, __webpack_require__) {

	var eq = __webpack_require__(212),
	    isArrayLike = __webpack_require__(263),
	    isIndex = __webpack_require__(277),
	    isObject = __webpack_require__(225);
	
	/**
	 * Checks if the given arguments are from an iteratee call.
	 *
	 * @private
	 * @param {*} value The potential iteratee value argument.
	 * @param {*} index The potential iteratee index or key argument.
	 * @param {*} object The potential iteratee object argument.
	 * @returns {boolean} Returns `true` if the arguments are from an iteratee call,
	 *  else `false`.
	 */
	function isIterateeCall(value, index, object) {
	  if (!isObject(object)) {
	    return false;
	  }
	  var type = typeof index;
	  if (type == 'number'
	        ? (isArrayLike(object) && isIndex(index, object.length))
	        : (type == 'string' && index in object)
	      ) {
	    return eq(object[index], value);
	  }
	  return false;
	}
	
	module.exports = isIterateeCall;


/***/ },
/* 290 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _error_actions = __webpack_require__(204);
	
	var _merge = __webpack_require__(205);
	
	var _merge2 = _interopRequireDefault(_merge);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var _defaultState = {
	  all: []
	};
	
	var errorReducer = function errorReducer() {
	  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _defaultState;
	  var action = arguments[1];
	
	  Object.freeze(state);
	  switch (action.type) {
	    case _error_actions.RECEIVE_SESSION_ERRORS:
	      return (0, _merge2.default)({}, _defaultState, { all: action.errors });
	    case _error_actions.CLEAR_SESSION_ERRORS:
	      return (0, _merge2.default)({}, _defaultState, { all: [] });
	    default:
	      return state;
	  }
	};
	
	exports.default = errorReducer;

/***/ },
/* 291 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _search_actions = __webpack_require__(292);
	
	var _merge = __webpack_require__(205);
	
	var _merge2 = _interopRequireDefault(_merge);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var _defaultState = null;
	
	var searchReducer = function searchReducer() {
	  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _defaultState;
	  var action = arguments[1];
	
	  Object.freeze(state);
	  switch (action.type) {
	    case _search_actions.RECEIVE_SEARCH_LISTINGS:
	      return action.searchListings;
	    default:
	      return state;
	  }
	};
	
	exports.default = searchReducer;

/***/ },
/* 292 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.fetchSearchListings = exports.receiveListings = exports.RECEIVE_SEARCH_LISTINGS = undefined;
	
	var _listing_api_util = __webpack_require__(293);
	
	var ListingAPIUtil = _interopRequireWildcard(_listing_api_util);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	var RECEIVE_SEARCH_LISTINGS = exports.RECEIVE_SEARCH_LISTINGS = "RECEIVE_SEARCH_LISTINGS";
	
	var receiveListings = exports.receiveListings = function receiveListings(searchListings) {
	  return {
	    type: RECEIVE_SEARCH_LISTINGS,
	    searchListings: searchListings
	  };
	};
	
	var fetchSearchListings = exports.fetchSearchListings = function fetchSearchListings(filters) {
	  return function (dispatch) {
	    return ListingAPIUtil.fetchSearchListings(filters).then(function (listings) {
	      return dispatch(receiveListings(listings));
	    });
	  };
	};

/***/ },
/* 293 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var fetchSearchListings = exports.fetchSearchListings = function fetchSearchListings(data) {
	  return $.ajax({
	    method: 'GET',
	    url: '/api/search',
	    data: data
	  });
	};
	
	var fetchListing = exports.fetchListing = function fetchListing(id) {
	  return $.ajax({
	    method: 'GET',
	    url: '/api/listings/' + id
	  });
	};
	
	var bookListing = exports.bookListing = function bookListing(data) {
	  return $.ajax({
	    method: 'POST',
	    url: '/api/rentals',
	    data: data
	  });
	};
	
	var createListing = exports.createListing = function createListing(listing) {
	  return $.ajax({
	    method: 'POST',
	    url: '/api/listings',
	    data: { listing: listing }
	  });
	};

/***/ },
/* 294 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _listing_actions = __webpack_require__(295);
	
	var _merge = __webpack_require__(205);
	
	var _merge2 = _interopRequireDefault(_merge);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var _defaultState = null;
	
	var listingReducer = function listingReducer() {
	  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _defaultState;
	  var action = arguments[1];
	
	  Object.freeze(state);
	  switch (action.type) {
	    case _listing_actions.RECEIVE_LISTING:
	      return action.listing;
	    default:
	      return state;
	  }
	};
	
	exports.default = listingReducer;

/***/ },
/* 295 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.createListing = exports.bookListing = exports.fetchListing = exports.receiveListing = exports.RECEIVE_LISTING = undefined;
	
	var _listing_api_util = __webpack_require__(293);
	
	var ListingAPIUtil = _interopRequireWildcard(_listing_api_util);
	
	var _error_actions = __webpack_require__(204);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	var RECEIVE_LISTING = exports.RECEIVE_LISTING = "RECEIVE_LISTING";
	var receiveListing = exports.receiveListing = function receiveListing(listing) {
	  return {
	    type: RECEIVE_LISTING,
	    listing: listing
	  };
	};
	
	var fetchListing = exports.fetchListing = function fetchListing(id) {
	  return function (dispatch) {
	    return ListingAPIUtil.fetchListing(id).then(function (listing) {
	      return dispatch(receiveListing(listing));
	    });
	  };
	};
	
	var bookListing = exports.bookListing = function bookListing(rental) {
	  return function (dispatch) {
	    return ListingAPIUtil.bookListing(rental).then(function () {
	      return dispatch((0, _error_actions.clearSessionErrors)());
	    }).fail(function (errors) {
	      return dispatch((0, _error_actions.receiveSessionErrors)(errors.responseJSON));
	    });
	  };
	};
	
	var createListing = exports.createListing = function createListing(listing) {
	  return function (dispatch) {
	    return ListingAPIUtil.createListing(listing).then(function (newListing) {
	      dispatch((0, _error_actions.clearSessionErrors)());
	      return newListing;
	    }).fail(function (errors) {
	      return dispatch((0, _error_actions.receiveSessionErrors)(errors.responseJSON));
	    });
	  };
	};

/***/ },
/* 296 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _option_actions = __webpack_require__(297);
	
	var _merge = __webpack_require__(205);
	
	var _merge2 = _interopRequireDefault(_merge);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var _defaultState = {};
	
	var optionReducer = function optionReducer() {
	  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _defaultState;
	  var action = arguments[1];
	
	  Object.freeze(state);
	  switch (action.type) {
	    case _option_actions.RECEIVE_OPTIONS:
	      return (0, _merge2.default)({}, state, action.options);
	    default:
	      return state;
	  }
	};
	
	exports.default = optionReducer;

/***/ },
/* 297 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.fetchOptions = exports.receiveOptions = exports.RECEIVE_OPTIONS = undefined;
	
	var _option_api_util = __webpack_require__(298);
	
	var OptionAPIUtil = _interopRequireWildcard(_option_api_util);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	var RECEIVE_OPTIONS = exports.RECEIVE_OPTIONS = "RECEIVE_OPTIONS";
	
	var receiveOptions = exports.receiveOptions = function receiveOptions(options) {
	  return {
	    type: RECEIVE_OPTIONS,
	    options: options
	  };
	};
	
	var fetchOptions = exports.fetchOptions = function fetchOptions() {
	  return function (dispatch) {
	    return OptionAPIUtil.fetchAllFilterOptions().then(function (options) {
	      return dispatch(receiveOptions(options));
	    });
	  };
	};

/***/ },
/* 298 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var fetchAllFilterOptions = exports.fetchAllFilterOptions = function fetchAllFilterOptions() {
	  return $.ajax({
	    method: 'GET',
	    url: '/api/options'
	  });
	};

/***/ },
/* 299 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _filter_actions = __webpack_require__(300);
	
	var _merge = __webpack_require__(205);
	
	var _merge2 = _interopRequireDefault(_merge);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var _defaultState = {
	  brand: null,
	  category: null,
	  rating: null,
	  bounds: null,
	  price: null,
	  center: { lat: 37.75023068394664, lng: -122.44104483349611 }
	};
	
	var filterReducer = function filterReducer() {
	  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _defaultState;
	  var action = arguments[1];
	
	  Object.freeze(state);
	  var middleState = void 0;
	  if (action.filters && action.filters.brand && action.filters.brand.length === 0) middleState = { brand: null };
	  if (action.filters && action.filters.category && action.filters.category.length === 0) middleState = { category: null };
	  switch (action.type) {
	    case _filter_actions.RECEIVE_FILTERS:
	      return (0, _merge2.default)({}, state, action.filters, middleState);
	    case _filter_actions.RESET_FILTERS:
	      return (0, _merge2.default)({}, _defaultState);
	    case _filter_actions.RECEIVE_BOUNDS:
	      return (0, _merge2.default)({}, state, { bounds: action.filters });
	    case _filter_actions.RECEIVE_CENTER:
	      return (0, _merge2.default)({}, state, { center: action.center });
	    default:
	      return state;
	  }
	};
	
	exports.default = filterReducer;

/***/ },
/* 300 */
/***/ function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var RECEIVE_FILTERS = exports.RECEIVE_FILTERS = "RECEIVE_FILTERS";
	var RECEIVE_BOUNDS = exports.RECEIVE_BOUNDS = "RECEIVE_BOUNDS";
	var RECEIVE_CENTER = exports.RECEIVE_CENTER = "RECEIVE_CENTER";
	var RESET_FILTERS = exports.RESET_FILTERS = "RESET_FILTERS";
	
	var receiveFilters = exports.receiveFilters = function receiveFilters(filters) {
	  return {
	    type: RECEIVE_FILTERS,
	    filters: filters
	  };
	};
	
	var resetFilters = exports.resetFilters = function resetFilters(filters) {
	  return {
	    type: RESET_FILTERS
	  };
	};
	
	var receiveBounds = exports.receiveBounds = function receiveBounds(filters) {
	  return {
	    type: RECEIVE_BOUNDS,
	    filters: filters
	  };
	};
	
	var receiveCenter = exports.receiveCenter = function receiveCenter(center) {
	  return {
	    type: RECEIVE_CENTER,
	    center: center
	  };
	};

/***/ },
/* 301 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _current_user_actions = __webpack_require__(302);
	
	var _merge = __webpack_require__(205);
	
	var _merge2 = _interopRequireDefault(_merge);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var _defaultState = null;
	
	var currentUserListingReducer = function currentUserListingReducer() {
	  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _defaultState;
	  var action = arguments[1];
	
	  Object.freeze(state);
	  switch (action.type) {
	    case _current_user_actions.RECEIVE_USER_LISTINGS:
	      return (0, _merge2.default)({}, action.listings);
	    default:
	      return state;
	  }
	};
	
	exports.default = currentUserListingReducer;

/***/ },
/* 302 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.fetchUserProfile = exports.submitReview = exports.toggleListingActivity = exports.fetchUserListings = exports.fetchUserRentals = exports.receiveUserProfile = exports.receiveUserListings = exports.receiveUserRentals = exports.RECEIVE_USER_PROFILE = exports.RECEIVE_USER_RENTALS = exports.RECEIVE_USER_LISTINGS = undefined;
	
	var _user_listing_api_util = __webpack_require__(303);
	
	var UserListingAPIUtil = _interopRequireWildcard(_user_listing_api_util);
	
	var _review_api_util = __webpack_require__(304);
	
	var ReviewAPIUtil = _interopRequireWildcard(_review_api_util);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	var RECEIVE_USER_LISTINGS = exports.RECEIVE_USER_LISTINGS = "RECEIVE_USER_LISTINGS";
	var RECEIVE_USER_RENTALS = exports.RECEIVE_USER_RENTALS = "RECEIVE_USER_RENTALS";
	var RECEIVE_USER_PROFILE = exports.RECEIVE_USER_PROFILE = "RECEIVE_USER_PROFILE";
	
	var receiveUserRentals = exports.receiveUserRentals = function receiveUserRentals(rentals) {
	  return {
	    type: RECEIVE_USER_RENTALS,
	    rentals: rentals
	  };
	};
	
	var receiveUserListings = exports.receiveUserListings = function receiveUserListings(listings) {
	  return {
	    type: RECEIVE_USER_LISTINGS,
	    listings: listings
	  };
	};
	
	var receiveUserProfile = exports.receiveUserProfile = function receiveUserProfile(profile) {
	  return {
	    type: RECEIVE_USER_PROFILE,
	    profile: profile
	  };
	};
	
	var fetchUserRentals = exports.fetchUserRentals = function fetchUserRentals() {
	  return function (dispatch) {
	    return UserListingAPIUtil.fetchUserRentals().then(function (rentals) {
	      return dispatch(receiveUserRentals(rentals));
	    });
	  };
	};
	
	var fetchUserListings = exports.fetchUserListings = function fetchUserListings() {
	  return function (dispatch) {
	    return UserListingAPIUtil.fetchUserListings().then(function (listings) {
	      return dispatch(receiveUserListings(listings));
	    });
	  };
	};
	
	var toggleListingActivity = exports.toggleListingActivity = function toggleListingActivity(id) {
	  return function (dispatch) {
	    return UserListingAPIUtil.toggleListingActivity(id).then(function (listings) {
	      return dispatch(receiveUserListings(listings));
	    });
	  };
	};
	
	var submitReview = exports.submitReview = function submitReview(review) {
	  return function (dispatch) {
	    return ReviewAPIUtil.submitReview(review).then(function () {
	      return dispatch(fetchUserRentals());
	    });
	  };
	};
	
	var fetchUserProfile = exports.fetchUserProfile = function fetchUserProfile() {
	  return function (dispatch) {
	    return UserListingAPIUtil.fetchUserProfile().then(function (profile) {
	      return dispatch(receiveUserProfile(profile));
	    });
	  };
	};

/***/ },
/* 303 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var fetchUserRentals = exports.fetchUserRentals = function fetchUserRentals(data) {
	  return $.ajax({
	    method: 'GET',
	    url: '/api/rentals',
	    data: data
	  });
	};
	
	var fetchUserListings = exports.fetchUserListings = function fetchUserListings(data) {
	  return $.ajax({
	    method: 'GET',
	    url: '/api/listings',
	    data: data
	  });
	};
	
	var toggleListingActivity = exports.toggleListingActivity = function toggleListingActivity(id) {
	  return $.ajax({
	    method: 'PATCH',
	    url: '/api/listings/' + id
	  });
	};
	
	var fetchUserProfile = exports.fetchUserProfile = function fetchUserProfile() {
	  return $.ajax({
	    method: 'GET',
	    url: '/api/users'
	  });
	};

/***/ },
/* 304 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var submitReview = exports.submitReview = function submitReview(review) {
	  return $.ajax({
	    method: 'POST',
	    url: '/api/reviews',
	    data: review
	  });
	};

/***/ },
/* 305 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _current_user_actions = __webpack_require__(302);
	
	var _merge = __webpack_require__(205);
	
	var _merge2 = _interopRequireDefault(_merge);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var _defaultState = null;
	
	var currentUserRentalReducer = function currentUserRentalReducer() {
	  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _defaultState;
	  var action = arguments[1];
	
	  Object.freeze(state);
	  switch (action.type) {
	    case _current_user_actions.RECEIVE_USER_RENTALS:
	      return (0, _merge2.default)({}, action.rentals);
	    default:
	      return state;
	  }
	};
	
	exports.default = currentUserRentalReducer;

/***/ },
/* 306 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _current_user_actions = __webpack_require__(302);
	
	var _merge = __webpack_require__(205);
	
	var _merge2 = _interopRequireDefault(_merge);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var _defaultState = {};
	
	var userProfileReducer = function userProfileReducer() {
	  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _defaultState;
	  var action = arguments[1];
	
	  Object.freeze(state);
	  switch (action.type) {
	    case _current_user_actions.RECEIVE_USER_PROFILE:
	      return (0, _merge2.default)({}, action.profile);
	    default:
	      return state;
	  }
	};
	
	exports.default = userProfileReducer;

/***/ },
/* 307 */
/***/ function(module, exports) {

	'use strict';
	
	exports.__esModule = true;
	function createThunkMiddleware(extraArgument) {
	  return function (_ref) {
	    var dispatch = _ref.dispatch,
	        getState = _ref.getState;
	    return function (next) {
	      return function (action) {
	        if (typeof action === 'function') {
	          return action(dispatch, getState, extraArgument);
	        }
	
	        return next(action);
	      };
	    };
	  };
	}
	
	var thunk = createThunkMiddleware();
	thunk.withExtraArgument = createThunkMiddleware;
	
	exports['default'] = thunk;

/***/ },
/* 308 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactRedux = __webpack_require__(309);
	
	var _reactRouter = __webpack_require__(326);
	
	var _app = __webpack_require__(379);
	
	var _app2 = _interopRequireDefault(_app);
	
	var _session_form_container = __webpack_require__(398);
	
	var _session_form_container2 = _interopRequireDefault(_session_form_container);
	
	var _nav_container = __webpack_require__(384);
	
	var _nav_container2 = _interopRequireDefault(_nav_container);
	
	var _search_result_container = __webpack_require__(400);
	
	var _search_result_container2 = _interopRequireDefault(_search_result_container);
	
	var _greeting_container = __webpack_require__(380);
	
	var _greeting_container2 = _interopRequireDefault(_greeting_container);
	
	var _listing_show_container = __webpack_require__(606);
	
	var _listing_show_container2 = _interopRequireDefault(_listing_show_container);
	
	var _user_listing_container = __webpack_require__(621);
	
	var _user_listing_container2 = _interopRequireDefault(_user_listing_container);
	
	var _user_rental_container = __webpack_require__(623);
	
	var _user_rental_container2 = _interopRequireDefault(_user_rental_container);
	
	var _user_rating_container = __webpack_require__(626);
	
	var _user_rating_container2 = _interopRequireDefault(_user_rating_container);
	
	var _listing_upload_container = __webpack_require__(859);
	
	var _listing_upload_container2 = _interopRequireDefault(_listing_upload_container);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var Root = function Root(_ref) {
	  var store = _ref.store;
	
	  var _ensureLoggedIn = function _ensureLoggedIn(nextState, replace) {
	    var currentUser = store.getState().session.currentUser;
	    if (!currentUser) {
	      replace('login');
	    }
	  };
	
	  var _redirectIfLoggedIn = function _redirectIfLoggedIn(nextState, replace) {
	    var currentUser = store.getState().session.currentUser;
	    if (currentUser) {
	      replace('/search');
	    }
	  };
	
	  var _goToSearchIfLoggedIn = function _goToSearchIfLoggedIn(nextState, replace) {
	    var currentUser = store.getState().session.currentUser;
	    if (currentUser) {
	      replace('search');
	    }
	  };
	
	  return _react2.default.createElement(
	    _reactRedux.Provider,
	    { store: store },
	    _react2.default.createElement(
	      _reactRouter.Router,
	      { history: _reactRouter.hashHistory, onUpdate: function onUpdate() {
	          return window.scrollTo(0, 0);
	        } },
	      _react2.default.createElement(
	        _reactRouter.Route,
	        { path: '/', component: _app2.default },
	        _react2.default.createElement(_reactRouter.IndexRoute, { component: _greeting_container2.default }),
	        _react2.default.createElement(_reactRouter.Route, { path: 'login', component: _session_form_container2.default, onEnter: _redirectIfLoggedIn }),
	        _react2.default.createElement(_reactRouter.Route, { path: 'signup', component: _session_form_container2.default, onEnter: _redirectIfLoggedIn }),
	        _react2.default.createElement(_reactRouter.Route, { path: 'search', component: _search_result_container2.default, onEnter: _ensureLoggedIn }),
	        _react2.default.createElement(_reactRouter.Route, { path: 'listings/:listingId', component: _listing_show_container2.default, onEnter: _ensureLoggedIn }),
	        _react2.default.createElement(_reactRouter.Route, { path: 'listings', component: _user_listing_container2.default, onEnter: _ensureLoggedIn }),
	        _react2.default.createElement(_reactRouter.Route, { path: 'rentals', component: _user_rental_container2.default, onEnter: _ensureLoggedIn }),
	        _react2.default.createElement(_reactRouter.Route, { path: 'profile', component: _user_rating_container2.default, onEnter: _ensureLoggedIn }),
	        _react2.default.createElement(_reactRouter.Route, { path: 'create', component: _listing_upload_container2.default, onEnter: _ensureLoggedIn })
	      )
	    )
	  );
	};
	
	exports.default = Root;

/***/ },
/* 309 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.connect = exports.connectAdvanced = exports.Provider = undefined;
	
	var _Provider = __webpack_require__(310);
	
	var _Provider2 = _interopRequireDefault(_Provider);
	
	var _connectAdvanced = __webpack_require__(314);
	
	var _connectAdvanced2 = _interopRequireDefault(_connectAdvanced);
	
	var _connect = __webpack_require__(317);
	
	var _connect2 = _interopRequireDefault(_connect);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.Provider = _Provider2.default;
	exports.connectAdvanced = _connectAdvanced2.default;
	exports.connect = _connect2.default;

/***/ },
/* 310 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';
	
	exports.__esModule = true;
	exports.default = undefined;
	
	var _react = __webpack_require__(1);
	
	var _Subscription = __webpack_require__(311);
	
	var _Subscription2 = _interopRequireDefault(_Subscription);
	
	var _storeShape = __webpack_require__(312);
	
	var _storeShape2 = _interopRequireDefault(_storeShape);
	
	var _warning = __webpack_require__(313);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var didWarnAboutReceivingStore = false;
	function warnAboutReceivingStore() {
	  if (didWarnAboutReceivingStore) {
	    return;
	  }
	  didWarnAboutReceivingStore = true;
	
	  (0, _warning2.default)('<Provider> does not support changing `store` on the fly. ' + 'It is most likely that you see this error because you updated to ' + 'Redux 2.x and React Redux 2.x which no longer hot reload reducers ' + 'automatically. See https://github.com/reactjs/react-redux/releases/' + 'tag/v2.0.0 for the migration instructions.');
	}
	
	var Provider = function (_Component) {
	  _inherits(Provider, _Component);
	
	  Provider.prototype.getChildContext = function getChildContext() {
	    return { store: this.store, storeSubscription: null };
	  };
	
	  function Provider(props, context) {
	    _classCallCheck(this, Provider);
	
	    var _this = _possibleConstructorReturn(this, _Component.call(this, props, context));
	
	    _this.store = props.store;
	    return _this;
	  }
	
	  Provider.prototype.render = function render() {
	    return _react.Children.only(this.props.children);
	  };
	
	  return Provider;
	}(_react.Component);
	
	exports.default = Provider;
	
	
	if (process.env.NODE_ENV !== 'production') {
	  Provider.prototype.componentWillReceiveProps = function (nextProps) {
	    var store = this.store;
	    var nextStore = nextProps.store;
	
	
	    if (store !== nextStore) {
	      warnAboutReceivingStore();
	    }
	  };
	}
	
	Provider.propTypes = {
	  store: _storeShape2.default.isRequired,
	  children: _react.PropTypes.element.isRequired
	};
	Provider.childContextTypes = {
	  store: _storeShape2.default.isRequired,
	  storeSubscription: _react.PropTypes.instanceOf(_Subscription2.default)
	};
	Provider.displayName = 'Provider';
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 311 */
/***/ function(module, exports) {

	"use strict";
	
	exports.__esModule = true;
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	// encapsulates the subscription logic for connecting a component to the redux store, as
	// well as nesting subscriptions of descendant components, so that we can ensure the
	// ancestor components re-render before descendants
	
	var CLEARED = null;
	var nullListeners = {
	  notify: function notify() {}
	};
	
	function createListenerCollection() {
	  // the current/next pattern is copied from redux's createStore code.
	  // TODO: refactor+expose that code to be reusable here?
	  var current = [];
	  var next = [];
	
	  return {
	    clear: function clear() {
	      next = CLEARED;
	      current = CLEARED;
	    },
	    notify: function notify() {
	      var listeners = current = next;
	      for (var i = 0; i < listeners.length; i++) {
	        listeners[i]();
	      }
	    },
	    subscribe: function subscribe(listener) {
	      var isSubscribed = true;
	      if (next === current) next = current.slice();
	      next.push(listener);
	
	      return function unsubscribe() {
	        if (!isSubscribed || current === CLEARED) return;
	        isSubscribed = false;
	
	        if (next === current) next = current.slice();
	        next.splice(next.indexOf(listener), 1);
	      };
	    }
	  };
	}
	
	var Subscription = function () {
	  function Subscription(store, parentSub) {
	    _classCallCheck(this, Subscription);
	
	    this.store = store;
	    this.parentSub = parentSub;
	    this.unsubscribe = null;
	    this.listeners = nullListeners;
	  }
	
	  Subscription.prototype.addNestedSub = function addNestedSub(listener) {
	    this.trySubscribe();
	    return this.listeners.subscribe(listener);
	  };
	
	  Subscription.prototype.notifyNestedSubs = function notifyNestedSubs() {
	    this.listeners.notify();
	  };
	
	  Subscription.prototype.isSubscribed = function isSubscribed() {
	    return Boolean(this.unsubscribe);
	  };
	
	  Subscription.prototype.trySubscribe = function trySubscribe() {
	    if (!this.unsubscribe) {
	      // this.onStateChange is set by connectAdvanced.initSubscription()
	      this.unsubscribe = this.parentSub ? this.parentSub.addNestedSub(this.onStateChange) : this.store.subscribe(this.onStateChange);
	
	      this.listeners = createListenerCollection();
	    }
	  };
	
	  Subscription.prototype.tryUnsubscribe = function tryUnsubscribe() {
	    if (this.unsubscribe) {
	      this.unsubscribe();
	      this.unsubscribe = null;
	      this.listeners.clear();
	      this.listeners = nullListeners;
	    }
	  };
	
	  return Subscription;
	}();
	
	exports.default = Subscription;

/***/ },
/* 312 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _react = __webpack_require__(1);
	
	exports.default = _react.PropTypes.shape({
	  subscribe: _react.PropTypes.func.isRequired,
	  dispatch: _react.PropTypes.func.isRequired,
	  getState: _react.PropTypes.func.isRequired
	});

/***/ },
/* 313 */
/***/ function(module, exports) {

	'use strict';
	
	exports.__esModule = true;
	exports.default = warning;
	/**
	 * Prints a warning in the console if it exists.
	 *
	 * @param {String} message The warning message.
	 * @returns {void}
	 */
	function warning(message) {
	  /* eslint-disable no-console */
	  if (typeof console !== 'undefined' && typeof console.error === 'function') {
	    console.error(message);
	  }
	  /* eslint-enable no-console */
	  try {
	    // This error was thrown as a convenience so that if you enable
	    // "break on all exceptions" in your console,
	    // it would pause the execution at this line.
	    throw new Error(message);
	    /* eslint-disable no-empty */
	  } catch (e) {}
	  /* eslint-enable no-empty */
	}

/***/ },
/* 314 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	exports.default = connectAdvanced;
	
	var _hoistNonReactStatics = __webpack_require__(315);
	
	var _hoistNonReactStatics2 = _interopRequireDefault(_hoistNonReactStatics);
	
	var _invariant = __webpack_require__(316);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	var _react = __webpack_require__(1);
	
	var _Subscription = __webpack_require__(311);
	
	var _Subscription2 = _interopRequireDefault(_Subscription);
	
	var _storeShape = __webpack_require__(312);
	
	var _storeShape2 = _interopRequireDefault(_storeShape);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	var hotReloadingVersion = 0;
	function connectAdvanced(
	/*
	  selectorFactory is a func that is responsible for returning the selector function used to
	  compute new props from state, props, and dispatch. For example:
	     export default connectAdvanced((dispatch, options) => (state, props) => ({
	      thing: state.things[props.thingId],
	      saveThing: fields => dispatch(actionCreators.saveThing(props.thingId, fields)),
	    }))(YourComponent)
	   Access to dispatch is provided to the factory so selectorFactories can bind actionCreators
	  outside of their selector as an optimization. Options passed to connectAdvanced are passed to
	  the selectorFactory, along with displayName and WrappedComponent, as the second argument.
	   Note that selectorFactory is responsible for all caching/memoization of inbound and outbound
	  props. Do not use connectAdvanced directly without memoizing results between calls to your
	  selector, otherwise the Connect component will re-render on every state or props change.
	*/
	selectorFactory) {
	  var _contextTypes, _childContextTypes;
	
	  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
	      _ref$getDisplayName = _ref.getDisplayName,
	      getDisplayName = _ref$getDisplayName === undefined ? function (name) {
	    return 'ConnectAdvanced(' + name + ')';
	  } : _ref$getDisplayName,
	      _ref$methodName = _ref.methodName,
	      methodName = _ref$methodName === undefined ? 'connectAdvanced' : _ref$methodName,
	      _ref$renderCountProp = _ref.renderCountProp,
	      renderCountProp = _ref$renderCountProp === undefined ? undefined : _ref$renderCountProp,
	      _ref$shouldHandleStat = _ref.shouldHandleStateChanges,
	      shouldHandleStateChanges = _ref$shouldHandleStat === undefined ? true : _ref$shouldHandleStat,
	      _ref$storeKey = _ref.storeKey,
	      storeKey = _ref$storeKey === undefined ? 'store' : _ref$storeKey,
	      _ref$withRef = _ref.withRef,
	      withRef = _ref$withRef === undefined ? false : _ref$withRef,
	      connectOptions = _objectWithoutProperties(_ref, ['getDisplayName', 'methodName', 'renderCountProp', 'shouldHandleStateChanges', 'storeKey', 'withRef']);
	
	  var subscriptionKey = storeKey + 'Subscription';
	  var version = hotReloadingVersion++;
	
	  var contextTypes = (_contextTypes = {}, _contextTypes[storeKey] = _storeShape2.default, _contextTypes[subscriptionKey] = _react.PropTypes.instanceOf(_Subscription2.default), _contextTypes);
	  var childContextTypes = (_childContextTypes = {}, _childContextTypes[subscriptionKey] = _react.PropTypes.instanceOf(_Subscription2.default), _childContextTypes);
	
	  return function wrapWithConnect(WrappedComponent) {
	    (0, _invariant2.default)(typeof WrappedComponent == 'function', 'You must pass a component to the function returned by ' + ('connect. Instead received ' + WrappedComponent));
	
	    var wrappedComponentName = WrappedComponent.displayName || WrappedComponent.name || 'Component';
	
	    var displayName = getDisplayName(wrappedComponentName);
	
	    var selectorFactoryOptions = _extends({}, connectOptions, {
	      getDisplayName: getDisplayName,
	      methodName: methodName,
	      renderCountProp: renderCountProp,
	      shouldHandleStateChanges: shouldHandleStateChanges,
	      storeKey: storeKey,
	      withRef: withRef,
	      displayName: displayName,
	      wrappedComponentName: wrappedComponentName,
	      WrappedComponent: WrappedComponent
	    });
	
	    var Connect = function (_Component) {
	      _inherits(Connect, _Component);
	
	      function Connect(props, context) {
	        _classCallCheck(this, Connect);
	
	        var _this = _possibleConstructorReturn(this, _Component.call(this, props, context));
	
	        _this.version = version;
	        _this.state = {};
	        _this.renderCount = 0;
	        _this.store = _this.props[storeKey] || _this.context[storeKey];
	        _this.parentSub = props[subscriptionKey] || context[subscriptionKey];
	
	        _this.setWrappedInstance = _this.setWrappedInstance.bind(_this);
	
	        (0, _invariant2.default)(_this.store, 'Could not find "' + storeKey + '" in either the context or ' + ('props of "' + displayName + '". ') + 'Either wrap the root component in a <Provider>, ' + ('or explicitly pass "' + storeKey + '" as a prop to "' + displayName + '".'));
	
	        // make sure `getState` is properly bound in order to avoid breaking
	        // custom store implementations that rely on the store's context
	        _this.getState = _this.store.getState.bind(_this.store);
	
	        _this.initSelector();
	        _this.initSubscription();
	        return _this;
	      }
	
	      Connect.prototype.getChildContext = function getChildContext() {
	        var _ref2;
	
	        return _ref2 = {}, _ref2[subscriptionKey] = this.subscription || this.parentSub, _ref2;
	      };
	
	      Connect.prototype.componentDidMount = function componentDidMount() {
	        if (!shouldHandleStateChanges) return;
	
	        // componentWillMount fires during server side rendering, but componentDidMount and
	        // componentWillUnmount do not. Because of this, trySubscribe happens during ...didMount.
	        // Otherwise, unsubscription would never take place during SSR, causing a memory leak.
	        // To handle the case where a child component may have triggered a state change by
	        // dispatching an action in its componentWillMount, we have to re-run the select and maybe
	        // re-render.
	        this.subscription.trySubscribe();
	        this.selector.run(this.props);
	        if (this.selector.shouldComponentUpdate) this.forceUpdate();
	      };
	
	      Connect.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
	        this.selector.run(nextProps);
	      };
	
	      Connect.prototype.shouldComponentUpdate = function shouldComponentUpdate() {
	        return this.selector.shouldComponentUpdate;
	      };
	
	      Connect.prototype.componentWillUnmount = function componentWillUnmount() {
	        if (this.subscription) this.subscription.tryUnsubscribe();
	        // these are just to guard against extra memory leakage if a parent element doesn't
	        // dereference this instance properly, such as an async callback that never finishes
	        this.subscription = null;
	        this.store = null;
	        this.parentSub = null;
	        this.selector.run = function () {};
	      };
	
	      Connect.prototype.getWrappedInstance = function getWrappedInstance() {
	        (0, _invariant2.default)(withRef, 'To access the wrapped instance, you need to specify ' + ('{ withRef: true } in the options argument of the ' + methodName + '() call.'));
	        return this.wrappedInstance;
	      };
	
	      Connect.prototype.setWrappedInstance = function setWrappedInstance(ref) {
	        this.wrappedInstance = ref;
	      };
	
	      Connect.prototype.initSelector = function initSelector() {
	        var dispatch = this.store.dispatch;
	        var getState = this.getState;
	
	        var sourceSelector = selectorFactory(dispatch, selectorFactoryOptions);
	
	        // wrap the selector in an object that tracks its results between runs
	        var selector = this.selector = {
	          shouldComponentUpdate: true,
	          props: sourceSelector(getState(), this.props),
	          run: function runComponentSelector(props) {
	            try {
	              var nextProps = sourceSelector(getState(), props);
	              if (selector.error || nextProps !== selector.props) {
	                selector.shouldComponentUpdate = true;
	                selector.props = nextProps;
	                selector.error = null;
	              }
	            } catch (error) {
	              selector.shouldComponentUpdate = true;
	              selector.error = error;
	            }
	          }
	        };
	      };
	
	      Connect.prototype.initSubscription = function initSubscription() {
	        var _this2 = this;
	
	        if (shouldHandleStateChanges) {
	          (function () {
	            var subscription = _this2.subscription = new _Subscription2.default(_this2.store, _this2.parentSub);
	            var dummyState = {};
	
	            subscription.onStateChange = function onStateChange() {
	              this.selector.run(this.props);
	
	              if (!this.selector.shouldComponentUpdate) {
	                subscription.notifyNestedSubs();
	              } else {
	                this.componentDidUpdate = function componentDidUpdate() {
	                  this.componentDidUpdate = undefined;
	                  subscription.notifyNestedSubs();
	                };
	
	                this.setState(dummyState);
	              }
	            }.bind(_this2);
	          })();
	        }
	      };
	
	      Connect.prototype.isSubscribed = function isSubscribed() {
	        return Boolean(this.subscription) && this.subscription.isSubscribed();
	      };
	
	      Connect.prototype.addExtraProps = function addExtraProps(props) {
	        if (!withRef && !renderCountProp) return props;
	        // make a shallow copy so that fields added don't leak to the original selector.
	        // this is especially important for 'ref' since that's a reference back to the component
	        // instance. a singleton memoized selector would then be holding a reference to the
	        // instance, preventing the instance from being garbage collected, and that would be bad
	        var withExtras = _extends({}, props);
	        if (withRef) withExtras.ref = this.setWrappedInstance;
	        if (renderCountProp) withExtras[renderCountProp] = this.renderCount++;
	        return withExtras;
	      };
	
	      Connect.prototype.render = function render() {
	        var selector = this.selector;
	        selector.shouldComponentUpdate = false;
	
	        if (selector.error) {
	          throw selector.error;
	        } else {
	          return (0, _react.createElement)(WrappedComponent, this.addExtraProps(selector.props));
	        }
	      };
	
	      return Connect;
	    }(_react.Component);
	
	    Connect.WrappedComponent = WrappedComponent;
	    Connect.displayName = displayName;
	    Connect.childContextTypes = childContextTypes;
	    Connect.contextTypes = contextTypes;
	    Connect.propTypes = contextTypes;
	
	    if (process.env.NODE_ENV !== 'production') {
	      Connect.prototype.componentWillUpdate = function componentWillUpdate() {
	        // We are hot reloading!
	        if (this.version !== version) {
	          this.version = version;
	          this.initSelector();
	
	          if (this.subscription) this.subscription.tryUnsubscribe();
	          this.initSubscription();
	          if (shouldHandleStateChanges) this.subscription.trySubscribe();
	        }
	      };
	    }
	
	    return (0, _hoistNonReactStatics2.default)(Connect, WrappedComponent);
	  };
	}
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 315 */
/***/ function(module, exports) {

	/**
	 * Copyright 2015, Yahoo! Inc.
	 * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.
	 */
	'use strict';
	
	var REACT_STATICS = {
	    childContextTypes: true,
	    contextTypes: true,
	    defaultProps: true,
	    displayName: true,
	    getDefaultProps: true,
	    mixins: true,
	    propTypes: true,
	    type: true
	};
	
	var KNOWN_STATICS = {
	    name: true,
	    length: true,
	    prototype: true,
	    caller: true,
	    arguments: true,
	    arity: true
	};
	
	var isGetOwnPropertySymbolsAvailable = typeof Object.getOwnPropertySymbols === 'function';
	
	module.exports = function hoistNonReactStatics(targetComponent, sourceComponent, customStatics) {
	    if (typeof sourceComponent !== 'string') { // don't hoist over string (html) components
	        var keys = Object.getOwnPropertyNames(sourceComponent);
	
	        /* istanbul ignore else */
	        if (isGetOwnPropertySymbolsAvailable) {
	            keys = keys.concat(Object.getOwnPropertySymbols(sourceComponent));
	        }
	
	        for (var i = 0; i < keys.length; ++i) {
	            if (!REACT_STATICS[keys[i]] && !KNOWN_STATICS[keys[i]] && (!customStatics || !customStatics[keys[i]])) {
	                try {
	                    targetComponent[keys[i]] = sourceComponent[keys[i]];
	                } catch (error) {
	
	                }
	            }
	        }
	    }
	
	    return targetComponent;
	};


/***/ },
/* 316 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 */
	
	'use strict';
	
	/**
	 * Use invariant() to assert state which your program assumes to be true.
	 *
	 * Provide sprintf-style format (only %s is supported) and arguments
	 * to provide information about what broke and what you were
	 * expecting.
	 *
	 * The invariant message will be stripped in production, but the invariant
	 * will remain to ensure logic does not differ in production.
	 */
	
	var invariant = function(condition, format, a, b, c, d, e, f) {
	  if (process.env.NODE_ENV !== 'production') {
	    if (format === undefined) {
	      throw new Error('invariant requires an error message argument');
	    }
	  }
	
	  if (!condition) {
	    var error;
	    if (format === undefined) {
	      error = new Error(
	        'Minified exception occurred; use the non-minified dev environment ' +
	        'for the full error message and additional helpful warnings.'
	      );
	    } else {
	      var args = [a, b, c, d, e, f];
	      var argIndex = 0;
	      error = new Error(
	        format.replace(/%s/g, function() { return args[argIndex++]; })
	      );
	      error.name = 'Invariant Violation';
	    }
	
	    error.framesToPop = 1; // we don't care about invariant's own frame
	    throw error;
	  }
	};
	
	module.exports = invariant;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 317 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	exports.createConnect = createConnect;
	
	var _connectAdvanced = __webpack_require__(314);
	
	var _connectAdvanced2 = _interopRequireDefault(_connectAdvanced);
	
	var _shallowEqual = __webpack_require__(318);
	
	var _shallowEqual2 = _interopRequireDefault(_shallowEqual);
	
	var _mapDispatchToProps = __webpack_require__(319);
	
	var _mapDispatchToProps2 = _interopRequireDefault(_mapDispatchToProps);
	
	var _mapStateToProps = __webpack_require__(322);
	
	var _mapStateToProps2 = _interopRequireDefault(_mapStateToProps);
	
	var _mergeProps = __webpack_require__(323);
	
	var _mergeProps2 = _interopRequireDefault(_mergeProps);
	
	var _selectorFactory = __webpack_require__(324);
	
	var _selectorFactory2 = _interopRequireDefault(_selectorFactory);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	/*
	  connect is a facade over connectAdvanced. It turns its args into a compatible
	  selectorFactory, which has the signature:
	
	    (dispatch, options) => (nextState, nextOwnProps) => nextFinalProps
	  
	  connect passes its args to connectAdvanced as options, which will in turn pass them to
	  selectorFactory each time a Connect component instance is instantiated or hot reloaded.
	
	  selectorFactory returns a final props selector from its mapStateToProps,
	  mapStateToPropsFactories, mapDispatchToProps, mapDispatchToPropsFactories, mergeProps,
	  mergePropsFactories, and pure args.
	
	  The resulting final props selector is called by the Connect component instance whenever
	  it receives new props or store state.
	 */
	
	function match(arg, factories, name) {
	  for (var i = factories.length - 1; i >= 0; i--) {
	    var result = factories[i](arg);
	    if (result) return result;
	  }
	
	  return function (dispatch, options) {
	    throw new Error('Invalid value of type ' + typeof arg + ' for ' + name + ' argument when connecting component ' + options.wrappedComponentName + '.');
	  };
	}
	
	function strictEqual(a, b) {
	  return a === b;
	}
	
	// createConnect with default args builds the 'official' connect behavior. Calling it with
	// different options opens up some testing and extensibility scenarios
	function createConnect() {
	  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
	      _ref$connectHOC = _ref.connectHOC,
	      connectHOC = _ref$connectHOC === undefined ? _connectAdvanced2.default : _ref$connectHOC,
	      _ref$mapStateToPropsF = _ref.mapStateToPropsFactories,
	      mapStateToPropsFactories = _ref$mapStateToPropsF === undefined ? _mapStateToProps2.default : _ref$mapStateToPropsF,
	      _ref$mapDispatchToPro = _ref.mapDispatchToPropsFactories,
	      mapDispatchToPropsFactories = _ref$mapDispatchToPro === undefined ? _mapDispatchToProps2.default : _ref$mapDispatchToPro,
	      _ref$mergePropsFactor = _ref.mergePropsFactories,
	      mergePropsFactories = _ref$mergePropsFactor === undefined ? _mergeProps2.default : _ref$mergePropsFactor,
	      _ref$selectorFactory = _ref.selectorFactory,
	      selectorFactory = _ref$selectorFactory === undefined ? _selectorFactory2.default : _ref$selectorFactory;
	
	  return function connect(mapStateToProps, mapDispatchToProps, mergeProps) {
	    var _ref2 = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {},
	        _ref2$pure = _ref2.pure,
	        pure = _ref2$pure === undefined ? true : _ref2$pure,
	        _ref2$areStatesEqual = _ref2.areStatesEqual,
	        areStatesEqual = _ref2$areStatesEqual === undefined ? strictEqual : _ref2$areStatesEqual,
	        _ref2$areOwnPropsEqua = _ref2.areOwnPropsEqual,
	        areOwnPropsEqual = _ref2$areOwnPropsEqua === undefined ? _shallowEqual2.default : _ref2$areOwnPropsEqua,
	        _ref2$areStatePropsEq = _ref2.areStatePropsEqual,
	        areStatePropsEqual = _ref2$areStatePropsEq === undefined ? _shallowEqual2.default : _ref2$areStatePropsEq,
	        _ref2$areMergedPropsE = _ref2.areMergedPropsEqual,
	        areMergedPropsEqual = _ref2$areMergedPropsE === undefined ? _shallowEqual2.default : _ref2$areMergedPropsE,
	        extraOptions = _objectWithoutProperties(_ref2, ['pure', 'areStatesEqual', 'areOwnPropsEqual', 'areStatePropsEqual', 'areMergedPropsEqual']);
	
	    var initMapStateToProps = match(mapStateToProps, mapStateToPropsFactories, 'mapStateToProps');
	    var initMapDispatchToProps = match(mapDispatchToProps, mapDispatchToPropsFactories, 'mapDispatchToProps');
	    var initMergeProps = match(mergeProps, mergePropsFactories, 'mergeProps');
	
	    return connectHOC(selectorFactory, _extends({
	      // used in error messages
	      methodName: 'connect',
	
	      // used to compute Connect's displayName from the wrapped component's displayName.
	      getDisplayName: function getDisplayName(name) {
	        return 'Connect(' + name + ')';
	      },
	
	      // if mapStateToProps is falsy, the Connect component doesn't subscribe to store state changes
	      shouldHandleStateChanges: Boolean(mapStateToProps),
	
	      // passed through to selectorFactory
	      initMapStateToProps: initMapStateToProps,
	      initMapDispatchToProps: initMapDispatchToProps,
	      initMergeProps: initMergeProps,
	      pure: pure,
	      areStatesEqual: areStatesEqual,
	      areOwnPropsEqual: areOwnPropsEqual,
	      areStatePropsEqual: areStatePropsEqual,
	      areMergedPropsEqual: areMergedPropsEqual
	
	    }, extraOptions));
	  };
	}
	
	exports.default = createConnect();

/***/ },
/* 318 */
/***/ function(module, exports) {

	"use strict";
	
	exports.__esModule = true;
	exports.default = shallowEqual;
	var hasOwn = Object.prototype.hasOwnProperty;
	
	function shallowEqual(a, b) {
	  if (a === b) return true;
	
	  var countA = 0;
	  var countB = 0;
	
	  for (var key in a) {
	    if (hasOwn.call(a, key) && a[key] !== b[key]) return false;
	    countA++;
	  }
	
	  for (var _key in b) {
	    if (hasOwn.call(b, _key)) countB++;
	  }
	
	  return countA === countB;
	}

/***/ },
/* 319 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.whenMapDispatchToPropsIsFunction = whenMapDispatchToPropsIsFunction;
	exports.whenMapDispatchToPropsIsMissing = whenMapDispatchToPropsIsMissing;
	exports.whenMapDispatchToPropsIsObject = whenMapDispatchToPropsIsObject;
	
	var _redux = __webpack_require__(179);
	
	var _wrapMapToProps = __webpack_require__(320);
	
	function whenMapDispatchToPropsIsFunction(mapDispatchToProps) {
	  return typeof mapDispatchToProps === 'function' ? (0, _wrapMapToProps.wrapMapToPropsFunc)(mapDispatchToProps, 'mapDispatchToProps') : undefined;
	}
	
	function whenMapDispatchToPropsIsMissing(mapDispatchToProps) {
	  return !mapDispatchToProps ? (0, _wrapMapToProps.wrapMapToPropsConstant)(function (dispatch) {
	    return { dispatch: dispatch };
	  }) : undefined;
	}
	
	function whenMapDispatchToPropsIsObject(mapDispatchToProps) {
	  return mapDispatchToProps && typeof mapDispatchToProps === 'object' ? (0, _wrapMapToProps.wrapMapToPropsConstant)(function (dispatch) {
	    return (0, _redux.bindActionCreators)(mapDispatchToProps, dispatch);
	  }) : undefined;
	}
	
	exports.default = [whenMapDispatchToPropsIsFunction, whenMapDispatchToPropsIsMissing, whenMapDispatchToPropsIsObject];

/***/ },
/* 320 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';
	
	exports.__esModule = true;
	exports.wrapMapToPropsConstant = wrapMapToPropsConstant;
	exports.getDependsOnOwnProps = getDependsOnOwnProps;
	exports.wrapMapToPropsFunc = wrapMapToPropsFunc;
	
	var _verifyPlainObject = __webpack_require__(321);
	
	var _verifyPlainObject2 = _interopRequireDefault(_verifyPlainObject);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function wrapMapToPropsConstant(getConstant) {
	  return function initConstantSelector(dispatch, options) {
	    var constant = getConstant(dispatch, options);
	
	    function constantSelector() {
	      return constant;
	    }
	    constantSelector.dependsOnOwnProps = false;
	    return constantSelector;
	  };
	}
	
	// dependsOnOwnProps is used by createMapToPropsProxy to determine whether to pass props as args
	// to the mapToProps function being wrapped. It is also used by makePurePropsSelector to determine
	// whether mapToProps needs to be invoked when props have changed.
	// 
	// A length of one signals that mapToProps does not depend on props from the parent component.
	// A length of zero is assumed to mean mapToProps is getting args via arguments or ...args and
	// therefore not reporting its length accurately..
	function getDependsOnOwnProps(mapToProps) {
	  return mapToProps.dependsOnOwnProps !== null && mapToProps.dependsOnOwnProps !== undefined ? Boolean(mapToProps.dependsOnOwnProps) : mapToProps.length !== 1;
	}
	
	// Used by whenMapStateToPropsIsFunction and whenMapDispatchToPropsIsFunction,
	// this function wraps mapToProps in a proxy function which does several things:
	// 
	//  * Detects whether the mapToProps function being called depends on props, which
	//    is used by selectorFactory to decide if it should reinvoke on props changes.
	//    
	//  * On first call, handles mapToProps if returns another function, and treats that
	//    new function as the true mapToProps for subsequent calls.
	//    
	//  * On first call, verifies the first result is a plain object, in order to warn
	//    the developer that their mapToProps function is not returning a valid result.
	//    
	function wrapMapToPropsFunc(mapToProps, methodName) {
	  return function initProxySelector(dispatch, _ref) {
	    var displayName = _ref.displayName;
	
	    var proxy = function mapToPropsProxy(stateOrDispatch, ownProps) {
	      return proxy.dependsOnOwnProps ? proxy.mapToProps(stateOrDispatch, ownProps) : proxy.mapToProps(stateOrDispatch);
	    };
	
	    proxy.dependsOnOwnProps = getDependsOnOwnProps(mapToProps);
	
	    proxy.mapToProps = function detectFactoryAndVerify(stateOrDispatch, ownProps) {
	      proxy.mapToProps = mapToProps;
	      var props = proxy(stateOrDispatch, ownProps);
	
	      if (typeof props === 'function') {
	        proxy.mapToProps = props;
	        proxy.dependsOnOwnProps = getDependsOnOwnProps(props);
	        props = proxy(stateOrDispatch, ownProps);
	      }
	
	      if (process.env.NODE_ENV !== 'production') (0, _verifyPlainObject2.default)(props, displayName, methodName);
	
	      return props;
	    };
	
	    return proxy;
	  };
	}
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 321 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.default = verifyPlainObject;
	
	var _isPlainObject = __webpack_require__(181);
	
	var _isPlainObject2 = _interopRequireDefault(_isPlainObject);
	
	var _warning = __webpack_require__(313);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function verifyPlainObject(value, displayName, methodName) {
	  if (!(0, _isPlainObject2.default)(value)) {
	    (0, _warning2.default)(methodName + '() in ' + displayName + ' must return a plain object. Instead received ' + value + '.');
	  }
	}

/***/ },
/* 322 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.whenMapStateToPropsIsFunction = whenMapStateToPropsIsFunction;
	exports.whenMapStateToPropsIsMissing = whenMapStateToPropsIsMissing;
	
	var _wrapMapToProps = __webpack_require__(320);
	
	function whenMapStateToPropsIsFunction(mapStateToProps) {
	  return typeof mapStateToProps === 'function' ? (0, _wrapMapToProps.wrapMapToPropsFunc)(mapStateToProps, 'mapStateToProps') : undefined;
	}
	
	function whenMapStateToPropsIsMissing(mapStateToProps) {
	  return !mapStateToProps ? (0, _wrapMapToProps.wrapMapToPropsConstant)(function () {
	    return {};
	  }) : undefined;
	}
	
	exports.default = [whenMapStateToPropsIsFunction, whenMapStateToPropsIsMissing];

/***/ },
/* 323 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	exports.defaultMergeProps = defaultMergeProps;
	exports.wrapMergePropsFunc = wrapMergePropsFunc;
	exports.whenMergePropsIsFunction = whenMergePropsIsFunction;
	exports.whenMergePropsIsOmitted = whenMergePropsIsOmitted;
	
	var _verifyPlainObject = __webpack_require__(321);
	
	var _verifyPlainObject2 = _interopRequireDefault(_verifyPlainObject);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function defaultMergeProps(stateProps, dispatchProps, ownProps) {
	  return _extends({}, ownProps, stateProps, dispatchProps);
	}
	
	function wrapMergePropsFunc(mergeProps) {
	  return function initMergePropsProxy(dispatch, _ref) {
	    var displayName = _ref.displayName,
	        pure = _ref.pure,
	        areMergedPropsEqual = _ref.areMergedPropsEqual;
	
	    var hasRunOnce = false;
	    var mergedProps = void 0;
	
	    return function mergePropsProxy(stateProps, dispatchProps, ownProps) {
	      var nextMergedProps = mergeProps(stateProps, dispatchProps, ownProps);
	
	      if (hasRunOnce) {
	        if (!pure || !areMergedPropsEqual(nextMergedProps, mergedProps)) mergedProps = nextMergedProps;
	      } else {
	        hasRunOnce = true;
	        mergedProps = nextMergedProps;
	
	        if (process.env.NODE_ENV !== 'production') (0, _verifyPlainObject2.default)(mergedProps, displayName, 'mergeProps');
	      }
	
	      return mergedProps;
	    };
	  };
	}
	
	function whenMergePropsIsFunction(mergeProps) {
	  return typeof mergeProps === 'function' ? wrapMergePropsFunc(mergeProps) : undefined;
	}
	
	function whenMergePropsIsOmitted(mergeProps) {
	  return !mergeProps ? function () {
	    return defaultMergeProps;
	  } : undefined;
	}
	
	exports.default = [whenMergePropsIsFunction, whenMergePropsIsOmitted];
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 324 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';
	
	exports.__esModule = true;
	exports.impureFinalPropsSelectorFactory = impureFinalPropsSelectorFactory;
	exports.pureFinalPropsSelectorFactory = pureFinalPropsSelectorFactory;
	exports.default = finalPropsSelectorFactory;
	
	var _verifySubselectors = __webpack_require__(325);
	
	var _verifySubselectors2 = _interopRequireDefault(_verifySubselectors);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function impureFinalPropsSelectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch) {
	  return function impureFinalPropsSelector(state, ownProps) {
	    return mergeProps(mapStateToProps(state, ownProps), mapDispatchToProps(dispatch, ownProps), ownProps);
	  };
	}
	
	function pureFinalPropsSelectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch, _ref) {
	  var areStatesEqual = _ref.areStatesEqual,
	      areOwnPropsEqual = _ref.areOwnPropsEqual,
	      areStatePropsEqual = _ref.areStatePropsEqual;
	
	  var hasRunAtLeastOnce = false;
	  var state = void 0;
	  var ownProps = void 0;
	  var stateProps = void 0;
	  var dispatchProps = void 0;
	  var mergedProps = void 0;
	
	  function handleFirstCall(firstState, firstOwnProps) {
	    state = firstState;
	    ownProps = firstOwnProps;
	    stateProps = mapStateToProps(state, ownProps);
	    dispatchProps = mapDispatchToProps(dispatch, ownProps);
	    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
	    hasRunAtLeastOnce = true;
	    return mergedProps;
	  }
	
	  function handleNewPropsAndNewState() {
	    stateProps = mapStateToProps(state, ownProps);
	
	    if (mapDispatchToProps.dependsOnOwnProps) dispatchProps = mapDispatchToProps(dispatch, ownProps);
	
	    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
	    return mergedProps;
	  }
	
	  function handleNewProps() {
	    if (mapStateToProps.dependsOnOwnProps) stateProps = mapStateToProps(state, ownProps);
	
	    if (mapDispatchToProps.dependsOnOwnProps) dispatchProps = mapDispatchToProps(dispatch, ownProps);
	
	    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
	    return mergedProps;
	  }
	
	  function handleNewState() {
	    var nextStateProps = mapStateToProps(state, ownProps);
	    var statePropsChanged = !areStatePropsEqual(nextStateProps, stateProps);
	    stateProps = nextStateProps;
	
	    if (statePropsChanged) mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
	
	    return mergedProps;
	  }
	
	  function handleSubsequentCalls(nextState, nextOwnProps) {
	    var propsChanged = !areOwnPropsEqual(nextOwnProps, ownProps);
	    var stateChanged = !areStatesEqual(nextState, state);
	    state = nextState;
	    ownProps = nextOwnProps;
	
	    if (propsChanged && stateChanged) return handleNewPropsAndNewState();
	    if (propsChanged) return handleNewProps();
	    if (stateChanged) return handleNewState();
	    return mergedProps;
	  }
	
	  return function pureFinalPropsSelector(nextState, nextOwnProps) {
	    return hasRunAtLeastOnce ? handleSubsequentCalls(nextState, nextOwnProps) : handleFirstCall(nextState, nextOwnProps);
	  };
	}
	
	// TODO: Add more comments
	
	// If pure is true, the selector returned by selectorFactory will memoize its results,
	// allowing connectAdvanced's shouldComponentUpdate to return false if final
	// props have not changed. If false, the selector will always return a new
	// object and shouldComponentUpdate will always return true.
	
	function finalPropsSelectorFactory(dispatch, _ref2) {
	  var initMapStateToProps = _ref2.initMapStateToProps,
	      initMapDispatchToProps = _ref2.initMapDispatchToProps,
	      initMergeProps = _ref2.initMergeProps,
	      options = _objectWithoutProperties(_ref2, ['initMapStateToProps', 'initMapDispatchToProps', 'initMergeProps']);
	
	  var mapStateToProps = initMapStateToProps(dispatch, options);
	  var mapDispatchToProps = initMapDispatchToProps(dispatch, options);
	  var mergeProps = initMergeProps(dispatch, options);
	
	  if (process.env.NODE_ENV !== 'production') {
	    (0, _verifySubselectors2.default)(mapStateToProps, mapDispatchToProps, mergeProps, options.displayName);
	  }
	
	  var selectorFactory = options.pure ? pureFinalPropsSelectorFactory : impureFinalPropsSelectorFactory;
	
	  return selectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch, options);
	}
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 325 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.default = verifySubselectors;
	
	var _warning = __webpack_require__(313);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function verify(selector, methodName, displayName) {
	  if (!selector) {
	    throw new Error('Unexpected value for ' + methodName + ' in ' + displayName + '.');
	  } else if (methodName === 'mapStateToProps' || methodName === 'mapDispatchToProps') {
	    if (!selector.hasOwnProperty('dependsOnOwnProps')) {
	      (0, _warning2.default)('The selector for ' + methodName + ' of ' + displayName + ' did not specify a value for dependsOnOwnProps.');
	    }
	  }
	}
	
	function verifySubselectors(mapStateToProps, mapDispatchToProps, mergeProps, displayName) {
	  verify(mapStateToProps, 'mapStateToProps', displayName);
	  verify(mapDispatchToProps, 'mapDispatchToProps', displayName);
	  verify(mergeProps, 'mergeProps', displayName);
	}

/***/ },
/* 326 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.createMemoryHistory = exports.hashHistory = exports.browserHistory = exports.applyRouterMiddleware = exports.formatPattern = exports.useRouterHistory = exports.match = exports.routerShape = exports.locationShape = exports.RouterContext = exports.createRoutes = exports.Route = exports.Redirect = exports.IndexRoute = exports.IndexRedirect = exports.withRouter = exports.IndexLink = exports.Link = exports.Router = undefined;
	
	var _RouteUtils = __webpack_require__(327);
	
	Object.defineProperty(exports, 'createRoutes', {
	  enumerable: true,
	  get: function get() {
	    return _RouteUtils.createRoutes;
	  }
	});
	
	var _PropTypes = __webpack_require__(328);
	
	Object.defineProperty(exports, 'locationShape', {
	  enumerable: true,
	  get: function get() {
	    return _PropTypes.locationShape;
	  }
	});
	Object.defineProperty(exports, 'routerShape', {
	  enumerable: true,
	  get: function get() {
	    return _PropTypes.routerShape;
	  }
	});
	
	var _PatternUtils = __webpack_require__(329);
	
	Object.defineProperty(exports, 'formatPattern', {
	  enumerable: true,
	  get: function get() {
	    return _PatternUtils.formatPattern;
	  }
	});
	
	var _Router2 = __webpack_require__(330);
	
	var _Router3 = _interopRequireDefault(_Router2);
	
	var _Link2 = __webpack_require__(346);
	
	var _Link3 = _interopRequireDefault(_Link2);
	
	var _IndexLink2 = __webpack_require__(347);
	
	var _IndexLink3 = _interopRequireDefault(_IndexLink2);
	
	var _withRouter2 = __webpack_require__(348);
	
	var _withRouter3 = _interopRequireDefault(_withRouter2);
	
	var _IndexRedirect2 = __webpack_require__(349);
	
	var _IndexRedirect3 = _interopRequireDefault(_IndexRedirect2);
	
	var _IndexRoute2 = __webpack_require__(351);
	
	var _IndexRoute3 = _interopRequireDefault(_IndexRoute2);
	
	var _Redirect2 = __webpack_require__(350);
	
	var _Redirect3 = _interopRequireDefault(_Redirect2);
	
	var _Route2 = __webpack_require__(352);
	
	var _Route3 = _interopRequireDefault(_Route2);
	
	var _RouterContext2 = __webpack_require__(342);
	
	var _RouterContext3 = _interopRequireDefault(_RouterContext2);
	
	var _match2 = __webpack_require__(353);
	
	var _match3 = _interopRequireDefault(_match2);
	
	var _useRouterHistory2 = __webpack_require__(366);
	
	var _useRouterHistory3 = _interopRequireDefault(_useRouterHistory2);
	
	var _applyRouterMiddleware2 = __webpack_require__(367);
	
	var _applyRouterMiddleware3 = _interopRequireDefault(_applyRouterMiddleware2);
	
	var _browserHistory2 = __webpack_require__(368);
	
	var _browserHistory3 = _interopRequireDefault(_browserHistory2);
	
	var _hashHistory2 = __webpack_require__(376);
	
	var _hashHistory3 = _interopRequireDefault(_hashHistory2);
	
	var _createMemoryHistory2 = __webpack_require__(355);
	
	var _createMemoryHistory3 = _interopRequireDefault(_createMemoryHistory2);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.Router = _Router3.default; /* components */
	
	exports.Link = _Link3.default;
	exports.IndexLink = _IndexLink3.default;
	exports.withRouter = _withRouter3.default;
	
	/* components (configuration) */
	
	exports.IndexRedirect = _IndexRedirect3.default;
	exports.IndexRoute = _IndexRoute3.default;
	exports.Redirect = _Redirect3.default;
	exports.Route = _Route3.default;
	
	/* utils */
	
	exports.RouterContext = _RouterContext3.default;
	exports.match = _match3.default;
	exports.useRouterHistory = _useRouterHistory3.default;
	exports.applyRouterMiddleware = _applyRouterMiddleware3.default;
	
	/* histories */
	
	exports.browserHistory = _browserHistory3.default;
	exports.hashHistory = _hashHistory3.default;
	exports.createMemoryHistory = _createMemoryHistory3.default;

/***/ },
/* 327 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	exports.isReactChildren = isReactChildren;
	exports.createRouteFromReactElement = createRouteFromReactElement;
	exports.createRoutesFromReactChildren = createRoutesFromReactChildren;
	exports.createRoutes = createRoutes;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function isValidChild(object) {
	  return object == null || _react2.default.isValidElement(object);
	}
	
	function isReactChildren(object) {
	  return isValidChild(object) || Array.isArray(object) && object.every(isValidChild);
	}
	
	function createRoute(defaultProps, props) {
	  return _extends({}, defaultProps, props);
	}
	
	function createRouteFromReactElement(element) {
	  var type = element.type;
	  var route = createRoute(type.defaultProps, element.props);
	
	  if (route.children) {
	    var childRoutes = createRoutesFromReactChildren(route.children, route);
	
	    if (childRoutes.length) route.childRoutes = childRoutes;
	
	    delete route.children;
	  }
	
	  return route;
	}
	
	/**
	 * Creates and returns a routes object from the given ReactChildren. JSX
	 * provides a convenient way to visualize how routes in the hierarchy are
	 * nested.
	 *
	 *   import { Route, createRoutesFromReactChildren } from 'react-router'
	 *
	 *   const routes = createRoutesFromReactChildren(
	 *     <Route component={App}>
	 *       <Route path="home" component={Dashboard}/>
	 *       <Route path="news" component={NewsFeed}/>
	 *     </Route>
	 *   )
	 *
	 * Note: This method is automatically used when you provide <Route> children
	 * to a <Router> component.
	 */
	function createRoutesFromReactChildren(children, parentRoute) {
	  var routes = [];
	
	  _react2.default.Children.forEach(children, function (element) {
	    if (_react2.default.isValidElement(element)) {
	      // Component classes may have a static create* method.
	      if (element.type.createRouteFromReactElement) {
	        var route = element.type.createRouteFromReactElement(element, parentRoute);
	
	        if (route) routes.push(route);
	      } else {
	        routes.push(createRouteFromReactElement(element));
	      }
	    }
	  });
	
	  return routes;
	}
	
	/**
	 * Creates and returns an array of routes from the given object which
	 * may be a JSX route, a plain object route, or an array of either.
	 */
	function createRoutes(routes) {
	  if (isReactChildren(routes)) {
	    routes = createRoutesFromReactChildren(routes);
	  } else if (routes && !Array.isArray(routes)) {
	    routes = [routes];
	  }
	
	  return routes;
	}

/***/ },
/* 328 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.locationShape = exports.routerShape = undefined;
	
	var _react = __webpack_require__(1);
	
	var func = _react.PropTypes.func,
	    object = _react.PropTypes.object,
	    shape = _react.PropTypes.shape,
	    string = _react.PropTypes.string;
	var routerShape = exports.routerShape = shape({
	  push: func.isRequired,
	  replace: func.isRequired,
	  go: func.isRequired,
	  goBack: func.isRequired,
	  goForward: func.isRequired,
	  setRouteLeaveHook: func.isRequired,
	  isActive: func.isRequired
	});
	
	var locationShape = exports.locationShape = shape({
	  pathname: string.isRequired,
	  search: string.isRequired,
	  state: object,
	  action: string.isRequired,
	  key: string
	});

/***/ },
/* 329 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';
	
	exports.__esModule = true;
	exports.compilePattern = compilePattern;
	exports.matchPattern = matchPattern;
	exports.getParamNames = getParamNames;
	exports.getParams = getParams;
	exports.formatPattern = formatPattern;
	
	var _invariant = __webpack_require__(316);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function escapeRegExp(string) {
	  return string.replace(/[.*+?^${}()|[\]\\]/g, '\\$&');
	}
	
	function _compilePattern(pattern) {
	  var regexpSource = '';
	  var paramNames = [];
	  var tokens = [];
	
	  var match = void 0,
	      lastIndex = 0,
	      matcher = /:([a-zA-Z_$][a-zA-Z0-9_$]*)|\*\*|\*|\(|\)|\\\(|\\\)/g;
	  while (match = matcher.exec(pattern)) {
	    if (match.index !== lastIndex) {
	      tokens.push(pattern.slice(lastIndex, match.index));
	      regexpSource += escapeRegExp(pattern.slice(lastIndex, match.index));
	    }
	
	    if (match[1]) {
	      regexpSource += '([^/]+)';
	      paramNames.push(match[1]);
	    } else if (match[0] === '**') {
	      regexpSource += '(.*)';
	      paramNames.push('splat');
	    } else if (match[0] === '*') {
	      regexpSource += '(.*?)';
	      paramNames.push('splat');
	    } else if (match[0] === '(') {
	      regexpSource += '(?:';
	    } else if (match[0] === ')') {
	      regexpSource += ')?';
	    } else if (match[0] === '\\(') {
	      regexpSource += '\\(';
	    } else if (match[0] === '\\)') {
	      regexpSource += '\\)';
	    }
	
	    tokens.push(match[0]);
	
	    lastIndex = matcher.lastIndex;
	  }
	
	  if (lastIndex !== pattern.length) {
	    tokens.push(pattern.slice(lastIndex, pattern.length));
	    regexpSource += escapeRegExp(pattern.slice(lastIndex, pattern.length));
	  }
	
	  return {
	    pattern: pattern,
	    regexpSource: regexpSource,
	    paramNames: paramNames,
	    tokens: tokens
	  };
	}
	
	var CompiledPatternsCache = Object.create(null);
	
	function compilePattern(pattern) {
	  if (!CompiledPatternsCache[pattern]) CompiledPatternsCache[pattern] = _compilePattern(pattern);
	
	  return CompiledPatternsCache[pattern];
	}
	
	/**
	 * Attempts to match a pattern on the given pathname. Patterns may use
	 * the following special characters:
	 *
	 * - :paramName     Matches a URL segment up to the next /, ?, or #. The
	 *                  captured string is considered a "param"
	 * - ()             Wraps a segment of the URL that is optional
	 * - *              Consumes (non-greedy) all characters up to the next
	 *                  character in the pattern, or to the end of the URL if
	 *                  there is none
	 * - **             Consumes (greedy) all characters up to the next character
	 *                  in the pattern, or to the end of the URL if there is none
	 *
	 *  The function calls callback(error, matched) when finished.
	 * The return value is an object with the following properties:
	 *
	 * - remainingPathname
	 * - paramNames
	 * - paramValues
	 */
	function matchPattern(pattern, pathname) {
	  // Ensure pattern starts with leading slash for consistency with pathname.
	  if (pattern.charAt(0) !== '/') {
	    pattern = '/' + pattern;
	  }
	
	  var _compilePattern2 = compilePattern(pattern),
	      regexpSource = _compilePattern2.regexpSource,
	      paramNames = _compilePattern2.paramNames,
	      tokens = _compilePattern2.tokens;
	
	  if (pattern.charAt(pattern.length - 1) !== '/') {
	    regexpSource += '/?'; // Allow optional path separator at end.
	  }
	
	  // Special-case patterns like '*' for catch-all routes.
	  if (tokens[tokens.length - 1] === '*') {
	    regexpSource += '$';
	  }
	
	  var match = pathname.match(new RegExp('^' + regexpSource, 'i'));
	  if (match == null) {
	    return null;
	  }
	
	  var matchedPath = match[0];
	  var remainingPathname = pathname.substr(matchedPath.length);
	
	  if (remainingPathname) {
	    // Require that the match ends at a path separator, if we didn't match
	    // the full path, so any remaining pathname is a new path segment.
	    if (matchedPath.charAt(matchedPath.length - 1) !== '/') {
	      return null;
	    }
	
	    // If there is a remaining pathname, treat the path separator as part of
	    // the remaining pathname for properly continuing the match.
	    remainingPathname = '/' + remainingPathname;
	  }
	
	  return {
	    remainingPathname: remainingPathname,
	    paramNames: paramNames,
	    paramValues: match.slice(1).map(function (v) {
	      return v && decodeURIComponent(v);
	    })
	  };
	}
	
	function getParamNames(pattern) {
	  return compilePattern(pattern).paramNames;
	}
	
	function getParams(pattern, pathname) {
	  var match = matchPattern(pattern, pathname);
	  if (!match) {
	    return null;
	  }
	
	  var paramNames = match.paramNames,
	      paramValues = match.paramValues;
	
	  var params = {};
	
	  paramNames.forEach(function (paramName, index) {
	    params[paramName] = paramValues[index];
	  });
	
	  return params;
	}
	
	/**
	 * Returns a version of the given pattern with params interpolated. Throws
	 * if there is a dynamic segment of the pattern for which there is no param.
	 */
	function formatPattern(pattern, params) {
	  params = params || {};
	
	  var _compilePattern3 = compilePattern(pattern),
	      tokens = _compilePattern3.tokens;
	
	  var parenCount = 0,
	      pathname = '',
	      splatIndex = 0,
	      parenHistory = [];
	
	  var token = void 0,
	      paramName = void 0,
	      paramValue = void 0;
	  for (var i = 0, len = tokens.length; i < len; ++i) {
	    token = tokens[i];
	
	    if (token === '*' || token === '**') {
	      paramValue = Array.isArray(params.splat) ? params.splat[splatIndex++] : params.splat;
	
	      !(paramValue != null || parenCount > 0) ? process.env.NODE_ENV !== 'production' ? (0, _invariant2.default)(false, 'Missing splat #%s for path "%s"', splatIndex, pattern) : (0, _invariant2.default)(false) : void 0;
	
	      if (paramValue != null) pathname += encodeURI(paramValue);
	    } else if (token === '(') {
	      parenHistory[parenCount] = '';
	      parenCount += 1;
	    } else if (token === ')') {
	      var parenText = parenHistory.pop();
	      parenCount -= 1;
	
	      if (parenCount) parenHistory[parenCount - 1] += parenText;else pathname += parenText;
	    } else if (token === '\\(') {
	      pathname += '(';
	    } else if (token === '\\)') {
	      pathname += ')';
	    } else if (token.charAt(0) === ':') {
	      paramName = token.substring(1);
	      paramValue = params[paramName];
	
	      !(paramValue != null || parenCount > 0) ? process.env.NODE_ENV !== 'production' ? (0, _invariant2.default)(false, 'Missing "%s" parameter for path "%s"', paramName, pattern) : (0, _invariant2.default)(false) : void 0;
	
	      if (paramValue == null) {
	        if (parenCount) {
	          parenHistory[parenCount - 1] = '';
	
	          var curTokenIdx = tokens.indexOf(token);
	          var tokensSubset = tokens.slice(curTokenIdx, tokens.length);
	          var nextParenIdx = -1;
	
	          for (var _i = 0; _i < tokensSubset.length; _i++) {
	            if (tokensSubset[_i] == ')') {
	              nextParenIdx = _i;
	              break;
	            }
	          }
	
	          !(nextParenIdx > 0) ? process.env.NODE_ENV !== 'production' ? (0, _invariant2.default)(false, 'Path "%s" is missing end paren at segment "%s"', pattern, tokensSubset.join('')) : (0, _invariant2.default)(false) : void 0;
	
	          // jump to ending paren
	          i = curTokenIdx + nextParenIdx - 1;
	        }
	      } else if (parenCount) parenHistory[parenCount - 1] += encodeURIComponent(paramValue);else pathname += encodeURIComponent(paramValue);
	    } else {
	      if (parenCount) parenHistory[parenCount - 1] += token;else pathname += token;
	    }
	  }
	
	  !(parenCount <= 0) ? process.env.NODE_ENV !== 'production' ? (0, _invariant2.default)(false, 'Path "%s" is missing end paren', pattern) : (0, _invariant2.default)(false) : void 0;
	
	  return pathname.replace(/\/+/g, '/');
	}
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 330 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _invariant = __webpack_require__(316);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _createTransitionManager2 = __webpack_require__(331);
	
	var _createTransitionManager3 = _interopRequireDefault(_createTransitionManager2);
	
	var _InternalPropTypes = __webpack_require__(341);
	
	var _RouterContext = __webpack_require__(342);
	
	var _RouterContext2 = _interopRequireDefault(_RouterContext);
	
	var _RouteUtils = __webpack_require__(327);
	
	var _RouterUtils = __webpack_require__(345);
	
	var _routerWarning = __webpack_require__(332);
	
	var _routerWarning2 = _interopRequireDefault(_routerWarning);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	var _React$PropTypes = _react2.default.PropTypes,
	    func = _React$PropTypes.func,
	    object = _React$PropTypes.object;
	
	/**
	 * A <Router> is a high-level API for automatically setting up
	 * a router that renders a <RouterContext> with all the props
	 * it needs each time the URL changes.
	 */
	
	var Router = _react2.default.createClass({
	  displayName: 'Router',
	
	
	  propTypes: {
	    history: object,
	    children: _InternalPropTypes.routes,
	    routes: _InternalPropTypes.routes, // alias for children
	    render: func,
	    createElement: func,
	    onError: func,
	    onUpdate: func,
	
	    // PRIVATE: For client-side rehydration of server match.
	    matchContext: object
	  },
	
	  getDefaultProps: function getDefaultProps() {
	    return {
	      render: function render(props) {
	        return _react2.default.createElement(_RouterContext2.default, props);
	      }
	    };
	  },
	  getInitialState: function getInitialState() {
	    return {
	      location: null,
	      routes: null,
	      params: null,
	      components: null
	    };
	  },
	  handleError: function handleError(error) {
	    if (this.props.onError) {
	      this.props.onError.call(this, error);
	    } else {
	      // Throw errors by default so we don't silently swallow them!
	      throw error; // This error probably occurred in getChildRoutes or getComponents.
	    }
	  },
	  createRouterObject: function createRouterObject(state) {
	    var matchContext = this.props.matchContext;
	
	    if (matchContext) {
	      return matchContext.router;
	    }
	
	    var history = this.props.history;
	
	    return (0, _RouterUtils.createRouterObject)(history, this.transitionManager, state);
	  },
	  createTransitionManager: function createTransitionManager() {
	    var matchContext = this.props.matchContext;
	
	    if (matchContext) {
	      return matchContext.transitionManager;
	    }
	
	    var history = this.props.history;
	    var _props = this.props,
	        routes = _props.routes,
	        children = _props.children;
	
	
	    !history.getCurrentLocation ? process.env.NODE_ENV !== 'production' ? (0, _invariant2.default)(false, 'You have provided a history object created with history v4.x or v2.x ' + 'and earlier. This version of React Router is only compatible with v3 ' + 'history objects. Please change to history v3.x.') : (0, _invariant2.default)(false) : void 0;
	
	    return (0, _createTransitionManager3.default)(history, (0, _RouteUtils.createRoutes)(routes || children));
	  },
	  componentWillMount: function componentWillMount() {
	    var _this = this;
	
	    this.transitionManager = this.createTransitionManager();
	    this.router = this.createRouterObject(this.state);
	
	    this._unlisten = this.transitionManager.listen(function (error, state) {
	      if (error) {
	        _this.handleError(error);
	      } else {
	        // Keep the identity of this.router because of a caveat in ContextUtils:
	        // they only work if the object identity is preserved.
	        (0, _RouterUtils.assignRouterState)(_this.router, state);
	        _this.setState(state, _this.props.onUpdate);
	      }
	    });
	  },
	
	
	  /* istanbul ignore next: sanity check */
	  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
	    process.env.NODE_ENV !== 'production' ? (0, _routerWarning2.default)(nextProps.history === this.props.history, 'You cannot change <Router history>; it will be ignored') : void 0;
	
	    process.env.NODE_ENV !== 'production' ? (0, _routerWarning2.default)((nextProps.routes || nextProps.children) === (this.props.routes || this.props.children), 'You cannot change <Router routes>; it will be ignored') : void 0;
	  },
	  componentWillUnmount: function componentWillUnmount() {
	    if (this._unlisten) this._unlisten();
	  },
	  render: function render() {
	    var _state = this.state,
	        location = _state.location,
	        routes = _state.routes,
	        params = _state.params,
	        components = _state.components;
	
	    var _props2 = this.props,
	        createElement = _props2.createElement,
	        render = _props2.render,
	        props = _objectWithoutProperties(_props2, ['createElement', 'render']);
	
	    if (location == null) return null; // Async match
	
	    // Only forward non-Router-specific props to routing context, as those are
	    // the only ones that might be custom routing context props.
	    Object.keys(Router.propTypes).forEach(function (propType) {
	      return delete props[propType];
	    });
	
	    return render(_extends({}, props, {
	      router: this.router,
	      location: location,
	      routes: routes,
	      params: params,
	      components: components,
	      createElement: createElement
	    }));
	  }
	});
	
	exports.default = Router;
	module.exports = exports['default'];
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 331 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	exports.default = createTransitionManager;
	
	var _routerWarning = __webpack_require__(332);
	
	var _routerWarning2 = _interopRequireDefault(_routerWarning);
	
	var _computeChangedRoutes2 = __webpack_require__(334);
	
	var _computeChangedRoutes3 = _interopRequireDefault(_computeChangedRoutes2);
	
	var _TransitionUtils = __webpack_require__(335);
	
	var _isActive2 = __webpack_require__(337);
	
	var _isActive3 = _interopRequireDefault(_isActive2);
	
	var _getComponents = __webpack_require__(338);
	
	var _getComponents2 = _interopRequireDefault(_getComponents);
	
	var _matchRoutes = __webpack_require__(340);
	
	var _matchRoutes2 = _interopRequireDefault(_matchRoutes);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function hasAnyProperties(object) {
	  for (var p in object) {
	    if (Object.prototype.hasOwnProperty.call(object, p)) return true;
	  }return false;
	}
	
	function createTransitionManager(history, routes) {
	  var state = {};
	
	  // Signature should be (location, indexOnly), but needs to support (path,
	  // query, indexOnly)
	  function isActive(location, indexOnly) {
	    location = history.createLocation(location);
	
	    return (0, _isActive3.default)(location, indexOnly, state.location, state.routes, state.params);
	  }
	
	  var partialNextState = void 0;
	
	  function match(location, callback) {
	    if (partialNextState && partialNextState.location === location) {
	      // Continue from where we left off.
	      finishMatch(partialNextState, callback);
	    } else {
	      (0, _matchRoutes2.default)(routes, location, function (error, nextState) {
	        if (error) {
	          callback(error);
	        } else if (nextState) {
	          finishMatch(_extends({}, nextState, { location: location }), callback);
	        } else {
	          callback();
	        }
	      });
	    }
	  }
	
	  function finishMatch(nextState, callback) {
	    var _computeChangedRoutes = (0, _computeChangedRoutes3.default)(state, nextState),
	        leaveRoutes = _computeChangedRoutes.leaveRoutes,
	        changeRoutes = _computeChangedRoutes.changeRoutes,
	        enterRoutes = _computeChangedRoutes.enterRoutes;
	
	    (0, _TransitionUtils.runLeaveHooks)(leaveRoutes, state);
	
	    // Tear down confirmation hooks for left routes
	    leaveRoutes.filter(function (route) {
	      return enterRoutes.indexOf(route) === -1;
	    }).forEach(removeListenBeforeHooksForRoute);
	
	    // change and enter hooks are run in series
	    (0, _TransitionUtils.runChangeHooks)(changeRoutes, state, nextState, function (error, redirectInfo) {
	      if (error || redirectInfo) return handleErrorOrRedirect(error, redirectInfo);
	
	      (0, _TransitionUtils.runEnterHooks)(enterRoutes, nextState, finishEnterHooks);
	    });
	
	    function finishEnterHooks(error, redirectInfo) {
	      if (error || redirectInfo) return handleErrorOrRedirect(error, redirectInfo);
	
	      // TODO: Fetch components after state is updated.
	      (0, _getComponents2.default)(nextState, function (error, components) {
	        if (error) {
	          callback(error);
	        } else {
	          // TODO: Make match a pure function and have some other API
	          // for "match and update state".
	          callback(null, null, state = _extends({}, nextState, { components: components }));
	        }
	      });
	    }
	
	    function handleErrorOrRedirect(error, redirectInfo) {
	      if (error) callback(error);else callback(null, redirectInfo);
	    }
	  }
	
	  var RouteGuid = 1;
	
	  function getRouteID(route) {
	    var create = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
	
	    return route.__id__ || create && (route.__id__ = RouteGuid++);
	  }
	
	  var RouteHooks = Object.create(null);
	
	  function getRouteHooksForRoutes(routes) {
	    return routes.map(function (route) {
	      return RouteHooks[getRouteID(route)];
	    }).filter(function (hook) {
	      return hook;
	    });
	  }
	
	  function transitionHook(location, callback) {
	    (0, _matchRoutes2.default)(routes, location, function (error, nextState) {
	      if (nextState == null) {
	        // TODO: We didn't actually match anything, but hang
	        // onto error/nextState so we don't have to matchRoutes
	        // again in the listen callback.
	        callback();
	        return;
	      }
	
	      // Cache some state here so we don't have to
	      // matchRoutes() again in the listen callback.
	      partialNextState = _extends({}, nextState, { location: location });
	
	      var hooks = getRouteHooksForRoutes((0, _computeChangedRoutes3.default)(state, partialNextState).leaveRoutes);
	
	      var result = void 0;
	      for (var i = 0, len = hooks.length; result == null && i < len; ++i) {
	        // Passing the location arg here indicates to
	        // the user that this is a transition hook.
	        result = hooks[i](location);
	      }
	
	      callback(result);
	    });
	  }
	
	  /* istanbul ignore next: untestable with Karma */
	  function beforeUnloadHook() {
	    // Synchronously check to see if any route hooks want
	    // to prevent the current window/tab from closing.
	    if (state.routes) {
	      var hooks = getRouteHooksForRoutes(state.routes);
	
	      var message = void 0;
	      for (var i = 0, len = hooks.length; typeof message !== 'string' && i < len; ++i) {
	        // Passing no args indicates to the user that this is a
	        // beforeunload hook. We don't know the next location.
	        message = hooks[i]();
	      }
	
	      return message;
	    }
	  }
	
	  var unlistenBefore = void 0,
	      unlistenBeforeUnload = void 0;
	
	  function removeListenBeforeHooksForRoute(route) {
	    var routeID = getRouteID(route);
	    if (!routeID) {
	      return;
	    }
	
	    delete RouteHooks[routeID];
	
	    if (!hasAnyProperties(RouteHooks)) {
	      // teardown transition & beforeunload hooks
	      if (unlistenBefore) {
	        unlistenBefore();
	        unlistenBefore = null;
	      }
	
	      if (unlistenBeforeUnload) {
	        unlistenBeforeUnload();
	        unlistenBeforeUnload = null;
	      }
	    }
	  }
	
	  /**
	   * Registers the given hook function to run before leaving the given route.
	   *
	   * During a normal transition, the hook function receives the next location
	   * as its only argument and can return either a prompt message (string) to show the user,
	   * to make sure they want to leave the page; or `false`, to prevent the transition.
	   * Any other return value will have no effect.
	   *
	   * During the beforeunload event (in browsers) the hook receives no arguments.
	   * In this case it must return a prompt message to prevent the transition.
	   *
	   * Returns a function that may be used to unbind the listener.
	   */
	  function listenBeforeLeavingRoute(route, hook) {
	    var thereWereNoRouteHooks = !hasAnyProperties(RouteHooks);
	    var routeID = getRouteID(route, true);
	
	    RouteHooks[routeID] = hook;
	
	    if (thereWereNoRouteHooks) {
	      // setup transition & beforeunload hooks
	      unlistenBefore = history.listenBefore(transitionHook);
	
	      if (history.listenBeforeUnload) unlistenBeforeUnload = history.listenBeforeUnload(beforeUnloadHook);
	    }
	
	    return function () {
	      removeListenBeforeHooksForRoute(route);
	    };
	  }
	
	  /**
	   * This is the API for stateful environments. As the location
	   * changes, we update state and call the listener. We can also
	   * gracefully handle errors and redirects.
	   */
	  function listen(listener) {
	    function historyListener(location) {
	      if (state.location === location) {
	        listener(null, state);
	      } else {
	        match(location, function (error, redirectLocation, nextState) {
	          if (error) {
	            listener(error);
	          } else if (redirectLocation) {
	            history.replace(redirectLocation);
	          } else if (nextState) {
	            listener(null, nextState);
	          } else {
	            process.env.NODE_ENV !== 'production' ? (0, _routerWarning2.default)(false, 'Location "%s" did not match any routes', location.pathname + location.search + location.hash) : void 0;
	          }
	        });
	      }
	    }
	
	    // TODO: Only use a single history listener. Otherwise we'll end up with
	    // multiple concurrent calls to match.
	
	    // Set up the history listener first in case the initial match redirects.
	    var unsubscribe = history.listen(historyListener);
	
	    if (state.location) {
	      // Picking up on a matchContext.
	      listener(null, state);
	    } else {
	      historyListener(history.getCurrentLocation());
	    }
	
	    return unsubscribe;
	  }
	
	  return {
	    isActive: isActive,
	    match: match,
	    listenBeforeLeavingRoute: listenBeforeLeavingRoute,
	    listen: listen
	  };
	}
	module.exports = exports['default'];
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 332 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.default = routerWarning;
	exports._resetWarned = _resetWarned;
	
	var _warning = __webpack_require__(333);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var warned = {};
	
	function routerWarning(falseToWarn, message) {
	  // Only issue deprecation warnings once.
	  if (message.indexOf('deprecated') !== -1) {
	    if (warned[message]) {
	      return;
	    }
	
	    warned[message] = true;
	  }
	
	  message = '[react-router] ' + message;
	
	  for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
	    args[_key - 2] = arguments[_key];
	  }
	
	  _warning2.default.apply(undefined, [falseToWarn, message].concat(args));
	}
	
	function _resetWarned() {
	  warned = {};
	}

/***/ },
/* 333 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 */
	
	'use strict';
	
	/**
	 * Similar to invariant but only logs a warning if the condition is not met.
	 * This can be used to log issues in development environments in critical
	 * paths. Removing the logging code for production environments will keep the
	 * same logic and follow the same code paths.
	 */
	
	var warning = function() {};
	
	if (process.env.NODE_ENV !== 'production') {
	  warning = function(condition, format, args) {
	    var len = arguments.length;
	    args = new Array(len > 2 ? len - 2 : 0);
	    for (var key = 2; key < len; key++) {
	      args[key - 2] = arguments[key];
	    }
	    if (format === undefined) {
	      throw new Error(
	        '`warning(condition, format, ...args)` requires a warning ' +
	        'message argument'
	      );
	    }
	
	    if (format.length < 10 || (/^[s\W]*$/).test(format)) {
	      throw new Error(
	        'The warning format should be able to uniquely identify this ' +
	        'warning. Please, use a more descriptive format than: ' + format
	      );
	    }
	
	    if (!condition) {
	      var argIndex = 0;
	      var message = 'Warning: ' +
	        format.replace(/%s/g, function() {
	          return args[argIndex++];
	        });
	      if (typeof console !== 'undefined') {
	        console.error(message);
	      }
	      try {
	        // This error was thrown as a convenience so that you can use this stack
	        // to find the callsite that caused this warning to fire.
	        throw new Error(message);
	      } catch(x) {}
	    }
	  };
	}
	
	module.exports = warning;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 334 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _PatternUtils = __webpack_require__(329);
	
	function routeParamsChanged(route, prevState, nextState) {
	  if (!route.path) return false;
	
	  var paramNames = (0, _PatternUtils.getParamNames)(route.path);
	
	  return paramNames.some(function (paramName) {
	    return prevState.params[paramName] !== nextState.params[paramName];
	  });
	}
	
	/**
	 * Returns an object of { leaveRoutes, changeRoutes, enterRoutes } determined by
	 * the change from prevState to nextState. We leave routes if either
	 * 1) they are not in the next state or 2) they are in the next state
	 * but their params have changed (i.e. /users/123 => /users/456).
	 *
	 * leaveRoutes are ordered starting at the leaf route of the tree
	 * we're leaving up to the common parent route. enterRoutes are ordered
	 * from the top of the tree we're entering down to the leaf route.
	 *
	 * changeRoutes are any routes that didn't leave or enter during
	 * the transition.
	 */
	function computeChangedRoutes(prevState, nextState) {
	  var prevRoutes = prevState && prevState.routes;
	  var nextRoutes = nextState.routes;
	
	  var leaveRoutes = void 0,
	      changeRoutes = void 0,
	      enterRoutes = void 0;
	  if (prevRoutes) {
	    (function () {
	      var parentIsLeaving = false;
	      leaveRoutes = prevRoutes.filter(function (route) {
	        if (parentIsLeaving) {
	          return true;
	        } else {
	          var isLeaving = nextRoutes.indexOf(route) === -1 || routeParamsChanged(route, prevState, nextState);
	          if (isLeaving) parentIsLeaving = true;
	          return isLeaving;
	        }
	      });
	
	      // onLeave hooks start at the leaf route.
	      leaveRoutes.reverse();
	
	      enterRoutes = [];
	      changeRoutes = [];
	
	      nextRoutes.forEach(function (route) {
	        var isNew = prevRoutes.indexOf(route) === -1;
	        var paramsChanged = leaveRoutes.indexOf(route) !== -1;
	
	        if (isNew || paramsChanged) enterRoutes.push(route);else changeRoutes.push(route);
	      });
	    })();
	  } else {
	    leaveRoutes = [];
	    changeRoutes = [];
	    enterRoutes = nextRoutes;
	  }
	
	  return {
	    leaveRoutes: leaveRoutes,
	    changeRoutes: changeRoutes,
	    enterRoutes: enterRoutes
	  };
	}
	
	exports.default = computeChangedRoutes;
	module.exports = exports['default'];

/***/ },
/* 335 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.runEnterHooks = runEnterHooks;
	exports.runChangeHooks = runChangeHooks;
	exports.runLeaveHooks = runLeaveHooks;
	
	var _AsyncUtils = __webpack_require__(336);
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var PendingHooks = function PendingHooks() {
	  var _this = this;
	
	  _classCallCheck(this, PendingHooks);
	
	  this.hooks = [];
	
	  this.add = function (hook) {
	    return _this.hooks.push(hook);
	  };
	
	  this.remove = function (hook) {
	    return _this.hooks = _this.hooks.filter(function (h) {
	      return h !== hook;
	    });
	  };
	
	  this.has = function (hook) {
	    return _this.hooks.indexOf(hook) !== -1;
	  };
	
	  this.clear = function () {
	    return _this.hooks = [];
	  };
	};
	
	var enterHooks = new PendingHooks();
	var changeHooks = new PendingHooks();
	
	function createTransitionHook(hook, route, asyncArity, pendingHooks) {
	  var isSync = hook.length < asyncArity;
	
	  var transitionHook = function transitionHook() {
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    hook.apply(route, args);
	
	    if (isSync) {
	      var callback = args[args.length - 1];
	      // Assume hook executes synchronously and
	      // automatically call the callback.
	      callback();
	    }
	  };
	
	  pendingHooks.add(transitionHook);
	
	  return transitionHook;
	}
	
	function getEnterHooks(routes) {
	  return routes.reduce(function (hooks, route) {
	    if (route.onEnter) hooks.push(createTransitionHook(route.onEnter, route, 3, enterHooks));
	    return hooks;
	  }, []);
	}
	
	function getChangeHooks(routes) {
	  return routes.reduce(function (hooks, route) {
	    if (route.onChange) hooks.push(createTransitionHook(route.onChange, route, 4, changeHooks));
	    return hooks;
	  }, []);
	}
	
	function runTransitionHooks(length, iter, callback) {
	  if (!length) {
	    callback();
	    return;
	  }
	
	  var redirectInfo = void 0;
	  function replace(location) {
	    redirectInfo = location;
	  }
	
	  (0, _AsyncUtils.loopAsync)(length, function (index, next, done) {
	    iter(index, replace, function (error) {
	      if (error || redirectInfo) {
	        done(error, redirectInfo); // No need to continue.
	      } else {
	        next();
	      }
	    });
	  }, callback);
	}
	
	/**
	 * Runs all onEnter hooks in the given array of routes in order
	 * with onEnter(nextState, replace, callback) and calls
	 * callback(error, redirectInfo) when finished. The first hook
	 * to use replace short-circuits the loop.
	 *
	 * If a hook needs to run asynchronously, it may use the callback
	 * function. However, doing so will cause the transition to pause,
	 * which could lead to a non-responsive UI if the hook is slow.
	 */
	function runEnterHooks(routes, nextState, callback) {
	  enterHooks.clear();
	  var hooks = getEnterHooks(routes);
	  return runTransitionHooks(hooks.length, function (index, replace, next) {
	    var wrappedNext = function wrappedNext() {
	      if (enterHooks.has(hooks[index])) {
	        next.apply(undefined, arguments);
	        enterHooks.remove(hooks[index]);
	      }
	    };
	    hooks[index](nextState, replace, wrappedNext);
	  }, callback);
	}
	
	/**
	 * Runs all onChange hooks in the given array of routes in order
	 * with onChange(prevState, nextState, replace, callback) and calls
	 * callback(error, redirectInfo) when finished. The first hook
	 * to use replace short-circuits the loop.
	 *
	 * If a hook needs to run asynchronously, it may use the callback
	 * function. However, doing so will cause the transition to pause,
	 * which could lead to a non-responsive UI if the hook is slow.
	 */
	function runChangeHooks(routes, state, nextState, callback) {
	  changeHooks.clear();
	  var hooks = getChangeHooks(routes);
	  return runTransitionHooks(hooks.length, function (index, replace, next) {
	    var wrappedNext = function wrappedNext() {
	      if (changeHooks.has(hooks[index])) {
	        next.apply(undefined, arguments);
	        changeHooks.remove(hooks[index]);
	      }
	    };
	    hooks[index](state, nextState, replace, wrappedNext);
	  }, callback);
	}
	
	/**
	 * Runs all onLeave hooks in the given array of routes in order.
	 */
	function runLeaveHooks(routes, prevState) {
	  for (var i = 0, len = routes.length; i < len; ++i) {
	    if (routes[i].onLeave) routes[i].onLeave.call(routes[i], prevState);
	  }
	}

/***/ },
/* 336 */
/***/ function(module, exports) {

	"use strict";
	
	exports.__esModule = true;
	exports.loopAsync = loopAsync;
	exports.mapAsync = mapAsync;
	function loopAsync(turns, work, callback) {
	  var currentTurn = 0,
	      isDone = false;
	  var sync = false,
	      hasNext = false,
	      doneArgs = void 0;
	
	  function done() {
	    isDone = true;
	    if (sync) {
	      // Iterate instead of recursing if possible.
	      doneArgs = [].concat(Array.prototype.slice.call(arguments));
	      return;
	    }
	
	    callback.apply(this, arguments);
	  }
	
	  function next() {
	    if (isDone) {
	      return;
	    }
	
	    hasNext = true;
	    if (sync) {
	      // Iterate instead of recursing if possible.
	      return;
	    }
	
	    sync = true;
	
	    while (!isDone && currentTurn < turns && hasNext) {
	      hasNext = false;
	      work.call(this, currentTurn++, next, done);
	    }
	
	    sync = false;
	
	    if (isDone) {
	      // This means the loop finished synchronously.
	      callback.apply(this, doneArgs);
	      return;
	    }
	
	    if (currentTurn >= turns && hasNext) {
	      isDone = true;
	      callback();
	    }
	  }
	
	  next();
	}
	
	function mapAsync(array, work, callback) {
	  var length = array.length;
	  var values = [];
	
	  if (length === 0) return callback(null, values);
	
	  var isDone = false,
	      doneCount = 0;
	
	  function done(index, error, value) {
	    if (isDone) return;
	
	    if (error) {
	      isDone = true;
	      callback(error);
	    } else {
	      values[index] = value;
	
	      isDone = ++doneCount === length;
	
	      if (isDone) callback(null, values);
	    }
	  }
	
	  array.forEach(function (item, index) {
	    work(item, index, function (error, value) {
	      done(index, error, value);
	    });
	  });
	}

/***/ },
/* 337 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	exports.default = isActive;
	
	var _PatternUtils = __webpack_require__(329);
	
	function deepEqual(a, b) {
	  if (a == b) return true;
	
	  if (a == null || b == null) return false;
	
	  if (Array.isArray(a)) {
	    return Array.isArray(b) && a.length === b.length && a.every(function (item, index) {
	      return deepEqual(item, b[index]);
	    });
	  }
	
	  if ((typeof a === 'undefined' ? 'undefined' : _typeof(a)) === 'object') {
	    for (var p in a) {
	      if (!Object.prototype.hasOwnProperty.call(a, p)) {
	        continue;
	      }
	
	      if (a[p] === undefined) {
	        if (b[p] !== undefined) {
	          return false;
	        }
	      } else if (!Object.prototype.hasOwnProperty.call(b, p)) {
	        return false;
	      } else if (!deepEqual(a[p], b[p])) {
	        return false;
	      }
	    }
	
	    return true;
	  }
	
	  return String(a) === String(b);
	}
	
	/**
	 * Returns true if the current pathname matches the supplied one, net of
	 * leading and trailing slash normalization. This is sufficient for an
	 * indexOnly route match.
	 */
	function pathIsActive(pathname, currentPathname) {
	  // Normalize leading slash for consistency. Leading slash on pathname has
	  // already been normalized in isActive. See caveat there.
	  if (currentPathname.charAt(0) !== '/') {
	    currentPathname = '/' + currentPathname;
	  }
	
	  // Normalize the end of both path names too. Maybe `/foo/` shouldn't show
	  // `/foo` as active, but in this case, we would already have failed the
	  // match.
	  if (pathname.charAt(pathname.length - 1) !== '/') {
	    pathname += '/';
	  }
	  if (currentPathname.charAt(currentPathname.length - 1) !== '/') {
	    currentPathname += '/';
	  }
	
	  return currentPathname === pathname;
	}
	
	/**
	 * Returns true if the given pathname matches the active routes and params.
	 */
	function routeIsActive(pathname, routes, params) {
	  var remainingPathname = pathname,
	      paramNames = [],
	      paramValues = [];
	
	  // for...of would work here but it's probably slower post-transpilation.
	  for (var i = 0, len = routes.length; i < len; ++i) {
	    var route = routes[i];
	    var pattern = route.path || '';
	
	    if (pattern.charAt(0) === '/') {
	      remainingPathname = pathname;
	      paramNames = [];
	      paramValues = [];
	    }
	
	    if (remainingPathname !== null && pattern) {
	      var matched = (0, _PatternUtils.matchPattern)(pattern, remainingPathname);
	      if (matched) {
	        remainingPathname = matched.remainingPathname;
	        paramNames = [].concat(paramNames, matched.paramNames);
	        paramValues = [].concat(paramValues, matched.paramValues);
	      } else {
	        remainingPathname = null;
	      }
	
	      if (remainingPathname === '') {
	        // We have an exact match on the route. Just check that all the params
	        // match.
	        // FIXME: This doesn't work on repeated params.
	        return paramNames.every(function (paramName, index) {
	          return String(paramValues[index]) === String(params[paramName]);
	        });
	      }
	    }
	  }
	
	  return false;
	}
	
	/**
	 * Returns true if all key/value pairs in the given query are
	 * currently active.
	 */
	function queryIsActive(query, activeQuery) {
	  if (activeQuery == null) return query == null;
	
	  if (query == null) return true;
	
	  return deepEqual(query, activeQuery);
	}
	
	/**
	 * Returns true if a <Link> to the given pathname/query combination is
	 * currently active.
	 */
	function isActive(_ref, indexOnly, currentLocation, routes, params) {
	  var pathname = _ref.pathname,
	      query = _ref.query;
	
	  if (currentLocation == null) return false;
	
	  // TODO: This is a bit ugly. It keeps around support for treating pathnames
	  // without preceding slashes as absolute paths, but possibly also works
	  // around the same quirks with basenames as in matchRoutes.
	  if (pathname.charAt(0) !== '/') {
	    pathname = '/' + pathname;
	  }
	
	  if (!pathIsActive(pathname, currentLocation.pathname)) {
	    // The path check is necessary and sufficient for indexOnly, but otherwise
	    // we still need to check the routes.
	    if (indexOnly || !routeIsActive(pathname, routes, params)) {
	      return false;
	    }
	  }
	
	  return queryIsActive(query, currentLocation.query);
	}
	module.exports = exports['default'];

/***/ },
/* 338 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _AsyncUtils = __webpack_require__(336);
	
	var _PromiseUtils = __webpack_require__(339);
	
	function getComponentsForRoute(nextState, route, callback) {
	  if (route.component || route.components) {
	    callback(null, route.component || route.components);
	    return;
	  }
	
	  var getComponent = route.getComponent || route.getComponents;
	  if (getComponent) {
	    var componentReturn = getComponent.call(route, nextState, callback);
	    if ((0, _PromiseUtils.isPromise)(componentReturn)) componentReturn.then(function (component) {
	      return callback(null, component);
	    }, callback);
	  } else {
	    callback();
	  }
	}
	
	/**
	 * Asynchronously fetches all components needed for the given router
	 * state and calls callback(error, components) when finished.
	 *
	 * Note: This operation may finish synchronously if no routes have an
	 * asynchronous getComponents method.
	 */
	function getComponents(nextState, callback) {
	  (0, _AsyncUtils.mapAsync)(nextState.routes, function (route, index, callback) {
	    getComponentsForRoute(nextState, route, callback);
	  }, callback);
	}
	
	exports.default = getComponents;
	module.exports = exports['default'];

/***/ },
/* 339 */
/***/ function(module, exports) {

	'use strict';
	
	exports.__esModule = true;
	exports.isPromise = isPromise;
	function isPromise(obj) {
	  return obj && typeof obj.then === 'function';
	}

/***/ },
/* 340 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	exports.default = matchRoutes;
	
	var _AsyncUtils = __webpack_require__(336);
	
	var _PromiseUtils = __webpack_require__(339);
	
	var _PatternUtils = __webpack_require__(329);
	
	var _routerWarning = __webpack_require__(332);
	
	var _routerWarning2 = _interopRequireDefault(_routerWarning);
	
	var _RouteUtils = __webpack_require__(327);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function getChildRoutes(route, location, paramNames, paramValues, callback) {
	  if (route.childRoutes) {
	    return [null, route.childRoutes];
	  }
	  if (!route.getChildRoutes) {
	    return [];
	  }
	
	  var sync = true,
	      result = void 0;
	
	  var partialNextState = {
	    location: location,
	    params: createParams(paramNames, paramValues)
	  };
	
	  var childRoutesReturn = route.getChildRoutes(partialNextState, function (error, childRoutes) {
	    childRoutes = !error && (0, _RouteUtils.createRoutes)(childRoutes);
	    if (sync) {
	      result = [error, childRoutes];
	      return;
	    }
	
	    callback(error, childRoutes);
	  });
	
	  if ((0, _PromiseUtils.isPromise)(childRoutesReturn)) childRoutesReturn.then(function (childRoutes) {
	    return callback(null, (0, _RouteUtils.createRoutes)(childRoutes));
	  }, callback);
	
	  sync = false;
	  return result; // Might be undefined.
	}
	
	function getIndexRoute(route, location, paramNames, paramValues, callback) {
	  if (route.indexRoute) {
	    callback(null, route.indexRoute);
	  } else if (route.getIndexRoute) {
	    var partialNextState = {
	      location: location,
	      params: createParams(paramNames, paramValues)
	    };
	
	    var indexRoutesReturn = route.getIndexRoute(partialNextState, function (error, indexRoute) {
	      callback(error, !error && (0, _RouteUtils.createRoutes)(indexRoute)[0]);
	    });
	
	    if ((0, _PromiseUtils.isPromise)(indexRoutesReturn)) indexRoutesReturn.then(function (indexRoute) {
	      return callback(null, (0, _RouteUtils.createRoutes)(indexRoute)[0]);
	    }, callback);
	  } else if (route.childRoutes || route.getChildRoutes) {
	    var onChildRoutes = function onChildRoutes(error, childRoutes) {
	      if (error) {
	        callback(error);
	        return;
	      }
	
	      var pathless = childRoutes.filter(function (childRoute) {
	        return !childRoute.path;
	      });
	
	      (0, _AsyncUtils.loopAsync)(pathless.length, function (index, next, done) {
	        getIndexRoute(pathless[index], location, paramNames, paramValues, function (error, indexRoute) {
	          if (error || indexRoute) {
	            var routes = [pathless[index]].concat(Array.isArray(indexRoute) ? indexRoute : [indexRoute]);
	            done(error, routes);
	          } else {
	            next();
	          }
	        });
	      }, function (err, routes) {
	        callback(null, routes);
	      });
	    };
	
	    var result = getChildRoutes(route, location, paramNames, paramValues, onChildRoutes);
	    if (result) {
	      onChildRoutes.apply(undefined, result);
	    }
	  } else {
	    callback();
	  }
	}
	
	function assignParams(params, paramNames, paramValues) {
	  return paramNames.reduce(function (params, paramName, index) {
	    var paramValue = paramValues && paramValues[index];
	
	    if (Array.isArray(params[paramName])) {
	      params[paramName].push(paramValue);
	    } else if (paramName in params) {
	      params[paramName] = [params[paramName], paramValue];
	    } else {
	      params[paramName] = paramValue;
	    }
	
	    return params;
	  }, params);
	}
	
	function createParams(paramNames, paramValues) {
	  return assignParams({}, paramNames, paramValues);
	}
	
	function matchRouteDeep(route, location, remainingPathname, paramNames, paramValues, callback) {
	  var pattern = route.path || '';
	
	  if (pattern.charAt(0) === '/') {
	    remainingPathname = location.pathname;
	    paramNames = [];
	    paramValues = [];
	  }
	
	  // Only try to match the path if the route actually has a pattern, and if
	  // we're not just searching for potential nested absolute paths.
	  if (remainingPathname !== null && pattern) {
	    try {
	      var matched = (0, _PatternUtils.matchPattern)(pattern, remainingPathname);
	      if (matched) {
	        remainingPathname = matched.remainingPathname;
	        paramNames = [].concat(paramNames, matched.paramNames);
	        paramValues = [].concat(paramValues, matched.paramValues);
	      } else {
	        remainingPathname = null;
	      }
	    } catch (error) {
	      callback(error);
	    }
	
	    // By assumption, pattern is non-empty here, which is the prerequisite for
	    // actually terminating a match.
	    if (remainingPathname === '') {
	      var _ret = function () {
	        var match = {
	          routes: [route],
	          params: createParams(paramNames, paramValues)
	        };
	
	        getIndexRoute(route, location, paramNames, paramValues, function (error, indexRoute) {
	          if (error) {
	            callback(error);
	          } else {
	            if (Array.isArray(indexRoute)) {
	              var _match$routes;
	
	              process.env.NODE_ENV !== 'production' ? (0, _routerWarning2.default)(indexRoute.every(function (route) {
	                return !route.path;
	              }), 'Index routes should not have paths') : void 0;
	              (_match$routes = match.routes).push.apply(_match$routes, indexRoute);
	            } else if (indexRoute) {
	              process.env.NODE_ENV !== 'production' ? (0, _routerWarning2.default)(!indexRoute.path, 'Index routes should not have paths') : void 0;
	              match.routes.push(indexRoute);
	            }
	
	            callback(null, match);
	          }
	        });
	
	        return {
	          v: void 0
	        };
	      }();
	
	      if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === "object") return _ret.v;
	    }
	  }
	
	  if (remainingPathname != null || route.childRoutes) {
	    // Either a) this route matched at least some of the path or b)
	    // we don't have to load this route's children asynchronously. In
	    // either case continue checking for matches in the subtree.
	    var onChildRoutes = function onChildRoutes(error, childRoutes) {
	      if (error) {
	        callback(error);
	      } else if (childRoutes) {
	        // Check the child routes to see if any of them match.
	        matchRoutes(childRoutes, location, function (error, match) {
	          if (error) {
	            callback(error);
	          } else if (match) {
	            // A child route matched! Augment the match and pass it up the stack.
	            match.routes.unshift(route);
	            callback(null, match);
	          } else {
	            callback();
	          }
	        }, remainingPathname, paramNames, paramValues);
	      } else {
	        callback();
	      }
	    };
	
	    var result = getChildRoutes(route, location, paramNames, paramValues, onChildRoutes);
	    if (result) {
	      onChildRoutes.apply(undefined, result);
	    }
	  } else {
	    callback();
	  }
	}
	
	/**
	 * Asynchronously matches the given location to a set of routes and calls
	 * callback(error, state) when finished. The state object will have the
	 * following properties:
	 *
	 * - routes       An array of routes that matched, in hierarchical order
	 * - params       An object of URL parameters
	 *
	 * Note: This operation may finish synchronously if no routes have an
	 * asynchronous getChildRoutes method.
	 */
	function matchRoutes(routes, location, callback, remainingPathname) {
	  var paramNames = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : [];
	  var paramValues = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : [];
	
	  if (remainingPathname === undefined) {
	    // TODO: This is a little bit ugly, but it works around a quirk in history
	    // that strips the leading slash from pathnames when using basenames with
	    // trailing slashes.
	    if (location.pathname.charAt(0) !== '/') {
	      location = _extends({}, location, {
	        pathname: '/' + location.pathname
	      });
	    }
	    remainingPathname = location.pathname;
	  }
	
	  (0, _AsyncUtils.loopAsync)(routes.length, function (index, next, done) {
	    matchRouteDeep(routes[index], location, remainingPathname, paramNames, paramValues, function (error, match) {
	      if (error || match) {
	        done(error, match);
	      } else {
	        next();
	      }
	    });
	  }, callback);
	}
	module.exports = exports['default'];
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 341 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.routes = exports.route = exports.components = exports.component = exports.history = undefined;
	exports.falsy = falsy;
	
	var _react = __webpack_require__(1);
	
	var func = _react.PropTypes.func,
	    object = _react.PropTypes.object,
	    arrayOf = _react.PropTypes.arrayOf,
	    oneOfType = _react.PropTypes.oneOfType,
	    element = _react.PropTypes.element,
	    shape = _react.PropTypes.shape,
	    string = _react.PropTypes.string;
	function falsy(props, propName, componentName) {
	  if (props[propName]) return new Error('<' + componentName + '> should not have a "' + propName + '" prop');
	}
	
	var history = exports.history = shape({
	  listen: func.isRequired,
	  push: func.isRequired,
	  replace: func.isRequired,
	  go: func.isRequired,
	  goBack: func.isRequired,
	  goForward: func.isRequired
	});
	
	var component = exports.component = oneOfType([func, string]);
	var components = exports.components = oneOfType([component, object]);
	var route = exports.route = oneOfType([object, element]);
	var routes = exports.routes = oneOfType([route, arrayOf(route)]);

/***/ },
/* 342 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var _invariant = __webpack_require__(316);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _getRouteParams = __webpack_require__(343);
	
	var _getRouteParams2 = _interopRequireDefault(_getRouteParams);
	
	var _ContextUtils = __webpack_require__(344);
	
	var _RouteUtils = __webpack_require__(327);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var _React$PropTypes = _react2.default.PropTypes,
	    array = _React$PropTypes.array,
	    func = _React$PropTypes.func,
	    object = _React$PropTypes.object;
	
	/**
	 * A <RouterContext> renders the component tree for a given router state
	 * and sets the history object and the current location in context.
	 */
	
	var RouterContext = _react2.default.createClass({
	  displayName: 'RouterContext',
	
	
	  mixins: [(0, _ContextUtils.ContextProvider)('router')],
	
	  propTypes: {
	    router: object.isRequired,
	    location: object.isRequired,
	    routes: array.isRequired,
	    params: object.isRequired,
	    components: array.isRequired,
	    createElement: func.isRequired
	  },
	
	  getDefaultProps: function getDefaultProps() {
	    return {
	      createElement: _react2.default.createElement
	    };
	  },
	
	
	  childContextTypes: {
	    router: object.isRequired
	  },
	
	  getChildContext: function getChildContext() {
	    return {
	      router: this.props.router
	    };
	  },
	  createElement: function createElement(component, props) {
	    return component == null ? null : this.props.createElement(component, props);
	  },
	  render: function render() {
	    var _this = this;
	
	    var _props = this.props,
	        location = _props.location,
	        routes = _props.routes,
	        params = _props.params,
	        components = _props.components,
	        router = _props.router;
	
	    var element = null;
	
	    if (components) {
	      element = components.reduceRight(function (element, components, index) {
	        if (components == null) return element; // Don't create new children; use the grandchildren.
	
	        var route = routes[index];
	        var routeParams = (0, _getRouteParams2.default)(route, params);
	        var props = {
	          location: location,
	          params: params,
	          route: route,
	          router: router,
	          routeParams: routeParams,
	          routes: routes
	        };
	
	        if ((0, _RouteUtils.isReactChildren)(element)) {
	          props.children = element;
	        } else if (element) {
	          for (var prop in element) {
	            if (Object.prototype.hasOwnProperty.call(element, prop)) props[prop] = element[prop];
	          }
	        }
	
	        if ((typeof components === 'undefined' ? 'undefined' : _typeof(components)) === 'object') {
	          var elements = {};
	
	          for (var key in components) {
	            if (Object.prototype.hasOwnProperty.call(components, key)) {
	              // Pass through the key as a prop to createElement to allow
	              // custom createElement functions to know which named component
	              // they're rendering, for e.g. matching up to fetched data.
	              elements[key] = _this.createElement(components[key], _extends({
	                key: key }, props));
	            }
	          }
	
	          return elements;
	        }
	
	        return _this.createElement(components, props);
	      }, element);
	    }
	
	    !(element === null || element === false || _react2.default.isValidElement(element)) ? process.env.NODE_ENV !== 'production' ? (0, _invariant2.default)(false, 'The root route must render a single element') : (0, _invariant2.default)(false) : void 0;
	
	    return element;
	  }
	});
	
	exports.default = RouterContext;
	module.exports = exports['default'];
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 343 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _PatternUtils = __webpack_require__(329);
	
	/**
	 * Extracts an object of params the given route cares about from
	 * the given params object.
	 */
	function getRouteParams(route, params) {
	  var routeParams = {};
	
	  if (!route.path) return routeParams;
	
	  (0, _PatternUtils.getParamNames)(route.path).forEach(function (p) {
	    if (Object.prototype.hasOwnProperty.call(params, p)) {
	      routeParams[p] = params[p];
	    }
	  });
	
	  return routeParams;
	}
	
	exports.default = getRouteParams;
	module.exports = exports['default'];

/***/ },
/* 344 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.ContextProvider = ContextProvider;
	exports.ContextSubscriber = ContextSubscriber;
	
	var _react = __webpack_require__(1);
	
	// Works around issues with context updates failing to propagate.
	// Caveat: the context value is expected to never change its identity.
	// https://github.com/facebook/react/issues/2517
	// https://github.com/reactjs/react-router/issues/470
	
	var contextProviderShape = _react.PropTypes.shape({
	  subscribe: _react.PropTypes.func.isRequired,
	  eventIndex: _react.PropTypes.number.isRequired
	});
	
	function makeContextName(name) {
	  return '@@contextSubscriber/' + name;
	}
	
	function ContextProvider(name) {
	  var _childContextTypes, _ref2;
	
	  var contextName = makeContextName(name);
	  var listenersKey = contextName + '/listeners';
	  var eventIndexKey = contextName + '/eventIndex';
	  var subscribeKey = contextName + '/subscribe';
	
	  return _ref2 = {
	    childContextTypes: (_childContextTypes = {}, _childContextTypes[contextName] = contextProviderShape.isRequired, _childContextTypes),
	
	    getChildContext: function getChildContext() {
	      var _ref;
	
	      return _ref = {}, _ref[contextName] = {
	        eventIndex: this[eventIndexKey],
	        subscribe: this[subscribeKey]
	      }, _ref;
	    },
	    componentWillMount: function componentWillMount() {
	      this[listenersKey] = [];
	      this[eventIndexKey] = 0;
	    },
	    componentWillReceiveProps: function componentWillReceiveProps() {
	      this[eventIndexKey]++;
	    },
	    componentDidUpdate: function componentDidUpdate() {
	      var _this = this;
	
	      this[listenersKey].forEach(function (listener) {
	        return listener(_this[eventIndexKey]);
	      });
	    }
	  }, _ref2[subscribeKey] = function (listener) {
	    var _this2 = this;
	
	    // No need to immediately call listener here.
	    this[listenersKey].push(listener);
	
	    return function () {
	      _this2[listenersKey] = _this2[listenersKey].filter(function (item) {
	        return item !== listener;
	      });
	    };
	  }, _ref2;
	}
	
	function ContextSubscriber(name) {
	  var _contextTypes, _ref4;
	
	  var contextName = makeContextName(name);
	  var lastRenderedEventIndexKey = contextName + '/lastRenderedEventIndex';
	  var handleContextUpdateKey = contextName + '/handleContextUpdate';
	  var unsubscribeKey = contextName + '/unsubscribe';
	
	  return _ref4 = {
	    contextTypes: (_contextTypes = {}, _contextTypes[contextName] = contextProviderShape, _contextTypes),
	
	    getInitialState: function getInitialState() {
	      var _ref3;
	
	      if (!this.context[contextName]) {
	        return {};
	      }
	
	      return _ref3 = {}, _ref3[lastRenderedEventIndexKey] = this.context[contextName].eventIndex, _ref3;
	    },
	    componentDidMount: function componentDidMount() {
	      if (!this.context[contextName]) {
	        return;
	      }
	
	      this[unsubscribeKey] = this.context[contextName].subscribe(this[handleContextUpdateKey]);
	    },
	    componentWillReceiveProps: function componentWillReceiveProps() {
	      var _setState;
	
	      if (!this.context[contextName]) {
	        return;
	      }
	
	      this.setState((_setState = {}, _setState[lastRenderedEventIndexKey] = this.context[contextName].eventIndex, _setState));
	    },
	    componentWillUnmount: function componentWillUnmount() {
	      if (!this[unsubscribeKey]) {
	        return;
	      }
	
	      this[unsubscribeKey]();
	      this[unsubscribeKey] = null;
	    }
	  }, _ref4[handleContextUpdateKey] = function (eventIndex) {
	    if (eventIndex !== this.state[lastRenderedEventIndexKey]) {
	      var _setState2;
	
	      this.setState((_setState2 = {}, _setState2[lastRenderedEventIndexKey] = eventIndex, _setState2));
	    }
	  }, _ref4;
	}

/***/ },
/* 345 */
/***/ function(module, exports) {

	"use strict";
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	exports.createRouterObject = createRouterObject;
	exports.assignRouterState = assignRouterState;
	function createRouterObject(history, transitionManager, state) {
	  var router = _extends({}, history, {
	    setRouteLeaveHook: transitionManager.listenBeforeLeavingRoute,
	    isActive: transitionManager.isActive
	  });
	
	  return assignRouterState(router, state);
	}
	
	function assignRouterState(router, _ref) {
	  var location = _ref.location,
	      params = _ref.params,
	      routes = _ref.routes;
	
	  router.location = location;
	  router.params = params;
	  router.routes = routes;
	
	  return router;
	}

/***/ },
/* 346 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _invariant = __webpack_require__(316);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	var _PropTypes = __webpack_require__(328);
	
	var _ContextUtils = __webpack_require__(344);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	var _React$PropTypes = _react2.default.PropTypes,
	    bool = _React$PropTypes.bool,
	    object = _React$PropTypes.object,
	    string = _React$PropTypes.string,
	    func = _React$PropTypes.func,
	    oneOfType = _React$PropTypes.oneOfType;
	
	
	function isLeftClickEvent(event) {
	  return event.button === 0;
	}
	
	function isModifiedEvent(event) {
	  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);
	}
	
	// TODO: De-duplicate against hasAnyProperties in createTransitionManager.
	function isEmptyObject(object) {
	  for (var p in object) {
	    if (Object.prototype.hasOwnProperty.call(object, p)) return false;
	  }return true;
	}
	
	function resolveToLocation(to, router) {
	  return typeof to === 'function' ? to(router.location) : to;
	}
	
	/**
	 * A <Link> is used to create an <a> element that links to a route.
	 * When that route is active, the link gets the value of its
	 * activeClassName prop.
	 *
	 * For example, assuming you have the following route:
	 *
	 *   <Route path="/posts/:postID" component={Post} />
	 *
	 * You could use the following component to link to that route:
	 *
	 *   <Link to={`/posts/${post.id}`} />
	 *
	 * Links may pass along location state and/or query string parameters
	 * in the state/query props, respectively.
	 *
	 *   <Link ... query={{ show: true }} state={{ the: 'state' }} />
	 */
	var Link = _react2.default.createClass({
	  displayName: 'Link',
	
	
	  mixins: [(0, _ContextUtils.ContextSubscriber)('router')],
	
	  contextTypes: {
	    router: _PropTypes.routerShape
	  },
	
	  propTypes: {
	    to: oneOfType([string, object, func]),
	    query: object,
	    hash: string,
	    state: object,
	    activeStyle: object,
	    activeClassName: string,
	    onlyActiveOnIndex: bool.isRequired,
	    onClick: func,
	    target: string
	  },
	
	  getDefaultProps: function getDefaultProps() {
	    return {
	      onlyActiveOnIndex: false,
	      style: {}
	    };
	  },
	  handleClick: function handleClick(event) {
	    if (this.props.onClick) this.props.onClick(event);
	
	    if (event.defaultPrevented) return;
	
	    var router = this.context.router;
	
	    !router ? process.env.NODE_ENV !== 'production' ? (0, _invariant2.default)(false, '<Link>s rendered outside of a router context cannot navigate.') : (0, _invariant2.default)(false) : void 0;
	
	    if (isModifiedEvent(event) || !isLeftClickEvent(event)) return;
	
	    // If target prop is set (e.g. to "_blank"), let browser handle link.
	    /* istanbul ignore if: untestable with Karma */
	    if (this.props.target) return;
	
	    event.preventDefault();
	
	    router.push(resolveToLocation(this.props.to, router));
	  },
	  render: function render() {
	    var _props = this.props,
	        to = _props.to,
	        activeClassName = _props.activeClassName,
	        activeStyle = _props.activeStyle,
	        onlyActiveOnIndex = _props.onlyActiveOnIndex,
	        props = _objectWithoutProperties(_props, ['to', 'activeClassName', 'activeStyle', 'onlyActiveOnIndex']);
	
	    // Ignore if rendered outside the context of router to simplify unit testing.
	
	
	    var router = this.context.router;
	
	
	    if (router) {
	      // If user does not specify a `to` prop, return an empty anchor tag.
	      if (!to) {
	        return _react2.default.createElement('a', props);
	      }
	
	      var toLocation = resolveToLocation(to, router);
	      props.href = router.createHref(toLocation);
	
	      if (activeClassName || activeStyle != null && !isEmptyObject(activeStyle)) {
	        if (router.isActive(toLocation, onlyActiveOnIndex)) {
	          if (activeClassName) {
	            if (props.className) {
	              props.className += ' ' + activeClassName;
	            } else {
	              props.className = activeClassName;
	            }
	          }
	
	          if (activeStyle) props.style = _extends({}, props.style, activeStyle);
	        }
	      }
	    }
	
	    return _react2.default.createElement('a', _extends({}, props, { onClick: this.handleClick }));
	  }
	});
	
	exports.default = Link;
	module.exports = exports['default'];
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 347 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Link = __webpack_require__(346);
	
	var _Link2 = _interopRequireDefault(_Link);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * An <IndexLink> is used to link to an <IndexRoute>.
	 */
	var IndexLink = _react2.default.createClass({
	  displayName: 'IndexLink',
	  render: function render() {
	    return _react2.default.createElement(_Link2.default, _extends({}, this.props, { onlyActiveOnIndex: true }));
	  }
	});
	
	exports.default = IndexLink;
	module.exports = exports['default'];

/***/ },
/* 348 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	exports.default = withRouter;
	
	var _invariant = __webpack_require__(316);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _hoistNonReactStatics = __webpack_require__(315);
	
	var _hoistNonReactStatics2 = _interopRequireDefault(_hoistNonReactStatics);
	
	var _ContextUtils = __webpack_require__(344);
	
	var _PropTypes = __webpack_require__(328);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function getDisplayName(WrappedComponent) {
	  return WrappedComponent.displayName || WrappedComponent.name || 'Component';
	}
	
	function withRouter(WrappedComponent, options) {
	  var withRef = options && options.withRef;
	
	  var WithRouter = _react2.default.createClass({
	    displayName: 'WithRouter',
	
	    mixins: [(0, _ContextUtils.ContextSubscriber)('router')],
	
	    contextTypes: { router: _PropTypes.routerShape },
	    propTypes: { router: _PropTypes.routerShape },
	
	    getWrappedInstance: function getWrappedInstance() {
	      !withRef ? process.env.NODE_ENV !== 'production' ? (0, _invariant2.default)(false, 'To access the wrapped instance, you need to specify ' + '`{ withRef: true }` as the second argument of the withRouter() call.') : (0, _invariant2.default)(false) : void 0;
	
	      return this.wrappedInstance;
	    },
	    render: function render() {
	      var _this = this;
	
	      var router = this.props.router || this.context.router;
	      if (!router) {
	        return _react2.default.createElement(WrappedComponent, this.props);
	      }
	
	      var params = router.params,
	          location = router.location,
	          routes = router.routes;
	
	      var props = _extends({}, this.props, { router: router, params: params, location: location, routes: routes });
	
	      if (withRef) {
	        props.ref = function (c) {
	          _this.wrappedInstance = c;
	        };
	      }
	
	      return _react2.default.createElement(WrappedComponent, props);
	    }
	  });
	
	  WithRouter.displayName = 'withRouter(' + getDisplayName(WrappedComponent) + ')';
	  WithRouter.WrappedComponent = WrappedComponent;
	
	  return (0, _hoistNonReactStatics2.default)(WithRouter, WrappedComponent);
	}
	module.exports = exports['default'];
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 349 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';
	
	exports.__esModule = true;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _routerWarning = __webpack_require__(332);
	
	var _routerWarning2 = _interopRequireDefault(_routerWarning);
	
	var _invariant = __webpack_require__(316);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	var _Redirect = __webpack_require__(350);
	
	var _Redirect2 = _interopRequireDefault(_Redirect);
	
	var _InternalPropTypes = __webpack_require__(341);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var _React$PropTypes = _react2.default.PropTypes,
	    string = _React$PropTypes.string,
	    object = _React$PropTypes.object;
	
	/**
	 * An <IndexRedirect> is used to redirect from an indexRoute.
	 */
	/* eslint-disable react/require-render-return */
	
	var IndexRedirect = _react2.default.createClass({
	  displayName: 'IndexRedirect',
	
	
	  statics: {
	    createRouteFromReactElement: function createRouteFromReactElement(element, parentRoute) {
	      /* istanbul ignore else: sanity check */
	      if (parentRoute) {
	        parentRoute.indexRoute = _Redirect2.default.createRouteFromReactElement(element);
	      } else {
	        process.env.NODE_ENV !== 'production' ? (0, _routerWarning2.default)(false, 'An <IndexRedirect> does not make sense at the root of your route config') : void 0;
	      }
	    }
	  },
	
	  propTypes: {
	    to: string.isRequired,
	    query: object,
	    state: object,
	    onEnter: _InternalPropTypes.falsy,
	    children: _InternalPropTypes.falsy
	  },
	
	  /* istanbul ignore next: sanity check */
	  render: function render() {
	     true ? process.env.NODE_ENV !== 'production' ? (0, _invariant2.default)(false, '<IndexRedirect> elements are for router configuration only and should not be rendered') : (0, _invariant2.default)(false) : void 0;
	  }
	});
	
	exports.default = IndexRedirect;
	module.exports = exports['default'];
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 350 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';
	
	exports.__esModule = true;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _invariant = __webpack_require__(316);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	var _RouteUtils = __webpack_require__(327);
	
	var _PatternUtils = __webpack_require__(329);
	
	var _InternalPropTypes = __webpack_require__(341);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var _React$PropTypes = _react2.default.PropTypes,
	    string = _React$PropTypes.string,
	    object = _React$PropTypes.object;
	
	/**
	 * A <Redirect> is used to declare another URL path a client should
	 * be sent to when they request a given URL.
	 *
	 * Redirects are placed alongside routes in the route configuration
	 * and are traversed in the same manner.
	 */
	/* eslint-disable react/require-render-return */
	
	var Redirect = _react2.default.createClass({
	  displayName: 'Redirect',
	
	
	  statics: {
	    createRouteFromReactElement: function createRouteFromReactElement(element) {
	      var route = (0, _RouteUtils.createRouteFromReactElement)(element);
	
	      if (route.from) route.path = route.from;
	
	      route.onEnter = function (nextState, replace) {
	        var location = nextState.location,
	            params = nextState.params;
	
	
	        var pathname = void 0;
	        if (route.to.charAt(0) === '/') {
	          pathname = (0, _PatternUtils.formatPattern)(route.to, params);
	        } else if (!route.to) {
	          pathname = location.pathname;
	        } else {
	          var routeIndex = nextState.routes.indexOf(route);
	          var parentPattern = Redirect.getRoutePattern(nextState.routes, routeIndex - 1);
	          var pattern = parentPattern.replace(/\/*$/, '/') + route.to;
	          pathname = (0, _PatternUtils.formatPattern)(pattern, params);
	        }
	
	        replace({
	          pathname: pathname,
	          query: route.query || location.query,
	          state: route.state || location.state
	        });
	      };
	
	      return route;
	    },
	    getRoutePattern: function getRoutePattern(routes, routeIndex) {
	      var parentPattern = '';
	
	      for (var i = routeIndex; i >= 0; i--) {
	        var route = routes[i];
	        var pattern = route.path || '';
	
	        parentPattern = pattern.replace(/\/*$/, '/') + parentPattern;
	
	        if (pattern.indexOf('/') === 0) break;
	      }
	
	      return '/' + parentPattern;
	    }
	  },
	
	  propTypes: {
	    path: string,
	    from: string, // Alias for path
	    to: string.isRequired,
	    query: object,
	    state: object,
	    onEnter: _InternalPropTypes.falsy,
	    children: _InternalPropTypes.falsy
	  },
	
	  /* istanbul ignore next: sanity check */
	  render: function render() {
	     true ? process.env.NODE_ENV !== 'production' ? (0, _invariant2.default)(false, '<Redirect> elements are for router configuration only and should not be rendered') : (0, _invariant2.default)(false) : void 0;
	  }
	});
	
	exports.default = Redirect;
	module.exports = exports['default'];
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 351 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';
	
	exports.__esModule = true;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _routerWarning = __webpack_require__(332);
	
	var _routerWarning2 = _interopRequireDefault(_routerWarning);
	
	var _invariant = __webpack_require__(316);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	var _RouteUtils = __webpack_require__(327);
	
	var _InternalPropTypes = __webpack_require__(341);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var func = _react2.default.PropTypes.func;
	
	/**
	 * An <IndexRoute> is used to specify its parent's <Route indexRoute> in
	 * a JSX route config.
	 */
	/* eslint-disable react/require-render-return */
	
	var IndexRoute = _react2.default.createClass({
	  displayName: 'IndexRoute',
	
	
	  statics: {
	    createRouteFromReactElement: function createRouteFromReactElement(element, parentRoute) {
	      /* istanbul ignore else: sanity check */
	      if (parentRoute) {
	        parentRoute.indexRoute = (0, _RouteUtils.createRouteFromReactElement)(element);
	      } else {
	        process.env.NODE_ENV !== 'production' ? (0, _routerWarning2.default)(false, 'An <IndexRoute> does not make sense at the root of your route config') : void 0;
	      }
	    }
	  },
	
	  propTypes: {
	    path: _InternalPropTypes.falsy,
	    component: _InternalPropTypes.component,
	    components: _InternalPropTypes.components,
	    getComponent: func,
	    getComponents: func
	  },
	
	  /* istanbul ignore next: sanity check */
	  render: function render() {
	     true ? process.env.NODE_ENV !== 'production' ? (0, _invariant2.default)(false, '<IndexRoute> elements are for router configuration only and should not be rendered') : (0, _invariant2.default)(false) : void 0;
	  }
	});
	
	exports.default = IndexRoute;
	module.exports = exports['default'];
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 352 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';
	
	exports.__esModule = true;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _invariant = __webpack_require__(316);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	var _RouteUtils = __webpack_require__(327);
	
	var _InternalPropTypes = __webpack_require__(341);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var _React$PropTypes = _react2.default.PropTypes,
	    string = _React$PropTypes.string,
	    func = _React$PropTypes.func;
	
	/**
	 * A <Route> is used to declare which components are rendered to the
	 * page when the URL matches a given pattern.
	 *
	 * Routes are arranged in a nested tree structure. When a new URL is
	 * requested, the tree is searched depth-first to find a route whose
	 * path matches the URL.  When one is found, all routes in the tree
	 * that lead to it are considered "active" and their components are
	 * rendered into the DOM, nested in the same order as in the tree.
	 */
	/* eslint-disable react/require-render-return */
	
	var Route = _react2.default.createClass({
	  displayName: 'Route',
	
	
	  statics: {
	    createRouteFromReactElement: _RouteUtils.createRouteFromReactElement
	  },
	
	  propTypes: {
	    path: string,
	    component: _InternalPropTypes.component,
	    components: _InternalPropTypes.components,
	    getComponent: func,
	    getComponents: func
	  },
	
	  /* istanbul ignore next: sanity check */
	  render: function render() {
	     true ? process.env.NODE_ENV !== 'production' ? (0, _invariant2.default)(false, '<Route> elements are for router configuration only and should not be rendered') : (0, _invariant2.default)(false) : void 0;
	  }
	});
	
	exports.default = Route;
	module.exports = exports['default'];
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 353 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _Actions = __webpack_require__(354);
	
	var _invariant = __webpack_require__(316);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	var _createMemoryHistory = __webpack_require__(355);
	
	var _createMemoryHistory2 = _interopRequireDefault(_createMemoryHistory);
	
	var _createTransitionManager = __webpack_require__(331);
	
	var _createTransitionManager2 = _interopRequireDefault(_createTransitionManager);
	
	var _RouteUtils = __webpack_require__(327);
	
	var _RouterUtils = __webpack_require__(345);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	/**
	 * A high-level API to be used for server-side rendering.
	 *
	 * This function matches a location to a set of routes and calls
	 * callback(error, redirectLocation, renderProps) when finished.
	 *
	 * Note: You probably don't want to use this in a browser unless you're using
	 * server-side rendering with async routes.
	 */
	function match(_ref, callback) {
	  var history = _ref.history,
	      routes = _ref.routes,
	      location = _ref.location,
	      options = _objectWithoutProperties(_ref, ['history', 'routes', 'location']);
	
	  !(history || location) ? process.env.NODE_ENV !== 'production' ? (0, _invariant2.default)(false, 'match needs a history or a location') : (0, _invariant2.default)(false) : void 0;
	
	  history = history ? history : (0, _createMemoryHistory2.default)(options);
	  var transitionManager = (0, _createTransitionManager2.default)(history, (0, _RouteUtils.createRoutes)(routes));
	
	  if (location) {
	    // Allow match({ location: '/the/path', ... })
	    location = history.createLocation(location);
	  } else {
	    location = history.getCurrentLocation();
	  }
	
	  transitionManager.match(location, function (error, redirectLocation, nextState) {
	    var renderProps = void 0;
	
	    if (nextState) {
	      var router = (0, _RouterUtils.createRouterObject)(history, transitionManager, nextState);
	      renderProps = _extends({}, nextState, {
	        router: router,
	        matchContext: { transitionManager: transitionManager, router: router }
	      });
	    }
	
	    callback(error, redirectLocation && history.createLocation(redirectLocation, _Actions.REPLACE), renderProps);
	  });
	}
	
	exports.default = match;
	module.exports = exports['default'];
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 354 */
/***/ function(module, exports) {

	'use strict';
	
	exports.__esModule = true;
	/**
	 * Indicates that navigation was caused by a call to history.push.
	 */
	var PUSH = exports.PUSH = 'PUSH';
	
	/**
	 * Indicates that navigation was caused by a call to history.replace.
	 */
	var REPLACE = exports.REPLACE = 'REPLACE';
	
	/**
	 * Indicates that navigation was caused by some other action such
	 * as using a browser's back/forward buttons and/or manually manipulating
	 * the URL in a browser's location bar. This is the default.
	 *
	 * See https://developer.mozilla.org/en-US/docs/Web/API/WindowEventHandlers/onpopstate
	 * for more information.
	 */
	var POP = exports.POP = 'POP';

/***/ },
/* 355 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.default = createMemoryHistory;
	
	var _useQueries = __webpack_require__(356);
	
	var _useQueries2 = _interopRequireDefault(_useQueries);
	
	var _useBasename = __webpack_require__(362);
	
	var _useBasename2 = _interopRequireDefault(_useBasename);
	
	var _createMemoryHistory = __webpack_require__(363);
	
	var _createMemoryHistory2 = _interopRequireDefault(_createMemoryHistory);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function createMemoryHistory(options) {
	  // signatures and type checking differ between `useQueries` and
	  // `createMemoryHistory`, have to create `memoryHistory` first because
	  // `useQueries` doesn't understand the signature
	  var memoryHistory = (0, _createMemoryHistory2.default)(options);
	  var createHistory = function createHistory() {
	    return memoryHistory;
	  };
	  var history = (0, _useQueries2.default)((0, _useBasename2.default)(createHistory))(options);
	  return history;
	}
	module.exports = exports['default'];

/***/ },
/* 356 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _queryString = __webpack_require__(357);
	
	var _runTransitionHook = __webpack_require__(359);
	
	var _runTransitionHook2 = _interopRequireDefault(_runTransitionHook);
	
	var _LocationUtils = __webpack_require__(360);
	
	var _PathUtils = __webpack_require__(361);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var defaultStringifyQuery = function defaultStringifyQuery(query) {
	  return (0, _queryString.stringify)(query).replace(/%20/g, '+');
	};
	
	var defaultParseQueryString = _queryString.parse;
	
	/**
	 * Returns a new createHistory function that may be used to create
	 * history objects that know how to handle URL queries.
	 */
	var useQueries = function useQueries(createHistory) {
	  return function () {
	    var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	
	    var history = createHistory(options);
	    var stringifyQuery = options.stringifyQuery;
	    var parseQueryString = options.parseQueryString;
	
	
	    if (typeof stringifyQuery !== 'function') stringifyQuery = defaultStringifyQuery;
	
	    if (typeof parseQueryString !== 'function') parseQueryString = defaultParseQueryString;
	
	    var decodeQuery = function decodeQuery(location) {
	      if (!location) return location;
	
	      if (location.query == null) location.query = parseQueryString(location.search.substring(1));
	
	      return location;
	    };
	
	    var encodeQuery = function encodeQuery(location, query) {
	      if (query == null) return location;
	
	      var object = typeof location === 'string' ? (0, _PathUtils.parsePath)(location) : location;
	      var queryString = stringifyQuery(query);
	      var search = queryString ? '?' + queryString : '';
	
	      return _extends({}, object, {
	        search: search
	      });
	    };
	
	    // Override all read methods with query-aware versions.
	    var getCurrentLocation = function getCurrentLocation() {
	      return decodeQuery(history.getCurrentLocation());
	    };
	
	    var listenBefore = function listenBefore(hook) {
	      return history.listenBefore(function (location, callback) {
	        return (0, _runTransitionHook2.default)(hook, decodeQuery(location), callback);
	      });
	    };
	
	    var listen = function listen(listener) {
	      return history.listen(function (location) {
	        return listener(decodeQuery(location));
	      });
	    };
	
	    // Override all write methods with query-aware versions.
	    var push = function push(location) {
	      return history.push(encodeQuery(location, location.query));
	    };
	
	    var replace = function replace(location) {
	      return history.replace(encodeQuery(location, location.query));
	    };
	
	    var createPath = function createPath(location) {
	      return history.createPath(encodeQuery(location, location.query));
	    };
	
	    var createHref = function createHref(location) {
	      return history.createHref(encodeQuery(location, location.query));
	    };
	
	    var createLocation = function createLocation(location) {
	      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	        args[_key - 1] = arguments[_key];
	      }
	
	      var newLocation = history.createLocation.apply(history, [encodeQuery(location, location.query)].concat(args));
	
	      if (location.query) newLocation.query = (0, _LocationUtils.createQuery)(location.query);
	
	      return decodeQuery(newLocation);
	    };
	
	    return _extends({}, history, {
	      getCurrentLocation: getCurrentLocation,
	      listenBefore: listenBefore,
	      listen: listen,
	      push: push,
	      replace: replace,
	      createPath: createPath,
	      createHref: createHref,
	      createLocation: createLocation
	    });
	  };
	};
	
	exports.default = useQueries;

/***/ },
/* 357 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var strictUriEncode = __webpack_require__(358);
	var objectAssign = __webpack_require__(4);
	
	function encoderForArrayFormat(opts) {
		switch (opts.arrayFormat) {
			case 'index':
				return function (key, value, index) {
					return value === null ? [
						encode(key, opts),
						'[',
						index,
						']'
					].join('') : [
						encode(key, opts),
						'[',
						encode(index, opts),
						']=',
						encode(value, opts)
					].join('');
				};
	
			case 'bracket':
				return function (key, value) {
					return value === null ? encode(key, opts) : [
						encode(key, opts),
						'[]=',
						encode(value, opts)
					].join('');
				};
	
			default:
				return function (key, value) {
					return value === null ? encode(key, opts) : [
						encode(key, opts),
						'=',
						encode(value, opts)
					].join('');
				};
		}
	}
	
	function parserForArrayFormat(opts) {
		var result;
	
		switch (opts.arrayFormat) {
			case 'index':
				return function (key, value, accumulator) {
					result = /\[(\d*)]$/.exec(key);
	
					key = key.replace(/\[\d*]$/, '');
	
					if (!result) {
						accumulator[key] = value;
						return;
					}
	
					if (accumulator[key] === undefined) {
						accumulator[key] = {};
					}
	
					accumulator[key][result[1]] = value;
				};
	
			case 'bracket':
				return function (key, value, accumulator) {
					result = /(\[])$/.exec(key);
	
					key = key.replace(/\[]$/, '');
	
					if (!result || accumulator[key] === undefined) {
						accumulator[key] = value;
						return;
					}
	
					accumulator[key] = [].concat(accumulator[key], value);
				};
	
			default:
				return function (key, value, accumulator) {
					if (accumulator[key] === undefined) {
						accumulator[key] = value;
						return;
					}
	
					accumulator[key] = [].concat(accumulator[key], value);
				};
		}
	}
	
	function encode(value, opts) {
		if (opts.encode) {
			return opts.strict ? strictUriEncode(value) : encodeURIComponent(value);
		}
	
		return value;
	}
	
	function keysSorter(input) {
		if (Array.isArray(input)) {
			return input.sort();
		} else if (typeof input === 'object') {
			return keysSorter(Object.keys(input)).sort(function (a, b) {
				return Number(a) - Number(b);
			}).map(function (key) {
				return input[key];
			});
		}
	
		return input;
	}
	
	exports.extract = function (str) {
		return str.split('?')[1] || '';
	};
	
	exports.parse = function (str, opts) {
		opts = objectAssign({arrayFormat: 'none'}, opts);
	
		var formatter = parserForArrayFormat(opts);
	
		// Create an object with no prototype
		// https://github.com/sindresorhus/query-string/issues/47
		var ret = Object.create(null);
	
		if (typeof str !== 'string') {
			return ret;
		}
	
		str = str.trim().replace(/^(\?|#|&)/, '');
	
		if (!str) {
			return ret;
		}
	
		str.split('&').forEach(function (param) {
			var parts = param.replace(/\+/g, ' ').split('=');
			// Firefox (pre 40) decodes `%3D` to `=`
			// https://github.com/sindresorhus/query-string/pull/37
			var key = parts.shift();
			var val = parts.length > 0 ? parts.join('=') : undefined;
	
			// missing `=` should be `null`:
			// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters
			val = val === undefined ? null : decodeURIComponent(val);
	
			formatter(decodeURIComponent(key), val, ret);
		});
	
		return Object.keys(ret).sort().reduce(function (result, key) {
			var val = ret[key];
			if (Boolean(val) && typeof val === 'object' && !Array.isArray(val)) {
				// Sort object keys, not values
				result[key] = keysSorter(val);
			} else {
				result[key] = val;
			}
	
			return result;
		}, Object.create(null));
	};
	
	exports.stringify = function (obj, opts) {
		var defaults = {
			encode: true,
			strict: true,
			arrayFormat: 'none'
		};
	
		opts = objectAssign(defaults, opts);
	
		var formatter = encoderForArrayFormat(opts);
	
		return obj ? Object.keys(obj).sort().map(function (key) {
			var val = obj[key];
	
			if (val === undefined) {
				return '';
			}
	
			if (val === null) {
				return encode(key, opts);
			}
	
			if (Array.isArray(val)) {
				var result = [];
	
				val.slice().forEach(function (val2) {
					if (val2 === undefined) {
						return;
					}
	
					result.push(formatter(key, val2, result.length));
				});
	
				return result.join('&');
			}
	
			return encode(key, opts) + '=' + encode(val, opts);
		}).filter(function (x) {
			return x.length > 0;
		}).join('&') : '';
	};


/***/ },
/* 358 */
/***/ function(module, exports) {

	'use strict';
	module.exports = function (str) {
		return encodeURIComponent(str).replace(/[!'()*]/g, function (c) {
			return '%' + c.charCodeAt(0).toString(16).toUpperCase();
		});
	};


/***/ },
/* 359 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';
	
	exports.__esModule = true;
	
	var _warning = __webpack_require__(333);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var runTransitionHook = function runTransitionHook(hook, location, callback) {
	  var result = hook(location, callback);
	
	  if (hook.length < 2) {
	    // Assume the hook runs synchronously and automatically
	    // call the callback with the return value.
	    callback(result);
	  } else {
	    process.env.NODE_ENV !== 'production' ? (0, _warning2.default)(result === undefined, 'You should not "return" in a transition hook with a callback argument; ' + 'call the callback instead') : void 0;
	  }
	};
	
	exports.default = runTransitionHook;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 360 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';
	
	exports.__esModule = true;
	exports.locationsAreEqual = exports.statesAreEqual = exports.createLocation = exports.createQuery = undefined;
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _invariant = __webpack_require__(316);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	var _warning = __webpack_require__(333);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	var _PathUtils = __webpack_require__(361);
	
	var _Actions = __webpack_require__(354);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var createQuery = exports.createQuery = function createQuery(props) {
	  return _extends(Object.create(null), props);
	};
	
	var createLocation = exports.createLocation = function createLocation() {
	  var input = arguments.length <= 0 || arguments[0] === undefined ? '/' : arguments[0];
	  var action = arguments.length <= 1 || arguments[1] === undefined ? _Actions.POP : arguments[1];
	  var key = arguments.length <= 2 || arguments[2] === undefined ? null : arguments[2];
	
	  var object = typeof input === 'string' ? (0, _PathUtils.parsePath)(input) : input;
	
	  process.env.NODE_ENV !== 'production' ? (0, _warning2.default)(!object.path, 'Location descriptor objects should have a `pathname`, not a `path`.') : void 0;
	
	  var pathname = object.pathname || '/';
	  var search = object.search || '';
	  var hash = object.hash || '';
	  var state = object.state;
	
	  return {
	    pathname: pathname,
	    search: search,
	    hash: hash,
	    state: state,
	    action: action,
	    key: key
	  };
	};
	
	var isDate = function isDate(object) {
	  return Object.prototype.toString.call(object) === '[object Date]';
	};
	
	var statesAreEqual = exports.statesAreEqual = function statesAreEqual(a, b) {
	  if (a === b) return true;
	
	  var typeofA = typeof a === 'undefined' ? 'undefined' : _typeof(a);
	  var typeofB = typeof b === 'undefined' ? 'undefined' : _typeof(b);
	
	  if (typeofA !== typeofB) return false;
	
	  !(typeofA !== 'function') ? process.env.NODE_ENV !== 'production' ? (0, _invariant2.default)(false, 'You must not store functions in location state') : (0, _invariant2.default)(false) : void 0;
	
	  // Not the same object, but same type.
	  if (typeofA === 'object') {
	    !!(isDate(a) && isDate(b)) ? process.env.NODE_ENV !== 'production' ? (0, _invariant2.default)(false, 'You must not store Date objects in location state') : (0, _invariant2.default)(false) : void 0;
	
	    if (!Array.isArray(a)) {
	      var keysofA = Object.keys(a);
	      var keysofB = Object.keys(b);
	      return keysofA.length === keysofB.length && keysofA.every(function (key) {
	        return statesAreEqual(a[key], b[key]);
	      });
	    }
	
	    return Array.isArray(b) && a.length === b.length && a.every(function (item, index) {
	      return statesAreEqual(item, b[index]);
	    });
	  }
	
	  // All other serializable types (string, number, boolean)
	  // should be strict equal.
	  return false;
	};
	
	var locationsAreEqual = exports.locationsAreEqual = function locationsAreEqual(a, b) {
	  return a.key === b.key &&
	  // a.action === b.action && // Different action !== location change.
	  a.pathname === b.pathname && a.search === b.search && a.hash === b.hash && statesAreEqual(a.state, b.state);
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 361 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';
	
	exports.__esModule = true;
	exports.createPath = exports.parsePath = exports.getQueryStringValueFromPath = exports.stripQueryStringValueFromPath = exports.addQueryStringValueToPath = undefined;
	
	var _warning = __webpack_require__(333);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var addQueryStringValueToPath = exports.addQueryStringValueToPath = function addQueryStringValueToPath(path, key, value) {
	  var _parsePath = parsePath(path);
	
	  var pathname = _parsePath.pathname;
	  var search = _parsePath.search;
	  var hash = _parsePath.hash;
	
	
	  return createPath({
	    pathname: pathname,
	    search: search + (search.indexOf('?') === -1 ? '?' : '&') + key + '=' + value,
	    hash: hash
	  });
	};
	
	var stripQueryStringValueFromPath = exports.stripQueryStringValueFromPath = function stripQueryStringValueFromPath(path, key) {
	  var _parsePath2 = parsePath(path);
	
	  var pathname = _parsePath2.pathname;
	  var search = _parsePath2.search;
	  var hash = _parsePath2.hash;
	
	
	  return createPath({
	    pathname: pathname,
	    search: search.replace(new RegExp('([?&])' + key + '=[a-zA-Z0-9]+(&?)'), function (match, prefix, suffix) {
	      return prefix === '?' ? prefix : suffix;
	    }),
	    hash: hash
	  });
	};
	
	var getQueryStringValueFromPath = exports.getQueryStringValueFromPath = function getQueryStringValueFromPath(path, key) {
	  var _parsePath3 = parsePath(path);
	
	  var search = _parsePath3.search;
	
	  var match = search.match(new RegExp('[?&]' + key + '=([a-zA-Z0-9]+)'));
	  return match && match[1];
	};
	
	var extractPath = function extractPath(string) {
	  var match = string.match(/^(https?:)?\/\/[^\/]*/);
	  return match == null ? string : string.substring(match[0].length);
	};
	
	var parsePath = exports.parsePath = function parsePath(path) {
	  var pathname = extractPath(path);
	  var search = '';
	  var hash = '';
	
	  process.env.NODE_ENV !== 'production' ? (0, _warning2.default)(path === pathname, 'A path must be pathname + search + hash only, not a full URL like "%s"', path) : void 0;
	
	  var hashIndex = pathname.indexOf('#');
	  if (hashIndex !== -1) {
	    hash = pathname.substring(hashIndex);
	    pathname = pathname.substring(0, hashIndex);
	  }
	
	  var searchIndex = pathname.indexOf('?');
	  if (searchIndex !== -1) {
	    search = pathname.substring(searchIndex);
	    pathname = pathname.substring(0, searchIndex);
	  }
	
	  if (pathname === '') pathname = '/';
	
	  return {
	    pathname: pathname,
	    search: search,
	    hash: hash
	  };
	};
	
	var createPath = exports.createPath = function createPath(location) {
	  if (location == null || typeof location === 'string') return location;
	
	  var basename = location.basename;
	  var pathname = location.pathname;
	  var search = location.search;
	  var hash = location.hash;
	
	  var path = (basename || '') + pathname;
	
	  if (search && search !== '?') path += search;
	
	  if (hash) path += hash;
	
	  return path;
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 362 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _runTransitionHook = __webpack_require__(359);
	
	var _runTransitionHook2 = _interopRequireDefault(_runTransitionHook);
	
	var _PathUtils = __webpack_require__(361);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var useBasename = function useBasename(createHistory) {
	  return function () {
	    var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	
	    var history = createHistory(options);
	    var basename = options.basename;
	
	
	    var addBasename = function addBasename(location) {
	      if (!location) return location;
	
	      if (basename && location.basename == null) {
	        if (location.pathname.indexOf(basename) === 0) {
	          location.pathname = location.pathname.substring(basename.length);
	          location.basename = basename;
	
	          if (location.pathname === '') location.pathname = '/';
	        } else {
	          location.basename = '';
	        }
	      }
	
	      return location;
	    };
	
	    var prependBasename = function prependBasename(location) {
	      if (!basename) return location;
	
	      var object = typeof location === 'string' ? (0, _PathUtils.parsePath)(location) : location;
	      var pname = object.pathname;
	      var normalizedBasename = basename.slice(-1) === '/' ? basename : basename + '/';
	      var normalizedPathname = pname.charAt(0) === '/' ? pname.slice(1) : pname;
	      var pathname = normalizedBasename + normalizedPathname;
	
	      return _extends({}, object, {
	        pathname: pathname
	      });
	    };
	
	    // Override all read methods with basename-aware versions.
	    var getCurrentLocation = function getCurrentLocation() {
	      return addBasename(history.getCurrentLocation());
	    };
	
	    var listenBefore = function listenBefore(hook) {
	      return history.listenBefore(function (location, callback) {
	        return (0, _runTransitionHook2.default)(hook, addBasename(location), callback);
	      });
	    };
	
	    var listen = function listen(listener) {
	      return history.listen(function (location) {
	        return listener(addBasename(location));
	      });
	    };
	
	    // Override all write methods with basename-aware versions.
	    var push = function push(location) {
	      return history.push(prependBasename(location));
	    };
	
	    var replace = function replace(location) {
	      return history.replace(prependBasename(location));
	    };
	
	    var createPath = function createPath(location) {
	      return history.createPath(prependBasename(location));
	    };
	
	    var createHref = function createHref(location) {
	      return history.createHref(prependBasename(location));
	    };
	
	    var createLocation = function createLocation(location) {
	      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	        args[_key - 1] = arguments[_key];
	      }
	
	      return addBasename(history.createLocation.apply(history, [prependBasename(location)].concat(args)));
	    };
	
	    return _extends({}, history, {
	      getCurrentLocation: getCurrentLocation,
	      listenBefore: listenBefore,
	      listen: listen,
	      push: push,
	      replace: replace,
	      createPath: createPath,
	      createHref: createHref,
	      createLocation: createLocation
	    });
	  };
	};
	
	exports.default = useBasename;

/***/ },
/* 363 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _warning = __webpack_require__(333);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	var _invariant = __webpack_require__(316);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	var _LocationUtils = __webpack_require__(360);
	
	var _PathUtils = __webpack_require__(361);
	
	var _createHistory = __webpack_require__(364);
	
	var _createHistory2 = _interopRequireDefault(_createHistory);
	
	var _Actions = __webpack_require__(354);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var createStateStorage = function createStateStorage(entries) {
	  return entries.filter(function (entry) {
	    return entry.state;
	  }).reduce(function (memo, entry) {
	    memo[entry.key] = entry.state;
	    return memo;
	  }, {});
	};
	
	var createMemoryHistory = function createMemoryHistory() {
	  var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	
	  if (Array.isArray(options)) {
	    options = { entries: options };
	  } else if (typeof options === 'string') {
	    options = { entries: [options] };
	  }
	
	  var getCurrentLocation = function getCurrentLocation() {
	    var entry = entries[current];
	    var path = (0, _PathUtils.createPath)(entry);
	
	    var key = void 0,
	        state = void 0;
	    if (entry.key) {
	      key = entry.key;
	      state = readState(key);
	    }
	
	    var init = (0, _PathUtils.parsePath)(path);
	
	    return (0, _LocationUtils.createLocation)(_extends({}, init, { state: state }), undefined, key);
	  };
	
	  var canGo = function canGo(n) {
	    var index = current + n;
	    return index >= 0 && index < entries.length;
	  };
	
	  var go = function go(n) {
	    if (!n) return;
	
	    if (!canGo(n)) {
	      process.env.NODE_ENV !== 'production' ? (0, _warning2.default)(false, 'Cannot go(%s) there is not enough history', n) : void 0;
	
	      return;
	    }
	
	    current += n;
	    var currentLocation = getCurrentLocation();
	
	    // Change action to POP
	    history.transitionTo(_extends({}, currentLocation, { action: _Actions.POP }));
	  };
	
	  var pushLocation = function pushLocation(location) {
	    current += 1;
	
	    if (current < entries.length) entries.splice(current);
	
	    entries.push(location);
	
	    saveState(location.key, location.state);
	  };
	
	  var replaceLocation = function replaceLocation(location) {
	    entries[current] = location;
	    saveState(location.key, location.state);
	  };
	
	  var history = (0, _createHistory2.default)(_extends({}, options, {
	    getCurrentLocation: getCurrentLocation,
	    pushLocation: pushLocation,
	    replaceLocation: replaceLocation,
	    go: go
	  }));
	
	  var _options = options;
	  var entries = _options.entries;
	  var current = _options.current;
	
	
	  if (typeof entries === 'string') {
	    entries = [entries];
	  } else if (!Array.isArray(entries)) {
	    entries = ['/'];
	  }
	
	  entries = entries.map(function (entry) {
	    return (0, _LocationUtils.createLocation)(entry);
	  });
	
	  if (current == null) {
	    current = entries.length - 1;
	  } else {
	    !(current >= 0 && current < entries.length) ? process.env.NODE_ENV !== 'production' ? (0, _invariant2.default)(false, 'Current index must be >= 0 and < %s, was %s', entries.length, current) : (0, _invariant2.default)(false) : void 0;
	  }
	
	  var storage = createStateStorage(entries);
	
	  var saveState = function saveState(key, state) {
	    return storage[key] = state;
	  };
	
	  var readState = function readState(key) {
	    return storage[key];
	  };
	
	  return _extends({}, history, {
	    canGo: canGo
	  });
	};
	
	exports.default = createMemoryHistory;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 364 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _AsyncUtils = __webpack_require__(365);
	
	var _PathUtils = __webpack_require__(361);
	
	var _runTransitionHook = __webpack_require__(359);
	
	var _runTransitionHook2 = _interopRequireDefault(_runTransitionHook);
	
	var _Actions = __webpack_require__(354);
	
	var _LocationUtils = __webpack_require__(360);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var createHistory = function createHistory() {
	  var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	  var getCurrentLocation = options.getCurrentLocation;
	  var getUserConfirmation = options.getUserConfirmation;
	  var pushLocation = options.pushLocation;
	  var replaceLocation = options.replaceLocation;
	  var go = options.go;
	  var keyLength = options.keyLength;
	
	
	  var currentLocation = void 0;
	  var pendingLocation = void 0;
	  var beforeListeners = [];
	  var listeners = [];
	  var allKeys = [];
	
	  var getCurrentIndex = function getCurrentIndex() {
	    if (pendingLocation && pendingLocation.action === _Actions.POP) return allKeys.indexOf(pendingLocation.key);
	
	    if (currentLocation) return allKeys.indexOf(currentLocation.key);
	
	    return -1;
	  };
	
	  var updateLocation = function updateLocation(nextLocation) {
	    var currentIndex = getCurrentIndex();
	
	    currentLocation = nextLocation;
	
	    if (currentLocation.action === _Actions.PUSH) {
	      allKeys = [].concat(allKeys.slice(0, currentIndex + 1), [currentLocation.key]);
	    } else if (currentLocation.action === _Actions.REPLACE) {
	      allKeys[currentIndex] = currentLocation.key;
	    }
	
	    listeners.forEach(function (listener) {
	      return listener(currentLocation);
	    });
	  };
	
	  var listenBefore = function listenBefore(listener) {
	    beforeListeners.push(listener);
	
	    return function () {
	      return beforeListeners = beforeListeners.filter(function (item) {
	        return item !== listener;
	      });
	    };
	  };
	
	  var listen = function listen(listener) {
	    listeners.push(listener);
	
	    return function () {
	      return listeners = listeners.filter(function (item) {
	        return item !== listener;
	      });
	    };
	  };
	
	  var confirmTransitionTo = function confirmTransitionTo(location, callback) {
	    (0, _AsyncUtils.loopAsync)(beforeListeners.length, function (index, next, done) {
	      (0, _runTransitionHook2.default)(beforeListeners[index], location, function (result) {
	        return result != null ? done(result) : next();
	      });
	    }, function (message) {
	      if (getUserConfirmation && typeof message === 'string') {
	        getUserConfirmation(message, function (ok) {
	          return callback(ok !== false);
	        });
	      } else {
	        callback(message !== false);
	      }
	    });
	  };
	
	  var transitionTo = function transitionTo(nextLocation) {
	    if (currentLocation && (0, _LocationUtils.locationsAreEqual)(currentLocation, nextLocation) || pendingLocation && (0, _LocationUtils.locationsAreEqual)(pendingLocation, nextLocation)) return; // Nothing to do
	
	    pendingLocation = nextLocation;
	
	    confirmTransitionTo(nextLocation, function (ok) {
	      if (pendingLocation !== nextLocation) return; // Transition was interrupted during confirmation
	
	      pendingLocation = null;
	
	      if (ok) {
	        // Treat PUSH to same path like REPLACE to be consistent with browsers
	        if (nextLocation.action === _Actions.PUSH) {
	          var prevPath = (0, _PathUtils.createPath)(currentLocation);
	          var nextPath = (0, _PathUtils.createPath)(nextLocation);
	
	          if (nextPath === prevPath && (0, _LocationUtils.statesAreEqual)(currentLocation.state, nextLocation.state)) nextLocation.action = _Actions.REPLACE;
	        }
	
	        if (nextLocation.action === _Actions.POP) {
	          updateLocation(nextLocation);
	        } else if (nextLocation.action === _Actions.PUSH) {
	          if (pushLocation(nextLocation) !== false) updateLocation(nextLocation);
	        } else if (nextLocation.action === _Actions.REPLACE) {
	          if (replaceLocation(nextLocation) !== false) updateLocation(nextLocation);
	        }
	      } else if (currentLocation && nextLocation.action === _Actions.POP) {
	        var prevIndex = allKeys.indexOf(currentLocation.key);
	        var nextIndex = allKeys.indexOf(nextLocation.key);
	
	        if (prevIndex !== -1 && nextIndex !== -1) go(prevIndex - nextIndex); // Restore the URL
	      }
	    });
	  };
	
	  var push = function push(input) {
	    return transitionTo(createLocation(input, _Actions.PUSH));
	  };
	
	  var replace = function replace(input) {
	    return transitionTo(createLocation(input, _Actions.REPLACE));
	  };
	
	  var goBack = function goBack() {
	    return go(-1);
	  };
	
	  var goForward = function goForward() {
	    return go(1);
	  };
	
	  var createKey = function createKey() {
	    return Math.random().toString(36).substr(2, keyLength || 6);
	  };
	
	  var createHref = function createHref(location) {
	    return (0, _PathUtils.createPath)(location);
	  };
	
	  var createLocation = function createLocation(location, action) {
	    var key = arguments.length <= 2 || arguments[2] === undefined ? createKey() : arguments[2];
	    return (0, _LocationUtils.createLocation)(location, action, key);
	  };
	
	  return {
	    getCurrentLocation: getCurrentLocation,
	    listenBefore: listenBefore,
	    listen: listen,
	    transitionTo: transitionTo,
	    push: push,
	    replace: replace,
	    go: go,
	    goBack: goBack,
	    goForward: goForward,
	    createKey: createKey,
	    createPath: _PathUtils.createPath,
	    createHref: createHref,
	    createLocation: createLocation
	  };
	};
	
	exports.default = createHistory;

/***/ },
/* 365 */
/***/ function(module, exports) {

	"use strict";
	
	exports.__esModule = true;
	var loopAsync = exports.loopAsync = function loopAsync(turns, work, callback) {
	  var currentTurn = 0,
	      isDone = false;
	  var isSync = false,
	      hasNext = false,
	      doneArgs = void 0;
	
	  var done = function done() {
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    isDone = true;
	
	    if (isSync) {
	      // Iterate instead of recursing if possible.
	      doneArgs = args;
	      return;
	    }
	
	    callback.apply(undefined, args);
	  };
	
	  var next = function next() {
	    if (isDone) return;
	
	    hasNext = true;
	
	    if (isSync) return; // Iterate instead of recursing if possible.
	
	    isSync = true;
	
	    while (!isDone && currentTurn < turns && hasNext) {
	      hasNext = false;
	      work(currentTurn++, next, done);
	    }
	
	    isSync = false;
	
	    if (isDone) {
	      // This means the loop finished synchronously.
	      callback.apply(undefined, doneArgs);
	      return;
	    }
	
	    if (currentTurn >= turns && hasNext) {
	      isDone = true;
	      callback();
	    }
	  };
	
	  next();
	};

/***/ },
/* 366 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.default = useRouterHistory;
	
	var _useQueries = __webpack_require__(356);
	
	var _useQueries2 = _interopRequireDefault(_useQueries);
	
	var _useBasename = __webpack_require__(362);
	
	var _useBasename2 = _interopRequireDefault(_useBasename);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function useRouterHistory(createHistory) {
	  return function (options) {
	    var history = (0, _useQueries2.default)((0, _useBasename2.default)(createHistory))(options);
	    return history;
	  };
	}
	module.exports = exports['default'];

/***/ },
/* 367 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _RouterContext = __webpack_require__(342);
	
	var _RouterContext2 = _interopRequireDefault(_RouterContext);
	
	var _routerWarning = __webpack_require__(332);
	
	var _routerWarning2 = _interopRequireDefault(_routerWarning);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = function () {
	  for (var _len = arguments.length, middlewares = Array(_len), _key = 0; _key < _len; _key++) {
	    middlewares[_key] = arguments[_key];
	  }
	
	  if (process.env.NODE_ENV !== 'production') {
	    middlewares.forEach(function (middleware, index) {
	      process.env.NODE_ENV !== 'production' ? (0, _routerWarning2.default)(middleware.renderRouterContext || middleware.renderRouteComponent, 'The middleware specified at index ' + index + ' does not appear to be ' + 'a valid React Router middleware.') : void 0;
	    });
	  }
	
	  var withContext = middlewares.map(function (middleware) {
	    return middleware.renderRouterContext;
	  }).filter(Boolean);
	  var withComponent = middlewares.map(function (middleware) {
	    return middleware.renderRouteComponent;
	  }).filter(Boolean);
	
	  var makeCreateElement = function makeCreateElement() {
	    var baseCreateElement = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _react.createElement;
	    return function (Component, props) {
	      return withComponent.reduceRight(function (previous, renderRouteComponent) {
	        return renderRouteComponent(previous, props);
	      }, baseCreateElement(Component, props));
	    };
	  };
	
	  return function (renderProps) {
	    return withContext.reduceRight(function (previous, renderRouterContext) {
	      return renderRouterContext(previous, renderProps);
	    }, _react2.default.createElement(_RouterContext2.default, _extends({}, renderProps, {
	      createElement: makeCreateElement(renderProps.createElement)
	    })));
	  };
	};
	
	module.exports = exports['default'];
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 368 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _createBrowserHistory = __webpack_require__(369);
	
	var _createBrowserHistory2 = _interopRequireDefault(_createBrowserHistory);
	
	var _createRouterHistory = __webpack_require__(375);
	
	var _createRouterHistory2 = _interopRequireDefault(_createRouterHistory);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = (0, _createRouterHistory2.default)(_createBrowserHistory2.default);
	module.exports = exports['default'];

/***/ },
/* 369 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _invariant = __webpack_require__(316);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	var _ExecutionEnvironment = __webpack_require__(370);
	
	var _BrowserProtocol = __webpack_require__(371);
	
	var BrowserProtocol = _interopRequireWildcard(_BrowserProtocol);
	
	var _RefreshProtocol = __webpack_require__(374);
	
	var RefreshProtocol = _interopRequireWildcard(_RefreshProtocol);
	
	var _DOMUtils = __webpack_require__(372);
	
	var _createHistory = __webpack_require__(364);
	
	var _createHistory2 = _interopRequireDefault(_createHistory);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * Creates and returns a history object that uses HTML5's history API
	 * (pushState, replaceState, and the popstate event) to manage history.
	 * This is the recommended method of managing history in browsers because
	 * it provides the cleanest URLs.
	 *
	 * Note: In browsers that do not support the HTML5 history API full
	 * page reloads will be used to preserve clean URLs. You can force this
	 * behavior using { forceRefresh: true } in options.
	 */
	var createBrowserHistory = function createBrowserHistory() {
	  var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	
	  !_ExecutionEnvironment.canUseDOM ? process.env.NODE_ENV !== 'production' ? (0, _invariant2.default)(false, 'Browser history needs a DOM') : (0, _invariant2.default)(false) : void 0;
	
	  var useRefresh = options.forceRefresh || !(0, _DOMUtils.supportsHistory)();
	  var Protocol = useRefresh ? RefreshProtocol : BrowserProtocol;
	
	  var getUserConfirmation = Protocol.getUserConfirmation;
	  var getCurrentLocation = Protocol.getCurrentLocation;
	  var pushLocation = Protocol.pushLocation;
	  var replaceLocation = Protocol.replaceLocation;
	  var go = Protocol.go;
	
	
	  var history = (0, _createHistory2.default)(_extends({
	    getUserConfirmation: getUserConfirmation }, options, {
	    getCurrentLocation: getCurrentLocation,
	    pushLocation: pushLocation,
	    replaceLocation: replaceLocation,
	    go: go
	  }));
	
	  var listenerCount = 0,
	      stopListener = void 0;
	
	  var startListener = function startListener(listener, before) {
	    if (++listenerCount === 1) stopListener = BrowserProtocol.startListener(history.transitionTo);
	
	    var unlisten = before ? history.listenBefore(listener) : history.listen(listener);
	
	    return function () {
	      unlisten();
	
	      if (--listenerCount === 0) stopListener();
	    };
	  };
	
	  var listenBefore = function listenBefore(listener) {
	    return startListener(listener, true);
	  };
	
	  var listen = function listen(listener) {
	    return startListener(listener, false);
	  };
	
	  return _extends({}, history, {
	    listenBefore: listenBefore,
	    listen: listen
	  });
	};
	
	exports.default = createBrowserHistory;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 370 */
/***/ function(module, exports) {

	'use strict';
	
	exports.__esModule = true;
	var canUseDOM = exports.canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);

/***/ },
/* 371 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.go = exports.replaceLocation = exports.pushLocation = exports.startListener = exports.getUserConfirmation = exports.getCurrentLocation = undefined;
	
	var _LocationUtils = __webpack_require__(360);
	
	var _DOMUtils = __webpack_require__(372);
	
	var _DOMStateStorage = __webpack_require__(373);
	
	var _PathUtils = __webpack_require__(361);
	
	var _ExecutionEnvironment = __webpack_require__(370);
	
	var PopStateEvent = 'popstate';
	var HashChangeEvent = 'hashchange';
	
	var needsHashchangeListener = _ExecutionEnvironment.canUseDOM && !(0, _DOMUtils.supportsPopstateOnHashchange)();
	
	var _createLocation = function _createLocation(historyState) {
	  var key = historyState && historyState.key;
	
	  return (0, _LocationUtils.createLocation)({
	    pathname: window.location.pathname,
	    search: window.location.search,
	    hash: window.location.hash,
	    state: key ? (0, _DOMStateStorage.readState)(key) : undefined
	  }, undefined, key);
	};
	
	var getCurrentLocation = exports.getCurrentLocation = function getCurrentLocation() {
	  var historyState = void 0;
	  try {
	    historyState = window.history.state || {};
	  } catch (error) {
	    // IE 11 sometimes throws when accessing window.history.state
	    // See https://github.com/ReactTraining/history/pull/289
	    historyState = {};
	  }
	
	  return _createLocation(historyState);
	};
	
	var getUserConfirmation = exports.getUserConfirmation = function getUserConfirmation(message, callback) {
	  return callback(window.confirm(message));
	}; // eslint-disable-line no-alert
	
	var startListener = exports.startListener = function startListener(listener) {
	  var handlePopState = function handlePopState(event) {
	    if (event.state !== undefined) // Ignore extraneous popstate events in WebKit
	      listener(_createLocation(event.state));
	  };
	
	  (0, _DOMUtils.addEventListener)(window, PopStateEvent, handlePopState);
	
	  var handleUnpoppedHashChange = function handleUnpoppedHashChange() {
	    return listener(getCurrentLocation());
	  };
	
	  if (needsHashchangeListener) {
	    (0, _DOMUtils.addEventListener)(window, HashChangeEvent, handleUnpoppedHashChange);
	  }
	
	  return function () {
	    (0, _DOMUtils.removeEventListener)(window, PopStateEvent, handlePopState);
	
	    if (needsHashchangeListener) {
	      (0, _DOMUtils.removeEventListener)(window, HashChangeEvent, handleUnpoppedHashChange);
	    }
	  };
	};
	
	var updateLocation = function updateLocation(location, updateState) {
	  var state = location.state;
	  var key = location.key;
	
	
	  if (state !== undefined) (0, _DOMStateStorage.saveState)(key, state);
	
	  updateState({ key: key }, (0, _PathUtils.createPath)(location));
	};
	
	var pushLocation = exports.pushLocation = function pushLocation(location) {
	  return updateLocation(location, function (state, path) {
	    return window.history.pushState(state, null, path);
	  });
	};
	
	var replaceLocation = exports.replaceLocation = function replaceLocation(location) {
	  return updateLocation(location, function (state, path) {
	    return window.history.replaceState(state, null, path);
	  });
	};
	
	var go = exports.go = function go(n) {
	  if (n) window.history.go(n);
	};

/***/ },
/* 372 */
/***/ function(module, exports) {

	'use strict';
	
	exports.__esModule = true;
	var addEventListener = exports.addEventListener = function addEventListener(node, event, listener) {
	  return node.addEventListener ? node.addEventListener(event, listener, false) : node.attachEvent('on' + event, listener);
	};
	
	var removeEventListener = exports.removeEventListener = function removeEventListener(node, event, listener) {
	  return node.removeEventListener ? node.removeEventListener(event, listener, false) : node.detachEvent('on' + event, listener);
	};
	
	/**
	 * Returns true if the HTML5 history API is supported. Taken from Modernizr.
	 *
	 * https://github.com/Modernizr/Modernizr/blob/master/LICENSE
	 * https://github.com/Modernizr/Modernizr/blob/master/feature-detects/history.js
	 * changed to avoid false negatives for Windows Phones: https://github.com/reactjs/react-router/issues/586
	 */
	var supportsHistory = exports.supportsHistory = function supportsHistory() {
	  var ua = window.navigator.userAgent;
	
	  if ((ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) && ua.indexOf('Mobile Safari') !== -1 && ua.indexOf('Chrome') === -1 && ua.indexOf('Windows Phone') === -1) return false;
	
	  return window.history && 'pushState' in window.history;
	};
	
	/**
	 * Returns false if using go(n) with hash history causes a full page reload.
	 */
	var supportsGoWithoutReloadUsingHash = exports.supportsGoWithoutReloadUsingHash = function supportsGoWithoutReloadUsingHash() {
	  return window.navigator.userAgent.indexOf('Firefox') === -1;
	};
	
	/**
	 * Returns true if browser fires popstate on hash change.
	 * IE10 and IE11 do not.
	 */
	var supportsPopstateOnHashchange = exports.supportsPopstateOnHashchange = function supportsPopstateOnHashchange() {
	  return window.navigator.userAgent.indexOf('Trident') === -1;
	};

/***/ },
/* 373 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';
	
	exports.__esModule = true;
	exports.readState = exports.saveState = undefined;
	
	var _warning = __webpack_require__(333);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var QuotaExceededErrors = {
	  QuotaExceededError: true,
	  QUOTA_EXCEEDED_ERR: true
	};
	
	var SecurityErrors = {
	  SecurityError: true
	};
	
	var KeyPrefix = '@@History/';
	
	var createKey = function createKey(key) {
	  return KeyPrefix + key;
	};
	
	var saveState = exports.saveState = function saveState(key, state) {
	  if (!window.sessionStorage) {
	    // Session storage is not available or hidden.
	    // sessionStorage is undefined in Internet Explorer when served via file protocol.
	    process.env.NODE_ENV !== 'production' ? (0, _warning2.default)(false, '[history] Unable to save state; sessionStorage is not available') : void 0;
	
	    return;
	  }
	
	  try {
	    if (state == null) {
	      window.sessionStorage.removeItem(createKey(key));
	    } else {
	      window.sessionStorage.setItem(createKey(key), JSON.stringify(state));
	    }
	  } catch (error) {
	    if (SecurityErrors[error.name]) {
	      // Blocking cookies in Chrome/Firefox/Safari throws SecurityError on any
	      // attempt to access window.sessionStorage.
	      process.env.NODE_ENV !== 'production' ? (0, _warning2.default)(false, '[history] Unable to save state; sessionStorage is not available due to security settings') : void 0;
	
	      return;
	    }
	
	    if (QuotaExceededErrors[error.name] && window.sessionStorage.length === 0) {
	      // Safari "private mode" throws QuotaExceededError.
	      process.env.NODE_ENV !== 'production' ? (0, _warning2.default)(false, '[history] Unable to save state; sessionStorage is not available in Safari private mode') : void 0;
	
	      return;
	    }
	
	    throw error;
	  }
	};
	
	var readState = exports.readState = function readState(key) {
	  var json = void 0;
	  try {
	    json = window.sessionStorage.getItem(createKey(key));
	  } catch (error) {
	    if (SecurityErrors[error.name]) {
	      // Blocking cookies in Chrome/Firefox/Safari throws SecurityError on any
	      // attempt to access window.sessionStorage.
	      process.env.NODE_ENV !== 'production' ? (0, _warning2.default)(false, '[history] Unable to read state; sessionStorage is not available due to security settings') : void 0;
	
	      return undefined;
	    }
	  }
	
	  if (json) {
	    try {
	      return JSON.parse(json);
	    } catch (error) {
	      // Ignore invalid JSON.
	    }
	  }
	
	  return undefined;
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 374 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.replaceLocation = exports.pushLocation = exports.getCurrentLocation = exports.go = exports.getUserConfirmation = undefined;
	
	var _BrowserProtocol = __webpack_require__(371);
	
	Object.defineProperty(exports, 'getUserConfirmation', {
	  enumerable: true,
	  get: function get() {
	    return _BrowserProtocol.getUserConfirmation;
	  }
	});
	Object.defineProperty(exports, 'go', {
	  enumerable: true,
	  get: function get() {
	    return _BrowserProtocol.go;
	  }
	});
	
	var _LocationUtils = __webpack_require__(360);
	
	var _PathUtils = __webpack_require__(361);
	
	var getCurrentLocation = exports.getCurrentLocation = function getCurrentLocation() {
	  return (0, _LocationUtils.createLocation)(window.location);
	};
	
	var pushLocation = exports.pushLocation = function pushLocation(location) {
	  window.location.href = (0, _PathUtils.createPath)(location);
	  return false; // Don't update location
	};
	
	var replaceLocation = exports.replaceLocation = function replaceLocation(location) {
	  window.location.replace((0, _PathUtils.createPath)(location));
	  return false; // Don't update location
	};

/***/ },
/* 375 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	exports.default = function (createHistory) {
	  var history = void 0;
	  if (canUseDOM) history = (0, _useRouterHistory2.default)(createHistory)();
	  return history;
	};
	
	var _useRouterHistory = __webpack_require__(366);
	
	var _useRouterHistory2 = _interopRequireDefault(_useRouterHistory);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);
	
	module.exports = exports['default'];

/***/ },
/* 376 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _createHashHistory = __webpack_require__(377);
	
	var _createHashHistory2 = _interopRequireDefault(_createHashHistory);
	
	var _createRouterHistory = __webpack_require__(375);
	
	var _createRouterHistory2 = _interopRequireDefault(_createRouterHistory);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = (0, _createRouterHistory2.default)(_createHashHistory2.default);
	module.exports = exports['default'];

/***/ },
/* 377 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _warning = __webpack_require__(333);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	var _invariant = __webpack_require__(316);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	var _ExecutionEnvironment = __webpack_require__(370);
	
	var _DOMUtils = __webpack_require__(372);
	
	var _HashProtocol = __webpack_require__(378);
	
	var HashProtocol = _interopRequireWildcard(_HashProtocol);
	
	var _createHistory = __webpack_require__(364);
	
	var _createHistory2 = _interopRequireDefault(_createHistory);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var DefaultQueryKey = '_k';
	
	var addLeadingSlash = function addLeadingSlash(path) {
	  return path.charAt(0) === '/' ? path : '/' + path;
	};
	
	var HashPathCoders = {
	  hashbang: {
	    encodePath: function encodePath(path) {
	      return path.charAt(0) === '!' ? path : '!' + path;
	    },
	    decodePath: function decodePath(path) {
	      return path.charAt(0) === '!' ? path.substring(1) : path;
	    }
	  },
	  noslash: {
	    encodePath: function encodePath(path) {
	      return path.charAt(0) === '/' ? path.substring(1) : path;
	    },
	    decodePath: addLeadingSlash
	  },
	  slash: {
	    encodePath: addLeadingSlash,
	    decodePath: addLeadingSlash
	  }
	};
	
	var createHashHistory = function createHashHistory() {
	  var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	
	  !_ExecutionEnvironment.canUseDOM ? process.env.NODE_ENV !== 'production' ? (0, _invariant2.default)(false, 'Hash history needs a DOM') : (0, _invariant2.default)(false) : void 0;
	
	  var queryKey = options.queryKey;
	  var hashType = options.hashType;
	
	
	  process.env.NODE_ENV !== 'production' ? (0, _warning2.default)(queryKey !== false, 'Using { queryKey: false } no longer works. Instead, just don\'t ' + 'use location state if you don\'t want a key in your URL query string') : void 0;
	
	  if (typeof queryKey !== 'string') queryKey = DefaultQueryKey;
	
	  if (hashType == null) hashType = 'slash';
	
	  if (!(hashType in HashPathCoders)) {
	    process.env.NODE_ENV !== 'production' ? (0, _warning2.default)(false, 'Invalid hash type: %s', hashType) : void 0;
	
	    hashType = 'slash';
	  }
	
	  var pathCoder = HashPathCoders[hashType];
	
	  var getUserConfirmation = HashProtocol.getUserConfirmation;
	
	
	  var getCurrentLocation = function getCurrentLocation() {
	    return HashProtocol.getCurrentLocation(pathCoder, queryKey);
	  };
	
	  var pushLocation = function pushLocation(location) {
	    return HashProtocol.pushLocation(location, pathCoder, queryKey);
	  };
	
	  var replaceLocation = function replaceLocation(location) {
	    return HashProtocol.replaceLocation(location, pathCoder, queryKey);
	  };
	
	  var history = (0, _createHistory2.default)(_extends({
	    getUserConfirmation: getUserConfirmation }, options, {
	    getCurrentLocation: getCurrentLocation,
	    pushLocation: pushLocation,
	    replaceLocation: replaceLocation,
	    go: HashProtocol.go
	  }));
	
	  var listenerCount = 0,
	      stopListener = void 0;
	
	  var startListener = function startListener(listener, before) {
	    if (++listenerCount === 1) stopListener = HashProtocol.startListener(history.transitionTo, pathCoder, queryKey);
	
	    var unlisten = before ? history.listenBefore(listener) : history.listen(listener);
	
	    return function () {
	      unlisten();
	
	      if (--listenerCount === 0) stopListener();
	    };
	  };
	
	  var listenBefore = function listenBefore(listener) {
	    return startListener(listener, true);
	  };
	
	  var listen = function listen(listener) {
	    return startListener(listener, false);
	  };
	
	  var goIsSupportedWithoutReload = (0, _DOMUtils.supportsGoWithoutReloadUsingHash)();
	
	  var go = function go(n) {
	    process.env.NODE_ENV !== 'production' ? (0, _warning2.default)(goIsSupportedWithoutReload, 'Hash history go(n) causes a full page reload in this browser') : void 0;
	
	    history.go(n);
	  };
	
	  var createHref = function createHref(path) {
	    return '#' + pathCoder.encodePath(history.createHref(path));
	  };
	
	  return _extends({}, history, {
	    listenBefore: listenBefore,
	    listen: listen,
	    go: go,
	    createHref: createHref
	  });
	};
	
	exports.default = createHashHistory;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 378 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';
	
	exports.__esModule = true;
	exports.replaceLocation = exports.pushLocation = exports.startListener = exports.getCurrentLocation = exports.go = exports.getUserConfirmation = undefined;
	
	var _BrowserProtocol = __webpack_require__(371);
	
	Object.defineProperty(exports, 'getUserConfirmation', {
	  enumerable: true,
	  get: function get() {
	    return _BrowserProtocol.getUserConfirmation;
	  }
	});
	Object.defineProperty(exports, 'go', {
	  enumerable: true,
	  get: function get() {
	    return _BrowserProtocol.go;
	  }
	});
	
	var _warning = __webpack_require__(333);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	var _LocationUtils = __webpack_require__(360);
	
	var _DOMUtils = __webpack_require__(372);
	
	var _DOMStateStorage = __webpack_require__(373);
	
	var _PathUtils = __webpack_require__(361);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var HashChangeEvent = 'hashchange';
	
	var getHashPath = function getHashPath() {
	  // We can't use window.location.hash here because it's not
	  // consistent across browsers - Firefox will pre-decode it!
	  var href = window.location.href;
	  var hashIndex = href.indexOf('#');
	  return hashIndex === -1 ? '' : href.substring(hashIndex + 1);
	};
	
	var pushHashPath = function pushHashPath(path) {
	  return window.location.hash = path;
	};
	
	var replaceHashPath = function replaceHashPath(path) {
	  var hashIndex = window.location.href.indexOf('#');
	
	  window.location.replace(window.location.href.slice(0, hashIndex >= 0 ? hashIndex : 0) + '#' + path);
	};
	
	var getCurrentLocation = exports.getCurrentLocation = function getCurrentLocation(pathCoder, queryKey) {
	  var path = pathCoder.decodePath(getHashPath());
	  var key = (0, _PathUtils.getQueryStringValueFromPath)(path, queryKey);
	
	  var state = void 0;
	  if (key) {
	    path = (0, _PathUtils.stripQueryStringValueFromPath)(path, queryKey);
	    state = (0, _DOMStateStorage.readState)(key);
	  }
	
	  var init = (0, _PathUtils.parsePath)(path);
	  init.state = state;
	
	  return (0, _LocationUtils.createLocation)(init, undefined, key);
	};
	
	var prevLocation = void 0;
	
	var startListener = exports.startListener = function startListener(listener, pathCoder, queryKey) {
	  var handleHashChange = function handleHashChange() {
	    var path = getHashPath();
	    var encodedPath = pathCoder.encodePath(path);
	
	    if (path !== encodedPath) {
	      // Always be sure we have a properly-encoded hash.
	      replaceHashPath(encodedPath);
	    } else {
	      var currentLocation = getCurrentLocation(pathCoder, queryKey);
	
	      if (prevLocation && currentLocation.key && prevLocation.key === currentLocation.key) return; // Ignore extraneous hashchange events
	
	      prevLocation = currentLocation;
	
	      listener(currentLocation);
	    }
	  };
	
	  // Ensure the hash is encoded properly.
	  var path = getHashPath();
	  var encodedPath = pathCoder.encodePath(path);
	
	  if (path !== encodedPath) replaceHashPath(encodedPath);
	
	  (0, _DOMUtils.addEventListener)(window, HashChangeEvent, handleHashChange);
	
	  return function () {
	    return (0, _DOMUtils.removeEventListener)(window, HashChangeEvent, handleHashChange);
	  };
	};
	
	var updateLocation = function updateLocation(location, pathCoder, queryKey, updateHash) {
	  var state = location.state;
	  var key = location.key;
	
	
	  var path = pathCoder.encodePath((0, _PathUtils.createPath)(location));
	
	  if (state !== undefined) {
	    path = (0, _PathUtils.addQueryStringValueToPath)(path, queryKey, key);
	    (0, _DOMStateStorage.saveState)(key, state);
	  }
	
	  prevLocation = location;
	
	  updateHash(path);
	};
	
	var pushLocation = exports.pushLocation = function pushLocation(location, pathCoder, queryKey) {
	  return updateLocation(location, pathCoder, queryKey, function (path) {
	    if (getHashPath() !== path) {
	      pushHashPath(path);
	    } else {
	      process.env.NODE_ENV !== 'production' ? (0, _warning2.default)(false, 'You cannot PUSH the same path using hash history') : void 0;
	    }
	  });
	};
	
	var replaceLocation = exports.replaceLocation = function replaceLocation(location, pathCoder, queryKey) {
	  return updateLocation(location, pathCoder, queryKey, function (path) {
	    if (getHashPath() !== path) replaceHashPath(path);
	  });
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 379 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _greeting_container = __webpack_require__(380);
	
	var _greeting_container2 = _interopRequireDefault(_greeting_container);
	
	var _nav_container = __webpack_require__(384);
	
	var _nav_container2 = _interopRequireDefault(_nav_container);
	
	var _footer_container = __webpack_require__(396);
	
	var _footer_container2 = _interopRequireDefault(_footer_container);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var App = function App(_ref) {
	  var children = _ref.children;
	  return _react2.default.createElement(
	    'div',
	    { className: 'wrapper' },
	    _react2.default.createElement(_nav_container2.default, null),
	    children,
	    _react2.default.createElement(_footer_container2.default, null)
	  );
	};
	
	exports.default = App;

/***/ },
/* 380 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _reactRedux = __webpack_require__(309);
	
	var _greeting = __webpack_require__(381);
	
	var _greeting2 = _interopRequireDefault(_greeting);
	
	var _session_actions = __webpack_require__(202);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var mapStateToProps = function mapStateToProps(state) {
	  return {
	    currentUser: state.session.currentUser
	  };
	};
	
	var mapDispatchToProps = function mapDispatchToProps(dispatch) {
	  return {
	    logout: function logout() {
	      return dispatch((0, _session_actions.logout)());
	    }
	  };
	};
	
	exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(_greeting2.default);

/***/ },
/* 381 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactRouter = __webpack_require__(326);
	
	var _reactFontawesome = __webpack_require__(382);
	
	var _reactFontawesome2 = _interopRequireDefault(_reactFontawesome);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var Greeting = function (_React$Component) {
	  _inherits(Greeting, _React$Component);
	
	  function Greeting(props) {
	    _classCallCheck(this, Greeting);
	
	    return _possibleConstructorReturn(this, (Greeting.__proto__ || Object.getPrototypeOf(Greeting)).call(this, props));
	  }
	
	  _createClass(Greeting, [{
	    key: 'linkSignIn',
	    value: function linkSignIn() {
	      return _react2.default.createElement(
	        _reactRouter.Link,
	        { to: '/login' },
	        'Sign In ',
	        _react2.default.createElement(_reactFontawesome2.default, {
	          className: 'fa-sign-in fa',
	          name: 'signout',
	          size: 'lg',
	          style: { textShadow: '0 1px 0 rgba(0, 0, 0, 0.3)' }
	        })
	      );
	    }
	  }, {
	    key: 'linkSignOut',
	    value: function linkSignOut() {
	      return _react2.default.createElement(
	        _reactRouter.Link,
	        { to: '/', onClick: this.props.logout },
	        'Log Out ',
	        _react2.default.createElement(_reactFontawesome2.default, {
	          className: 'fa-sign-out fa',
	          name: 'signout',
	          size: 'lg',
	          style: { textShadow: '0 1px 0 rgba(0, 0, 0, 0.3)' }
	        })
	      );
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      return _react2.default.createElement(
	        'div',
	        { className: 'main splash' },
	        _react2.default.createElement(
	          'div',
	          { className: 'greeting' },
	          _react2.default.createElement(
	            'h1',
	            { className: 'slogan' },
	            'Share, Rent, Get Paid for Your Gear!'
	          )
	        )
	      );
	    }
	  }]);
	
	  return Greeting;
	}(_react2.default.Component);
	
	exports.default = Greeting;

/***/ },
/* 382 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _screenReaderStyles = __webpack_require__(383);
	
	var _screenReaderStyles2 = _interopRequireDefault(_screenReaderStyles);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	/**
	 * A React component for the font-awesome icon library.
	 *
	 *
	 * @param {String} [ariaLabel] An extra accessibility label to put on the icon
	 * @param {Boolean} [border=false] Whether or not to show a border radius
	 * @param {String} [className] An extra set of CSS classes to add to the component
	 * @param {Object} [cssModule] Option to pass FontAwesome CSS as a module
	 * @param {Boolean} [fixedWidth=false] Make buttons fixed width
	 * @param {String} [flip=false] Flip the icon's orientation.
	 * @param {Boolean} [inverse=false]Inverse the icon's color
	 * @param {String} name Name of the icon to use
	 * @param {Boolean} [pulse=false] Rotate icon with 8 steps (rather than smoothly)
	 * @param {Number} [rotate] The degress to rotate the icon by
	 * @param {String} [size] The icon scaling size
	 * @param {Boolean} [spin=false] Spin the icon
	 * @param {String} [stack] Stack an icon on top of another
	 * @param {String} [tag=span] The HTML tag to use as a string (eg 'i' or 'em')
	 * @module FontAwesome
	 * @type {ReactClass}
	 */
	exports.default = _react2.default.createClass({
	
	  displayName: 'FontAwesome',
	
	  propTypes: {
	    ariaLabel: _react2.default.PropTypes.string,
	    border: _react2.default.PropTypes.bool,
	    className: _react2.default.PropTypes.string,
	    cssModule: _react2.default.PropTypes.object,
	    fixedWidth: _react2.default.PropTypes.bool,
	    flip: _react2.default.PropTypes.oneOf(['horizontal', 'vertical']),
	    inverse: _react2.default.PropTypes.bool,
	    name: _react2.default.PropTypes.string.isRequired,
	    pulse: _react2.default.PropTypes.bool,
	    rotate: _react2.default.PropTypes.oneOf([90, 180, 270]),
	    size: _react2.default.PropTypes.oneOf(['lg', '2x', '3x', '4x', '5x']),
	    spin: _react2.default.PropTypes.bool,
	    stack: _react2.default.PropTypes.oneOf(['1x', '2x']),
	    tag: _react2.default.PropTypes.string
	  },
	
	  render: function render() {
	    var _props = this.props;
	    var border = _props.border;
	    var cssModule = _props.cssModule;
	    var className = _props.className;
	    var fixedWidth = _props.fixedWidth;
	    var flip = _props.flip;
	    var inverse = _props.inverse;
	    var name = _props.name;
	    var pulse = _props.pulse;
	    var rotate = _props.rotate;
	    var size = _props.size;
	    var spin = _props.spin;
	    var stack = _props.stack;
	    var _props$tag = _props.tag;
	    var tag = _props$tag === undefined ? 'span' : _props$tag;
	    var ariaLabel = _props.ariaLabel;
	
	    var props = _objectWithoutProperties(_props, ['border', 'cssModule', 'className', 'fixedWidth', 'flip', 'inverse', 'name', 'pulse', 'rotate', 'size', 'spin', 'stack', 'tag', 'ariaLabel']);
	
	    var classNames = [];
	
	    if (cssModule) {
	      classNames.push(cssModule['fa']);
	      classNames.push(cssModule['fa-' + name]);
	      size && classNames.push(cssModule['fa-' + size]);
	      spin && classNames.push(cssModule['fa-spin']);
	      pulse && classNames.push(cssModule['fa-pulse']);
	      border && classNames.push(cssModule['fa-border']);
	      fixedWidth && classNames.push(cssModule['fa-fw']);
	      inverse && classNames.push(cssModule['fa-inverse']);
	      flip && classNames.push(cssModule['fa-flip-' + flip]);
	      rotate && classNames.push(cssModule['fa-rotate-' + rotate]);
	      stack && classNames.push(cssModule['fa-stack-' + stack]);
	    } else {
	      classNames.push('fa');
	      classNames.push('fa-' + name);
	      size && classNames.push('fa-' + size);
	      spin && classNames.push('fa-spin');
	      pulse && classNames.push('fa-pulse');
	      border && classNames.push('fa-border');
	      fixedWidth && classNames.push('fa-fw');
	      inverse && classNames.push('fa-inverse');
	      flip && classNames.push('fa-flip-' + flip);
	      rotate && classNames.push('fa-rotate-' + rotate);
	      stack && classNames.push('fa-stack-' + stack);
	    }
	
	    // Add any custom class names at the end.
	    className && classNames.push(className);
	    return _react2.default.createElement(tag, _extends({}, props, { 'aria-hidden': true, className: classNames.join(' ') }), ariaLabel ? _react2.default.createElement('span', { style: _screenReaderStyles2.default }, ariaLabel) : null);
	  }
	});
	module.exports = exports['default'];

/***/ },
/* 383 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = {
	  position: 'absolute',
	  width: '1px',
	  height: '1px',
	  padding: '0px',
	  margin: '-1px',
	  overflow: 'hidden',
	  clip: 'rect(0px, 0px, 0px, 0px)',
	  border: '0px'
	};
	module.exports = exports['default'];

/***/ },
/* 384 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _reactRedux = __webpack_require__(309);
	
	var _nav = __webpack_require__(385);
	
	var _nav2 = _interopRequireDefault(_nav);
	
	var _session_actions = __webpack_require__(202);
	
	var _filter_actions = __webpack_require__(300);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var mapStateToProps = function mapStateToProps(state) {
	  return {
	    currentUser: state.session.currentUser,
	    map: state.filters.center.map
	  };
	};
	
	var mapDispatchToProps = function mapDispatchToProps(dispatch) {
	  return {
	    signup: function signup(signUpData) {
	      return dispatch((0, _session_actions.signup)(signUpData));
	    },
	    login: function login(loginData) {
	      return dispatch((0, _session_actions.login)(loginData));
	    },
	    logout: function logout() {
	      return dispatch((0, _session_actions.logout)());
	    },
	    receiveCenter: function receiveCenter(center) {
	      return dispatch((0, _filter_actions.receiveCenter)(center));
	    }
	  };
	};
	
	exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(_nav2.default);

/***/ },
/* 385 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactRouter = __webpack_require__(326);
	
	var _reactFontawesome = __webpack_require__(382);
	
	var _reactFontawesome2 = _interopRequireDefault(_reactFontawesome);
	
	var _reactModal = __webpack_require__(386);
	
	var _reactModal2 = _interopRequireDefault(_reactModal);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var Nav = function (_React$Component) {
	  _inherits(Nav, _React$Component);
	
	  function Nav(props) {
	    _classCallCheck(this, Nav);
	
	    var _this = _possibleConstructorReturn(this, (Nav.__proto__ || Object.getPrototypeOf(Nav)).call(this, props));
	
	    _this.state = {
	      dropDownHide: true,
	      howModalOpen: false,
	      contactModalOpen: false,
	      termsModalOpen: false
	    };
	    _this.handleLogout = _this.handleLogout.bind(_this);
	    _this.toggleDropDown = _this.toggleDropDown.bind(_this);
	    _this.initAutocomplete = _this.initAutocomplete.bind(_this);
	    _this.updateLocation = _this.updateLocation.bind(_this);
	    _this.geolocate = _this.geolocate.bind(_this);
	    _this.redirect = _this.redirect.bind(_this);
	    _this.focusSearch = _this.focusSearch.bind(_this);
	    _this.handleClick = _this.handleClick.bind(_this);
	    return _this;
	  }
	
	  _createClass(Nav, [{
	    key: 'handleClick',
	    value: function handleClick(city) {
	      if (city === "sf") {
	        this.props.receiveCenter({ lat: 37.75023068394664, lng: -122.44104483349611 });
	      } else if (city === "ny") {
	        this.props.receiveCenter({ lat: 40.7127837, lng: -74.00594130000002 });
	      }
	      this.redirect("search");
	    }
	  }, {
	    key: 'redirect',
	    value: function redirect(route) {
	      this.props.router.replace(route);
	    }
	  }, {
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      this.initAutocomplete();
	      this.focusSearch();
	    }
	  }, {
	    key: 'initAutocomplete',
	    value: function initAutocomplete() {
	      var autocomplete = new google.maps.places.Autocomplete(
	      /** @type {!HTMLInputElement} */document.getElementById('autocomplete'), { types: ['geocode'] });
	      autocomplete.addListener('place_changed', this.updateLocation);
	      this.autocomplete = autocomplete;
	    }
	  }, {
	    key: 'updateLocation',
	    value: function updateLocation() {
	      if (this.autocomplete.getPlace().geometry === undefined) return null;
	      var lat = this.autocomplete.getPlace().geometry.location.lat();
	      var lng = this.autocomplete.getPlace().geometry.location.lng();
	      var searchAddress = this.autocomplete.getPlace().formatted_address;
	      var latlng = {
	        lat: lat,
	        lng: lng
	      };
	      if (this.props.router.location.pathname !== "/search") this.redirect('search');
	      this.setState({ searchAddress: searchAddress, latlng: latlng });
	      this.props.receiveCenter(latlng);
	    }
	  }, {
	    key: 'geolocate',
	    value: function geolocate() {
	      var that = this;
	      if (navigator.geolocation) {
	        navigator.geolocation.getCurrentPosition(function (position) {
	          var geolocation = {
	            lat: position.coords.latitude,
	            lng: position.coords.longitude
	          };
	          var circle = new google.maps.Circle({
	            center: geolocation,
	            radius: position.coords.accuracy
	          });
	          that.autocomplete.setBounds(circle.getBounds());
	        });
	      }
	    }
	  }, {
	    key: 'focusSearch',
	    value: function focusSearch() {
	      document.getElementById("autocomplete").focus();
	    }
	  }, {
	    key: 'linkSignIn',
	    value: function linkSignIn() {
	      return _react2.default.createElement(
	        _reactRouter.Link,
	        { to: '/login' },
	        'Sign In ',
	        _react2.default.createElement(_reactFontawesome2.default, {
	          className: 'fa-sign-in fa',
	          name: 'signout',
	          size: 'lg',
	          style: { textShadow: '0 1px 0 rgba(0, 0, 0, 0.3)' }
	        })
	      );
	    }
	  }, {
	    key: 'handleLogout',
	    value: function handleLogout() {
	      document.getElementById("autocomplete").value = "";
	      this.props.logout();
	      this.props.router.replace('/');
	    }
	  }, {
	    key: 'linkSignOut',
	    value: function linkSignOut() {
	      return _react2.default.createElement(
	        _reactRouter.Link,
	        { to: '/', onClick: this.handleLogout },
	        'Log Out ',
	        _react2.default.createElement(_reactFontawesome2.default, {
	          className: 'fa-sign-out fa',
	          name: 'signout',
	          size: 'lg',
	          style: { textShadow: '0 1px 0 rgba(0, 0, 0, 0.3)' }
	        })
	      );
	    }
	  }, {
	    key: 'toggleDropDown',
	    value: function toggleDropDown() {
	      this.setState({ dropDownHide: !this.state.dropDownHide });
	    }
	  }, {
	    key: 'closeModal',
	    value: function closeModal(attr) {
	      this.setState(_defineProperty({}, attr, false));
	    }
	  }, {
	    key: 'openModal',
	    value: function openModal(attr) {
	      this.setState(_defineProperty({}, attr, true));
	    }
	  }, {
	    key: 'renderModals',
	    value: function renderModals() {
	      var _this2 = this;
	
	      return _react2.default.createElement(
	        'div',
	        null,
	        _react2.default.createElement(
	          _reactModal2.default,
	          {
	            isOpen: this.state.howModalOpen,
	            onRequestClose: function onRequestClose() {
	              return _this2.closeModal("howModalOpen");
	            },
	            className: 'modal-how',
	            overlayClassName: 'overlayModal',
	            contentLabel: 'Modal',
	            transitionName: 'modal-anim' },
	          _react2.default.createElement(
	            'div',
	            { className: 'how-container' },
	            _react2.default.createElement('div', { className: 'square-logo-how' }),
	            _react2.default.createElement(
	              'table',
	              { className: 'contact' },
	              _react2.default.createElement(
	                'tbody',
	                null,
	                _react2.default.createElement(
	                  'tr',
	                  null,
	                  _react2.default.createElement(
	                    'td',
	                    null,
	                    _react2.default.createElement(
	                      'h1',
	                      { className: 'contact-header' },
	                      'Youbquity'
	                    )
	                  )
	                ),
	                _react2.default.createElement(
	                  'tr',
	                  null,
	                  _react2.default.createElement(
	                    'td',
	                    null,
	                    _react2.default.createElement('br', null),
	                    _react2.default.createElement(
	                      'p',
	                      { className: 'how' },
	                      'Make the most of your equipment and it rent it out to others!'
	                    ),
	                    _react2.default.createElement(
	                      'p',
	                      { className: 'how' },
	                      'Ubiquity allows you to list your equipment to others.'
	                    ),
	                    _react2.default.createElement(
	                      'p',
	                      { className: 'how' },
	                      'Save the environment and make extra money!'
	                    )
	                  )
	                )
	              )
	            )
	          )
	        ),
	        _react2.default.createElement(
	          _reactModal2.default,
	          {
	            isOpen: this.state.contactModalOpen,
	            onRequestClose: function onRequestClose() {
	              return _this2.closeModal("contactModalOpen");
	            },
	            className: 'modal-contact',
	            overlayClassName: 'overlayModal',
	            contentLabel: 'Modal',
	            transitionName: 'modal-anim' },
	          _react2.default.createElement(
	            'div',
	            { className: 'contact-container' },
	            _react2.default.createElement(
	              'table',
	              { className: 'contact' },
	              _react2.default.createElement(
	                'tbody',
	                null,
	                _react2.default.createElement(
	                  'tr',
	                  null,
	                  _react2.default.createElement(
	                    'td',
	                    null,
	                    _react2.default.createElement('img', { src: 'http://res.cloudinary.com/dkympkwdz/image/upload/v1484853581/Logo-2C-21px-R_rc35uu.png' })
	                  ),
	                  _react2.default.createElement(
	                    'td',
	                    null,
	                    _react2.default.createElement(
	                      'a',
	                      { className: 'contact', target: '_blank', href: 'http://www.linkedin.com/in/randyjap' },
	                      'www.linkedin.com/in/randyjap'
	                    )
	                  )
	                ),
	                _react2.default.createElement(
	                  'tr',
	                  null,
	                  _react2.default.createElement(
	                    'td',
	                    null,
	                    _react2.default.createElement('img', { className: 'avatar', src: 'https://avatars0.githubusercontent.com/u/13705970?v=3&s=460' })
	                  ),
	                  _react2.default.createElement(
	                    'td',
	                    null,
	                    _react2.default.createElement(
	                      'a',
	                      { className: 'contact', target: '_blank', href: 'http://www.randyjap.com' },
	                      'www.randyjap.com'
	                    )
	                  )
	                ),
	                _react2.default.createElement(
	                  'tr',
	                  null,
	                  _react2.default.createElement(
	                    'td',
	                    null,
	                    _react2.default.createElement('img', { src: 'http://res.cloudinary.com/dkympkwdz/image/upload/v1484853612/GitHub-Mark-64px_rfmfmn.png' })
	                  ),
	                  _react2.default.createElement(
	                    'td',
	                    null,
	                    _react2.default.createElement(
	                      'a',
	                      { className: 'contact', target: '_blank', href: 'http://www.github.com/randyjap/ubiquity' },
	                      'www.github.com/randyjap/ubiquity'
	                    )
	                  )
	                )
	              )
	            )
	          )
	        ),
	        _react2.default.createElement(
	          _reactModal2.default,
	          {
	            isOpen: this.state.termsModalOpen,
	            onRequestClose: function onRequestClose() {
	              return _this2.closeModal("termsModalOpen");
	            },
	            className: 'modal-contact',
	            overlayClassName: 'overlayModal',
	            contentLabel: 'Modal',
	            transitionName: 'modal-anim' },
	          _react2.default.createElement(
	            'div',
	            { className: 'contact-container' },
	            _react2.default.createElement(
	              'table',
	              { className: 'contact' },
	              _react2.default.createElement(
	                'tbody',
	                null,
	                _react2.default.createElement(
	                  'tr',
	                  null,
	                  _react2.default.createElement(
	                    'td',
	                    null,
	                    _react2.default.createElement(
	                      'h1',
	                      { className: 'contact-header' },
	                      'Terms'
	                    )
	                  )
	                ),
	                _react2.default.createElement(
	                  'tr',
	                  null,
	                  _react2.default.createElement(
	                    'td',
	                    null,
	                    _react2.default.createElement('br', null),
	                    'All listings are for demonstrational purposes only and are completely fictional.'
	                  )
	                )
	              )
	            )
	          )
	        )
	      );
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _this3 = this;
	
	      var name = "Login Here";
	      var dropDown = void 0;
	      var fa = void 0;
	      if (this.props.currentUser === null) {
	        fa = _react2.default.createElement(_reactFontawesome2.default, {
	          className: 'fa fa-power-off pointer',
	          name: 'user',
	          size: '2x',
	          style: { color: 'white' }
	        });
	        dropDown = _react2.default.createElement(
	          'ul',
	          { id: 'gear-dropdown', className: this.state.dropDownHide ? "gear-dropdown hidden" : "gear-dropdown" },
	          _react2.default.createElement(
	            'li',
	            null,
	            _react2.default.createElement(
	              'ul',
	              { className: 'sections' },
	              _react2.default.createElement(
	                'li',
	                null,
	                _react2.default.createElement(
	                  _reactRouter.Link,
	                  { onClick: function onClick() {
	                      return _this3.handleClick("sf");
	                    } },
	                  'SAN FRANCISCO'
	                )
	              ),
	              _react2.default.createElement(
	                'li',
	                null,
	                _react2.default.createElement(
	                  _reactRouter.Link,
	                  { onClick: function onClick() {
	                      return _this3.handleClick("ny");
	                    } },
	                  'NEW YORK'
	                )
	              )
	            )
	          ),
	          _react2.default.createElement(
	            'li',
	            null,
	            _react2.default.createElement(
	              'ul',
	              { className: 'help' },
	              _react2.default.createElement(
	                'li',
	                null,
	                _react2.default.createElement(
	                  _reactRouter.Link,
	                  { onClick: function onClick() {
	                      return _this3.openModal("contactModalOpen");
	                    } },
	                  'Contact'
	                )
	              ),
	              _react2.default.createElement(
	                'li',
	                null,
	                _react2.default.createElement(
	                  _reactRouter.Link,
	                  { onClick: function onClick() {
	                      return _this3.openModal("howModalOpen");
	                    } },
	                  'How does this work?'
	                )
	              ),
	              _react2.default.createElement(
	                'li',
	                null,
	                this.linkSignIn()
	              )
	            )
	          )
	        );
	      } else {
	        fa = _react2.default.createElement(_reactFontawesome2.default, {
	          className: 'fa fa-user-circle pointer',
	          name: 'user',
	          size: '2x',
	          style: { textShadow: '0 1px 0 rgba(0, 0, 0, 0.3)' }
	        });
	        name = this.props.currentUser.username;
	        dropDown = _react2.default.createElement(
	          'ul',
	          { id: 'gear-dropdown', className: this.state.dropDownHide ? "gear-dropdown hidden" : "gear-dropdown" },
	          _react2.default.createElement(
	            'li',
	            null,
	            _react2.default.createElement(
	              'ul',
	              { className: 'sections' },
	              _react2.default.createElement(
	                'span',
	                { className: 'dropdown-subtitle' },
	                _react2.default.createElement(
	                  _reactRouter.Link,
	                  { className: 'profile', to: 'profile' },
	                  'YOUR PROFILE PAGE'
	                )
	              )
	            ),
	            _react2.default.createElement(
	              'ul',
	              { className: 'sections' },
	              _react2.default.createElement(
	                'li',
	                null,
	                _react2.default.createElement(
	                  _reactRouter.Link,
	                  { className: 'gear-item', to: 'create' },
	                  'Create New Listing'
	                )
	              ),
	              _react2.default.createElement(
	                'li',
	                null,
	                _react2.default.createElement(
	                  _reactRouter.Link,
	                  { className: 'gear-item', onClick: this.focusSearch, to: 'search' },
	                  'Search'
	                )
	              ),
	              _react2.default.createElement(
	                'li',
	                null,
	                _react2.default.createElement(
	                  _reactRouter.Link,
	                  { className: 'gear-item', to: 'listings' },
	                  'My Listings'
	                )
	              ),
	              _react2.default.createElement(
	                'li',
	                null,
	                _react2.default.createElement(
	                  _reactRouter.Link,
	                  { className: 'gear-item', to: 'rentals' },
	                  'My Rentals'
	                )
	              )
	            )
	          ),
	          _react2.default.createElement(
	            'li',
	            null,
	            _react2.default.createElement(
	              'ul',
	              { className: 'sections' },
	              _react2.default.createElement(
	                'li',
	                null,
	                _react2.default.createElement(
	                  _reactRouter.Link,
	                  { className: 'gear-item', onClick: function onClick() {
	                      return _this3.handleClick("sf");
	                    } },
	                  'SAN FRANCISCO'
	                )
	              ),
	              _react2.default.createElement(
	                'li',
	                null,
	                _react2.default.createElement(
	                  _reactRouter.Link,
	                  { className: 'gear-item', onClick: function onClick() {
	                      return _this3.handleClick("ny");
	                    } },
	                  'NEW YORK'
	                )
	              )
	            )
	          ),
	          _react2.default.createElement(
	            'li',
	            null,
	            _react2.default.createElement(
	              'ul',
	              { className: 'help' },
	              _react2.default.createElement(
	                'li',
	                null,
	                _react2.default.createElement(
	                  _reactRouter.Link,
	                  { className: 'gear-item', onClick: function onClick() {
	                      return _this3.openModal("contactModalOpen");
	                    } },
	                  'Contact'
	                )
	              ),
	              _react2.default.createElement(
	                'li',
	                null,
	                _react2.default.createElement(
	                  _reactRouter.Link,
	                  { className: 'gear-item', onClick: function onClick() {
	                      return _this3.openModal("howModalOpen");
	                    } },
	                  'How does this work?'
	                )
	              ),
	              _react2.default.createElement(
	                'li',
	                null,
	                this.linkSignOut()
	              )
	            )
	          )
	        );
	      }
	      var mainBar = _react2.default.createElement(
	        'header',
	        { className: 'main-nav' },
	        _react2.default.createElement(
	          'nav',
	          { className: 'left-nav' },
	          _react2.default.createElement(
	            'h1',
	            null,
	            _react2.default.createElement(
	              _reactRouter.Link,
	              { className: 'website-title', onClick: this.focusSearch, to: 'search' },
	              _react2.default.createElement('div', { className: 'logo' })
	            )
	          )
	        ),
	        _react2.default.createElement(
	          'nav',
	          { className: 'middle-nav' },
	          _react2.default.createElement(_reactFontawesome2.default, {
	            className: 'fa-search fa pointer',
	            name: 'search',
	            style: { textShadow: '0 1px 0 rgba(0, 0, 0, 0.5)' },
	            onClick: this.focusSearch
	          }),
	          _react2.default.createElement('input', { id: 'autocomplete', className: 'searchbar', placeholder: 'Search a location...' })
	        ),
	        _react2.default.createElement(
	          'nav',
	          { className: 'right-nav' },
	          _react2.default.createElement(
	            'ul',
	            { onClick: this.toggleDropDown },
	            _react2.default.createElement(
	              'li',
	              { id: 'gear-dropdown-btn' },
	              _react2.default.createElement(
	                'div',
	                { className: 'fa' },
	                _react2.default.createElement(
	                  'b',
	                  { className: this.props.currentUser ? "listing-sub-header pointer" : "listing-sub-header pointer" },
	                  name
	                ),
	                fa
	              ),
	              dropDown
	            )
	          )
	        )
	      );
	      return _react2.default.createElement(
	        'div',
	        { className: 'nav' },
	        mainBar,
	        this.renderModals()
	      );
	    }
	  }]);
	
	  return Nav;
	}(_react2.default.Component);
	
	exports.default = (0, _reactRouter.withRouter)(Nav);

/***/ },
/* 386 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(387);
	


/***/ },
/* 387 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {var React = __webpack_require__(1);
	var ReactDOM = __webpack_require__(32);
	var ExecutionEnvironment = __webpack_require__(388);
	var ModalPortal = React.createFactory(__webpack_require__(389));
	var ariaAppHider = __webpack_require__(394);
	var elementClass = __webpack_require__(395);
	var renderSubtreeIntoContainer = __webpack_require__(32).unstable_renderSubtreeIntoContainer;
	var Assign = __webpack_require__(393);
	
	var SafeHTMLElement = ExecutionEnvironment.canUseDOM ? window.HTMLElement : {};
	var AppElement = ExecutionEnvironment.canUseDOM ? document.body : {appendChild: function() {}};
	
	function getParentElement(parentSelector) {
	  return parentSelector();
	}
	
	var Modal = React.createClass({
	
	  displayName: 'Modal',
	  statics: {
	    setAppElement: function(element) {
	        AppElement = ariaAppHider.setElement(element);
	    },
	    injectCSS: function() {
	      "production" !== process.env.NODE_ENV
	        && console.warn('React-Modal: injectCSS has been deprecated ' +
	                        'and no longer has any effect. It will be removed in a later version');
	    }
	  },
	
	  propTypes: {
	    isOpen: React.PropTypes.bool.isRequired,
	    style: React.PropTypes.shape({
	      content: React.PropTypes.object,
	      overlay: React.PropTypes.object
	    }),
	    portalClassName: React.PropTypes.string,
	    appElement: React.PropTypes.instanceOf(SafeHTMLElement),
	    onAfterOpen: React.PropTypes.func,
	    onRequestClose: React.PropTypes.func,
	    closeTimeoutMS: React.PropTypes.number,
	    ariaHideApp: React.PropTypes.bool,
	    shouldCloseOnOverlayClick: React.PropTypes.bool,
	    parentSelector: React.PropTypes.func,
	    role: React.PropTypes.string,
	    contentLabel: React.PropTypes.string.isRequired
	  },
	
	  getDefaultProps: function () {
	    return {
	      isOpen: false,
	      portalClassName: 'ReactModalPortal',
	      ariaHideApp: true,
	      closeTimeoutMS: 0,
	      shouldCloseOnOverlayClick: true,
	      parentSelector: function () { return document.body; }
	    };
	  },
	
	  componentDidMount: function() {
	    this.node = document.createElement('div');
	    this.node.className = this.props.portalClassName;
	
	    var parent = getParentElement(this.props.parentSelector);
	    parent.appendChild(this.node);
	    this.renderPortal(this.props);
	  },
	
	  componentWillReceiveProps: function(newProps) {
	    var currentParent = getParentElement(this.props.parentSelector);
	    var newParent = getParentElement(newProps.parentSelector);
	
	    if(newParent !== currentParent) {
	      currentParent.removeChild(this.node);
	      newParent.appendChild(this.node);
	    }
	
	    this.renderPortal(newProps);
	  },
	
	  componentWillUnmount: function() {
	    if (this.props.ariaHideApp) {
	      ariaAppHider.show(this.props.appElement);
	    }
	
	    ReactDOM.unmountComponentAtNode(this.node);
	    var parent = getParentElement(this.props.parentSelector);
	    parent.removeChild(this.node);
	    elementClass(document.body).remove('ReactModal__Body--open');
	  },
	
	  renderPortal: function(props) {
	    if (props.isOpen) {
	      elementClass(document.body).add('ReactModal__Body--open');
	    } else {
	      elementClass(document.body).remove('ReactModal__Body--open');
	    }
	
	    if (props.ariaHideApp) {
	      ariaAppHider.toggle(props.isOpen, props.appElement);
	    }
	
	    this.portal = renderSubtreeIntoContainer(this, ModalPortal(Assign({}, props, {defaultStyles: Modal.defaultStyles})), this.node);
	  },
	
	  render: function () {
	    return React.DOM.noscript();
	  }
	});
	
	Modal.defaultStyles = {
	  overlay: {
	    position        : 'fixed',
	    top             : 0,
	    left            : 0,
	    right           : 0,
	    bottom          : 0,
	    backgroundColor : 'rgba(255, 255, 255, 0.75)'
	  },
	  content: {
	    position                : 'absolute',
	    top                     : '40px',
	    left                    : '40px',
	    right                   : '40px',
	    bottom                  : '40px',
	    border                  : '1px solid #ccc',
	    background              : '#fff',
	    overflow                : 'auto',
	    WebkitOverflowScrolling : 'touch',
	    borderRadius            : '4px',
	    outline                 : 'none',
	    padding                 : '20px'
	  }
	}
	
	module.exports = Modal
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 388 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_RESULT__;/*!
	  Copyright (c) 2015 Jed Watson.
	  Based on code that is Copyright 2013-2015, Facebook, Inc.
	  All rights reserved.
	*/
	
	(function () {
		'use strict';
	
		var canUseDOM = !!(
			typeof window !== 'undefined' &&
			window.document &&
			window.document.createElement
		);
	
		var ExecutionEnvironment = {
	
			canUseDOM: canUseDOM,
	
			canUseWorkers: typeof Worker !== 'undefined',
	
			canUseEventListeners:
				canUseDOM && !!(window.addEventListener || window.attachEvent),
	
			canUseViewport: canUseDOM && !!window.screen
	
		};
	
		if (true) {
			!(__WEBPACK_AMD_DEFINE_RESULT__ = function () {
				return ExecutionEnvironment;
			}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
		} else if (typeof module !== 'undefined' && module.exports) {
			module.exports = ExecutionEnvironment;
		} else {
			window.ExecutionEnvironment = ExecutionEnvironment;
		}
	
	}());


/***/ },
/* 389 */
/***/ function(module, exports, __webpack_require__) {

	var React = __webpack_require__(1);
	var div = React.DOM.div;
	var focusManager = __webpack_require__(390);
	var scopeTab = __webpack_require__(392);
	var Assign = __webpack_require__(393);
	
	// so that our CSS is statically analyzable
	var CLASS_NAMES = {
	  overlay: {
	    base: 'ReactModal__Overlay',
	    afterOpen: 'ReactModal__Overlay--after-open',
	    beforeClose: 'ReactModal__Overlay--before-close'
	  },
	  content: {
	    base: 'ReactModal__Content',
	    afterOpen: 'ReactModal__Content--after-open',
	    beforeClose: 'ReactModal__Content--before-close'
	  }
	};
	
	var ModalPortal = module.exports = React.createClass({
	
	  displayName: 'ModalPortal',
	  shouldClose: null,
	
	  getDefaultProps: function() {
	    return {
	      style: {
	        overlay: {},
	        content: {}
	      }
	    };
	  },
	
	  getInitialState: function() {
	    return {
	      afterOpen: false,
	      beforeClose: false
	    };
	  },
	
	  componentDidMount: function() {
	    // Focus needs to be set when mounting and already open
	    if (this.props.isOpen) {
	      this.setFocusAfterRender(true);
	      this.open();
	    }
	  },
	
	  componentWillUnmount: function() {
	    clearTimeout(this.closeTimer);
	  },
	
	  componentWillReceiveProps: function(newProps) {
	    // Focus only needs to be set once when the modal is being opened
	    if (!this.props.isOpen && newProps.isOpen) {
	      this.setFocusAfterRender(true);
	      this.open();
	    } else if (this.props.isOpen && !newProps.isOpen) {
	      this.close();
	    }
	  },
	
	  componentDidUpdate: function () {
	    if (this.focusAfterRender) {
	      this.focusContent();
	      this.setFocusAfterRender(false);
	    }
	  },
	
	  setFocusAfterRender: function (focus) {
	    this.focusAfterRender = focus;
	  },
	
	  open: function() {
	    if (this.state.afterOpen && this.state.beforeClose) {
	      clearTimeout(this.closeTimer);
	      this.setState({ beforeClose: false });
	    } else {
	      focusManager.setupScopedFocus(this.node);
	      focusManager.markForFocusLater();
	      this.setState({isOpen: true}, function() {
	        this.setState({afterOpen: true});
	
	        if (this.props.isOpen && this.props.onAfterOpen) {
	          this.props.onAfterOpen();
	        }
	      }.bind(this));
	    }
	  },
	
	  close: function() {
	    if (this.props.closeTimeoutMS > 0)
	      this.closeWithTimeout();
	    else
	      this.closeWithoutTimeout();
	  },
	
	  focusContent: function() {
	    // Don't steal focus from inner elements
	    if (!this.contentHasFocus()) {
	      this.refs.content.focus();
	    }
	  },
	
	  closeWithTimeout: function() {
	    this.setState({beforeClose: true}, function() {
	      this.closeTimer = setTimeout(this.closeWithoutTimeout, this.props.closeTimeoutMS);
	    }.bind(this));
	  },
	
	  closeWithoutTimeout: function() {
	    this.setState({
	      beforeClose: false,
	      isOpen: false,
	      afterOpen: false,
	    }, this.afterClose);
	  },
	
	  afterClose: function() {
	    focusManager.returnFocus();
	    focusManager.teardownScopedFocus();
	  },
	
	  handleKeyDown: function(event) {
	    if (event.keyCode == 9 /*tab*/) scopeTab(this.refs.content, event);
	    if (event.keyCode == 27 /*esc*/) {
	      event.preventDefault();
	      this.requestClose(event);
	    }
	  },
	
	  handleOverlayMouseDown: function(event) {
	    if (this.shouldClose === null) {
	      this.shouldClose = true;
	    }
	  },
	
	  handleOverlayMouseUp: function(event) {
	    if (this.shouldClose && this.props.shouldCloseOnOverlayClick) {
	      if (this.ownerHandlesClose())
	        this.requestClose(event);
	      else
	        this.focusContent();
	    }
	    this.shouldClose = null;
	  },
	
	  handleContentMouseDown: function(event) {
	    this.shouldClose = false;
	  },
	
	  handleContentMouseUp: function(event) {
	    this.shouldClose = false;
	  },
	
	  requestClose: function(event) {
	    if (this.ownerHandlesClose())
	      this.props.onRequestClose(event);
	  },
	
	  ownerHandlesClose: function() {
	    return this.props.onRequestClose;
	  },
	
	  shouldBeClosed: function() {
	    return !this.props.isOpen && !this.state.beforeClose;
	  },
	
	  contentHasFocus: function() {
	    return document.activeElement === this.refs.content || this.refs.content.contains(document.activeElement);
	  },
	
	  buildClassName: function(which, additional) {
	    var className = CLASS_NAMES[which].base;
	    if (this.state.afterOpen)
	      className += ' '+CLASS_NAMES[which].afterOpen;
	    if (this.state.beforeClose)
	      className += ' '+CLASS_NAMES[which].beforeClose;
	    return additional ? className + ' ' + additional : className;
	  },
	
	  render: function() {
	    var contentStyles = (this.props.className) ? {} : this.props.defaultStyles.content;
	    var overlayStyles = (this.props.overlayClassName) ? {} : this.props.defaultStyles.overlay;
	
	    return this.shouldBeClosed() ? div() : (
	      div({
	        ref: "overlay",
	        className: this.buildClassName('overlay', this.props.overlayClassName),
	        style: Assign({}, overlayStyles, this.props.style.overlay || {}),
	        onMouseDown: this.handleOverlayMouseDown,
	        onMouseUp: this.handleOverlayMouseUp
	      },
	        div({
	          ref: "content",
	          style: Assign({}, contentStyles, this.props.style.content || {}),
	          className: this.buildClassName('content', this.props.className),
	          tabIndex: "-1",
	          onKeyDown: this.handleKeyDown,
	          onMouseDown: this.handleContentMouseDown,
	          onMouseUp: this.handleContentMouseUp,
	          role: this.props.role,
	          "aria-label": this.props.contentLabel
	        },
	          this.props.children
	        )
	      )
	    );
	  }
	});


/***/ },
/* 390 */
/***/ function(module, exports, __webpack_require__) {

	var findTabbable = __webpack_require__(391);
	var modalElement = null;
	var focusLaterElement = null;
	var needToFocus = false;
	
	function handleBlur(event) {
	  needToFocus = true;
	}
	
	function handleFocus(event) {
	  if (needToFocus) {
	    needToFocus = false;
	    if (!modalElement) {
	      return;
	    }
	    // need to see how jQuery shims document.on('focusin') so we don't need the
	    // setTimeout, firefox doesn't support focusin, if it did, we could focus
	    // the element outside of a setTimeout. Side-effect of this implementation 
	    // is that the document.body gets focus, and then we focus our element right 
	    // after, seems fine.
	    setTimeout(function() {
	      if (modalElement.contains(document.activeElement))
	        return;
	      var el = (findTabbable(modalElement)[0] || modalElement);
	      el.focus();
	    }, 0);
	  }
	}
	
	exports.markForFocusLater = function() {
	  focusLaterElement = document.activeElement;
	};
	
	exports.returnFocus = function() {
	  try {
	    focusLaterElement.focus();
	  }
	  catch (e) {
	    console.warn('You tried to return focus to '+focusLaterElement+' but it is not in the DOM anymore');
	  }
	  focusLaterElement = null;
	};
	
	exports.setupScopedFocus = function(element) {
	  modalElement = element;
	
	  if (window.addEventListener) {
	    window.addEventListener('blur', handleBlur, false);
	    document.addEventListener('focus', handleFocus, true);
	  } else {
	    window.attachEvent('onBlur', handleBlur);
	    document.attachEvent('onFocus', handleFocus);
	  }
	};
	
	exports.teardownScopedFocus = function() {
	  modalElement = null;
	
	  if (window.addEventListener) {
	    window.removeEventListener('blur', handleBlur);
	    document.removeEventListener('focus', handleFocus);
	  } else {
	    window.detachEvent('onBlur', handleBlur);
	    document.detachEvent('onFocus', handleFocus);
	  }
	};
	
	


/***/ },
/* 391 */
/***/ function(module, exports) {

	/*!
	 * Adapted from jQuery UI core
	 *
	 * http://jqueryui.com
	 *
	 * Copyright 2014 jQuery Foundation and other contributors
	 * Released under the MIT license.
	 * http://jquery.org/license
	 *
	 * http://api.jqueryui.com/category/ui-core/
	 */
	
	function focusable(element, isTabIndexNotNaN) {
	  var nodeName = element.nodeName.toLowerCase();
	  return (/input|select|textarea|button|object/.test(nodeName) ?
	    !element.disabled :
	    "a" === nodeName ?
	      element.href || isTabIndexNotNaN :
	      isTabIndexNotNaN) && visible(element);
	}
	
	function hidden(el) {
	  return (el.offsetWidth <= 0 && el.offsetHeight <= 0) ||
	    el.style.display === 'none';
	}
	
	function visible(element) {
	  while (element) {
	    if (element === document.body) break;
	    if (hidden(element)) return false;
	    element = element.parentNode;
	  }
	  return true;
	}
	
	function tabbable(element) {
	  var tabIndex = element.getAttribute('tabindex');
	  if (tabIndex === null) tabIndex = undefined;
	  var isTabIndexNaN = isNaN(tabIndex);
	  return (isTabIndexNaN || tabIndex >= 0) && focusable(element, !isTabIndexNaN);
	}
	
	function findTabbableDescendants(element) {
	  return [].slice.call(element.querySelectorAll('*'), 0).filter(function(el) {
	    return tabbable(el);
	  });
	}
	
	module.exports = findTabbableDescendants;
	


/***/ },
/* 392 */
/***/ function(module, exports, __webpack_require__) {

	var findTabbable = __webpack_require__(391);
	
	module.exports = function(node, event) {
	  var tabbable = findTabbable(node);
	  if (!tabbable.length) {
	      event.preventDefault();
	      return;
	  }
	  var finalTabbable = tabbable[event.shiftKey ? 0 : tabbable.length - 1];
	  var leavingFinalTabbable = (
	    finalTabbable === document.activeElement ||
	    // handle immediate shift+tab after opening with mouse
	    node === document.activeElement
	  );
	  if (!leavingFinalTabbable) return;
	  event.preventDefault();
	  var target = tabbable[event.shiftKey ? tabbable.length - 1 : 0];
	  target.focus();
	};


/***/ },
/* 393 */
/***/ function(module, exports) {

	/**
	 * lodash (Custom Build) <https://lodash.com/>
	 * Build: `lodash modularize exports="npm" -o ./`
	 * Copyright jQuery Foundation and other contributors <https://jquery.org/>
	 * Released under MIT license <https://lodash.com/license>
	 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
	 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
	 */
	
	/** Used as references for various `Number` constants. */
	var MAX_SAFE_INTEGER = 9007199254740991;
	
	/** `Object#toString` result references. */
	var argsTag = '[object Arguments]',
	    funcTag = '[object Function]',
	    genTag = '[object GeneratorFunction]';
	
	/** Used to detect unsigned integer values. */
	var reIsUint = /^(?:0|[1-9]\d*)$/;
	
	/**
	 * A faster alternative to `Function#apply`, this function invokes `func`
	 * with the `this` binding of `thisArg` and the arguments of `args`.
	 *
	 * @private
	 * @param {Function} func The function to invoke.
	 * @param {*} thisArg The `this` binding of `func`.
	 * @param {Array} args The arguments to invoke `func` with.
	 * @returns {*} Returns the result of `func`.
	 */
	function apply(func, thisArg, args) {
	  switch (args.length) {
	    case 0: return func.call(thisArg);
	    case 1: return func.call(thisArg, args[0]);
	    case 2: return func.call(thisArg, args[0], args[1]);
	    case 3: return func.call(thisArg, args[0], args[1], args[2]);
	  }
	  return func.apply(thisArg, args);
	}
	
	/**
	 * The base implementation of `_.times` without support for iteratee shorthands
	 * or max array length checks.
	 *
	 * @private
	 * @param {number} n The number of times to invoke `iteratee`.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @returns {Array} Returns the array of results.
	 */
	function baseTimes(n, iteratee) {
	  var index = -1,
	      result = Array(n);
	
	  while (++index < n) {
	    result[index] = iteratee(index);
	  }
	  return result;
	}
	
	/**
	 * Creates a unary function that invokes `func` with its argument transformed.
	 *
	 * @private
	 * @param {Function} func The function to wrap.
	 * @param {Function} transform The argument transform.
	 * @returns {Function} Returns the new function.
	 */
	function overArg(func, transform) {
	  return function(arg) {
	    return func(transform(arg));
	  };
	}
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * Used to resolve the
	 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var objectToString = objectProto.toString;
	
	/** Built-in value references. */
	var propertyIsEnumerable = objectProto.propertyIsEnumerable;
	
	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeKeys = overArg(Object.keys, Object),
	    nativeMax = Math.max;
	
	/** Detect if properties shadowing those on `Object.prototype` are non-enumerable. */
	var nonEnumShadows = !propertyIsEnumerable.call({ 'valueOf': 1 }, 'valueOf');
	
	/**
	 * Creates an array of the enumerable property names of the array-like `value`.
	 *
	 * @private
	 * @param {*} value The value to query.
	 * @param {boolean} inherited Specify returning inherited property names.
	 * @returns {Array} Returns the array of property names.
	 */
	function arrayLikeKeys(value, inherited) {
	  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.
	  // Safari 9 makes `arguments.length` enumerable in strict mode.
	  var result = (isArray(value) || isArguments(value))
	    ? baseTimes(value.length, String)
	    : [];
	
	  var length = result.length,
	      skipIndexes = !!length;
	
	  for (var key in value) {
	    if ((inherited || hasOwnProperty.call(value, key)) &&
	        !(skipIndexes && (key == 'length' || isIndex(key, length)))) {
	      result.push(key);
	    }
	  }
	  return result;
	}
	
	/**
	 * Assigns `value` to `key` of `object` if the existing value is not equivalent
	 * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	 * for equality comparisons.
	 *
	 * @private
	 * @param {Object} object The object to modify.
	 * @param {string} key The key of the property to assign.
	 * @param {*} value The value to assign.
	 */
	function assignValue(object, key, value) {
	  var objValue = object[key];
	  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||
	      (value === undefined && !(key in object))) {
	    object[key] = value;
	  }
	}
	
	/**
	 * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names.
	 */
	function baseKeys(object) {
	  if (!isPrototype(object)) {
	    return nativeKeys(object);
	  }
	  var result = [];
	  for (var key in Object(object)) {
	    if (hasOwnProperty.call(object, key) && key != 'constructor') {
	      result.push(key);
	    }
	  }
	  return result;
	}
	
	/**
	 * The base implementation of `_.rest` which doesn't validate or coerce arguments.
	 *
	 * @private
	 * @param {Function} func The function to apply a rest parameter to.
	 * @param {number} [start=func.length-1] The start position of the rest parameter.
	 * @returns {Function} Returns the new function.
	 */
	function baseRest(func, start) {
	  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);
	  return function() {
	    var args = arguments,
	        index = -1,
	        length = nativeMax(args.length - start, 0),
	        array = Array(length);
	
	    while (++index < length) {
	      array[index] = args[start + index];
	    }
	    index = -1;
	    var otherArgs = Array(start + 1);
	    while (++index < start) {
	      otherArgs[index] = args[index];
	    }
	    otherArgs[start] = array;
	    return apply(func, this, otherArgs);
	  };
	}
	
	/**
	 * Copies properties of `source` to `object`.
	 *
	 * @private
	 * @param {Object} source The object to copy properties from.
	 * @param {Array} props The property identifiers to copy.
	 * @param {Object} [object={}] The object to copy properties to.
	 * @param {Function} [customizer] The function to customize copied values.
	 * @returns {Object} Returns `object`.
	 */
	function copyObject(source, props, object, customizer) {
	  object || (object = {});
	
	  var index = -1,
	      length = props.length;
	
	  while (++index < length) {
	    var key = props[index];
	
	    var newValue = customizer
	      ? customizer(object[key], source[key], key, object, source)
	      : undefined;
	
	    assignValue(object, key, newValue === undefined ? source[key] : newValue);
	  }
	  return object;
	}
	
	/**
	 * Creates a function like `_.assign`.
	 *
	 * @private
	 * @param {Function} assigner The function to assign values.
	 * @returns {Function} Returns the new assigner function.
	 */
	function createAssigner(assigner) {
	  return baseRest(function(object, sources) {
	    var index = -1,
	        length = sources.length,
	        customizer = length > 1 ? sources[length - 1] : undefined,
	        guard = length > 2 ? sources[2] : undefined;
	
	    customizer = (assigner.length > 3 && typeof customizer == 'function')
	      ? (length--, customizer)
	      : undefined;
	
	    if (guard && isIterateeCall(sources[0], sources[1], guard)) {
	      customizer = length < 3 ? undefined : customizer;
	      length = 1;
	    }
	    object = Object(object);
	    while (++index < length) {
	      var source = sources[index];
	      if (source) {
	        assigner(object, source, index, customizer);
	      }
	    }
	    return object;
	  });
	}
	
	/**
	 * Checks if `value` is a valid array-like index.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
	 * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
	 */
	function isIndex(value, length) {
	  length = length == null ? MAX_SAFE_INTEGER : length;
	  return !!length &&
	    (typeof value == 'number' || reIsUint.test(value)) &&
	    (value > -1 && value % 1 == 0 && value < length);
	}
	
	/**
	 * Checks if the given arguments are from an iteratee call.
	 *
	 * @private
	 * @param {*} value The potential iteratee value argument.
	 * @param {*} index The potential iteratee index or key argument.
	 * @param {*} object The potential iteratee object argument.
	 * @returns {boolean} Returns `true` if the arguments are from an iteratee call,
	 *  else `false`.
	 */
	function isIterateeCall(value, index, object) {
	  if (!isObject(object)) {
	    return false;
	  }
	  var type = typeof index;
	  if (type == 'number'
	        ? (isArrayLike(object) && isIndex(index, object.length))
	        : (type == 'string' && index in object)
	      ) {
	    return eq(object[index], value);
	  }
	  return false;
	}
	
	/**
	 * Checks if `value` is likely a prototype object.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
	 */
	function isPrototype(value) {
	  var Ctor = value && value.constructor,
	      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;
	
	  return value === proto;
	}
	
	/**
	 * Performs a
	 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	 * comparison between two values to determine if they are equivalent.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to compare.
	 * @param {*} other The other value to compare.
	 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
	 * @example
	 *
	 * var object = { 'a': 1 };
	 * var other = { 'a': 1 };
	 *
	 * _.eq(object, object);
	 * // => true
	 *
	 * _.eq(object, other);
	 * // => false
	 *
	 * _.eq('a', 'a');
	 * // => true
	 *
	 * _.eq('a', Object('a'));
	 * // => false
	 *
	 * _.eq(NaN, NaN);
	 * // => true
	 */
	function eq(value, other) {
	  return value === other || (value !== value && other !== other);
	}
	
	/**
	 * Checks if `value` is likely an `arguments` object.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
	 *  else `false`.
	 * @example
	 *
	 * _.isArguments(function() { return arguments; }());
	 * // => true
	 *
	 * _.isArguments([1, 2, 3]);
	 * // => false
	 */
	function isArguments(value) {
	  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.
	  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&
	    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);
	}
	
	/**
	 * Checks if `value` is classified as an `Array` object.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an array, else `false`.
	 * @example
	 *
	 * _.isArray([1, 2, 3]);
	 * // => true
	 *
	 * _.isArray(document.body.children);
	 * // => false
	 *
	 * _.isArray('abc');
	 * // => false
	 *
	 * _.isArray(_.noop);
	 * // => false
	 */
	var isArray = Array.isArray;
	
	/**
	 * Checks if `value` is array-like. A value is considered array-like if it's
	 * not a function and has a `value.length` that's an integer greater than or
	 * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
	 * @example
	 *
	 * _.isArrayLike([1, 2, 3]);
	 * // => true
	 *
	 * _.isArrayLike(document.body.children);
	 * // => true
	 *
	 * _.isArrayLike('abc');
	 * // => true
	 *
	 * _.isArrayLike(_.noop);
	 * // => false
	 */
	function isArrayLike(value) {
	  return value != null && isLength(value.length) && !isFunction(value);
	}
	
	/**
	 * This method is like `_.isArrayLike` except that it also checks if `value`
	 * is an object.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an array-like object,
	 *  else `false`.
	 * @example
	 *
	 * _.isArrayLikeObject([1, 2, 3]);
	 * // => true
	 *
	 * _.isArrayLikeObject(document.body.children);
	 * // => true
	 *
	 * _.isArrayLikeObject('abc');
	 * // => false
	 *
	 * _.isArrayLikeObject(_.noop);
	 * // => false
	 */
	function isArrayLikeObject(value) {
	  return isObjectLike(value) && isArrayLike(value);
	}
	
	/**
	 * Checks if `value` is classified as a `Function` object.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a function, else `false`.
	 * @example
	 *
	 * _.isFunction(_);
	 * // => true
	 *
	 * _.isFunction(/abc/);
	 * // => false
	 */
	function isFunction(value) {
	  // The use of `Object#toString` avoids issues with the `typeof` operator
	  // in Safari 8-9 which returns 'object' for typed array and other constructors.
	  var tag = isObject(value) ? objectToString.call(value) : '';
	  return tag == funcTag || tag == genTag;
	}
	
	/**
	 * Checks if `value` is a valid array-like length.
	 *
	 * **Note:** This method is loosely based on
	 * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
	 * @example
	 *
	 * _.isLength(3);
	 * // => true
	 *
	 * _.isLength(Number.MIN_VALUE);
	 * // => false
	 *
	 * _.isLength(Infinity);
	 * // => false
	 *
	 * _.isLength('3');
	 * // => false
	 */
	function isLength(value) {
	  return typeof value == 'number' &&
	    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
	}
	
	/**
	 * Checks if `value` is the
	 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
	 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
	 * @example
	 *
	 * _.isObject({});
	 * // => true
	 *
	 * _.isObject([1, 2, 3]);
	 * // => true
	 *
	 * _.isObject(_.noop);
	 * // => true
	 *
	 * _.isObject(null);
	 * // => false
	 */
	function isObject(value) {
	  var type = typeof value;
	  return !!value && (type == 'object' || type == 'function');
	}
	
	/**
	 * Checks if `value` is object-like. A value is object-like if it's not `null`
	 * and has a `typeof` result of "object".
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
	 * @example
	 *
	 * _.isObjectLike({});
	 * // => true
	 *
	 * _.isObjectLike([1, 2, 3]);
	 * // => true
	 *
	 * _.isObjectLike(_.noop);
	 * // => false
	 *
	 * _.isObjectLike(null);
	 * // => false
	 */
	function isObjectLike(value) {
	  return !!value && typeof value == 'object';
	}
	
	/**
	 * Assigns own enumerable string keyed properties of source objects to the
	 * destination object. Source objects are applied from left to right.
	 * Subsequent sources overwrite property assignments of previous sources.
	 *
	 * **Note:** This method mutates `object` and is loosely based on
	 * [`Object.assign`](https://mdn.io/Object/assign).
	 *
	 * @static
	 * @memberOf _
	 * @since 0.10.0
	 * @category Object
	 * @param {Object} object The destination object.
	 * @param {...Object} [sources] The source objects.
	 * @returns {Object} Returns `object`.
	 * @see _.assignIn
	 * @example
	 *
	 * function Foo() {
	 *   this.a = 1;
	 * }
	 *
	 * function Bar() {
	 *   this.c = 3;
	 * }
	 *
	 * Foo.prototype.b = 2;
	 * Bar.prototype.d = 4;
	 *
	 * _.assign({ 'a': 0 }, new Foo, new Bar);
	 * // => { 'a': 1, 'c': 3 }
	 */
	var assign = createAssigner(function(object, source) {
	  if (nonEnumShadows || isPrototype(source) || isArrayLike(source)) {
	    copyObject(source, keys(source), object);
	    return;
	  }
	  for (var key in source) {
	    if (hasOwnProperty.call(source, key)) {
	      assignValue(object, key, source[key]);
	    }
	  }
	});
	
	/**
	 * Creates an array of the own enumerable property names of `object`.
	 *
	 * **Note:** Non-object values are coerced to objects. See the
	 * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
	 * for more details.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Object
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names.
	 * @example
	 *
	 * function Foo() {
	 *   this.a = 1;
	 *   this.b = 2;
	 * }
	 *
	 * Foo.prototype.c = 3;
	 *
	 * _.keys(new Foo);
	 * // => ['a', 'b'] (iteration order is not guaranteed)
	 *
	 * _.keys('hi');
	 * // => ['0', '1']
	 */
	function keys(object) {
	  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
	}
	
	module.exports = assign;


/***/ },
/* 394 */
/***/ function(module, exports) {

	var _element = typeof document !== 'undefined' ? document.body : null;
	
	function setElement(element) {
	  if (typeof element === 'string') {
	    var el = document.querySelectorAll(element);
	    element = 'length' in el ? el[0] : el;
	  }
	  _element = element || _element;
	  return _element;
	}
	
	function hide(appElement) {
	  validateElement(appElement);
	  (appElement || _element).setAttribute('aria-hidden', 'true');
	}
	
	function show(appElement) {
	  validateElement(appElement);
	  (appElement || _element).removeAttribute('aria-hidden');
	}
	
	function toggle(shouldHide, appElement) {
	  if (shouldHide)
	    hide(appElement);
	  else
	    show(appElement);
	}
	
	function validateElement(appElement) {
	  if (!appElement && !_element)
	    throw new Error('react-modal: You must set an element with `Modal.setAppElement(el)` to make this accessible');
	}
	
	function resetForTesting() {
	  _element = document.body;
	}
	
	exports.toggle = toggle;
	exports.setElement = setElement;
	exports.show = show;
	exports.hide = hide;
	exports.resetForTesting = resetForTesting;


/***/ },
/* 395 */
/***/ function(module, exports) {

	module.exports = function(opts) {
	  return new ElementClass(opts)
	}
	
	function indexOf(arr, prop) {
	  if (arr.indexOf) return arr.indexOf(prop)
	  for (var i = 0, len = arr.length; i < len; i++)
	    if (arr[i] === prop) return i
	  return -1
	}
	
	function ElementClass(opts) {
	  if (!(this instanceof ElementClass)) return new ElementClass(opts)
	  var self = this
	  if (!opts) opts = {}
	
	  // similar doing instanceof HTMLElement but works in IE8
	  if (opts.nodeType) opts = {el: opts}
	
	  this.opts = opts
	  this.el = opts.el || document.body
	  if (typeof this.el !== 'object') this.el = document.querySelector(this.el)
	}
	
	ElementClass.prototype.add = function(className) {
	  var el = this.el
	  if (!el) return
	  if (el.className === "") return el.className = className
	  var classes = el.className.split(' ')
	  if (indexOf(classes, className) > -1) return classes
	  classes.push(className)
	  el.className = classes.join(' ')
	  return classes
	}
	
	ElementClass.prototype.remove = function(className) {
	  var el = this.el
	  if (!el) return
	  if (el.className === "") return
	  var classes = el.className.split(' ')
	  var idx = indexOf(classes, className)
	  if (idx > -1) classes.splice(idx, 1)
	  el.className = classes.join(' ')
	  return classes
	}
	
	ElementClass.prototype.has = function(className) {
	  var el = this.el
	  if (!el) return
	  var classes = el.className.split(' ')
	  return indexOf(classes, className) > -1
	}
	
	ElementClass.prototype.toggle = function(className) {
	  var el = this.el
	  if (!el) return
	  if (this.has(className)) this.remove(className)
	  else this.add(className)
	}


/***/ },
/* 396 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _reactRedux = __webpack_require__(309);
	
	var _footer = __webpack_require__(397);
	
	var _footer2 = _interopRequireDefault(_footer);
	
	var _filter_actions = __webpack_require__(300);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var mapStateToProps = function mapStateToProps(state) {
	  return {};
	};
	
	var mapDispatchToProps = function mapDispatchToProps(dispatch) {
	  return {
	    receiveCenter: function receiveCenter(center) {
	      return dispatch((0, _filter_actions.receiveCenter)(center));
	    }
	  };
	};
	
	exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(_footer2.default);

/***/ },
/* 397 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactRouter = __webpack_require__(326);
	
	var _reactModal = __webpack_require__(386);
	
	var _reactModal2 = _interopRequireDefault(_reactModal);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var Footer = function (_React$Component) {
	  _inherits(Footer, _React$Component);
	
	  function Footer(props) {
	    _classCallCheck(this, Footer);
	
	    var _this = _possibleConstructorReturn(this, (Footer.__proto__ || Object.getPrototypeOf(Footer)).call(this, props));
	
	    _this.state = {
	      howModalOpen: false,
	      contactModalOpen: false,
	      termsModalOpen: false
	    };
	    _this.handleClick = _this.handleClick.bind(_this);
	    _this.redirect = _this.redirect.bind(_this);
	    _this.closeModal = _this.closeModal.bind(_this);
	    _this.openModal = _this.openModal.bind(_this);
	    return _this;
	  }
	
	  _createClass(Footer, [{
	    key: 'closeModal',
	    value: function closeModal(attr) {
	      this.setState(_defineProperty({}, attr, false));
	    }
	  }, {
	    key: 'openModal',
	    value: function openModal(attr) {
	      this.setState(_defineProperty({}, attr, true));
	    }
	  }, {
	    key: 'handleClick',
	    value: function handleClick(city) {
	      if (city === "sf") {
	        this.props.receiveCenter({ lat: 37.75023068394664, lng: -122.44104483349611 });
	      } else if (city === "ny") {
	        this.props.receiveCenter({ lat: 40.7127837, lng: -74.00594130000002 });
	      }
	      this.redirect("search");
	    }
	  }, {
	    key: 'redirect',
	    value: function redirect(route) {
	      this.props.router.replace(route);
	    }
	  }, {
	    key: 'renderModals',
	    value: function renderModals() {
	      var _this2 = this;
	
	      return _react2.default.createElement(
	        'div',
	        null,
	        _react2.default.createElement(
	          _reactModal2.default,
	          {
	            isOpen: this.state.howModalOpen,
	            onRequestClose: function onRequestClose() {
	              return _this2.closeModal("howModalOpen");
	            },
	            className: 'modal-how',
	            overlayClassName: 'overlayModal',
	            contentLabel: 'Modal',
	            transitionName: 'modal-anim' },
	          _react2.default.createElement(
	            'div',
	            { className: 'how-container' },
	            _react2.default.createElement('div', { className: 'square-logo-how' }),
	            _react2.default.createElement(
	              'table',
	              { className: 'contact' },
	              _react2.default.createElement(
	                'tbody',
	                null,
	                _react2.default.createElement(
	                  'tr',
	                  null,
	                  _react2.default.createElement(
	                    'td',
	                    null,
	                    _react2.default.createElement(
	                      'h1',
	                      { className: 'contact-header' },
	                      'Youbquity'
	                    )
	                  )
	                ),
	                _react2.default.createElement(
	                  'tr',
	                  null,
	                  _react2.default.createElement(
	                    'td',
	                    null,
	                    _react2.default.createElement('br', null),
	                    _react2.default.createElement(
	                      'p',
	                      { className: 'how' },
	                      'Make the most of your equipment and it rent it out to others!'
	                    ),
	                    _react2.default.createElement(
	                      'p',
	                      { className: 'how' },
	                      'Ubiquity allows you to list your equipment to others.'
	                    ),
	                    _react2.default.createElement(
	                      'p',
	                      { className: 'how' },
	                      'Save the environment and make extra money!'
	                    )
	                  )
	                )
	              )
	            )
	          )
	        ),
	        _react2.default.createElement(
	          _reactModal2.default,
	          {
	            isOpen: this.state.contactModalOpen,
	            onRequestClose: function onRequestClose() {
	              return _this2.closeModal("contactModalOpen");
	            },
	            className: 'modal-contact',
	            overlayClassName: 'overlayModal',
	            contentLabel: 'Modal',
	            transitionName: 'modal-anim' },
	          _react2.default.createElement(
	            'div',
	            { className: 'contact-container' },
	            _react2.default.createElement(
	              'table',
	              { className: 'contact' },
	              _react2.default.createElement(
	                'tbody',
	                null,
	                _react2.default.createElement(
	                  'tr',
	                  null,
	                  _react2.default.createElement(
	                    'td',
	                    null,
	                    _react2.default.createElement('img', { src: 'http://res.cloudinary.com/dkympkwdz/image/upload/v1484853581/Logo-2C-21px-R_rc35uu.png' })
	                  ),
	                  _react2.default.createElement(
	                    'td',
	                    null,
	                    _react2.default.createElement(
	                      'a',
	                      { className: 'contact', target: '_blank', href: 'http://www.linkedin.com/in/randyjap' },
	                      'www.linkedin.com/in/randyjap'
	                    )
	                  )
	                ),
	                _react2.default.createElement(
	                  'tr',
	                  null,
	                  _react2.default.createElement(
	                    'td',
	                    null,
	                    _react2.default.createElement('img', { className: 'avatar', src: 'https://avatars0.githubusercontent.com/u/13705970?v=3&s=460' })
	                  ),
	                  _react2.default.createElement(
	                    'td',
	                    null,
	                    _react2.default.createElement(
	                      'a',
	                      { className: 'contact', target: '_blank', href: 'http://www.github.com/randyjap' },
	                      'www.github.com/randyjap'
	                    )
	                  )
	                ),
	                _react2.default.createElement(
	                  'tr',
	                  null,
	                  _react2.default.createElement(
	                    'td',
	                    null,
	                    _react2.default.createElement('img', { src: 'http://res.cloudinary.com/dkympkwdz/image/upload/v1484853612/GitHub-Mark-64px_rfmfmn.png' })
	                  ),
	                  _react2.default.createElement(
	                    'td',
	                    null,
	                    _react2.default.createElement(
	                      'a',
	                      { className: 'contact', target: '_blank', href: 'http://www.github.com/randyjap/ubiquity' },
	                      'www.github.com/randyjap/ubiquity'
	                    )
	                  )
	                )
	              )
	            )
	          )
	        ),
	        _react2.default.createElement(
	          _reactModal2.default,
	          {
	            isOpen: this.state.termsModalOpen,
	            onRequestClose: function onRequestClose() {
	              return _this2.closeModal("termsModalOpen");
	            },
	            className: 'modal-contact',
	            overlayClassName: 'overlayModal',
	            contentLabel: 'Modal',
	            transitionName: 'modal-anim' },
	          _react2.default.createElement(
	            'div',
	            { className: 'contact-container' },
	            _react2.default.createElement(
	              'table',
	              { className: 'contact' },
	              _react2.default.createElement(
	                'tbody',
	                null,
	                _react2.default.createElement(
	                  'tr',
	                  null,
	                  _react2.default.createElement(
	                    'td',
	                    null,
	                    _react2.default.createElement(
	                      'h1',
	                      { className: 'contact-header' },
	                      'Terms'
	                    )
	                  )
	                ),
	                _react2.default.createElement(
	                  'tr',
	                  null,
	                  _react2.default.createElement(
	                    'td',
	                    null,
	                    _react2.default.createElement('br', null),
	                    'All listings are for demonstrational purposes only and are completely fictional.'
	                  )
	                )
	              )
	            )
	          )
	        )
	      );
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _this3 = this;
	
	      return _react2.default.createElement(
	        'div',
	        { className: 'footer' },
	        _react2.default.createElement(
	          'div',
	          null,
	          _react2.default.createElement(
	            'li',
	            { className: 'footer-items', onClick: function onClick() {
	                return _this3.openModal("howModalOpen");
	              } },
	            'HOW DOES IT WORK?'
	          )
	        ),
	        _react2.default.createElement(
	          'div',
	          null,
	          _react2.default.createElement(
	            'li',
	            { className: 'footer-items cities', onClick: function onClick() {
	                return _this3.handleClick("sf");
	              } },
	            'SAN FRANCISCO'
	          ),
	          _react2.default.createElement(
	            'li',
	            { className: 'footer-items cities', onClick: function onClick() {
	                return _this3.handleClick("ny");
	              } },
	            'NEW YORK'
	          )
	        ),
	        _react2.default.createElement(
	          'div',
	          null,
	          _react2.default.createElement(
	            'li',
	            { className: 'footer-items', onClick: function onClick() {
	                return _this3.openModal("contactModalOpen");
	              } },
	            'CONTACT'
	          )
	        ),
	        _react2.default.createElement(
	          'div',
	          null,
	          _react2.default.createElement(
	            'li',
	            { className: 'footer-items', onClick: function onClick() {
	                return _this3.openModal("termsModalOpen");
	              } },
	            'TERMS'
	          )
	        ),
	        this.renderModals()
	      );
	    }
	  }]);
	
	  return Footer;
	}(_react2.default.Component);
	
	exports.default = (0, _reactRouter.withRouter)(Footer);

/***/ },
/* 398 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _reactRedux = __webpack_require__(309);
	
	var _session_form = __webpack_require__(399);
	
	var _session_form2 = _interopRequireDefault(_session_form);
	
	var _session_actions = __webpack_require__(202);
	
	var _error_actions = __webpack_require__(204);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var mapStateToProps = function mapStateToProps(state) {
	  return {
	    loggedIn: Boolean(state.session.currentUser),
	    errors: state.errors.all
	  };
	};
	
	var mapDispatchToProps = function mapDispatchToProps(dispatch, _ref) {
	  var location = _ref.location;
	
	  var formType = location.pathname.slice(1);
	  var _processForm = formType === 'login' ? _session_actions.login : _session_actions.signup;
	
	  return {
	    processForm: function processForm(user) {
	      return dispatch(_processForm(user));
	    },
	    login: function login(user) {
	      return dispatch((0, _session_actions.login)(user));
	    },
	    formType: formType,
	    clearSessionErrors: function clearSessionErrors() {
	      return dispatch((0, _error_actions.clearSessionErrors)());
	    }
	  };
	};
	
	exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(_session_form2.default);

/***/ },
/* 399 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactRouter = __webpack_require__(326);
	
	var _reactModal = __webpack_require__(386);
	
	var _reactModal2 = _interopRequireDefault(_reactModal);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var SessionForm = function (_React$Component) {
	  _inherits(SessionForm, _React$Component);
	
	  function SessionForm(props) {
	    _classCallCheck(this, SessionForm);
	
	    var _this = _possibleConstructorReturn(this, (SessionForm.__proto__ || Object.getPrototypeOf(SessionForm)).call(this, props));
	
	    _this.state = {
	      modalOpen: true,
	      username: "",
	      password: ""
	    };
	    _this.handleSubmit = _this.handleSubmit.bind(_this);
	    _this.updateProperty = _this.updateProperty.bind(_this);
	    _this.redirect = _this.redirect.bind(_this);
	    _this.closeModal = _this.closeModal.bind(_this);
	    _this.openModal = _this.openModal.bind(_this);
	    _this.demoLogin = _this.demoLogin.bind(_this);
	    return _this;
	  }
	
	  _createClass(SessionForm, [{
	    key: 'redirect',
	    value: function redirect(route) {
	      this.props.router.replace(route);
	      this.props.clearSessionErrors();
	    }
	  }, {
	    key: 'handleSubmit',
	    value: function handleSubmit(e) {
	      var _this2 = this;
	
	      e.preventDefault();
	      var user = this.state;
	      this.props.processForm({ user: user }).then(function () {
	        return _this2.redirect('search');
	      });
	    }
	  }, {
	    key: 'updateProperty',
	    value: function updateProperty(property) {
	      var _this3 = this;
	
	      return function (e) {
	        return _this3.setState(_defineProperty({}, property, e.target.value));
	      };
	    }
	  }, {
	    key: 'renderErrors',
	    value: function renderErrors() {
	      if (this.props.errors.length > 0) {
	        return _react2.default.createElement(
	          'div',
	          { className: 'errors' },
	          _react2.default.createElement(
	            'ul',
	            { className: 'errors' },
	            this.props.errors.map(function (error, i) {
	              return _react2.default.createElement(
	                'li',
	                { key: 'error-' + i },
	                error
	              );
	            })
	          )
	        );
	      } else {
	        return null;
	      }
	    }
	  }, {
	    key: 'closeModal',
	    value: function closeModal() {
	      this.props.clearSessionErrors();
	      this.setState({ modalOpen: false });
	      this.redirect('/');
	    }
	  }, {
	    key: 'openModal',
	    value: function openModal() {
	      this.setState({ modalOpen: true });
	    }
	  }, {
	    key: 'demoLogin',
	    value: function demoLogin() {
	      var _this4 = this;
	
	      var username = "Guest";
	      var password = "password";
	      var counter = 0;
	      var typer = function typer() {
	        counter++;
	        _this4.setState({ username: username.slice(0, counter) });
	        if (counter === username.length) {
	          _this4.setState({ password: password });
	          clearInterval(animation);
	          _this4.props.login({ user: { username: username, password: password } }).then(function () {
	            return _this4.redirect('search');
	          });
	        }
	      };
	      var animation = setInterval(typer, 70);
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var buttonText = this.props.formType === "login" ? "Login" : "Sign Up";
	      return _react2.default.createElement(
	        'div',
	        { className: 'main' },
	        _react2.default.createElement(
	          'div',
	          { id: 'greeting' },
	          _react2.default.createElement(
	            _reactRouter.Link,
	            { className: 'welcome', to: 'login', onClick: this.openModal },
	            'ENTER SITE'
	          ),
	          this.renderErrors(),
	          _react2.default.createElement(
	            _reactModal2.default,
	            {
	              isOpen: this.state.modalOpen,
	              onRequestClose: this.closeModal,
	              className: 'modal-session',
	              overlayClassName: 'overlayModal',
	              contentLabel: 'Modal',
	              transitionName: 'modal-anim' },
	            _react2.default.createElement(
	              'div',
	              null,
	              _react2.default.createElement(
	                'h1',
	                { className: 'entrance' },
	                _react2.default.createElement('div', { className: 'square-logo' })
	              ),
	              _react2.default.createElement(
	                'form',
	                { onSubmit: this.handleSubmit },
	                _react2.default.createElement('hr', null),
	                _react2.default.createElement(
	                  'div',
	                  { className: 'entrance flex' },
	                  _react2.default.createElement(
	                    'div',
	                    null,
	                    _react2.default.createElement(
	                      _reactRouter.Link,
	                      { to: 'login', className: 'login', onClick: this.props.clearSessionErrors, activeClassName: 'activeEntranceLink' },
	                      'Login'
	                    )
	                  ),
	                  _react2.default.createElement(
	                    'div',
	                    null,
	                    _react2.default.createElement(
	                      _reactRouter.Link,
	                      { to: 'signup', className: 'signup', onClick: this.props.clearSessionErrors, activeClassName: 'activeEntranceLink' },
	                      'Sign Up'
	                    )
	                  )
	                ),
	                _react2.default.createElement('hr', null),
	                _react2.default.createElement('input', { className: 'session', autoFocus: true, type: 'text', placeholder: 'Username', value: this.state.username, onChange: this.updateProperty('username'), required: true }),
	                _react2.default.createElement('input', { className: 'session', type: 'password', placeholder: 'Password', value: this.state.password, onChange: this.updateProperty('password'), required: true }),
	                _react2.default.createElement(
	                  'div',
	                  { className: 'entrance flex' },
	                  _react2.default.createElement(
	                    'div',
	                    null,
	                    _react2.default.createElement(
	                      'button',
	                      { className: 'entrance', value: 'Sign In', onClick: this.handleSubmit },
	                      buttonText
	                    )
	                  ),
	                  _react2.default.createElement(
	                    'div',
	                    null,
	                    _react2.default.createElement(
	                      'button',
	                      { className: 'demo', value: 'DEMO', onClick: this.demoLogin },
	                      'DEMO'
	                    )
	                  )
	                )
	              )
	            )
	          )
	        )
	      );
	    }
	  }]);
	
	  return SessionForm;
	}(_react2.default.Component);
	
	exports.default = SessionForm;

/***/ },
/* 400 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _reactRedux = __webpack_require__(309);
	
	var _search = __webpack_require__(401);
	
	var _search2 = _interopRequireDefault(_search);
	
	var _search_actions = __webpack_require__(292);
	
	var _filter_actions = __webpack_require__(300);
	
	var _option_actions = __webpack_require__(297);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var mapStateToProps = function mapStateToProps(state) {
	  return {
	    searchListings: state.search,
	    searchFilters: state.filters,
	    options: state.options
	  };
	};
	
	var mapDispatchToProps = function mapDispatchToProps(dispatch) {
	  return {
	    fetchSearchListings: function fetchSearchListings(filters) {
	      return dispatch((0, _search_actions.fetchSearchListings)(filters));
	    },
	    receiveFilters: function receiveFilters(filters) {
	      return dispatch((0, _filter_actions.receiveFilters)(filters));
	    },
	    fetchOptions: function fetchOptions() {
	      return dispatch((0, _option_actions.fetchOptions)());
	    },
	    resetFilters: function resetFilters() {
	      return dispatch((0, _filter_actions.resetFilters)());
	    }
	  };
	};
	
	exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(_search2.default);

/***/ },
/* 401 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactRouter = __webpack_require__(326);
	
	var _reactFontawesome = __webpack_require__(382);
	
	var _reactFontawesome2 = _interopRequireDefault(_reactFontawesome);
	
	var _reactSelect = __webpack_require__(402);
	
	var _reactSelect2 = _interopRequireDefault(_reactSelect);
	
	var _belle = __webpack_require__(415);
	
	var _map_container = __webpack_require__(462);
	
	var _map_container2 = _interopRequireDefault(_map_container);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var Slider = __webpack_require__(466);
	var style = { width: 200, margin: 10, position: 'relative', left: '-12px' };
	
	var Search = function (_React$Component) {
	  _inherits(Search, _React$Component);
	
	  function Search(props) {
	    _classCallCheck(this, Search);
	
	    var _this = _possibleConstructorReturn(this, (Search.__proto__ || Object.getPrototypeOf(Search)).call(this, props));
	
	    _this.renderedSearchResults = _this.renderedSearchResults.bind(_this);
	    _this.updateProperty = _this.updateProperty.bind(_this);
	    _this.getOptions = _this.getOptions.bind(_this);
	    _this.logArrayChange = _this.logArrayChange.bind(_this);
	    _this.redirect = _this.redirect.bind(_this);
	    _this.state = { brand: null, category: null, rating: undefined, dayRate: undefined };
	    _this.handleSubmit = _this.handleSubmit.bind(_this);
	    _this.logRating = _this.logRating.bind(_this);
	    _this.logPrice = _this.logPrice.bind(_this);
	    return _this;
	  }
	
	  _createClass(Search, [{
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      this.props.fetchOptions();
	      this.props.fetchSearchListings(this.props.searchFilters);
	      this.setState({
	        brand: this.props.searchFilters.brand,
	        category: this.props.searchFilters.category,
	        rating: this.props.searchFilters.rating,
	        dayRate: this.props.searchFilters.price
	      });
	    }
	  }, {
	    key: 'componentWillUnmount',
	    value: function componentWillUnmount() {
	      this.setState({ brand: null, category: null, rating: undefined, dayRate: undefined });
	      this.props.resetFilters();
	    }
	  }, {
	    key: 'getOptions',
	    value: function getOptions(key) {
	      var options = void 0;
	      if (this.props.options[key]) {
	        options = this.props.options[key].map(function (name) {
	          return { value: name, label: name };
	        });
	      } else {
	        options = [{ value: "Loading...", label: "Loading..." }];
	      }
	      return options;
	    }
	  }, {
	    key: 'redirect',
	    value: function redirect(route) {
	      this.props.clearSessionErrors();
	      this.props.router.replace(route);
	    }
	  }, {
	    key: 'logArrayChange',
	    value: function logArrayChange(field) {
	      var _this2 = this;
	
	      return function (e) {
	        var filters = e.map(function (el) {
	          return el.value;
	        });
	        _this2.setState(_defineProperty({}, field, filters));
	        _this2.props.receiveFilters(_defineProperty({}, field, filters));
	      };
	    }
	  }, {
	    key: 'logRating',
	    value: function logRating(rating) {
	      this.setState({ "rating": rating.value });
	      this.props.receiveFilters({ "rating": rating.value });
	    }
	  }, {
	    key: 'logPrice',
	    value: function logPrice(price) {
	      this.setState({ "price": price });
	      this.props.receiveFilters({ "price": price });
	    }
	  }, {
	    key: 'handleSubmit',
	    value: function handleSubmit(e) {
	      e.preventDefault();
	      this.props.fetchSearchListings(this.props.searchFilters);
	    }
	  }, {
	    key: 'renderedSearchFilters',
	    value: function renderedSearchFilters() {
	      var count = void 0;
	      if (this.props.searchListings) {
	        count = _react2.default.createElement(
	          'div',
	          { className: 'fjalla' },
	          'We found ',
	          Object.keys(this.props.searchListings).length,
	          ' matches!'
	        );
	      } else {
	        count = _react2.default.createElement(
	          'div',
	          { className: 'fjalla' },
	          'Counting ',
	          _react2.default.createElement(_belle.Spinner, null)
	        );
	      }
	      return _react2.default.createElement(
	        'div',
	        { className: 'aside search-filters' },
	        count,
	        _react2.default.createElement('br', null),
	        _react2.default.createElement(_reactSelect2.default, {
	          name: 'brand-filter',
	          options: this.getOptions("brand_options"),
	          multi: true,
	          onChange: this.logArrayChange("brand"),
	          value: this.state.brand,
	          placeholder: 'Select brands..' }),
	        _react2.default.createElement('br', null),
	        _react2.default.createElement(_reactSelect2.default, {
	          name: 'category-filter',
	          options: this.getOptions("category_options"),
	          multi: true,
	          onChange: this.logArrayChange("category"),
	          value: this.state.category,
	          placeholder: 'Select categories..' }),
	        _react2.default.createElement('br', null),
	        'Rating ',
	        '>=',
	        ' ',
	        this.state.rating || " ?",
	        _react2.default.createElement('br', null),
	        _react2.default.createElement(_belle.Rating, { defaultValue: null,
	          className: 'rating-filter',
	          onUpdate: this.logRating }),
	        _react2.default.createElement('br', null),
	        _react2.default.createElement('br', null),
	        _react2.default.createElement(
	          'div',
	          { className: 'slider', style: style },
	          'Price ',
	          '<',
	          ' $',
	          this.state.price || " ?",
	          _react2.default.createElement(Slider, {
	            min: 0,
	            max: 500,
	            defaultValue: 500,
	            onChange: this.logPrice })
	        ),
	        _react2.default.createElement('br', null),
	        _react2.default.createElement(
	          'button',
	          { className: 'filter', onClick: this.handleSubmit },
	          'Update!'
	        )
	      );
	    }
	  }, {
	    key: 'renderedSearchResults',
	    value: function renderedSearchResults() {
	      var searchListings = this.props.searchListings;
	      var listings = void 0;
	      if (this.props.searchListings === null) {
	        listings = _react2.default.createElement(
	          'div',
	          { className: 'fjalla' },
	          _react2.default.createElement('br', null),
	          'Loading ',
	          _react2.default.createElement(_belle.Spinner, null)
	        );
	      } else {
	        listings = Object.keys(searchListings).map(function (key) {
	          return searchListings[key];
	        });
	        listings = listings.map(function (listing) {
	          var photoSrc = listing.photos ? listing.photos[0].image_url : "http://res.cloudinary.com/dkympkwdz/image/upload/ar_3:2,c_crop/v1484546400/stock_photo_oimbwy.jpg";
	          return _react2.default.createElement(
	            _reactRouter.Link,
	            { className: 'listing', key: listing.id, to: 'listings/' + listing.id },
	            _react2.default.createElement('img', { className: 'listing-thumbnail', src: photoSrc }),
	            _react2.default.createElement(_belle.Rating, { defaultValue: Math.round(listing.rating_average),
	              className: 'star-rating',
	              disabled: true }),
	            _react2.default.createElement('br', null),
	            _react2.default.createElement(
	              'div',
	              { className: 'listing-title' },
	              listing.lessor
	            ),
	            listing.brand,
	            _react2.default.createElement('br', null),
	            listing.category,
	            _react2.default.createElement('br', null),
	            'Day Rate: $',
	            listing.day_rate,
	            _react2.default.createElement('br', null),
	            'Rating: ',
	            listing.rating_average,
	            _react2.default.createElement('br', null),
	            'Reviews: ',
	            listing.review_count
	          );
	        });
	      }
	      if (listings < 1) listings = "No Results";
	      return _react2.default.createElement(
	        'div',
	        { className: 'aside search-results' },
	        listings
	      );
	    }
	  }, {
	    key: 'updateProperty',
	    value: function updateProperty(property) {
	      var _this3 = this;
	
	      return function (e) {
	        return _this3.setState(_defineProperty({}, property, e.target.value));
	      };
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      return _react2.default.createElement(
	        'div',
	        { className: 'main' },
	        this.renderedSearchFilters(),
	        this.renderedSearchResults(),
	        _react2.default.createElement(
	          'div',
	          { className: 'aside search-map' },
	          'Move and zoom the map or use the search bar above to fine tune results!',
	          _react2.default.createElement(_map_container2.default, null)
	        )
	      );
	    }
	  }]);
	
	  return Search;
	}(_react2.default.Component);
	
	exports.default = Search;

/***/ },
/* 402 */
/***/ function(module, exports, __webpack_require__) {

	/*!
	  Copyright (c) 2016 Jed Watson.
	  Licensed under the MIT License (MIT), see
	  http://jedwatson.github.io/react-select
	*/
	
	'use strict';
	
	Object.defineProperty(exports, '__esModule', {
		value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactDom = __webpack_require__(32);
	
	var _reactDom2 = _interopRequireDefault(_reactDom);
	
	var _reactInputAutosize = __webpack_require__(403);
	
	var _reactInputAutosize2 = _interopRequireDefault(_reactInputAutosize);
	
	var _classnames = __webpack_require__(404);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _utilsDefaultArrowRenderer = __webpack_require__(405);
	
	var _utilsDefaultArrowRenderer2 = _interopRequireDefault(_utilsDefaultArrowRenderer);
	
	var _utilsDefaultFilterOptions = __webpack_require__(406);
	
	var _utilsDefaultFilterOptions2 = _interopRequireDefault(_utilsDefaultFilterOptions);
	
	var _utilsDefaultMenuRenderer = __webpack_require__(408);
	
	var _utilsDefaultMenuRenderer2 = _interopRequireDefault(_utilsDefaultMenuRenderer);
	
	var _utilsDefaultClearRenderer = __webpack_require__(409);
	
	var _utilsDefaultClearRenderer2 = _interopRequireDefault(_utilsDefaultClearRenderer);
	
	var _Async = __webpack_require__(410);
	
	var _Async2 = _interopRequireDefault(_Async);
	
	var _AsyncCreatable = __webpack_require__(411);
	
	var _AsyncCreatable2 = _interopRequireDefault(_AsyncCreatable);
	
	var _Creatable = __webpack_require__(412);
	
	var _Creatable2 = _interopRequireDefault(_Creatable);
	
	var _Option = __webpack_require__(413);
	
	var _Option2 = _interopRequireDefault(_Option);
	
	var _Value = __webpack_require__(414);
	
	var _Value2 = _interopRequireDefault(_Value);
	
	function stringifyValue(value) {
		var valueType = typeof value;
		if (valueType === 'string') {
			return value;
		} else if (valueType === 'object') {
			return JSON.stringify(value);
		} else if (valueType === 'number' || valueType === 'boolean') {
			return String(value);
		} else {
			return '';
		}
	}
	
	var stringOrNode = _react2['default'].PropTypes.oneOfType([_react2['default'].PropTypes.string, _react2['default'].PropTypes.node]);
	
	var instanceId = 1;
	
	var Select = _react2['default'].createClass({
	
		displayName: 'Select',
	
		propTypes: {
			addLabelText: _react2['default'].PropTypes.string, // placeholder displayed when you want to add a label on a multi-value input
			'aria-label': _react2['default'].PropTypes.string, // Aria label (for assistive tech)
			'aria-labelledby': _react2['default'].PropTypes.string, // HTML ID of an element that should be used as the label (for assistive tech)
			arrowRenderer: _react2['default'].PropTypes.func, // Create drop-down caret element
			autoBlur: _react2['default'].PropTypes.bool, // automatically blur the component when an option is selected
			autofocus: _react2['default'].PropTypes.bool, // autofocus the component on mount
			autosize: _react2['default'].PropTypes.bool, // whether to enable autosizing or not
			backspaceRemoves: _react2['default'].PropTypes.bool, // whether backspace removes an item if there is no text input
			backspaceToRemoveMessage: _react2['default'].PropTypes.string, // Message to use for screenreaders to press backspace to remove the current item - {label} is replaced with the item label
			className: _react2['default'].PropTypes.string, // className for the outer element
			clearAllText: stringOrNode, // title for the "clear" control when multi: true
			clearRenderer: _react2['default'].PropTypes.func, // create clearable x element
			clearValueText: stringOrNode, // title for the "clear" control
			clearable: _react2['default'].PropTypes.bool, // should it be possible to reset value
			deleteRemoves: _react2['default'].PropTypes.bool, // whether backspace removes an item if there is no text input
			delimiter: _react2['default'].PropTypes.string, // delimiter to use to join multiple values for the hidden field value
			disabled: _react2['default'].PropTypes.bool, // whether the Select is disabled or not
			escapeClearsValue: _react2['default'].PropTypes.bool, // whether escape clears the value when the menu is closed
			filterOption: _react2['default'].PropTypes.func, // method to filter a single option (option, filterString)
			filterOptions: _react2['default'].PropTypes.any, // boolean to enable default filtering or function to filter the options array ([options], filterString, [values])
			ignoreAccents: _react2['default'].PropTypes.bool, // whether to strip diacritics when filtering
			ignoreCase: _react2['default'].PropTypes.bool, // whether to perform case-insensitive filtering
			inputProps: _react2['default'].PropTypes.object, // custom attributes for the Input
			inputRenderer: _react2['default'].PropTypes.func, // returns a custom input component
			instanceId: _react2['default'].PropTypes.string, // set the components instanceId
			isLoading: _react2['default'].PropTypes.bool, // whether the Select is loading externally or not (such as options being loaded)
			joinValues: _react2['default'].PropTypes.bool, // joins multiple values into a single form field with the delimiter (legacy mode)
			labelKey: _react2['default'].PropTypes.string, // path of the label value in option objects
			matchPos: _react2['default'].PropTypes.string, // (any|start) match the start or entire string when filtering
			matchProp: _react2['default'].PropTypes.string, // (any|label|value) which option property to filter on
			menuBuffer: _react2['default'].PropTypes.number, // optional buffer (in px) between the bottom of the viewport and the bottom of the menu
			menuContainerStyle: _react2['default'].PropTypes.object, // optional style to apply to the menu container
			menuRenderer: _react2['default'].PropTypes.func, // renders a custom menu with options
			menuStyle: _react2['default'].PropTypes.object, // optional style to apply to the menu
			multi: _react2['default'].PropTypes.bool, // multi-value input
			name: _react2['default'].PropTypes.string, // generates a hidden <input /> tag with this field name for html forms
			noResultsText: stringOrNode, // placeholder displayed when there are no matching search results
			onBlur: _react2['default'].PropTypes.func, // onBlur handler: function (event) {}
			onBlurResetsInput: _react2['default'].PropTypes.bool, // whether input is cleared on blur
			onChange: _react2['default'].PropTypes.func, // onChange handler: function (newValue) {}
			onClose: _react2['default'].PropTypes.func, // fires when the menu is closed
			onCloseResetsInput: _react2['default'].PropTypes.bool, // whether input is cleared when menu is closed through the arrow
			onFocus: _react2['default'].PropTypes.func, // onFocus handler: function (event) {}
			onInputChange: _react2['default'].PropTypes.func, // onInputChange handler: function (inputValue) {}
			onInputKeyDown: _react2['default'].PropTypes.func, // input keyDown handler: function (event) {}
			onMenuScrollToBottom: _react2['default'].PropTypes.func, // fires when the menu is scrolled to the bottom; can be used to paginate options
			onOpen: _react2['default'].PropTypes.func, // fires when the menu is opened
			onValueClick: _react2['default'].PropTypes.func, // onClick handler for value labels: function (value, event) {}
			openAfterFocus: _react2['default'].PropTypes.bool, // boolean to enable opening dropdown when focused
			openOnFocus: _react2['default'].PropTypes.bool, // always open options menu on focus
			optionClassName: _react2['default'].PropTypes.string, // additional class(es) to apply to the <Option /> elements
			optionComponent: _react2['default'].PropTypes.func, // option component to render in dropdown
			optionRenderer: _react2['default'].PropTypes.func, // optionRenderer: function (option) {}
			options: _react2['default'].PropTypes.array, // array of options
			pageSize: _react2['default'].PropTypes.number, // number of entries to page when using page up/down keys
			placeholder: stringOrNode, // field placeholder, displayed when there's no value
			required: _react2['default'].PropTypes.bool, // applies HTML5 required attribute when needed
			resetValue: _react2['default'].PropTypes.any, // value to use when you clear the control
			scrollMenuIntoView: _react2['default'].PropTypes.bool, // boolean to enable the viewport to shift so that the full menu fully visible when engaged
			searchable: _react2['default'].PropTypes.bool, // whether to enable searching feature or not
			simpleValue: _react2['default'].PropTypes.bool, // pass the value to onChange as a simple value (legacy pre 1.0 mode), defaults to false
			style: _react2['default'].PropTypes.object, // optional style to apply to the control
			tabIndex: _react2['default'].PropTypes.string, // optional tab index of the control
			tabSelectsValue: _react2['default'].PropTypes.bool, // whether to treat tabbing out while focused to be value selection
			value: _react2['default'].PropTypes.any, // initial field value
			valueComponent: _react2['default'].PropTypes.func, // value component to render
			valueKey: _react2['default'].PropTypes.string, // path of the label value in option objects
			valueRenderer: _react2['default'].PropTypes.func, // valueRenderer: function (option) {}
			wrapperStyle: _react2['default'].PropTypes.object },
	
		// optional style to apply to the component wrapper
		statics: { Async: _Async2['default'], AsyncCreatable: _AsyncCreatable2['default'], Creatable: _Creatable2['default'] },
	
		getDefaultProps: function getDefaultProps() {
			return {
				addLabelText: 'Add "{label}"?',
				arrowRenderer: _utilsDefaultArrowRenderer2['default'],
				autosize: true,
				backspaceRemoves: true,
				backspaceToRemoveMessage: 'Press backspace to remove {label}',
				clearable: true,
				clearAllText: 'Clear all',
				clearRenderer: _utilsDefaultClearRenderer2['default'],
				clearValueText: 'Clear value',
				deleteRemoves: true,
				delimiter: ',',
				disabled: false,
				escapeClearsValue: true,
				filterOptions: _utilsDefaultFilterOptions2['default'],
				ignoreAccents: true,
				ignoreCase: true,
				inputProps: {},
				isLoading: false,
				joinValues: false,
				labelKey: 'label',
				matchPos: 'any',
				matchProp: 'any',
				menuBuffer: 0,
				menuRenderer: _utilsDefaultMenuRenderer2['default'],
				multi: false,
				noResultsText: 'No results found',
				onBlurResetsInput: true,
				onCloseResetsInput: true,
				openAfterFocus: false,
				optionComponent: _Option2['default'],
				pageSize: 5,
				placeholder: 'Select...',
				required: false,
				scrollMenuIntoView: true,
				searchable: true,
				simpleValue: false,
				tabSelectsValue: true,
				valueComponent: _Value2['default'],
				valueKey: 'value'
			};
		},
	
		getInitialState: function getInitialState() {
			return {
				inputValue: '',
				isFocused: false,
				isOpen: false,
				isPseudoFocused: false,
				required: false
			};
		},
	
		componentWillMount: function componentWillMount() {
			this._instancePrefix = 'react-select-' + (this.props.instanceId || ++instanceId) + '-';
			var valueArray = this.getValueArray(this.props.value);
	
			if (this.props.required) {
				this.setState({
					required: this.handleRequired(valueArray[0], this.props.multi)
				});
			}
		},
	
		componentDidMount: function componentDidMount() {
			if (this.props.autofocus) {
				this.focus();
			}
		},
	
		componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
			var valueArray = this.getValueArray(nextProps.value, nextProps);
	
			if (nextProps.required) {
				this.setState({
					required: this.handleRequired(valueArray[0], nextProps.multi)
				});
			}
		},
	
		componentWillUpdate: function componentWillUpdate(nextProps, nextState) {
			if (nextState.isOpen !== this.state.isOpen) {
				this.toggleTouchOutsideEvent(nextState.isOpen);
				var handler = nextState.isOpen ? nextProps.onOpen : nextProps.onClose;
				handler && handler();
			}
		},
	
		componentDidUpdate: function componentDidUpdate(prevProps, prevState) {
			// focus to the selected option
			if (this.menu && this.focused && this.state.isOpen && !this.hasScrolledToOption) {
				var focusedOptionNode = _reactDom2['default'].findDOMNode(this.focused);
				var menuNode = _reactDom2['default'].findDOMNode(this.menu);
				menuNode.scrollTop = focusedOptionNode.offsetTop;
				this.hasScrolledToOption = true;
			} else if (!this.state.isOpen) {
				this.hasScrolledToOption = false;
			}
	
			if (this._scrollToFocusedOptionOnUpdate && this.focused && this.menu) {
				this._scrollToFocusedOptionOnUpdate = false;
				var focusedDOM = _reactDom2['default'].findDOMNode(this.focused);
				var menuDOM = _reactDom2['default'].findDOMNode(this.menu);
				var focusedRect = focusedDOM.getBoundingClientRect();
				var menuRect = menuDOM.getBoundingClientRect();
				if (focusedRect.bottom > menuRect.bottom || focusedRect.top < menuRect.top) {
					menuDOM.scrollTop = focusedDOM.offsetTop + focusedDOM.clientHeight - menuDOM.offsetHeight;
				}
			}
			if (this.props.scrollMenuIntoView && this.menuContainer) {
				var menuContainerRect = this.menuContainer.getBoundingClientRect();
				if (window.innerHeight < menuContainerRect.bottom + this.props.menuBuffer) {
					window.scrollBy(0, menuContainerRect.bottom + this.props.menuBuffer - window.innerHeight);
				}
			}
			if (prevProps.disabled !== this.props.disabled) {
				this.setState({ isFocused: false }); // eslint-disable-line react/no-did-update-set-state
				this.closeMenu();
			}
		},
	
		componentWillUnmount: function componentWillUnmount() {
			if (!document.removeEventListener && document.detachEvent) {
				document.detachEvent('ontouchstart', this.handleTouchOutside);
			} else {
				document.removeEventListener('touchstart', this.handleTouchOutside);
			}
		},
	
		toggleTouchOutsideEvent: function toggleTouchOutsideEvent(enabled) {
			if (enabled) {
				if (!document.addEventListener && document.attachEvent) {
					document.attachEvent('ontouchstart', this.handleTouchOutside);
				} else {
					document.addEventListener('touchstart', this.handleTouchOutside);
				}
			} else {
				if (!document.removeEventListener && document.detachEvent) {
					document.detachEvent('ontouchstart', this.handleTouchOutside);
				} else {
					document.removeEventListener('touchstart', this.handleTouchOutside);
				}
			}
		},
	
		handleTouchOutside: function handleTouchOutside(event) {
			// handle touch outside on ios to dismiss menu
			if (this.wrapper && !this.wrapper.contains(event.target)) {
				this.closeMenu();
			}
		},
	
		focus: function focus() {
			if (!this.input) return;
			this.input.focus();
	
			if (this.props.openAfterFocus) {
				this.setState({
					isOpen: true
				});
			}
		},
	
		blurInput: function blurInput() {
			if (!this.input) return;
			this.input.blur();
		},
	
		handleTouchMove: function handleTouchMove(event) {
			// Set a flag that the view is being dragged
			this.dragging = true;
		},
	
		handleTouchStart: function handleTouchStart(event) {
			// Set a flag that the view is not being dragged
			this.dragging = false;
		},
	
		handleTouchEnd: function handleTouchEnd(event) {
			// Check if the view is being dragged, In this case
			// we don't want to fire the click event (because the user only wants to scroll)
			if (this.dragging) return;
	
			// Fire the mouse events
			this.handleMouseDown(event);
		},
	
		handleTouchEndClearValue: function handleTouchEndClearValue(event) {
			// Check if the view is being dragged, In this case
			// we don't want to fire the click event (because the user only wants to scroll)
			if (this.dragging) return;
	
			// Clear the value
			this.clearValue(event);
		},
	
		handleMouseDown: function handleMouseDown(event) {
			// if the event was triggered by a mousedown and not the primary
			// button, or if the component is disabled, ignore it.
			if (this.props.disabled || event.type === 'mousedown' && event.button !== 0) {
				return;
			}
	
			if (event.target.tagName === 'INPUT') {
				return;
			}
	
			// prevent default event handlers
			event.stopPropagation();
			event.preventDefault();
	
			// for the non-searchable select, toggle the menu
			if (!this.props.searchable) {
				this.focus();
				return this.setState({
					isOpen: !this.state.isOpen
				});
			}
	
			if (this.state.isFocused) {
				// On iOS, we can get into a state where we think the input is focused but it isn't really,
				// since iOS ignores programmatic calls to input.focus() that weren't triggered by a click event.
				// Call focus() again here to be safe.
				this.focus();
	
				var input = this.input;
				if (typeof input.getInput === 'function') {
					// Get the actual DOM input if the ref is an <AutosizeInput /> component
					input = input.getInput();
				}
	
				// clears the value so that the cursor will be at the end of input when the component re-renders
				input.value = '';
	
				// if the input is focused, ensure the menu is open
				this.setState({
					isOpen: true,
					isPseudoFocused: false
				});
			} else {
				// otherwise, focus the input and open the menu
				this._openAfterFocus = true;
				this.focus();
			}
		},
	
		handleMouseDownOnArrow: function handleMouseDownOnArrow(event) {
			// if the event was triggered by a mousedown and not the primary
			// button, or if the component is disabled, ignore it.
			if (this.props.disabled || event.type === 'mousedown' && event.button !== 0) {
				return;
			}
			// If the menu isn't open, let the event bubble to the main handleMouseDown
			if (!this.state.isOpen) {
				return;
			}
			// prevent default event handlers
			event.stopPropagation();
			event.preventDefault();
			// close the menu
			this.closeMenu();
		},
	
		handleMouseDownOnMenu: function handleMouseDownOnMenu(event) {
			// if the event was triggered by a mousedown and not the primary
			// button, or if the component is disabled, ignore it.
			if (this.props.disabled || event.type === 'mousedown' && event.button !== 0) {
				return;
			}
			event.stopPropagation();
			event.preventDefault();
	
			this._openAfterFocus = true;
			this.focus();
		},
	
		closeMenu: function closeMenu() {
			if (this.props.onCloseResetsInput) {
				this.setState({
					isOpen: false,
					isPseudoFocused: this.state.isFocused && !this.props.multi,
					inputValue: ''
				});
			} else {
				this.setState({
					isOpen: false,
					isPseudoFocused: this.state.isFocused && !this.props.multi,
					inputValue: this.state.inputValue
				});
			}
			this.hasScrolledToOption = false;
		},
	
		handleInputFocus: function handleInputFocus(event) {
			if (this.props.disabled) return;
			var isOpen = this.state.isOpen || this._openAfterFocus || this.props.openOnFocus;
			if (this.props.onFocus) {
				this.props.onFocus(event);
			}
			this.setState({
				isFocused: true,
				isOpen: isOpen
			});
			this._openAfterFocus = false;
		},
	
		handleInputBlur: function handleInputBlur(event) {
			// The check for menu.contains(activeElement) is necessary to prevent IE11's scrollbar from closing the menu in certain contexts.
			if (this.menu && (this.menu === document.activeElement || this.menu.contains(document.activeElement))) {
				this.focus();
				return;
			}
	
			if (this.props.onBlur) {
				this.props.onBlur(event);
			}
			var onBlurredState = {
				isFocused: false,
				isOpen: false,
				isPseudoFocused: false
			};
			if (this.props.onBlurResetsInput) {
				onBlurredState.inputValue = '';
			}
			this.setState(onBlurredState);
		},
	
		handleInputChange: function handleInputChange(event) {
			var newInputValue = event.target.value;
	
			if (this.state.inputValue !== event.target.value && this.props.onInputChange) {
				var nextState = this.props.onInputChange(newInputValue);
				// Note: != used deliberately here to catch undefined and null
				if (nextState != null && typeof nextState !== 'object') {
					newInputValue = '' + nextState;
				}
			}
	
			this.setState({
				isOpen: true,
				isPseudoFocused: false,
				inputValue: newInputValue
			});
		},
	
		handleKeyDown: function handleKeyDown(event) {
			if (this.props.disabled) return;
	
			if (typeof this.props.onInputKeyDown === 'function') {
				this.props.onInputKeyDown(event);
				if (event.defaultPrevented) {
					return;
				}
			}
	
			switch (event.keyCode) {
				case 8:
					// backspace
					if (!this.state.inputValue && this.props.backspaceRemoves) {
						event.preventDefault();
						this.popValue();
					}
					return;
				case 9:
					// tab
					if (event.shiftKey || !this.state.isOpen || !this.props.tabSelectsValue) {
						return;
					}
					this.selectFocusedOption();
					return;
				case 13:
					// enter
					if (!this.state.isOpen) return;
					event.stopPropagation();
					this.selectFocusedOption();
					break;
				case 27:
					// escape
					if (this.state.isOpen) {
						this.closeMenu();
						event.stopPropagation();
					} else if (this.props.clearable && this.props.escapeClearsValue) {
						this.clearValue(event);
						event.stopPropagation();
					}
					break;
				case 38:
					// up
					this.focusPreviousOption();
					break;
				case 40:
					// down
					this.focusNextOption();
					break;
				case 33:
					// page up
					this.focusPageUpOption();
					break;
				case 34:
					// page down
					this.focusPageDownOption();
					break;
				case 35:
					// end key
					if (event.shiftKey) {
						return;
					}
					this.focusEndOption();
					break;
				case 36:
					// home key
					if (event.shiftKey) {
						return;
					}
					this.focusStartOption();
					break;
				case 46:
					// backspace
					if (!this.state.inputValue && this.props.deleteRemoves) {
						event.preventDefault();
						this.popValue();
					}
					return;
				default:
					return;
			}
			event.preventDefault();
		},
	
		handleValueClick: function handleValueClick(option, event) {
			if (!this.props.onValueClick) return;
			this.props.onValueClick(option, event);
		},
	
		handleMenuScroll: function handleMenuScroll(event) {
			if (!this.props.onMenuScrollToBottom) return;
			var target = event.target;
	
			if (target.scrollHeight > target.offsetHeight && !(target.scrollHeight - target.offsetHeight - target.scrollTop)) {
				this.props.onMenuScrollToBottom();
			}
		},
	
		handleRequired: function handleRequired(value, multi) {
			if (!value) return true;
			return multi ? value.length === 0 : Object.keys(value).length === 0;
		},
	
		getOptionLabel: function getOptionLabel(op) {
			return op[this.props.labelKey];
		},
	
		/**
	  * Turns a value into an array from the given options
	  * @param	{String|Number|Array}	value		- the value of the select input
	  * @param	{Object}		nextProps	- optionally specify the nextProps so the returned array uses the latest configuration
	  * @returns	{Array}	the value of the select represented in an array
	  */
		getValueArray: function getValueArray(value, nextProps) {
			var _this = this;
	
			/** support optionally passing in the `nextProps` so `componentWillReceiveProps` updates will function as expected */
			var props = typeof nextProps === 'object' ? nextProps : this.props;
			if (props.multi) {
				if (typeof value === 'string') value = value.split(props.delimiter);
				if (!Array.isArray(value)) {
					if (value === null || value === undefined) return [];
					value = [value];
				}
				return value.map(function (value) {
					return _this.expandValue(value, props);
				}).filter(function (i) {
					return i;
				});
			}
			var expandedValue = this.expandValue(value, props);
			return expandedValue ? [expandedValue] : [];
		},
	
		/**
	  * Retrieve a value from the given options and valueKey
	  * @param	{String|Number|Array}	value	- the selected value(s)
	  * @param	{Object}		props	- the Select component's props (or nextProps)
	  */
		expandValue: function expandValue(value, props) {
			var valueType = typeof value;
			if (valueType !== 'string' && valueType !== 'number' && valueType !== 'boolean') return value;
			var options = props.options;
			var valueKey = props.valueKey;
	
			if (!options) return;
			for (var i = 0; i < options.length; i++) {
				if (options[i][valueKey] === value) return options[i];
			}
		},
	
		setValue: function setValue(value) {
			var _this2 = this;
	
			if (this.props.autoBlur) {
				this.blurInput();
			}
			if (!this.props.onChange) return;
			if (this.props.required) {
				var required = this.handleRequired(value, this.props.multi);
				this.setState({ required: required });
			}
			if (this.props.simpleValue && value) {
				value = this.props.multi ? value.map(function (i) {
					return i[_this2.props.valueKey];
				}).join(this.props.delimiter) : value[this.props.valueKey];
			}
			this.props.onChange(value);
		},
	
		selectValue: function selectValue(value) {
			var _this3 = this;
	
			//NOTE: update value in the callback to make sure the input value is empty so that there are no styling issues (Chrome had issue otherwise)
			this.hasScrolledToOption = false;
			if (this.props.multi) {
				this.setState({
					inputValue: '',
					focusedIndex: null
				}, function () {
					_this3.addValue(value);
				});
			} else {
				this.setState({
					isOpen: false,
					inputValue: '',
					isPseudoFocused: this.state.isFocused
				}, function () {
					_this3.setValue(value);
				});
			}
		},
	
		addValue: function addValue(value) {
			var valueArray = this.getValueArray(this.props.value);
			var visibleOptions = this._visibleOptions.filter(function (val) {
				return !val.disabled;
			});
			var lastValueIndex = visibleOptions.indexOf(value);
			this.setValue(valueArray.concat(value));
			if (visibleOptions.length - 1 === lastValueIndex) {
				// the last option was selected; focus the second-last one
				this.focusOption(visibleOptions[lastValueIndex - 1]);
			} else if (visibleOptions.length > lastValueIndex) {
				// focus the option below the selected one
				this.focusOption(visibleOptions[lastValueIndex + 1]);
			}
		},
	
		popValue: function popValue() {
			var valueArray = this.getValueArray(this.props.value);
			if (!valueArray.length) return;
			if (valueArray[valueArray.length - 1].clearableValue === false) return;
			this.setValue(valueArray.slice(0, valueArray.length - 1));
		},
	
		removeValue: function removeValue(value) {
			var valueArray = this.getValueArray(this.props.value);
			this.setValue(valueArray.filter(function (i) {
				return i !== value;
			}));
			this.focus();
		},
	
		clearValue: function clearValue(event) {
			// if the event was triggered by a mousedown and not the primary
			// button, ignore it.
			if (event && event.type === 'mousedown' && event.button !== 0) {
				return;
			}
			event.stopPropagation();
			event.preventDefault();
			this.setValue(this.getResetValue());
			this.setState({
				isOpen: false,
				inputValue: ''
			}, this.focus);
		},
	
		getResetValue: function getResetValue() {
			if (this.props.resetValue !== undefined) {
				return this.props.resetValue;
			} else if (this.props.multi) {
				return [];
			} else {
				return null;
			}
		},
	
		focusOption: function focusOption(option) {
			this.setState({
				focusedOption: option
			});
		},
	
		focusNextOption: function focusNextOption() {
			this.focusAdjacentOption('next');
		},
	
		focusPreviousOption: function focusPreviousOption() {
			this.focusAdjacentOption('previous');
		},
	
		focusPageUpOption: function focusPageUpOption() {
			this.focusAdjacentOption('page_up');
		},
	
		focusPageDownOption: function focusPageDownOption() {
			this.focusAdjacentOption('page_down');
		},
	
		focusStartOption: function focusStartOption() {
			this.focusAdjacentOption('start');
		},
	
		focusEndOption: function focusEndOption() {
			this.focusAdjacentOption('end');
		},
	
		focusAdjacentOption: function focusAdjacentOption(dir) {
			var options = this._visibleOptions.map(function (option, index) {
				return { option: option, index: index };
			}).filter(function (option) {
				return !option.option.disabled;
			});
			this._scrollToFocusedOptionOnUpdate = true;
			if (!this.state.isOpen) {
				this.setState({
					isOpen: true,
					inputValue: '',
					focusedOption: this._focusedOption || (options.length ? options[dir === 'next' ? 0 : options.length - 1].option : null)
				});
				return;
			}
			if (!options.length) return;
			var focusedIndex = -1;
			for (var i = 0; i < options.length; i++) {
				if (this._focusedOption === options[i].option) {
					focusedIndex = i;
					break;
				}
			}
			if (dir === 'next' && focusedIndex !== -1) {
				focusedIndex = (focusedIndex + 1) % options.length;
			} else if (dir === 'previous') {
				if (focusedIndex > 0) {
					focusedIndex = focusedIndex - 1;
				} else {
					focusedIndex = options.length - 1;
				}
			} else if (dir === 'start') {
				focusedIndex = 0;
			} else if (dir === 'end') {
				focusedIndex = options.length - 1;
			} else if (dir === 'page_up') {
				var potentialIndex = focusedIndex - this.props.pageSize;
				if (potentialIndex < 0) {
					focusedIndex = 0;
				} else {
					focusedIndex = potentialIndex;
				}
			} else if (dir === 'page_down') {
				var potentialIndex = focusedIndex + this.props.pageSize;
				if (potentialIndex > options.length - 1) {
					focusedIndex = options.length - 1;
				} else {
					focusedIndex = potentialIndex;
				}
			}
	
			if (focusedIndex === -1) {
				focusedIndex = 0;
			}
	
			this.setState({
				focusedIndex: options[focusedIndex].index,
				focusedOption: options[focusedIndex].option
			});
		},
	
		getFocusedOption: function getFocusedOption() {
			return this._focusedOption;
		},
	
		getInputValue: function getInputValue() {
			return this.state.inputValue;
		},
	
		selectFocusedOption: function selectFocusedOption() {
			if (this._focusedOption) {
				return this.selectValue(this._focusedOption);
			}
		},
	
		renderLoading: function renderLoading() {
			if (!this.props.isLoading) return;
			return _react2['default'].createElement(
				'span',
				{ className: 'Select-loading-zone', 'aria-hidden': 'true' },
				_react2['default'].createElement('span', { className: 'Select-loading' })
			);
		},
	
		renderValue: function renderValue(valueArray, isOpen) {
			var _this4 = this;
	
			var renderLabel = this.props.valueRenderer || this.getOptionLabel;
			var ValueComponent = this.props.valueComponent;
			if (!valueArray.length) {
				return !this.state.inputValue ? _react2['default'].createElement(
					'div',
					{ className: 'Select-placeholder' },
					this.props.placeholder
				) : null;
			}
			var onClick = this.props.onValueClick ? this.handleValueClick : null;
			if (this.props.multi) {
				return valueArray.map(function (value, i) {
					return _react2['default'].createElement(
						ValueComponent,
						{
							id: _this4._instancePrefix + '-value-' + i,
							instancePrefix: _this4._instancePrefix,
							disabled: _this4.props.disabled || value.clearableValue === false,
							key: 'value-' + i + '-' + value[_this4.props.valueKey],
							onClick: onClick,
							onRemove: _this4.removeValue,
							value: value
						},
						renderLabel(value, i),
						_react2['default'].createElement(
							'span',
							{ className: 'Select-aria-only' },
							' '
						)
					);
				});
			} else if (!this.state.inputValue) {
				if (isOpen) onClick = null;
				return _react2['default'].createElement(
					ValueComponent,
					{
						id: this._instancePrefix + '-value-item',
						disabled: this.props.disabled,
						instancePrefix: this._instancePrefix,
						onClick: onClick,
						value: valueArray[0]
					},
					renderLabel(valueArray[0])
				);
			}
		},
	
		renderInput: function renderInput(valueArray, focusedOptionIndex) {
			var _classNames,
			    _this5 = this;
	
			var className = (0, _classnames2['default'])('Select-input', this.props.inputProps.className);
			var isOpen = !!this.state.isOpen;
	
			var ariaOwns = (0, _classnames2['default'])((_classNames = {}, _defineProperty(_classNames, this._instancePrefix + '-list', isOpen), _defineProperty(_classNames, this._instancePrefix + '-backspace-remove-message', this.props.multi && !this.props.disabled && this.state.isFocused && !this.state.inputValue), _classNames));
	
			// TODO: Check how this project includes Object.assign()
			var inputProps = _extends({}, this.props.inputProps, {
				role: 'combobox',
				'aria-expanded': '' + isOpen,
				'aria-owns': ariaOwns,
				'aria-haspopup': '' + isOpen,
				'aria-activedescendant': isOpen ? this._instancePrefix + '-option-' + focusedOptionIndex : this._instancePrefix + '-value',
				'aria-labelledby': this.props['aria-labelledby'],
				'aria-label': this.props['aria-label'],
				className: className,
				tabIndex: this.props.tabIndex,
				onBlur: this.handleInputBlur,
				onChange: this.handleInputChange,
				onFocus: this.handleInputFocus,
				ref: function ref(_ref) {
					return _this5.input = _ref;
				},
				required: this.state.required,
				value: this.state.inputValue
			});
	
			if (this.props.inputRenderer) {
				return this.props.inputRenderer(inputProps);
			}
	
			if (this.props.disabled || !this.props.searchable) {
				var _props$inputProps = this.props.inputProps;
				var inputClassName = _props$inputProps.inputClassName;
	
				var divProps = _objectWithoutProperties(_props$inputProps, ['inputClassName']);
	
				return _react2['default'].createElement('div', _extends({}, divProps, {
					role: 'combobox',
					'aria-expanded': isOpen,
					'aria-owns': isOpen ? this._instancePrefix + '-list' : this._instancePrefix + '-value',
					'aria-activedescendant': isOpen ? this._instancePrefix + '-option-' + focusedOptionIndex : this._instancePrefix + '-value',
					className: className,
					tabIndex: this.props.tabIndex || 0,
					onBlur: this.handleInputBlur,
					onFocus: this.handleInputFocus,
					ref: function (ref) {
						return _this5.input = ref;
					},
					'aria-readonly': '' + !!this.props.disabled,
					style: { border: 0, width: 1, display: 'inline-block' } }));
			}
	
			if (this.props.autosize) {
				return _react2['default'].createElement(_reactInputAutosize2['default'], _extends({}, inputProps, { minWidth: '5' }));
			}
			return _react2['default'].createElement(
				'div',
				{ className: className },
				_react2['default'].createElement('input', inputProps)
			);
		},
	
		renderClear: function renderClear() {
			if (!this.props.clearable || !this.props.value || this.props.value === 0 || this.props.multi && !this.props.value.length || this.props.disabled || this.props.isLoading) return;
			var clear = this.props.clearRenderer();
	
			return _react2['default'].createElement(
				'span',
				{ className: 'Select-clear-zone', title: this.props.multi ? this.props.clearAllText : this.props.clearValueText,
					'aria-label': this.props.multi ? this.props.clearAllText : this.props.clearValueText,
					onMouseDown: this.clearValue,
					onTouchStart: this.handleTouchStart,
					onTouchMove: this.handleTouchMove,
					onTouchEnd: this.handleTouchEndClearValue
				},
				clear
			);
		},
	
		renderArrow: function renderArrow() {
			var onMouseDown = this.handleMouseDownOnArrow;
			var isOpen = this.state.isOpen;
			var arrow = this.props.arrowRenderer({ onMouseDown: onMouseDown, isOpen: isOpen });
	
			return _react2['default'].createElement(
				'span',
				{
					className: 'Select-arrow-zone',
					onMouseDown: onMouseDown
				},
				arrow
			);
		},
	
		filterOptions: function filterOptions(excludeOptions) {
			var filterValue = this.state.inputValue;
			var options = this.props.options || [];
			if (this.props.filterOptions) {
				// Maintain backwards compatibility with boolean attribute
				var filterOptions = typeof this.props.filterOptions === 'function' ? this.props.filterOptions : _utilsDefaultFilterOptions2['default'];
	
				return filterOptions(options, filterValue, excludeOptions, {
					filterOption: this.props.filterOption,
					ignoreAccents: this.props.ignoreAccents,
					ignoreCase: this.props.ignoreCase,
					labelKey: this.props.labelKey,
					matchPos: this.props.matchPos,
					matchProp: this.props.matchProp,
					valueKey: this.props.valueKey
				});
			} else {
				return options;
			}
		},
	
		onOptionRef: function onOptionRef(ref, isFocused) {
			if (isFocused) {
				this.focused = ref;
			}
		},
	
		renderMenu: function renderMenu(options, valueArray, focusedOption) {
			if (options && options.length) {
				return this.props.menuRenderer({
					focusedOption: focusedOption,
					focusOption: this.focusOption,
					instancePrefix: this._instancePrefix,
					labelKey: this.props.labelKey,
					onFocus: this.focusOption,
					onSelect: this.selectValue,
					optionClassName: this.props.optionClassName,
					optionComponent: this.props.optionComponent,
					optionRenderer: this.props.optionRenderer || this.getOptionLabel,
					options: options,
					selectValue: this.selectValue,
					valueArray: valueArray,
					valueKey: this.props.valueKey,
					onOptionRef: this.onOptionRef
				});
			} else if (this.props.noResultsText) {
				return _react2['default'].createElement(
					'div',
					{ className: 'Select-noresults' },
					this.props.noResultsText
				);
			} else {
				return null;
			}
		},
	
		renderHiddenField: function renderHiddenField(valueArray) {
			var _this6 = this;
	
			if (!this.props.name) return;
			if (this.props.joinValues) {
				var value = valueArray.map(function (i) {
					return stringifyValue(i[_this6.props.valueKey]);
				}).join(this.props.delimiter);
				return _react2['default'].createElement('input', {
					type: 'hidden',
					ref: function (ref) {
						return _this6.value = ref;
					},
					name: this.props.name,
					value: value,
					disabled: this.props.disabled });
			}
			return valueArray.map(function (item, index) {
				return _react2['default'].createElement('input', { key: 'hidden.' + index,
					type: 'hidden',
					ref: 'value' + index,
					name: _this6.props.name,
					value: stringifyValue(item[_this6.props.valueKey]),
					disabled: _this6.props.disabled });
			});
		},
	
		getFocusableOptionIndex: function getFocusableOptionIndex(selectedOption) {
			var options = this._visibleOptions;
			if (!options.length) return null;
	
			var focusedOption = this.state.focusedOption || selectedOption;
			if (focusedOption && !focusedOption.disabled) {
				var focusedOptionIndex = options.indexOf(focusedOption);
				if (focusedOptionIndex !== -1) {
					return focusedOptionIndex;
				}
			}
	
			for (var i = 0; i < options.length; i++) {
				if (!options[i].disabled) return i;
			}
			return null;
		},
	
		renderOuter: function renderOuter(options, valueArray, focusedOption) {
			var _this7 = this;
	
			var menu = this.renderMenu(options, valueArray, focusedOption);
			if (!menu) {
				return null;
			}
	
			return _react2['default'].createElement(
				'div',
				{ ref: function (ref) {
						return _this7.menuContainer = ref;
					}, className: 'Select-menu-outer', style: this.props.menuContainerStyle },
				_react2['default'].createElement(
					'div',
					{ ref: function (ref) {
							return _this7.menu = ref;
						}, role: 'listbox', className: 'Select-menu', id: this._instancePrefix + '-list',
						style: this.props.menuStyle,
						onScroll: this.handleMenuScroll,
						onMouseDown: this.handleMouseDownOnMenu },
					menu
				)
			);
		},
	
		render: function render() {
			var _this8 = this;
	
			var valueArray = this.getValueArray(this.props.value);
			var options = this._visibleOptions = this.filterOptions(this.props.multi ? this.getValueArray(this.props.value) : null);
			var isOpen = this.state.isOpen;
			if (this.props.multi && !options.length && valueArray.length && !this.state.inputValue) isOpen = false;
			var focusedOptionIndex = this.getFocusableOptionIndex(valueArray[0]);
	
			var focusedOption = null;
			if (focusedOptionIndex !== null) {
				focusedOption = this._focusedOption = options[focusedOptionIndex];
			} else {
				focusedOption = this._focusedOption = null;
			}
			var className = (0, _classnames2['default'])('Select', this.props.className, {
				'Select--multi': this.props.multi,
				'Select--single': !this.props.multi,
				'is-disabled': this.props.disabled,
				'is-focused': this.state.isFocused,
				'is-loading': this.props.isLoading,
				'is-open': isOpen,
				'is-pseudo-focused': this.state.isPseudoFocused,
				'is-searchable': this.props.searchable,
				'has-value': valueArray.length
			});
	
			var removeMessage = null;
			if (this.props.multi && !this.props.disabled && valueArray.length && !this.state.inputValue && this.state.isFocused && this.props.backspaceRemoves) {
				removeMessage = _react2['default'].createElement(
					'span',
					{ id: this._instancePrefix + '-backspace-remove-message', className: 'Select-aria-only', 'aria-live': 'assertive' },
					this.props.backspaceToRemoveMessage.replace('{label}', valueArray[valueArray.length - 1][this.props.labelKey])
				);
			}
	
			return _react2['default'].createElement(
				'div',
				{ ref: function (ref) {
						return _this8.wrapper = ref;
					},
					className: className,
					style: this.props.wrapperStyle },
				this.renderHiddenField(valueArray),
				_react2['default'].createElement(
					'div',
					{ ref: function (ref) {
							return _this8.control = ref;
						},
						className: 'Select-control',
						style: this.props.style,
						onKeyDown: this.handleKeyDown,
						onMouseDown: this.handleMouseDown,
						onTouchEnd: this.handleTouchEnd,
						onTouchStart: this.handleTouchStart,
						onTouchMove: this.handleTouchMove
					},
					_react2['default'].createElement(
						'span',
						{ className: 'Select-multi-value-wrapper', id: this._instancePrefix + '-value' },
						this.renderValue(valueArray, isOpen),
						this.renderInput(valueArray, focusedOptionIndex)
					),
					removeMessage,
					this.renderLoading(),
					this.renderClear(),
					this.renderArrow()
				),
				isOpen ? this.renderOuter(options, !this.props.multi ? valueArray : null, focusedOption) : null
			);
		}
	
	});
	
	exports['default'] = Select;
	module.exports = exports['default'];

/***/ },
/* 403 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var React = __webpack_require__(1);
	
	var sizerStyle = { position: 'absolute', top: 0, left: 0, visibility: 'hidden', height: 0, overflow: 'scroll', whiteSpace: 'pre' };
	
	var AutosizeInput = React.createClass({
		displayName: 'AutosizeInput',
	
		propTypes: {
			className: React.PropTypes.string, // className for the outer element
			defaultValue: React.PropTypes.any, // default field value
			inputClassName: React.PropTypes.string, // className for the input element
			inputStyle: React.PropTypes.object, // css styles for the input element
			minWidth: React.PropTypes.oneOfType([// minimum width for input element
			React.PropTypes.number, React.PropTypes.string]),
			onChange: React.PropTypes.func, // onChange handler: function(newValue) {}
			placeholder: React.PropTypes.string, // placeholder text
			placeholderIsMinWidth: React.PropTypes.bool, // don't collapse size to less than the placeholder
			style: React.PropTypes.object, // css styles for the outer element
			value: React.PropTypes.any },
		// field value
		getDefaultProps: function getDefaultProps() {
			return {
				minWidth: 1
			};
		},
		getInitialState: function getInitialState() {
			return {
				inputWidth: this.props.minWidth
			};
		},
		componentDidMount: function componentDidMount() {
			this.copyInputStyles();
			this.updateInputWidth();
		},
		componentDidUpdate: function componentDidUpdate() {
			this.updateInputWidth();
		},
		copyInputStyles: function copyInputStyles() {
			if (!this.isMounted() || !window.getComputedStyle) {
				return;
			}
			var inputStyle = window.getComputedStyle(this.refs.input);
			if (!inputStyle) {
				return;
			}
			var widthNode = this.refs.sizer;
			widthNode.style.fontSize = inputStyle.fontSize;
			widthNode.style.fontFamily = inputStyle.fontFamily;
			widthNode.style.fontWeight = inputStyle.fontWeight;
			widthNode.style.fontStyle = inputStyle.fontStyle;
			widthNode.style.letterSpacing = inputStyle.letterSpacing;
			if (this.props.placeholder) {
				var placeholderNode = this.refs.placeholderSizer;
				placeholderNode.style.fontSize = inputStyle.fontSize;
				placeholderNode.style.fontFamily = inputStyle.fontFamily;
				placeholderNode.style.fontWeight = inputStyle.fontWeight;
				placeholderNode.style.fontStyle = inputStyle.fontStyle;
				placeholderNode.style.letterSpacing = inputStyle.letterSpacing;
			}
		},
		updateInputWidth: function updateInputWidth() {
			if (!this.isMounted() || typeof this.refs.sizer.scrollWidth === 'undefined') {
				return;
			}
			var newInputWidth = undefined;
			if (this.props.placeholder && (!this.props.value || this.props.value && this.props.placeholderIsMinWidth)) {
				newInputWidth = Math.max(this.refs.sizer.scrollWidth, this.refs.placeholderSizer.scrollWidth) + 2;
			} else {
				newInputWidth = this.refs.sizer.scrollWidth + 2;
			}
			if (newInputWidth < this.props.minWidth) {
				newInputWidth = this.props.minWidth;
			}
			if (newInputWidth !== this.state.inputWidth) {
				this.setState({
					inputWidth: newInputWidth
				});
			}
		},
		getInput: function getInput() {
			return this.refs.input;
		},
		focus: function focus() {
			this.refs.input.focus();
		},
		blur: function blur() {
			this.refs.input.blur();
		},
		select: function select() {
			this.refs.input.select();
		},
		render: function render() {
			var sizerValue = this.props.defaultValue || this.props.value || '';
			var wrapperStyle = this.props.style || {};
			if (!wrapperStyle.display) wrapperStyle.display = 'inline-block';
			var inputStyle = _extends({}, this.props.inputStyle);
			inputStyle.width = this.state.inputWidth + 'px';
			inputStyle.boxSizing = 'content-box';
			var inputProps = _extends({}, this.props);
			inputProps.className = this.props.inputClassName;
			inputProps.style = inputStyle;
			// ensure props meant for `AutosizeInput` don't end up on the `input`
			delete inputProps.inputClassName;
			delete inputProps.inputStyle;
			delete inputProps.minWidth;
			delete inputProps.placeholderIsMinWidth;
			return React.createElement(
				'div',
				{ className: this.props.className, style: wrapperStyle },
				React.createElement('input', _extends({}, inputProps, { ref: 'input' })),
				React.createElement(
					'div',
					{ ref: 'sizer', style: sizerStyle },
					sizerValue
				),
				this.props.placeholder ? React.createElement(
					'div',
					{ ref: 'placeholderSizer', style: sizerStyle },
					this.props.placeholder
				) : null
			);
		}
	});
	
	module.exports = AutosizeInput;

/***/ },
/* 404 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
	  Copyright (c) 2016 Jed Watson.
	  Licensed under the MIT License (MIT), see
	  http://jedwatson.github.io/classnames
	*/
	/* global define */
	
	(function () {
		'use strict';
	
		var hasOwn = {}.hasOwnProperty;
	
		function classNames () {
			var classes = [];
	
			for (var i = 0; i < arguments.length; i++) {
				var arg = arguments[i];
				if (!arg) continue;
	
				var argType = typeof arg;
	
				if (argType === 'string' || argType === 'number') {
					classes.push(arg);
				} else if (Array.isArray(arg)) {
					classes.push(classNames.apply(null, arg));
				} else if (argType === 'object') {
					for (var key in arg) {
						if (hasOwn.call(arg, key) && arg[key]) {
							classes.push(key);
						}
					}
				}
			}
	
			return classes.join(' ');
		}
	
		if (typeof module !== 'undefined' && module.exports) {
			module.exports = classNames;
		} else if (true) {
			// register as 'classnames', consistent with npm package name
			!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {
				return classNames;
			}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
		} else {
			window.classNames = classNames;
		}
	}());


/***/ },
/* 405 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports["default"] = arrowRenderer;
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	function arrowRenderer(_ref) {
		var onMouseDown = _ref.onMouseDown;
	
		return _react2["default"].createElement("span", {
			className: "Select-arrow",
			onMouseDown: onMouseDown
		});
	}
	
	;
	module.exports = exports["default"];

/***/ },
/* 406 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var _stripDiacritics = __webpack_require__(407);
	
	var _stripDiacritics2 = _interopRequireDefault(_stripDiacritics);
	
	function filterOptions(options, filterValue, excludeOptions, props) {
		var _this = this;
	
		if (props.ignoreAccents) {
			filterValue = (0, _stripDiacritics2['default'])(filterValue);
		}
	
		if (props.ignoreCase) {
			filterValue = filterValue.toLowerCase();
		}
	
		if (excludeOptions) excludeOptions = excludeOptions.map(function (i) {
			return i[props.valueKey];
		});
	
		return options.filter(function (option) {
			if (excludeOptions && excludeOptions.indexOf(option[props.valueKey]) > -1) return false;
			if (props.filterOption) return props.filterOption.call(_this, option, filterValue);
			if (!filterValue) return true;
			var valueTest = String(option[props.valueKey]);
			var labelTest = String(option[props.labelKey]);
			if (props.ignoreAccents) {
				if (props.matchProp !== 'label') valueTest = (0, _stripDiacritics2['default'])(valueTest);
				if (props.matchProp !== 'value') labelTest = (0, _stripDiacritics2['default'])(labelTest);
			}
			if (props.ignoreCase) {
				if (props.matchProp !== 'label') valueTest = valueTest.toLowerCase();
				if (props.matchProp !== 'value') labelTest = labelTest.toLowerCase();
			}
			return props.matchPos === 'start' ? props.matchProp !== 'label' && valueTest.substr(0, filterValue.length) === filterValue || props.matchProp !== 'value' && labelTest.substr(0, filterValue.length) === filterValue : props.matchProp !== 'label' && valueTest.indexOf(filterValue) >= 0 || props.matchProp !== 'value' && labelTest.indexOf(filterValue) >= 0;
		});
	}
	
	module.exports = filterOptions;

/***/ },
/* 407 */
/***/ function(module, exports) {

	'use strict';
	
	var map = [{ 'base': 'A', 'letters': /[\u0041\u24B6\uFF21\u00C0\u00C1\u00C2\u1EA6\u1EA4\u1EAA\u1EA8\u00C3\u0100\u0102\u1EB0\u1EAE\u1EB4\u1EB2\u0226\u01E0\u00C4\u01DE\u1EA2\u00C5\u01FA\u01CD\u0200\u0202\u1EA0\u1EAC\u1EB6\u1E00\u0104\u023A\u2C6F]/g }, { 'base': 'AA', 'letters': /[\uA732]/g }, { 'base': 'AE', 'letters': /[\u00C6\u01FC\u01E2]/g }, { 'base': 'AO', 'letters': /[\uA734]/g }, { 'base': 'AU', 'letters': /[\uA736]/g }, { 'base': 'AV', 'letters': /[\uA738\uA73A]/g }, { 'base': 'AY', 'letters': /[\uA73C]/g }, { 'base': 'B', 'letters': /[\u0042\u24B7\uFF22\u1E02\u1E04\u1E06\u0243\u0182\u0181]/g }, { 'base': 'C', 'letters': /[\u0043\u24B8\uFF23\u0106\u0108\u010A\u010C\u00C7\u1E08\u0187\u023B\uA73E]/g }, { 'base': 'D', 'letters': /[\u0044\u24B9\uFF24\u1E0A\u010E\u1E0C\u1E10\u1E12\u1E0E\u0110\u018B\u018A\u0189\uA779]/g }, { 'base': 'DZ', 'letters': /[\u01F1\u01C4]/g }, { 'base': 'Dz', 'letters': /[\u01F2\u01C5]/g }, { 'base': 'E', 'letters': /[\u0045\u24BA\uFF25\u00C8\u00C9\u00CA\u1EC0\u1EBE\u1EC4\u1EC2\u1EBC\u0112\u1E14\u1E16\u0114\u0116\u00CB\u1EBA\u011A\u0204\u0206\u1EB8\u1EC6\u0228\u1E1C\u0118\u1E18\u1E1A\u0190\u018E]/g }, { 'base': 'F', 'letters': /[\u0046\u24BB\uFF26\u1E1E\u0191\uA77B]/g }, { 'base': 'G', 'letters': /[\u0047\u24BC\uFF27\u01F4\u011C\u1E20\u011E\u0120\u01E6\u0122\u01E4\u0193\uA7A0\uA77D\uA77E]/g }, { 'base': 'H', 'letters': /[\u0048\u24BD\uFF28\u0124\u1E22\u1E26\u021E\u1E24\u1E28\u1E2A\u0126\u2C67\u2C75\uA78D]/g }, { 'base': 'I', 'letters': /[\u0049\u24BE\uFF29\u00CC\u00CD\u00CE\u0128\u012A\u012C\u0130\u00CF\u1E2E\u1EC8\u01CF\u0208\u020A\u1ECA\u012E\u1E2C\u0197]/g }, { 'base': 'J', 'letters': /[\u004A\u24BF\uFF2A\u0134\u0248]/g }, { 'base': 'K', 'letters': /[\u004B\u24C0\uFF2B\u1E30\u01E8\u1E32\u0136\u1E34\u0198\u2C69\uA740\uA742\uA744\uA7A2]/g }, { 'base': 'L', 'letters': /[\u004C\u24C1\uFF2C\u013F\u0139\u013D\u1E36\u1E38\u013B\u1E3C\u1E3A\u0141\u023D\u2C62\u2C60\uA748\uA746\uA780]/g }, { 'base': 'LJ', 'letters': /[\u01C7]/g }, { 'base': 'Lj', 'letters': /[\u01C8]/g }, { 'base': 'M', 'letters': /[\u004D\u24C2\uFF2D\u1E3E\u1E40\u1E42\u2C6E\u019C]/g }, { 'base': 'N', 'letters': /[\u004E\u24C3\uFF2E\u01F8\u0143\u00D1\u1E44\u0147\u1E46\u0145\u1E4A\u1E48\u0220\u019D\uA790\uA7A4]/g }, { 'base': 'NJ', 'letters': /[\u01CA]/g }, { 'base': 'Nj', 'letters': /[\u01CB]/g }, { 'base': 'O', 'letters': /[\u004F\u24C4\uFF2F\u00D2\u00D3\u00D4\u1ED2\u1ED0\u1ED6\u1ED4\u00D5\u1E4C\u022C\u1E4E\u014C\u1E50\u1E52\u014E\u022E\u0230\u00D6\u022A\u1ECE\u0150\u01D1\u020C\u020E\u01A0\u1EDC\u1EDA\u1EE0\u1EDE\u1EE2\u1ECC\u1ED8\u01EA\u01EC\u00D8\u01FE\u0186\u019F\uA74A\uA74C]/g }, { 'base': 'OI', 'letters': /[\u01A2]/g }, { 'base': 'OO', 'letters': /[\uA74E]/g }, { 'base': 'OU', 'letters': /[\u0222]/g }, { 'base': 'P', 'letters': /[\u0050\u24C5\uFF30\u1E54\u1E56\u01A4\u2C63\uA750\uA752\uA754]/g }, { 'base': 'Q', 'letters': /[\u0051\u24C6\uFF31\uA756\uA758\u024A]/g }, { 'base': 'R', 'letters': /[\u0052\u24C7\uFF32\u0154\u1E58\u0158\u0210\u0212\u1E5A\u1E5C\u0156\u1E5E\u024C\u2C64\uA75A\uA7A6\uA782]/g }, { 'base': 'S', 'letters': /[\u0053\u24C8\uFF33\u1E9E\u015A\u1E64\u015C\u1E60\u0160\u1E66\u1E62\u1E68\u0218\u015E\u2C7E\uA7A8\uA784]/g }, { 'base': 'T', 'letters': /[\u0054\u24C9\uFF34\u1E6A\u0164\u1E6C\u021A\u0162\u1E70\u1E6E\u0166\u01AC\u01AE\u023E\uA786]/g }, { 'base': 'TZ', 'letters': /[\uA728]/g }, { 'base': 'U', 'letters': /[\u0055\u24CA\uFF35\u00D9\u00DA\u00DB\u0168\u1E78\u016A\u1E7A\u016C\u00DC\u01DB\u01D7\u01D5\u01D9\u1EE6\u016E\u0170\u01D3\u0214\u0216\u01AF\u1EEA\u1EE8\u1EEE\u1EEC\u1EF0\u1EE4\u1E72\u0172\u1E76\u1E74\u0244]/g }, { 'base': 'V', 'letters': /[\u0056\u24CB\uFF36\u1E7C\u1E7E\u01B2\uA75E\u0245]/g }, { 'base': 'VY', 'letters': /[\uA760]/g }, { 'base': 'W', 'letters': /[\u0057\u24CC\uFF37\u1E80\u1E82\u0174\u1E86\u1E84\u1E88\u2C72]/g }, { 'base': 'X', 'letters': /[\u0058\u24CD\uFF38\u1E8A\u1E8C]/g }, { 'base': 'Y', 'letters': /[\u0059\u24CE\uFF39\u1EF2\u00DD\u0176\u1EF8\u0232\u1E8E\u0178\u1EF6\u1EF4\u01B3\u024E\u1EFE]/g }, { 'base': 'Z', 'letters': /[\u005A\u24CF\uFF3A\u0179\u1E90\u017B\u017D\u1E92\u1E94\u01B5\u0224\u2C7F\u2C6B\uA762]/g }, { 'base': 'a', 'letters': /[\u0061\u24D0\uFF41\u1E9A\u00E0\u00E1\u00E2\u1EA7\u1EA5\u1EAB\u1EA9\u00E3\u0101\u0103\u1EB1\u1EAF\u1EB5\u1EB3\u0227\u01E1\u00E4\u01DF\u1EA3\u00E5\u01FB\u01CE\u0201\u0203\u1EA1\u1EAD\u1EB7\u1E01\u0105\u2C65\u0250]/g }, { 'base': 'aa', 'letters': /[\uA733]/g }, { 'base': 'ae', 'letters': /[\u00E6\u01FD\u01E3]/g }, { 'base': 'ao', 'letters': /[\uA735]/g }, { 'base': 'au', 'letters': /[\uA737]/g }, { 'base': 'av', 'letters': /[\uA739\uA73B]/g }, { 'base': 'ay', 'letters': /[\uA73D]/g }, { 'base': 'b', 'letters': /[\u0062\u24D1\uFF42\u1E03\u1E05\u1E07\u0180\u0183\u0253]/g }, { 'base': 'c', 'letters': /[\u0063\u24D2\uFF43\u0107\u0109\u010B\u010D\u00E7\u1E09\u0188\u023C\uA73F\u2184]/g }, { 'base': 'd', 'letters': /[\u0064\u24D3\uFF44\u1E0B\u010F\u1E0D\u1E11\u1E13\u1E0F\u0111\u018C\u0256\u0257\uA77A]/g }, { 'base': 'dz', 'letters': /[\u01F3\u01C6]/g }, { 'base': 'e', 'letters': /[\u0065\u24D4\uFF45\u00E8\u00E9\u00EA\u1EC1\u1EBF\u1EC5\u1EC3\u1EBD\u0113\u1E15\u1E17\u0115\u0117\u00EB\u1EBB\u011B\u0205\u0207\u1EB9\u1EC7\u0229\u1E1D\u0119\u1E19\u1E1B\u0247\u025B\u01DD]/g }, { 'base': 'f', 'letters': /[\u0066\u24D5\uFF46\u1E1F\u0192\uA77C]/g }, { 'base': 'g', 'letters': /[\u0067\u24D6\uFF47\u01F5\u011D\u1E21\u011F\u0121\u01E7\u0123\u01E5\u0260\uA7A1\u1D79\uA77F]/g }, { 'base': 'h', 'letters': /[\u0068\u24D7\uFF48\u0125\u1E23\u1E27\u021F\u1E25\u1E29\u1E2B\u1E96\u0127\u2C68\u2C76\u0265]/g }, { 'base': 'hv', 'letters': /[\u0195]/g }, { 'base': 'i', 'letters': /[\u0069\u24D8\uFF49\u00EC\u00ED\u00EE\u0129\u012B\u012D\u00EF\u1E2F\u1EC9\u01D0\u0209\u020B\u1ECB\u012F\u1E2D\u0268\u0131]/g }, { 'base': 'j', 'letters': /[\u006A\u24D9\uFF4A\u0135\u01F0\u0249]/g }, { 'base': 'k', 'letters': /[\u006B\u24DA\uFF4B\u1E31\u01E9\u1E33\u0137\u1E35\u0199\u2C6A\uA741\uA743\uA745\uA7A3]/g }, { 'base': 'l', 'letters': /[\u006C\u24DB\uFF4C\u0140\u013A\u013E\u1E37\u1E39\u013C\u1E3D\u1E3B\u017F\u0142\u019A\u026B\u2C61\uA749\uA781\uA747]/g }, { 'base': 'lj', 'letters': /[\u01C9]/g }, { 'base': 'm', 'letters': /[\u006D\u24DC\uFF4D\u1E3F\u1E41\u1E43\u0271\u026F]/g }, { 'base': 'n', 'letters': /[\u006E\u24DD\uFF4E\u01F9\u0144\u00F1\u1E45\u0148\u1E47\u0146\u1E4B\u1E49\u019E\u0272\u0149\uA791\uA7A5]/g }, { 'base': 'nj', 'letters': /[\u01CC]/g }, { 'base': 'o', 'letters': /[\u006F\u24DE\uFF4F\u00F2\u00F3\u00F4\u1ED3\u1ED1\u1ED7\u1ED5\u00F5\u1E4D\u022D\u1E4F\u014D\u1E51\u1E53\u014F\u022F\u0231\u00F6\u022B\u1ECF\u0151\u01D2\u020D\u020F\u01A1\u1EDD\u1EDB\u1EE1\u1EDF\u1EE3\u1ECD\u1ED9\u01EB\u01ED\u00F8\u01FF\u0254\uA74B\uA74D\u0275]/g }, { 'base': 'oi', 'letters': /[\u01A3]/g }, { 'base': 'ou', 'letters': /[\u0223]/g }, { 'base': 'oo', 'letters': /[\uA74F]/g }, { 'base': 'p', 'letters': /[\u0070\u24DF\uFF50\u1E55\u1E57\u01A5\u1D7D\uA751\uA753\uA755]/g }, { 'base': 'q', 'letters': /[\u0071\u24E0\uFF51\u024B\uA757\uA759]/g }, { 'base': 'r', 'letters': /[\u0072\u24E1\uFF52\u0155\u1E59\u0159\u0211\u0213\u1E5B\u1E5D\u0157\u1E5F\u024D\u027D\uA75B\uA7A7\uA783]/g }, { 'base': 's', 'letters': /[\u0073\u24E2\uFF53\u00DF\u015B\u1E65\u015D\u1E61\u0161\u1E67\u1E63\u1E69\u0219\u015F\u023F\uA7A9\uA785\u1E9B]/g }, { 'base': 't', 'letters': /[\u0074\u24E3\uFF54\u1E6B\u1E97\u0165\u1E6D\u021B\u0163\u1E71\u1E6F\u0167\u01AD\u0288\u2C66\uA787]/g }, { 'base': 'tz', 'letters': /[\uA729]/g }, { 'base': 'u', 'letters': /[\u0075\u24E4\uFF55\u00F9\u00FA\u00FB\u0169\u1E79\u016B\u1E7B\u016D\u00FC\u01DC\u01D8\u01D6\u01DA\u1EE7\u016F\u0171\u01D4\u0215\u0217\u01B0\u1EEB\u1EE9\u1EEF\u1EED\u1EF1\u1EE5\u1E73\u0173\u1E77\u1E75\u0289]/g }, { 'base': 'v', 'letters': /[\u0076\u24E5\uFF56\u1E7D\u1E7F\u028B\uA75F\u028C]/g }, { 'base': 'vy', 'letters': /[\uA761]/g }, { 'base': 'w', 'letters': /[\u0077\u24E6\uFF57\u1E81\u1E83\u0175\u1E87\u1E85\u1E98\u1E89\u2C73]/g }, { 'base': 'x', 'letters': /[\u0078\u24E7\uFF58\u1E8B\u1E8D]/g }, { 'base': 'y', 'letters': /[\u0079\u24E8\uFF59\u1EF3\u00FD\u0177\u1EF9\u0233\u1E8F\u00FF\u1EF7\u1E99\u1EF5\u01B4\u024F\u1EFF]/g }, { 'base': 'z', 'letters': /[\u007A\u24E9\uFF5A\u017A\u1E91\u017C\u017E\u1E93\u1E95\u01B6\u0225\u0240\u2C6C\uA763]/g }];
	
	module.exports = function stripDiacritics(str) {
		for (var i = 0; i < map.length; i++) {
			str = str.replace(map[i].letters, map[i].base);
		}
		return str;
	};

/***/ },
/* 408 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var _classnames = __webpack_require__(404);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	function menuRenderer(_ref) {
		var focusedOption = _ref.focusedOption;
		var instancePrefix = _ref.instancePrefix;
		var labelKey = _ref.labelKey;
		var onFocus = _ref.onFocus;
		var onSelect = _ref.onSelect;
		var optionClassName = _ref.optionClassName;
		var optionComponent = _ref.optionComponent;
		var optionRenderer = _ref.optionRenderer;
		var options = _ref.options;
		var valueArray = _ref.valueArray;
		var valueKey = _ref.valueKey;
		var onOptionRef = _ref.onOptionRef;
	
		var Option = optionComponent;
	
		return options.map(function (option, i) {
			var isSelected = valueArray && valueArray.indexOf(option) > -1;
			var isFocused = option === focusedOption;
			var optionClass = (0, _classnames2['default'])(optionClassName, {
				'Select-option': true,
				'is-selected': isSelected,
				'is-focused': isFocused,
				'is-disabled': option.disabled
			});
	
			return _react2['default'].createElement(
				Option,
				{
					className: optionClass,
					instancePrefix: instancePrefix,
					isDisabled: option.disabled,
					isFocused: isFocused,
					isSelected: isSelected,
					key: 'option-' + i + '-' + option[valueKey],
					onFocus: onFocus,
					onSelect: onSelect,
					option: option,
					optionIndex: i,
					ref: function (ref) {
						onOptionRef(ref, isFocused);
					}
				},
				optionRenderer(option, i)
			);
		});
	}
	
	module.exports = menuRenderer;

/***/ },
/* 409 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, '__esModule', {
		value: true
	});
	exports['default'] = clearRenderer;
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	function clearRenderer() {
		return _react2['default'].createElement('span', {
			className: 'Select-clear',
			dangerouslySetInnerHTML: { __html: '&times;' }
		});
	}
	
	;
	module.exports = exports['default'];

/***/ },
/* 410 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, '__esModule', {
		value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();
	
	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Select = __webpack_require__(402);
	
	var _Select2 = _interopRequireDefault(_Select);
	
	var _utilsStripDiacritics = __webpack_require__(407);
	
	var _utilsStripDiacritics2 = _interopRequireDefault(_utilsStripDiacritics);
	
	var propTypes = {
		autoload: _react2['default'].PropTypes.bool.isRequired, // automatically call the `loadOptions` prop on-mount; defaults to true
		cache: _react2['default'].PropTypes.any, // object to use to cache results; set to null/false to disable caching
		children: _react2['default'].PropTypes.func.isRequired, // Child function responsible for creating the inner Select component; (props: Object): PropTypes.element
		ignoreAccents: _react2['default'].PropTypes.bool, // strip diacritics when filtering; defaults to true
		ignoreCase: _react2['default'].PropTypes.bool, // perform case-insensitive filtering; defaults to true
		loadingPlaceholder: _react2['default'].PropTypes.oneOfType([// replaces the placeholder while options are loading
		_react2['default'].PropTypes.string, _react2['default'].PropTypes.node]),
		loadOptions: _react2['default'].PropTypes.func.isRequired, // callback to load options asynchronously; (inputValue: string, callback: Function): ?Promise
		options: _react.PropTypes.array.isRequired, // array of options
		placeholder: _react2['default'].PropTypes.oneOfType([// field placeholder, displayed when there's no value (shared with Select)
		_react2['default'].PropTypes.string, _react2['default'].PropTypes.node]),
		noResultsText: _react2['default'].PropTypes.oneOfType([// field noResultsText, displayed when no options come back from the server
		_react2['default'].PropTypes.string, _react2['default'].PropTypes.node]),
		onChange: _react2['default'].PropTypes.func, // onChange handler: function (newValue) {}
		searchPromptText: _react2['default'].PropTypes.oneOfType([// label to prompt for search input
		_react2['default'].PropTypes.string, _react2['default'].PropTypes.node]),
		onInputChange: _react2['default'].PropTypes.func, // optional for keeping track of what is being typed
		value: _react2['default'].PropTypes.any };
	
	// initial field value
	var defaultCache = {};
	
	var defaultProps = {
		autoload: true,
		cache: defaultCache,
		children: defaultChildren,
		ignoreAccents: true,
		ignoreCase: true,
		loadingPlaceholder: 'Loading...',
		options: [],
		searchPromptText: 'Type to search'
	};
	
	var Async = (function (_Component) {
		_inherits(Async, _Component);
	
		function Async(props, context) {
			_classCallCheck(this, Async);
	
			_get(Object.getPrototypeOf(Async.prototype), 'constructor', this).call(this, props, context);
	
			this._cache = props.cache === defaultCache ? {} : props.cache;
	
			this.state = {
				isLoading: false,
				options: props.options
			};
	
			this._onInputChange = this._onInputChange.bind(this);
		}
	
		_createClass(Async, [{
			key: 'componentDidMount',
			value: function componentDidMount() {
				var autoload = this.props.autoload;
	
				if (autoload) {
					this.loadOptions('');
				}
			}
		}, {
			key: 'componentWillUpdate',
			value: function componentWillUpdate(nextProps, nextState) {
				var _this = this;
	
				var propertiesToSync = ['options'];
				propertiesToSync.forEach(function (prop) {
					if (_this.props[prop] !== nextProps[prop]) {
						_this.setState(_defineProperty({}, prop, nextProps[prop]));
					}
				});
			}
		}, {
			key: 'clearOptions',
			value: function clearOptions() {
				this.setState({ options: [] });
			}
		}, {
			key: 'loadOptions',
			value: function loadOptions(inputValue) {
				var _this2 = this;
	
				var loadOptions = this.props.loadOptions;
	
				var cache = this._cache;
	
				if (cache && cache.hasOwnProperty(inputValue)) {
					this.setState({
						options: cache[inputValue]
					});
	
					return;
				}
	
				var callback = function callback(error, data) {
					if (callback === _this2._callback) {
						_this2._callback = null;
	
						var options = data && data.options || [];
	
						if (cache) {
							cache[inputValue] = options;
						}
	
						_this2.setState({
							isLoading: false,
							options: options
						});
					}
				};
	
				// Ignore all but the most recent request
				this._callback = callback;
	
				var promise = loadOptions(inputValue, callback);
				if (promise) {
					promise.then(function (data) {
						return callback(null, data);
					}, function (error) {
						return callback(error);
					});
				}
	
				if (this._callback && !this.state.isLoading) {
					this.setState({
						isLoading: true
					});
				}
	
				return inputValue;
			}
		}, {
			key: '_onInputChange',
			value: function _onInputChange(inputValue) {
				var _props = this.props;
				var ignoreAccents = _props.ignoreAccents;
				var ignoreCase = _props.ignoreCase;
				var onInputChange = _props.onInputChange;
	
				if (ignoreAccents) {
					inputValue = (0, _utilsStripDiacritics2['default'])(inputValue);
				}
	
				if (ignoreCase) {
					inputValue = inputValue.toLowerCase();
				}
	
				if (onInputChange) {
					onInputChange(inputValue);
				}
	
				return this.loadOptions(inputValue);
			}
		}, {
			key: 'inputValue',
			value: function inputValue() {
				if (this.select) {
					return this.select.state.inputValue;
				}
				return '';
			}
		}, {
			key: 'noResultsText',
			value: function noResultsText() {
				var _props2 = this.props;
				var loadingPlaceholder = _props2.loadingPlaceholder;
				var noResultsText = _props2.noResultsText;
				var searchPromptText = _props2.searchPromptText;
				var isLoading = this.state.isLoading;
	
				var inputValue = this.inputValue();
	
				if (isLoading) {
					return loadingPlaceholder;
				}
				if (inputValue && noResultsText) {
					return noResultsText;
				}
				return searchPromptText;
			}
		}, {
			key: 'focus',
			value: function focus() {
				this.select.focus();
			}
		}, {
			key: 'render',
			value: function render() {
				var _this3 = this;
	
				var _props3 = this.props;
				var children = _props3.children;
				var loadingPlaceholder = _props3.loadingPlaceholder;
				var placeholder = _props3.placeholder;
				var _state = this.state;
				var isLoading = _state.isLoading;
				var options = _state.options;
	
				var props = {
					noResultsText: this.noResultsText(),
					placeholder: isLoading ? loadingPlaceholder : placeholder,
					options: isLoading && loadingPlaceholder ? [] : options,
					ref: function ref(_ref) {
						return _this3.select = _ref;
					},
					onChange: function onChange(newValues) {
						if (_this3.props.multi && _this3.props.value && newValues.length > _this3.props.value.length) {
							_this3.clearOptions();
						}
						_this3.props.onChange(newValues);
					}
				};
	
				return children(_extends({}, this.props, props, {
					isLoading: isLoading,
					onInputChange: this._onInputChange
				}));
			}
		}]);
	
		return Async;
	})(_react.Component);
	
	exports['default'] = Async;
	
	Async.propTypes = propTypes;
	Async.defaultProps = defaultProps;
	
	function defaultChildren(props) {
		return _react2['default'].createElement(_Select2['default'], props);
	};
	module.exports = exports['default'];

/***/ },
/* 411 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Select = __webpack_require__(402);
	
	var _Select2 = _interopRequireDefault(_Select);
	
	function reduce(obj) {
		var props = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];
	
		return Object.keys(obj).reduce(function (props, key) {
			var value = obj[key];
			if (value !== undefined) props[key] = value;
			return props;
		}, props);
	}
	
	var AsyncCreatable = _react2['default'].createClass({
		displayName: 'AsyncCreatableSelect',
	
		render: function render() {
			var _this = this;
	
			return _react2['default'].createElement(
				_Select2['default'].Async,
				this.props,
				function (asyncProps) {
					return _react2['default'].createElement(
						_Select2['default'].Creatable,
						_this.props,
						function (creatableProps) {
							return _react2['default'].createElement(_Select2['default'], _extends({}, reduce(asyncProps, reduce(creatableProps, {})), {
								onInputChange: function (input) {
									creatableProps.onInputChange(input);
									return asyncProps.onInputChange(input);
								},
								ref: function (ref) {
									creatableProps.ref(ref);
									asyncProps.ref(ref);
								}
							}));
						}
					);
				}
			);
		}
	});
	
	module.exports = AsyncCreatable;

/***/ },
/* 412 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Select = __webpack_require__(402);
	
	var _Select2 = _interopRequireDefault(_Select);
	
	var _utilsDefaultFilterOptions = __webpack_require__(406);
	
	var _utilsDefaultFilterOptions2 = _interopRequireDefault(_utilsDefaultFilterOptions);
	
	var _utilsDefaultMenuRenderer = __webpack_require__(408);
	
	var _utilsDefaultMenuRenderer2 = _interopRequireDefault(_utilsDefaultMenuRenderer);
	
	var Creatable = _react2['default'].createClass({
		displayName: 'CreatableSelect',
	
		propTypes: {
			// Child function responsible for creating the inner Select component
			// This component can be used to compose HOCs (eg Creatable and Async)
			// (props: Object): PropTypes.element
			children: _react2['default'].PropTypes.func,
	
			// See Select.propTypes.filterOptions
			filterOptions: _react2['default'].PropTypes.any,
	
			// Searches for any matching option within the set of options.
			// This function prevents duplicate options from being created.
			// ({ option: Object, options: Array, labelKey: string, valueKey: string }): boolean
			isOptionUnique: _react2['default'].PropTypes.func,
	
			// Determines if the current input text represents a valid option.
			// ({ label: string }): boolean
			isValidNewOption: _react2['default'].PropTypes.func,
	
			// See Select.propTypes.menuRenderer
			menuRenderer: _react2['default'].PropTypes.any,
	
			// Factory to create new option.
			// ({ label: string, labelKey: string, valueKey: string }): Object
			newOptionCreator: _react2['default'].PropTypes.func,
	
			// input change handler: function (inputValue) {}
			onInputChange: _react2['default'].PropTypes.func,
	
			// input keyDown handler: function (event) {}
			onInputKeyDown: _react2['default'].PropTypes.func,
	
			// new option click handler: function (option) {}
			onNewOptionClick: _react2['default'].PropTypes.func,
	
			// See Select.propTypes.options
			options: _react2['default'].PropTypes.array,
	
			// Creates prompt/placeholder option text.
			// (filterText: string): string
			promptTextCreator: _react2['default'].PropTypes.func,
	
			// Decides if a keyDown event (eg its `keyCode`) should result in the creation of a new option.
			shouldKeyDownEventCreateNewOption: _react2['default'].PropTypes.func
		},
	
		// Default prop methods
		statics: {
			isOptionUnique: isOptionUnique,
			isValidNewOption: isValidNewOption,
			newOptionCreator: newOptionCreator,
			promptTextCreator: promptTextCreator,
			shouldKeyDownEventCreateNewOption: shouldKeyDownEventCreateNewOption
		},
	
		getDefaultProps: function getDefaultProps() {
			return {
				filterOptions: _utilsDefaultFilterOptions2['default'],
				isOptionUnique: isOptionUnique,
				isValidNewOption: isValidNewOption,
				menuRenderer: _utilsDefaultMenuRenderer2['default'],
				newOptionCreator: newOptionCreator,
				promptTextCreator: promptTextCreator,
				shouldKeyDownEventCreateNewOption: shouldKeyDownEventCreateNewOption
			};
		},
	
		createNewOption: function createNewOption() {
			var _props = this.props;
			var isValidNewOption = _props.isValidNewOption;
			var newOptionCreator = _props.newOptionCreator;
			var onNewOptionClick = _props.onNewOptionClick;
			var _props$options = _props.options;
			var options = _props$options === undefined ? [] : _props$options;
			var shouldKeyDownEventCreateNewOption = _props.shouldKeyDownEventCreateNewOption;
	
			if (isValidNewOption({ label: this.inputValue })) {
				var option = newOptionCreator({ label: this.inputValue, labelKey: this.labelKey, valueKey: this.valueKey });
				var _isOptionUnique = this.isOptionUnique({ option: option });
	
				// Don't add the same option twice.
				if (_isOptionUnique) {
					if (onNewOptionClick) {
						onNewOptionClick(option);
					} else {
						options.unshift(option);
	
						this.select.selectValue(option);
					}
				}
			}
		},
	
		filterOptions: function filterOptions() {
			var _props2 = this.props;
			var filterOptions = _props2.filterOptions;
			var isValidNewOption = _props2.isValidNewOption;
			var options = _props2.options;
			var promptTextCreator = _props2.promptTextCreator;
	
			// TRICKY Check currently selected options as well.
			// Don't display a create-prompt for a value that's selected.
			// This covers async edge-cases where a newly-created Option isn't yet in the async-loaded array.
			var excludeOptions = arguments[2] || [];
	
			var filteredOptions = filterOptions.apply(undefined, arguments) || [];
	
			if (isValidNewOption({ label: this.inputValue })) {
				var _newOptionCreator = this.props.newOptionCreator;
	
				var option = _newOptionCreator({
					label: this.inputValue,
					labelKey: this.labelKey,
					valueKey: this.valueKey
				});
	
				// TRICKY Compare to all options (not just filtered options) in case option has already been selected).
				// For multi-selects, this would remove it from the filtered list.
				var _isOptionUnique2 = this.isOptionUnique({
					option: option,
					options: excludeOptions.concat(filteredOptions)
				});
	
				if (_isOptionUnique2) {
					var _prompt = promptTextCreator(this.inputValue);
	
					this._createPlaceholderOption = _newOptionCreator({
						label: _prompt,
						labelKey: this.labelKey,
						valueKey: this.valueKey
					});
	
					filteredOptions.unshift(this._createPlaceholderOption);
				}
			}
	
			return filteredOptions;
		},
	
		isOptionUnique: function isOptionUnique(_ref2) {
			var option = _ref2.option;
			var options = _ref2.options;
			var isOptionUnique = this.props.isOptionUnique;
	
			options = options || this.select.filterOptions();
	
			return isOptionUnique({
				labelKey: this.labelKey,
				option: option,
				options: options,
				valueKey: this.valueKey
			});
		},
	
		menuRenderer: function menuRenderer(params) {
			var menuRenderer = this.props.menuRenderer;
	
			return menuRenderer(_extends({}, params, {
				onSelect: this.onOptionSelect,
				selectValue: this.onOptionSelect
			}));
		},
	
		onInputChange: function onInputChange(input) {
			var onInputChange = this.props.onInputChange;
	
			if (onInputChange) {
				onInputChange(input);
			}
	
			// This value may be needed in between Select mounts (when this.select is null)
			this.inputValue = input;
		},
	
		onInputKeyDown: function onInputKeyDown(event) {
			var _props3 = this.props;
			var shouldKeyDownEventCreateNewOption = _props3.shouldKeyDownEventCreateNewOption;
			var onInputKeyDown = _props3.onInputKeyDown;
	
			var focusedOption = this.select.getFocusedOption();
	
			if (focusedOption && focusedOption === this._createPlaceholderOption && shouldKeyDownEventCreateNewOption({ keyCode: event.keyCode })) {
				this.createNewOption();
	
				// Prevent decorated Select from doing anything additional with this keyDown event
				event.preventDefault();
			} else if (onInputKeyDown) {
				onInputKeyDown(event);
			}
		},
	
		onOptionSelect: function onOptionSelect(option, event) {
			if (option === this._createPlaceholderOption) {
				this.createNewOption();
			} else {
				this.select.selectValue(option);
			}
		},
	
		render: function render() {
			var _this = this;
	
			var _props4 = this.props;
			var newOptionCreator = _props4.newOptionCreator;
			var shouldKeyDownEventCreateNewOption = _props4.shouldKeyDownEventCreateNewOption;
	
			var restProps = _objectWithoutProperties(_props4, ['newOptionCreator', 'shouldKeyDownEventCreateNewOption']);
	
			var children = this.props.children;
	
			// We can't use destructuring default values to set the children,
			// because it won't apply work if `children` is null. A falsy check is
			// more reliable in real world use-cases.
			if (!children) {
				children = defaultChildren;
			}
	
			var props = _extends({}, restProps, {
				allowCreate: true,
				filterOptions: this.filterOptions,
				menuRenderer: this.menuRenderer,
				onInputChange: this.onInputChange,
				onInputKeyDown: this.onInputKeyDown,
				ref: function ref(_ref) {
					_this.select = _ref;
	
					// These values may be needed in between Select mounts (when this.select is null)
					if (_ref) {
						_this.labelKey = _ref.props.labelKey;
						_this.valueKey = _ref.props.valueKey;
					}
				}
			});
	
			return children(props);
		}
	});
	
	function defaultChildren(props) {
		return _react2['default'].createElement(_Select2['default'], props);
	};
	
	function isOptionUnique(_ref3) {
		var option = _ref3.option;
		var options = _ref3.options;
		var labelKey = _ref3.labelKey;
		var valueKey = _ref3.valueKey;
	
		return options.filter(function (existingOption) {
			return existingOption[labelKey] === option[labelKey] || existingOption[valueKey] === option[valueKey];
		}).length === 0;
	};
	
	function isValidNewOption(_ref4) {
		var label = _ref4.label;
	
		return !!label;
	};
	
	function newOptionCreator(_ref5) {
		var label = _ref5.label;
		var labelKey = _ref5.labelKey;
		var valueKey = _ref5.valueKey;
	
		var option = {};
		option[valueKey] = label;
		option[labelKey] = label;
		option.className = 'Select-create-option-placeholder';
		return option;
	};
	
	function promptTextCreator(label) {
		return 'Create option "' + label + '"';
	}
	
	function shouldKeyDownEventCreateNewOption(_ref6) {
		var keyCode = _ref6.keyCode;
	
		switch (keyCode) {
			case 9: // TAB
			case 13: // ENTER
			case 188:
				// COMMA
				return true;
		}
	
		return false;
	};
	
	module.exports = Creatable;

/***/ },
/* 413 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(404);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var Option = _react2['default'].createClass({
		displayName: 'Option',
	
		propTypes: {
			children: _react2['default'].PropTypes.node,
			className: _react2['default'].PropTypes.string, // className (based on mouse position)
			instancePrefix: _react2['default'].PropTypes.string.isRequired, // unique prefix for the ids (used for aria)
			isDisabled: _react2['default'].PropTypes.bool, // the option is disabled
			isFocused: _react2['default'].PropTypes.bool, // the option is focused
			isSelected: _react2['default'].PropTypes.bool, // the option is selected
			onFocus: _react2['default'].PropTypes.func, // method to handle mouseEnter on option element
			onSelect: _react2['default'].PropTypes.func, // method to handle click on option element
			onUnfocus: _react2['default'].PropTypes.func, // method to handle mouseLeave on option element
			option: _react2['default'].PropTypes.object.isRequired, // object that is base for that option
			optionIndex: _react2['default'].PropTypes.number },
		// index of the option, used to generate unique ids for aria
		blockEvent: function blockEvent(event) {
			event.preventDefault();
			event.stopPropagation();
			if (event.target.tagName !== 'A' || !('href' in event.target)) {
				return;
			}
			if (event.target.target) {
				window.open(event.target.href, event.target.target);
			} else {
				window.location.href = event.target.href;
			}
		},
	
		handleMouseDown: function handleMouseDown(event) {
			event.preventDefault();
			event.stopPropagation();
			this.props.onSelect(this.props.option, event);
		},
	
		handleMouseEnter: function handleMouseEnter(event) {
			this.onFocus(event);
		},
	
		handleMouseMove: function handleMouseMove(event) {
			this.onFocus(event);
		},
	
		handleTouchEnd: function handleTouchEnd(event) {
			// Check if the view is being dragged, In this case
			// we don't want to fire the click event (because the user only wants to scroll)
			if (this.dragging) return;
	
			this.handleMouseDown(event);
		},
	
		handleTouchMove: function handleTouchMove(event) {
			// Set a flag that the view is being dragged
			this.dragging = true;
		},
	
		handleTouchStart: function handleTouchStart(event) {
			// Set a flag that the view is not being dragged
			this.dragging = false;
		},
	
		onFocus: function onFocus(event) {
			if (!this.props.isFocused) {
				this.props.onFocus(this.props.option, event);
			}
		},
		render: function render() {
			var _props = this.props;
			var option = _props.option;
			var instancePrefix = _props.instancePrefix;
			var optionIndex = _props.optionIndex;
	
			var className = (0, _classnames2['default'])(this.props.className, option.className);
	
			return option.disabled ? _react2['default'].createElement(
				'div',
				{ className: className,
					onMouseDown: this.blockEvent,
					onClick: this.blockEvent },
				this.props.children
			) : _react2['default'].createElement(
				'div',
				{ className: className,
					style: option.style,
					role: 'option',
					onMouseDown: this.handleMouseDown,
					onMouseEnter: this.handleMouseEnter,
					onMouseMove: this.handleMouseMove,
					onTouchStart: this.handleTouchStart,
					onTouchMove: this.handleTouchMove,
					onTouchEnd: this.handleTouchEnd,
					id: instancePrefix + '-option-' + optionIndex,
					title: option.title },
				this.props.children
			);
		}
	});
	
	module.exports = Option;

/***/ },
/* 414 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(404);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var Value = _react2['default'].createClass({
	
		displayName: 'Value',
	
		propTypes: {
			children: _react2['default'].PropTypes.node,
			disabled: _react2['default'].PropTypes.bool, // disabled prop passed to ReactSelect
			id: _react2['default'].PropTypes.string, // Unique id for the value - used for aria
			onClick: _react2['default'].PropTypes.func, // method to handle click on value label
			onRemove: _react2['default'].PropTypes.func, // method to handle removal of the value
			value: _react2['default'].PropTypes.object.isRequired },
	
		// the option object for this value
		handleMouseDown: function handleMouseDown(event) {
			if (event.type === 'mousedown' && event.button !== 0) {
				return;
			}
			if (this.props.onClick) {
				event.stopPropagation();
				this.props.onClick(this.props.value, event);
				return;
			}
			if (this.props.value.href) {
				event.stopPropagation();
			}
		},
	
		onRemove: function onRemove(event) {
			event.preventDefault();
			event.stopPropagation();
			this.props.onRemove(this.props.value);
		},
	
		handleTouchEndRemove: function handleTouchEndRemove(event) {
			// Check if the view is being dragged, In this case
			// we don't want to fire the click event (because the user only wants to scroll)
			if (this.dragging) return;
	
			// Fire the mouse events
			this.onRemove(event);
		},
	
		handleTouchMove: function handleTouchMove(event) {
			// Set a flag that the view is being dragged
			this.dragging = true;
		},
	
		handleTouchStart: function handleTouchStart(event) {
			// Set a flag that the view is not being dragged
			this.dragging = false;
		},
	
		renderRemoveIcon: function renderRemoveIcon() {
			if (this.props.disabled || !this.props.onRemove) return;
			return _react2['default'].createElement(
				'span',
				{ className: 'Select-value-icon',
					'aria-hidden': 'true',
					onMouseDown: this.onRemove,
					onTouchEnd: this.handleTouchEndRemove,
					onTouchStart: this.handleTouchStart,
					onTouchMove: this.handleTouchMove },
				'×'
			);
		},
	
		renderLabel: function renderLabel() {
			var className = 'Select-value-label';
			return this.props.onClick || this.props.value.href ? _react2['default'].createElement(
				'a',
				{ className: className, href: this.props.value.href, target: this.props.value.target, onMouseDown: this.handleMouseDown, onTouchEnd: this.handleMouseDown },
				this.props.children
			) : _react2['default'].createElement(
				'span',
				{ className: className, role: 'option', 'aria-selected': 'true', id: this.props.id },
				this.props.children
			);
		},
	
		render: function render() {
			return _react2['default'].createElement(
				'div',
				{ className: (0, _classnames2['default'])('Select-value', this.props.value.className),
					style: this.props.value.style,
					title: this.props.value.title
				},
				this.renderRemoveIcon(),
				this.renderLabel()
			);
		}
	
	});
	
	module.exports = Value;

/***/ },
/* 415 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _Button = __webpack_require__(416);
	
	var _Button2 = _interopRequireDefault(_Button);
	
	var _Card = __webpack_require__(424);
	
	var _Card2 = _interopRequireDefault(_Card);
	
	var _Choice = __webpack_require__(426);
	
	var _Choice2 = _interopRequireDefault(_Choice);
	
	var _Option = __webpack_require__(427);
	
	var _Option2 = _interopRequireDefault(_Option);
	
	var _Placeholder = __webpack_require__(429);
	
	var _Placeholder2 = _interopRequireDefault(_Placeholder);
	
	var _Select = __webpack_require__(431);
	
	var _Select2 = _interopRequireDefault(_Select);
	
	var _Separator = __webpack_require__(435);
	
	var _Separator2 = _interopRequireDefault(_Separator);
	
	var _TextInput = __webpack_require__(438);
	
	var _TextInput2 = _interopRequireDefault(_TextInput);
	
	var _Rating = __webpack_require__(441);
	
	var _Rating2 = _interopRequireDefault(_Rating);
	
	var _ComboBox = __webpack_require__(445);
	
	var _ComboBox2 = _interopRequireDefault(_ComboBox);
	
	var _Spinner = __webpack_require__(448);
	
	var _Spinner2 = _interopRequireDefault(_Spinner);
	
	var _Toggle = __webpack_require__(450);
	
	var _Toggle2 = _interopRequireDefault(_Toggle);
	
	var _DatePicker = __webpack_require__(453);
	
	var _DatePicker2 = _interopRequireDefault(_DatePicker);
	
	var _actionArea = __webpack_require__(459);
	
	var _actionArea2 = _interopRequireDefault(_actionArea);
	
	var _button = __webpack_require__(418);
	
	var _button2 = _interopRequireDefault(_button);
	
	var _card = __webpack_require__(425);
	
	var _card2 = _interopRequireDefault(_card);
	
	var _placeholder = __webpack_require__(430);
	
	var _placeholder2 = _interopRequireDefault(_placeholder);
	
	var _option = __webpack_require__(428);
	
	var _option2 = _interopRequireDefault(_option);
	
	var _select = __webpack_require__(432);
	
	var _select2 = _interopRequireDefault(_select);
	
	var _separator = __webpack_require__(436);
	
	var _separator2 = _interopRequireDefault(_separator);
	
	var _textInput = __webpack_require__(440);
	
	var _textInput2 = _interopRequireDefault(_textInput);
	
	var _spinner = __webpack_require__(449);
	
	var _spinner2 = _interopRequireDefault(_spinner);
	
	var _toggle = __webpack_require__(451);
	
	var _toggle2 = _interopRequireDefault(_toggle);
	
	var _rating = __webpack_require__(442);
	
	var _rating2 = _interopRequireDefault(_rating);
	
	var _comboBox = __webpack_require__(446);
	
	var _comboBox2 = _interopRequireDefault(_comboBox);
	
	var _datePicker = __webpack_require__(456);
	
	var _datePicker2 = _interopRequireDefault(_datePicker);
	
	var _select3 = __webpack_require__(433);
	
	var _select4 = _interopRequireDefault(_select3);
	
	var _button3 = __webpack_require__(423);
	
	var _button4 = _interopRequireDefault(_button3);
	
	var _rating3 = __webpack_require__(443);
	
	var _rating4 = _interopRequireDefault(_rating3);
	
	var _toggle3 = __webpack_require__(452);
	
	var _toggle4 = _interopRequireDefault(_toggle3);
	
	var _i18n = __webpack_require__(455);
	
	var _i18n2 = _interopRequireDefault(_i18n);
	
	var _datePicker3 = __webpack_require__(457);
	
	var _datePicker4 = _interopRequireDefault(_datePicker3);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	module.exports = {
	  Button: _Button2.default,
	  Card: _Card2.default,
	  Choice: _Choice2.default,
	  Option: _Option2.default,
	  Placeholder: _Placeholder2.default,
	  Select: _Select2.default,
	  Separator: _Separator2.default,
	  TextInput: _TextInput2.default,
	  Rating: _Rating2.default,
	  ComboBox: _ComboBox2.default,
	  Spinner: _Spinner2.default,
	  Toggle: _Toggle2.default,
	  DatePicker: _DatePicker2.default,
	  style: {
	    actionArea: _actionArea2.default,
	    button: _button2.default,
	    card: _card2.default,
	    comboBox: _comboBox2.default,
	    datePicker: _datePicker2.default,
	    option: _option2.default,
	    placeholder: _placeholder2.default,
	    rating: _rating2.default,
	    select: _select2.default,
	    separator: _separator2.default,
	    spinner: _spinner2.default,
	    textInput: _textInput2.default,
	    toggle: _toggle2.default
	  },
	  config: {
	    select: _select4.default,
	    button: _button4.default,
	    rating: _rating4.default,
	    toggle: _toggle4.default,
	    i18n: _i18n2.default,
	    datePicker: _datePicker4.default
	  }
	};

/***/ },
/* 416 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; // eslint-disable-line no-unused-vars
	
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _helpers = __webpack_require__(417);
	
	var _button = __webpack_require__(418);
	
	var _button2 = _interopRequireDefault(_button);
	
	var _unionClassNames = __webpack_require__(419);
	
	var _unionClassNames2 = _interopRequireDefault(_unionClassNames);
	
	var _injectStyle = __webpack_require__(420);
	
	var _button3 = __webpack_require__(423);
	
	var _button4 = _interopRequireDefault(_button3);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var buttonTypes = ['button', 'submit', 'reset']; // eslint-disable-line no-unused-vars
	
	var buttonPropTypes = {
	  activeStyle: _react.PropTypes.object,
	  children: _react.PropTypes.oneOfType([_react.PropTypes.arrayOf(_react.PropTypes.node), _react.PropTypes.node]),
	  className: _react.PropTypes.string,
	  disabled: _react.PropTypes.bool,
	  type: _react.PropTypes.oneOf(buttonTypes),
	  style: _react.PropTypes.object,
	  focusStyle: _react.PropTypes.object,
	  hoverStyle: _react.PropTypes.object,
	  disabledStyle: _react.PropTypes.object,
	  disabledHoverStyle: _react.PropTypes.object,
	  onTouchStart: _react.PropTypes.func,
	  onTouchEnd: _react.PropTypes.func,
	  onTouchCancel: _react.PropTypes.func,
	  onMouseDown: _react.PropTypes.func,
	  onMouseEnter: _react.PropTypes.func,
	  onMouseLeave: _react.PropTypes.func,
	  onFocus: _react.PropTypes.func,
	  onBlur: _react.PropTypes.func,
	  preventFocusStyleForTouchAndClick: _react.PropTypes.bool,
	  primary: _react.PropTypes.bool
	};
	
	/**
	 * Returns an object with properties that are relevant for the button element.
	 *
	 * In case a wrong or no type is defined the type of the child button will be
	 * set to `button`.
	 */
	function sanitizeChildProps(properties) {
	  return (0, _helpers.omit)(properties, Object.keys(buttonPropTypes));
	}
	
	/**
	 * Update hover, focus & active style for the speficied styleId.
	 *
	 * @param styleId {string} - a unique id that exists as class attribute in the DOM
	 * @param properties {object} - the components properties optionally containing custom styles
	 */
	function updatePseudoClassStyle(styleId, properties, preventFocusStyleForTouchAndClick) {
	  var baseStyle = properties.primary ? _button2.default.primaryStyle : _button2.default.style;
	  var baseDisabledStyle = properties.primary ? _button2.default.primaryDisabledStyle : _button2.default.disabledStyle;
	  var disabledStyle = _extends({}, baseStyle, properties.style, baseDisabledStyle, properties.disabledStyle);
	  var baseActiveStyle = properties.primary ? _button2.default.primaryActiveStyle : _button2.default.activeStyle;
	  var activeStyle = _extends({}, baseActiveStyle, properties.activeStyle);
	
	  var focusStyle = void 0;
	  if (preventFocusStyleForTouchAndClick) {
	    focusStyle = { outline: 0 };
	  } else {
	    var baseFocusStyle = properties.primary ? _button2.default.primaryFocusStyle : _button2.default.focusStyle;
	    focusStyle = _extends({}, baseFocusStyle, properties.focusStyle);
	  }
	
	  var styles = [{
	    id: styleId,
	    style: activeStyle,
	    pseudoClass: 'active'
	  }, {
	    id: styleId,
	    style: disabledStyle,
	    pseudoClass: 'active',
	    disabled: true
	  }, {
	    id: styleId,
	    style: focusStyle,
	    pseudoClass: 'focus'
	  }];
	
	  (0, _injectStyle.injectStyles)(styles);
	}
	
	/**
	 * Button component
	 *
	 * The button behaves exactly like a normal html button except:
	 * - Once a user clicks on the button it will loose focus
	 * - By default every button is of type="button" instead of "submit"
	 */
	
	var Button = function (_Component) {
	  _inherits(Button, _Component);
	
	  function Button(properties) {
	    _classCallCheck(this, Button);
	
	    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Button).call(this, properties));
	
	    _this._onFocus = function (event) {
	      _this.focused = true;
	      _this.forceUpdate();
	
	      if (_this.props.onFocus) {
	        _this.props.onFocus(event);
	      }
	    };
	
	    _this._onBlur = function (event) {
	      _this.focused = false;
	      _this.setState({ isActive: false });
	
	      if (_this.props.onBlur) {
	        _this.props.onBlur(event);
	      }
	    };
	
	    _this._onMouseDown = function (event) {
	      if (event.button === 0 && !_this.props.disabled) {
	        _this.mouseDownOnButton = true;
	      }
	
	      if (_this.props.onMouseDown) {
	        _this.props.onMouseDown(event);
	      }
	    };
	
	    _this._onTouchStart = function (event) {
	      if (!_this.props.disabled && event.touches.length === 1) {
	        _this.setState({
	          isActive: true,
	          isIgnoringHover: true
	        });
	      }
	
	      if (_this.props.onTouchStart) {
	        _this.props.onTouchStart(event);
	      }
	    };
	
	    _this._onTouchEnd = function (event) {
	      _this.setState({
	        isActive: false,
	        isIgnoringHover: true
	      });
	
	      if (_this.props.onTouchEnd) {
	        _this.props.onTouchEnd(event);
	      }
	    };
	
	    _this._onTouchCancel = function (event) {
	      _this.setState({
	        isActive: false,
	        isIgnoringHover: true
	      });
	
	      if (_this.props.onTouchEnd) {
	        _this.props.onTouchEnd(event);
	      }
	    };
	
	    _this._onMouseEnter = function (event) {
	      if (!_this.state.isIgnoringHover) {
	        _this.setState({
	          isHovered: true,
	          isIgnoringHover: false
	        });
	      }
	
	      if (_this.props.onMouseEnter) {
	        _this.props.onMouseEnter(event);
	      }
	    };
	
	    _this._onMouseLeave = function (event) {
	      _this.setState({
	        isHovered: false
	      });
	
	      if (_this.props.onMouseLeave) {
	        _this.props.onMouseLeave(event);
	      }
	    };
	
	    _this.preventFocusStyleForTouchAndClick = (0, _helpers.has)(properties, 'preventFocusStyleForTouchAndClick') ? properties.preventFocusStyleForTouchAndClick : _button4.default.preventFocusStyleForTouchAndClick;
	
	    _this.state = {
	      childProps: sanitizeChildProps(properties),
	
	      // used for touch devices like iOS Chrome/Safari where the active
	      // pseudoClass is not supported on touch
	      isActive: false,
	      isHovered: false,
	
	      // Note: On touch devices mouseEnter is fired while mouseLeave is not.
	      // This would result in a hover effect that keeps active until another
	      // element is focused on. This would result in the same behaviour as using
	      // the :hover pseudo class. To prevent it from happening activating the
	      // hover state is prevented when a touch event has been triggered before.
	      // source: http://stackoverflow.com/a/22444532/837709
	      isIgnoringHover: false
	    };
	
	    // The focused attribute is used to apply the one-time focus animation.
	    // As it is reset after every render it can't be set inside state as this
	    // would trigger an endless loop.
	    _this.focused = false;
	
	    // This used to determine if the one-time focus animation should be prevented.
	    _this.mouseDownOnButton = false;
	    return _this;
	  }
	
	  _createClass(Button, [{
	    key: 'componentWillMount',
	
	
	    /**
	     * Generates the style-id & inject the focus & active style.
	     */
	    value: function componentWillMount() {
	      this.styleId = 'style-id' + (0, _helpers.uniqueId)();
	      updatePseudoClassStyle(this.styleId, this.props, this.preventFocusStyleForTouchAndClick);
	    }
	
	    /**
	     * Update the childProps based on the updated properties of the button.
	     */
	
	  }, {
	    key: 'componentWillReceiveProps',
	    value: function componentWillReceiveProps(properties) {
	      this.preventFocusStyleForTouchAndClick = (0, _helpers.has)(properties, 'preventFocusStyleForTouchAndClick') ? properties.preventFocusStyleForTouchAndClick : _button4.default.preventFocusStyleForTouchAndClick;
	
	      this.setState({
	        childProps: sanitizeChildProps(properties)
	      });
	      (0, _injectStyle.removeStyle)(this.styleId);
	      updatePseudoClassStyle(this.styleId, properties, this.preventFocusStyleForTouchAndClick);
	    }
	
	    /**
	     * Deactivate the focused attribute in order to make sure the focus animation
	     * only runs once when the component is focused on & not after re-rendering
	     * e.g when the user clicks the button.
	     */
	
	  }, {
	    key: 'componentDidUpdate',
	    value: function componentDidUpdate() {
	      this.focused = false;
	      this.mouseDownOnButton = false;
	    }
	
	    /**
	     * Remove a component's associated styles whenever it gets removed from the DOM.
	     */
	
	  }, {
	    key: 'componentWillUnmount',
	    value: function componentWillUnmount() {
	      (0, _injectStyle.removeStyle)(this.styleId);
	    }
	
	    /**
	     * Activate the focused attribute used to determine when to show the
	     * one-time focus animation and trigger a render.
	     */
	
	
	    /**
	     * Deactivate the focused attribute used to determine when to show the
	     * one-time focus animation and trigger a render.
	     */
	
	
	    /**
	     * Updates the button to be pressed.
	     */
	
	
	    /**
	     * Updates the button to be release.
	     */
	
	
	    /**
	     * Updates the button to be release.
	     */
	
	
	    /**
	     * As soon as the mouse enters the component the isHovered state is activated.
	     */
	
	
	    /**
	     * Deactivate the isHovered state.
	     */
	
	  }, {
	    key: 'render',
	    value: function render() {
	      var baseStyle = this.props.primary ? _button2.default.primaryStyle : _button2.default.style;
	      var combinedStyle = _extends({}, baseStyle, this.props.style);
	
	      if (this.state.isHovered) {
	        var baseHoverStyle = this.props.primary ? _button2.default.primaryHoverStyle : _button2.default.hoverStyle;
	        combinedStyle = _extends({}, combinedStyle, baseHoverStyle, this.props.hoverStyle);
	      }
	
	      if (this.props.disabled) {
	        var baseDisabledStyle = this.props.primary ? _button2.default.primaryDisabledStyle : _button2.default.disabledStyle;
	        combinedStyle = _extends({}, combinedStyle, baseDisabledStyle, this.props.disabledStyle);
	        if (this.state.isHovered) {
	          var baseDisabledHoverStyle = this.props.primary ? _button2.default.primaryDisabledHoverStyle : _button2.default.disabledHoverStyle;
	          combinedStyle = _extends({}, combinedStyle, baseDisabledHoverStyle, this.props.disabledHoverStyle);
	        }
	      } else {
	        if (this.state.isActive) {
	          var baseActiveStyle = this.props.primary ? _button2.default.primaryActiveStyle : _button2.default.activeStyle;
	          combinedStyle = _extends({}, combinedStyle, baseActiveStyle, this.props.activeStyle);
	        } else if (this.focused && !this.state.isActive && !this.mouseDownOnButton && this.preventFocusStyleForTouchAndClick) {
	          var baseFocusStyle = this.props.primary ? _button2.default.primaryFocusStyle : _button2.default.focusStyle;
	          combinedStyle = _extends({}, combinedStyle, baseFocusStyle, this.props.focusStyle);
	        }
	      }
	
	      return _react2.default.createElement(
	        'button',
	        _extends({
	          style: combinedStyle,
	          className: (0, _unionClassNames2.default)(this.props.className, this.styleId),
	          onTouchStart: this._onTouchStart,
	          onTouchEnd: this._onTouchEnd,
	          onTouchCancel: this._onTouchCancel,
	          onFocus: this._onFocus,
	          onBlur: this._onBlur,
	          onMouseDown: this._onMouseDown,
	          onMouseEnter: this._onMouseEnter,
	          onMouseLeave: this._onMouseLeave,
	          disabled: this.props.disabled,
	          type: this.props.type
	        }, this.state.childProps),
	        this.props.children
	      );
	    }
	  }]);
	
	  return Button;
	}(_react.Component);
	
	Button.displayName = 'Button';
	Button.propTypes = buttonPropTypes;
	Button.defaultProps = {
	  primary: false,
	  disabled: false,
	  type: 'button'
	};
	exports.default = Button;

/***/ },
/* 417 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };
	
	exports.has = has;
	exports.omit = omit;
	exports.filter = filter;
	exports.isArrayLike = isArrayLike;
	exports.keys = keys;
	exports.map = map;
	exports.mapObject = mapObject;
	exports.find = find;
	exports.reverse = reverse;
	exports.shift = shift;
	exports.isEmpty = isEmpty;
	exports.findIndex = findIndex;
	exports.first = first;
	exports.last = last;
	exports.size = size;
	exports.some = some;
	exports.union = union;
	exports.flatten = flatten;
	exports.filterReactChildren = filterReactChildren;
	exports.getArrayForReactChildren = getArrayForReactChildren;
	exports.flattenReactChildren = flattenReactChildren;
	exports.uniqueId = uniqueId;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * Returns true if the object contain the given key.
	 *
	 * @param {object} obj - object to be inspected
	 * @param {string} key - name of the property
	 */
	function has(obj, key) {
	  return obj !== undefined && obj !== null && Object.prototype.hasOwnProperty.call(obj, key);
	}
	
	/**
	 * Return a copy of the object, filtered to omit the blacklisted keys (or array of keys).
	 *
	 * @param {object} obj - object the returned object is based on
	 * @param {string|string[]} fields - the key or list of keys of the property to omit
	 */
	function omit(obj, fields) {
	  if (obj) {
	    var result = {};
	    for (var key in obj) {
	      if (obj.hasOwnProperty(key) && (!fields || fields.indexOf(key) < 0)) {
	        result[key] = obj[key];
	      }
	    }
	
	    return result;
	  }
	
	  return undefined;
	}
	
	/**
	 * Looks through each value in the list, returning an array of all the values
	 * that pass a truth test (predicate).
	 *
	 * @param {array} iterable - the iterable object to be filtered
	 * @param {function} predicate - function returning true when provided with an entry as argument
	 * @param {object} [context] - context for the predicate function call
	 */
	function filter(iterable, predicate, context) {
	  if (iterable) {
	    var _ret = function () {
	      var result = [];
	      iterable.forEach(function (obj) {
	        if (predicate && predicate.call(context, obj)) {
	          result.push(obj);
	        }
	      });
	      return {
	        v: result
	      };
	    }();
	
	    if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === "object") return _ret.v;
	  }
	
	  return undefined;
	}
	
	/**
	 * Returns true if the provided object is an iterable, except for strings for which it will return false.
	 *
	 * @param {object} obj - object to be inspected
	 */
	function isArrayLike(obj) {
	  if (Array.isArray(obj)) return true;
	  if (typeof obj === 'string') return false;
	  var length = obj.length;
	  return typeof length === 'number' && length >= 0;
	}
	
	/**
	 * Returns all the names of the object's own properties. This will not include properties inherited through prototypes.
	 *
	 * @param {object} obj - object to be used
	 */
	function keys(obj) {
	  var objKeys = [];
	  for (var key in obj) {
	    if (has(obj, key)) objKeys.push(key);
	  }return objKeys;
	}
	
	/**
	 * Returns a new array of values by mapping each value in list through a transformation function (predicate).
	 *
	 * @param {array} iterable - source iterable
	 * @param {function} predicate - function returning the transformed array entry
	 */
	function map(iterable, predicate) {
	  if (iterable) {
	    var _ret2 = function () {
	      var result = [];
	      iterable.forEach(function (elm, index) {
	        if (predicate) {
	          result[index] = predicate(elm, index);
	        }
	      });
	      return {
	        v: result
	      };
	    }();
	
	    if ((typeof _ret2 === 'undefined' ? 'undefined' : _typeof(_ret2)) === "object") return _ret2.v;
	  }
	
	  return undefined;
	}
	
	/**
	 * Returns a new object by mapping each property in an object through a transformation function (predicate).
	 *
	 * @param {object} obj - object to be based upon
	 * @param {function} predicate - function to transform the property
	 */
	function mapObject(obj, predicate) {
	  if (obj) {
	    var _ret3 = function () {
	      var result = [];
	      var objKeys = keys(obj);
	      objKeys.forEach(function (key, index) {
	        if (predicate) {
	          result[index] = predicate(obj[key], key);
	        }
	      });
	      return {
	        v: result
	      };
	    }();
	
	    if ((typeof _ret3 === 'undefined' ? 'undefined' : _typeof(_ret3)) === "object") return _ret3.v;
	  }
	
	  return undefined;
	}
	
	/**
	 * Returns the first value that passes a truth test (predicate), or undefined if
	 * no value passes the test. Only works for iterable objects e.g. arrays.
	 *
	 * @param {array} iterable - the iterable object to be searched
	 * @param {function} predicate - function returning true in case of a positive match
	 * @param {object} [context] - context for the predicate function call
	 */
	function find(iterable, predicate, context) {
	  if (iterable) {
	    var result = void 0;
	    for (var index = 0; index < iterable.length; index++) {
	      if (predicate && predicate.call(context, iterable[index])) {
	        result = iterable[index];
	        break;
	      }
	    }
	
	    return result;
	  }
	
	  return undefined;
	}
	
	/**
	 * Reverse the array passed to it.
	 * @param {array} iterable - the array to be reversed.
	 */
	function reverse(iterable) {
	  if (iterable) {
	    var result = [];
	    for (var index = iterable.length - 1; index >= 0; index--) {
	      result.push(iterable[index]);
	    }
	
	    return result;
	  }
	
	  return undefined;
	}
	
	/**
	 * Shifts given array by given number of positions.
	 * @param {array} iterable - the array to be shifted.
	 * @param {array} positions - number of positions shifting is needed.
	 */
	function shift(iterable, positions) {
	  if (iterable) {
	    if (positions && positions > 0) {
	      var result = [];
	      var arrayLength = iterable.length;
	      for (var index = 0; index < iterable.length; index++) {
	        result.push(iterable[(index + positions) % arrayLength]);
	      }
	
	      return result;
	    }
	
	    return iterable;
	  }
	
	  return undefined;
	}
	
	/**
	 * Returns true if object contains no values (no enumerable own-properties).
	 *
	 * @param {Object} obj - an object
	 */
	function isEmpty(obj) {
	  return !obj || Array.isArray(obj) && obj.length === 0 || Object.keys(obj).length === 0;
	}
	
	/**
	 * Returns the index of the first value that passes a truth test (predicate), or undefined if
	 * no value passes the test. Only works for iterable objects e.g. arrays.
	 *
	 * @param {array} iterable - the iterable object to be searched
	 * @param {function} predicate - function returning true in case of a positive match
	 * @param {object} [context] - context for the predicate function call
	 */
	function findIndex(iterable, predicate, context) {
	  if (iterable) {
	    var result = void 0;
	    for (var index = 0; index < iterable.length; index++) {
	      if (predicate && predicate.call(context, iterable[index])) {
	        result = index;
	        break;
	      }
	    }
	
	    return result;
	  }
	
	  return undefined;
	}
	
	/**
	 * Returns the first element of an iterable object.
	 *
	 * @param {array} iterable - must be an iterable object
	 */
	function first(iterable) {
	  if (iterable && iterable.length > 0) {
	    return iterable[0];
	  }
	
	  return undefined;
	}
	
	/**
	 * Returns the last element of an iterable object.
	 *
	 * @param {array} iterable - must be an iterable object
	 */
	function last(iterable) {
	  if (iterable && iterable.length > 0) {
	    return iterable[iterable.length - 1];
	  }
	
	  return undefined;
	}
	
	/**
	 * Return the number of values in the list.
	 *
	 * @param {array} iterable - must be an iterable object
	 */
	function size(iterable) {
	  if (iterable) {
	    return iterable.length;
	  }
	
	  return 0;
	}
	
	/**
	 * Returns true if any of the values in the list pass the predicate truth test.
	 *
	 * @param {array} iterable - iterable object to be searched
	 * @param {function} predicate - function returning true in case of a positive match
	 * @param {object} [context] - context for the predicate function call
	 */
	function some(iterable, predicate, context) {
	  if (iterable) {
	    var result = void 0;
	    for (var index = 0; index < iterable.length; index++) {
	      if (predicate && predicate.call(context, iterable[index])) {
	        result = true;
	        break;
	      }
	    }
	
	    return result;
	  }
	
	  return undefined;
	}
	
	/**
	 * Returns the union of the passed-in arrays: the list of unique items, in order, that are present in one or more of the arrays.
	 *
	 * @param {...array} arrs - at least two iterable objects must be provide
	 */
	function union() {
	  for (var _len = arguments.length, arrs = Array(_len), _key = 0; _key < _len; _key++) {
	    arrs[_key] = arguments[_key];
	  }
	
	  if (arrs) {
	    var _ret4 = function () {
	      var result = [];
	      arrs.forEach(function (arr) {
	        if (arr) {
	          arr.forEach(function (obj) {
	            if (result.indexOf(obj) < 0) {
	              result.push(obj);
	            }
	          });
	        }
	      });
	      return {
	        v: result
	      };
	    }();
	
	    if ((typeof _ret4 === 'undefined' ? 'undefined' : _typeof(_ret4)) === "object") return _ret4.v;
	  }
	
	  return undefined;
	}
	
	/**
	 * Recursive function for flattening an iterable.
	 *
	 * @param {object} output - base object to be updated
	 * @param {object} element - input object to be merged into the output
	 */
	function flattenInternal(output, element) {
	  if (element) {
	    element.forEach(function (obj) {
	      if (Array.isArray(obj)) {
	        flattenInternal(output, obj);
	      } else {
	        output.push(obj);
	      }
	    });
	  }
	}
	
	/**
	 * Flattens a nested array (the nesting can be to any depth).
	 *
	 * @param {...array} arrays - at least one array must be provided
	 */
	function flatten() {
	  for (var _len2 = arguments.length, arrays = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
	    arrays[_key2] = arguments[_key2];
	  }
	
	  if (arrays) {
	    var result = [];
	    flattenInternal(result, arrays);
	    return result;
	  }
	
	  return undefined;
	}
	
	/**
	 * Looks through a collection of React children elements, filtering them according to the predicate passed.
	 *
	 * @param {Array/Object} children - colleciton of >=1 react elements
	 * @param {function} predicate - function returning true when provided with an entry as argument
	 */
	function filterReactChildren(children, predicate) {
	  var _this = this;
	
	  if (children) {
	    var _ret5 = function () {
	      var result = [];
	      _react2.default.Children.forEach(children, function (entry) {
	        if (predicate && predicate.call(_this, entry)) {
	          result.push(entry);
	        }
	      });
	      return {
	        v: result
	      };
	    }();
	
	    if ((typeof _ret5 === 'undefined' ? 'undefined' : _typeof(_ret5)) === "object") return _ret5.v;
	  }
	
	  return undefined;
	}
	
	/**
	 * Looks through a collection of React children elements, filtering them according to the predicate passed.
	 *
	 * @param {Array/Object} children - collection of >=1 react elements
	 */
	function getArrayForReactChildren(children) {
	  if (children) {
	    var _ret6 = function () {
	      var result = [];
	      _react2.default.Children.forEach(children, function (entry) {
	        result.push(entry);
	      });
	      return {
	        v: result
	      };
	    }();
	
	    if ((typeof _ret6 === 'undefined' ? 'undefined' : _typeof(_ret6)) === "object") return _ret6.v;
	  }
	
	  return undefined;
	}
	
	function flattenReactChildren(children) {
	  if (!isEmpty(children)) {
	    if (Array.isArray(children)) {
	      return flatten(children);
	    }
	
	    return getArrayForReactChildren(children);
	  }
	
	  return undefined;
	}
	
	function uniqueId() {
	  return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);
	}

/***/ },
/* 418 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var buttonStyle = {
	
	  style: {
	    background: '#EEEEEE',
	    border: 0,
	    borderTop: '1px solid #EEEEEE',
	    borderBottom: '1px solid #BDBDBD',
	    borderRadius: 2,
	    boxSizing: 'border-box',
	    color: '#616161',
	    cursor: 'pointer',
	    display: 'inline-block',
	    fontSize: 17,
	    lineHeight: '26px',
	    padding: '8px 14px 6px 14px',
	    textAlign: 'center',
	    textDecoration: 'none',
	    verticalAlign: 'bottom',
	
	    /* animations */
	    transition: 'background 0.1s, border-top 0.1s, border-bottom 0.1s, color 0.1s',
	    transitionTimingFunction: 'ease-out',
	
	    /*
	    To avoid any kind of flickering the user won't get feedback
	    for selecting the button text
	    */
	    WebkitUserSelect: 'none',
	    MozUserSelect: 'none',
	    MsUserSelect: 'none',
	    userSelect: 'none',
	
	    /* This button can only be pressed */
	    MsTouchAction: 'manipulation',
	    touchAction: 'manipulation',
	
	    /*
	    Prevent flickering while tapping on WebKit
	    http://stackoverflow.com/a/3516243/837709
	    */
	    WebkitTapHighlightColor: 'transparent'
	  },
	
	  hoverStyle: {
	    background: '#F5F5F5',
	    borderTop: '1px solid #F5F5F5',
	    color: '#757575'
	  },
	
	  focusStyle: {
	    WebkitAnimation: 'belle-button-focus 2s',
	    outline: 0 },
	
	  // avoid default focus behaviour
	  activeStyle: {
	    background: '#E0E0E0',
	    color: '#424242',
	    borderBottom: '1px solid #E0E0E0',
	    borderTop: '1px solid #BDBDBD'
	  },
	
	  disabledStyle: {
	    color: '#C5C4C4',
	    cursor: 'not-allowed'
	  },
	
	  disabledHoverStyle: {
	    color: '#D0D0D0'
	  },
	
	  primaryStyle: {
	    background: '#53C7F2',
	    border: 0,
	
	    // boxShadow: '0 1px 0px #3995B7',
	    borderTop: '1px solid #53C7F2',
	    borderBottom: '1px solid #3995B7',
	
	    borderRadius: 2,
	    boxSizing: 'border-box',
	    color: '#FAFAFA',
	    cursor: 'pointer',
	    display: 'inline-block',
	    fontSize: 17,
	    lineHeight: '26px',
	    padding: '8px 14px 6px 14px',
	    textAlign: 'center',
	    textDecoration: 'none',
	    verticalAlign: 'bottom',
	
	    /* animations */
	    transition: 'border-top 0.1s, border-bottom 0.1s, color 0.1s',
	    transitionTimingFunction: 'ease-out',
	
	    /*
	    To avoid any kind of flickering the user won't get feedback
	    for selecting the button text
	    */
	    WebkitUserSelect: 'none',
	    MozUserSelect: 'none',
	    MsUserSelect: 'none',
	    userSelect: 'none',
	
	    /* This button can only be pressed */
	    MsTouchAction: 'manipulation',
	    touchAction: 'manipulation',
	
	    /*
	    Prevent flickering while tapping on WebKit
	    http://stackoverflow.com/a/3516243/837709
	    */
	    WebkitTapHighlightColor: 'transparent'
	  },
	
	  primaryHoverStyle: {
	    background: '#82D9F9',
	    borderTop: '1px solid #82D9F9',
	    color: '#FFF'
	  },
	
	  primaryFocusStyle: {
	    WebkitAnimation: 'belle-button-focus 2s',
	    outline: 0 },
	
	  // avoid default focus behaviour
	  primaryActiveStyle: {
	    background: '#4DBEE8',
	    borderBottom: '1px solid #4DBEE8',
	    borderTop: '1px solid #3995B7',
	    color: '#F5F5F5'
	  },
	
	  primaryDisabledStyle: {
	    background: '#98DEF8',
	    color: '#FAFAFA',
	    borderTop: '1px solid #98DEF8',
	    borderBottom: '1px solid #74B4CC',
	    cursor: 'not-allowed'
	  },
	
	  primaryDisabledHoverStyle: {
	    background: '#A7E4FB',
	    color: '#FFF',
	    borderTop: '1px solid #A7E4FB'
	  }
	};
	
	exports.default = buttonStyle;

/***/ },
/* 419 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = unionClassNames;
	
	var _helpers = __webpack_require__(417);
	
	/**
	 * Returns a string containing all classes without duplicates.
	 *
	 * @param existingClassNames {String} - one or multiple classes
	 * @param additionalClassNames {String} - one or multiple classes
	 *
	 * @example
	 * // returns 'style-id-23 button buy-button'
	 * unionClassNames('style-id-23 button', 'button buy-button')
	 *
	 * Originally inspired by https://github.com/rackt/react-autocomplete/blob/master/lib/union-class-names.js
	 */
	function unionClassNames(existingClassNames, additionalClassNames) {
	  if (!existingClassNames && !additionalClassNames) return '';
	  if (!existingClassNames) return additionalClassNames;
	  if (!additionalClassNames) return existingClassNames;
	  return (0, _helpers.union)(existingClassNames.split(' '), additionalClassNames.split(' ')).join(' ');
	}

/***/ },
/* 420 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.injectStyles = injectStyles;
	exports.removeStyle = removeStyle;
	exports.removeAllStyles = removeAllStyles;
	
	exports.default = function (styleId, style, pseudoClass, disabled) {
	  injectStyleTag();
	  updateStore(styleId, style, pseudoClass, disabled);
	  updateStyling();
	};
	
	var _helpers = __webpack_require__(417);
	
	var _CSSPropertyOperations = __webpack_require__(95);
	
	var _CSSPropertyOperations2 = _interopRequireDefault(_CSSPropertyOperations);
	
	var _exenv = __webpack_require__(421);
	
	var _animations = __webpack_require__(422);
	
	var _animations2 = _interopRequireDefault(_animations);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var styleElement = void 0;
	var styleStorage = {};
	
	/**
	 * Injects the provided style into the styleStore.
	 */
	function injectStyleTag() {
	  if (!styleElement && _exenv.canUseDOM) {
	    styleElement = document.createElement('style');
	    document.body.appendChild(styleElement);
	    styleElement.setAttribute('class', 'belle-style');
	  }
	}
	
	/**
	 * Injects the provided style into the styleStore.
	 */
	function updateStore(styleId, style, pseudoClass, disabled) {
	  styleStorage[styleId] = styleStorage[styleId] || {};
	  if (disabled) {
	    styleStorage[styleId].disabledPseudoClasses = styleStorage[styleId].disabledPseudoClasses || {};
	    styleStorage[styleId].disabledPseudoClasses[pseudoClass] = style;
	  } else {
	    styleStorage[styleId].pseudoClasses = styleStorage[styleId].pseudoClasses || {};
	    styleStorage[styleId].pseudoClasses[pseudoClass] = style;
	  }
	}
	
	/**
	 * Constructs all the stored styles & injects them to the DOM.
	 */
	function createMarkupOnPseudoClass(pseudoClasses, id, disabled) {
	  return (0, _helpers.mapObject)(pseudoClasses, function (style, pseudoClass) {
	    if (style && Object.keys(style).length > 0) {
	      var styleString = _CSSPropertyOperations2.default.createMarkupForStyles(style);
	      var styleWithImportant = styleString.replace(/;/g, ' !important;');
	
	      return disabled ? '.' + id + '[disabled]:' + pseudoClass + ' {' + styleWithImportant + '}' : '.' + id + ':' + pseudoClass + ' {' + styleWithImportant + '}';
	    }
	
	    return undefined;
	  });
	}
	
	function updateStyling() {
	  var styles = (0, _helpers.mapObject)(styleStorage, function (storageEntry, id) {
	    var pseudoClassesArray = [];
	
	    if (storageEntry.pseudoClasses) {
	      pseudoClassesArray.push(createMarkupOnPseudoClass(storageEntry.pseudoClasses, id, false));
	    }
	
	    if (storageEntry.disabledPseudoClasses) {
	      pseudoClassesArray.push(createMarkupOnPseudoClass(storageEntry.disabledPseudoClasses, id, true));
	    }
	
	    return pseudoClassesArray;
	  });
	  if (styleElement) {
	    styleElement.innerHTML = (0, _helpers.flatten)([_animations2.default, styles]).join(' ');
	  }
	}
	
	/**
	 * Injects a style tag and adds multiple passed styles.
	 *
	 * By using this function someone can make sure the DOM is updated only once.
	 *
	 * @example
	 * ```
	 * const styles = [
	 *   {
	 *     id: 'style-0.0.2',
	 *     style: { color: '#F00' },
	 *     pseudoClass: 'hover'
	 *   }
	 * ];
	 * injectStyles(styles);
	 * ```
	 */
	function injectStyles(styles) {
	  injectStyleTag();
	  styles.forEach(function (style) {
	    updateStore(style.id, style.style, style.pseudoClass, style.disabled);
	  });
	  updateStyling();
	}
	
	/**
	 * Removes all pseudoClass styles based on the provided styleId.
	 */
	function removeStyle(styleId) {
	  delete styleStorage[styleId];
	  updateStyling();
	}
	
	/**
	 * Removes all pseudoClass styles based on all provided styleIds.
	 */
	function removeAllStyles(styleIds) {
	  styleIds.forEach(function (styleId) {
	    delete styleStorage[styleId];
	  });
	  updateStyling();
	}
	
	/**
	 * Injects a style tag and adds the passed style for the provided pseudoClass.
	 */

/***/ },
/* 421 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_RESULT__;/*!
	  Copyright (c) 2015 Jed Watson.
	  Based on code that is Copyright 2013-2015, Facebook, Inc.
	  All rights reserved.
	*/
	/* global define */
	
	(function () {
		'use strict';
	
		var canUseDOM = !!(
			typeof window !== 'undefined' &&
			window.document &&
			window.document.createElement
		);
	
		var ExecutionEnvironment = {
	
			canUseDOM: canUseDOM,
	
			canUseWorkers: typeof Worker !== 'undefined',
	
			canUseEventListeners:
				canUseDOM && !!(window.addEventListener || window.attachEvent),
	
			canUseViewport: canUseDOM && !!window.screen
	
		};
	
		if (true) {
			!(__WEBPACK_AMD_DEFINE_RESULT__ = function () {
				return ExecutionEnvironment;
			}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
		} else if (typeof module !== 'undefined' && module.exports) {
			module.exports = ExecutionEnvironment;
		} else {
			window.ExecutionEnvironment = ExecutionEnvironment;
		}
	
	}());


/***/ },
/* 422 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var animations = ['\n@-webkit-keyframes belle-button-focus {\n0% { box-shadow: 0 0 0 0 rgba(140, 224, 255, 1); }\n99% { box-shadow: 0 0 0 8px #fff }\n100% { box-shadow: 0 0 0 0 rgba(0, 131, 180, 0); }\n}\n@-webkit-keyframes belle-toggle-focus {\n0% { box-shadow: 0 0 0 0 rgba(140, 224, 255, 1); }\n99% { box-shadow: 0 0 0 8px #fff }\n100% { box-shadow: 0 0 0 0 rgba(0, 131, 180, 0); }\n}\n@-webkit-keyframes belle-rating-focus {\n0% { background: rgba(140, 224, 255, 0); box-shadow: 0 0 0 0 rgba(140, 224, 255, 1); }\n25% { background: rgba(140, 224, 255, 0.15) }\n99% { background: transparent; box-shadow: 0 0 0 8px #fff }\n100% { background: transparent; box-shadow: 0 0 0 0 rgba(0, 131, 180, 0); }\n}\n\n@keyframes belle-button-focus {\n0% { box-shadow: 0 0 0 0 rgba(140, 224, 255, 1); }\n99% { box-shadow: 0 0 0 8px #fff }\n100% { box-shadow: 0 0 0 0 rgba(0, 131, 180, 0); }\n}\n@keyframes belle-toggle-focus {\n0% { box-shadow: 0 0 0 0 rgba(140, 224, 255, 1); }\n99% { box-shadow: 0 0 0 8px #fff }\n100% { box-shadow: 0 0 0 0 rgba(0, 131, 180, 0); }\n}\n@keyframes belle-rating-focus {\n0% { background: rgba(140, 224, 255, 0); box-shadow: 0 0 0 0 rgba(140, 224, 255, 1); }\n25% { background: rgba(140, 224, 255, 0.15) }\n99% { background: transparent; box-shadow: 0 0 0 8px #fff }\n100% { background: transparent; box-shadow: 0 0 0 0 rgba(0, 131, 180, 0); }\n}\n@-webkit-keyframes belle-spinner-pulse {\n 0%,\n 90%,\n 100% {\n opacity: 0;\n }\n 50% {\n opacity: 1;\n }\n }\n @keyframes belle-spinner-pulse {\n 0%,\n 90%,\n 100% {\n opacity: 0;\n }\n 50% {\n opacity: 1;\n }\n }'];
	
	exports.default = animations;

/***/ },
/* 423 */
/***/ function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var buttonConfig = {
	  preventFocusStyleForTouchAndClick: true
	};
	
	exports.default = buttonConfig;

/***/ },
/* 424 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _card = __webpack_require__(425);
	
	var _card2 = _interopRequireDefault(_card);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // eslint-disable-line no-unused-vars
	
	
	/**
	 * Card component with a light shadow.
	 *
	 * This component will apply any attribute to the div that has been provided as
	 * property & is valid for a div.
	 */
	
	var Card = function (_Component) {
	  _inherits(Card, _Component);
	
	  function Card(properties) {
	    _classCallCheck(this, Card);
	
	    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Card).call(this, properties));
	
	    var style = properties.style;
	
	    var childProps = _objectWithoutProperties(properties, ['style']); // eslint-disable-line no-unused-vars
	
	
	    _this.childProps = childProps;
	    return _this;
	  }
	
	  _createClass(Card, [{
	    key: 'componentWillReceiveProps',
	
	
	    /**
	     * Update the childProps based on the updated properties passed to the card.
	     */
	    value: function componentWillReceiveProps(properties) {
	      var style = properties.style;
	
	      var childProps = _objectWithoutProperties(properties, ['style']); // eslint-disable-line no-unused-vars
	
	
	      this.childProps = childProps;
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var divStyle = _extends({}, _card2.default.style, this.props.style);
	
	      return _react2.default.createElement(
	        'div',
	        _extends({}, this.childProps, { style: divStyle }),
	        this.props.children
	      );
	    }
	  }]);
	
	  return Card;
	}(_react.Component);
	
	Card.displayName = 'Card';
	Card.propTypes = {
	  children: _react.PropTypes.oneOfType([_react.PropTypes.arrayOf(_react.PropTypes.node), _react.PropTypes.node]),
	  style: _react.PropTypes.object
	};
	exports.default = Card;

/***/ },
/* 425 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var cardStyle = {
	
	  style: {
	    marginBottom: 20,
	    padding: 40,
	    borderRadius: 2,
	    background: '#fff',
	    boxShadow: '0 1px 1px rgba(0, 0, 0, 0.2)',
	    boxSizing: 'border-box'
	  }
	};
	
	exports.default = cardStyle;

/***/ },
/* 426 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	/**
	 * Choice component
	 */
	
	var Choice = function (_Component) {
	  _inherits(Choice, _Component);
	
	  function Choice() {
	    _classCallCheck(this, Choice);
	
	    return _possibleConstructorReturn(this, Object.getPrototypeOf(Choice).apply(this, arguments));
	  }
	
	  _createClass(Choice, [{
	    key: 'render',
	    value: function render() {
	      return _react2.default.createElement(
	        'div',
	        null,
	        this.props.children
	      );
	    }
	  }]);
	
	  return Choice;
	}(_react.Component);
	
	Choice.displayName = 'Choice';
	Choice.propTypes = {
	  children: _react.PropTypes.oneOfType([_react.PropTypes.arrayOf(_react.PropTypes.node), _react.PropTypes.node]),
	  value: _react.PropTypes.bool.isRequired
	};
	exports.default = Choice;

/***/ },
/* 427 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _helpers = __webpack_require__(417);
	
	var _option = __webpack_require__(428);
	
	var _option2 = _interopRequireDefault(_option);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var optionPropTypes = {
	  children: _react.PropTypes.oneOfType([_react.PropTypes.arrayOf(_react.PropTypes.node), _react.PropTypes.node]),
	  style: _react.PropTypes.object,
	  hoverStyle: _react.PropTypes.object,
	  selectStyle: _react.PropTypes.object,
	  disabledSelectStyle: _react.PropTypes.object,
	  _isDisplayedAsSelected: _react.PropTypes.bool,
	  value: _react.PropTypes.oneOfType([_react.PropTypes.bool, _react.PropTypes.string, _react.PropTypes.number]).isRequired,
	  identifier: _react.PropTypes.oneOfType([_react.PropTypes.bool, _react.PropTypes.string, _react.PropTypes.number])
	};
	
	/**
	 * Returns an object with properties that are relevant for the wrapping div.
	 */
	function sanitizeChildProps(properties) {
	  return (0, _helpers.omit)(properties, Object.keys(optionPropTypes));
	}
	
	/**
	 * Option component.
	 *
	 * This component should be used together with Belle's Select.
	 */
	
	var Option = function (_Component) {
	  _inherits(Option, _Component);
	
	  function Option(properties) {
	    _classCallCheck(this, Option);
	
	    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Option).call(this, properties));
	
	    _this.state = {
	      childProps: sanitizeChildProps(properties)
	    };
	    return _this;
	  }
	
	  _createClass(Option, [{
	    key: 'componentWillReceiveProps',
	
	
	    /**
	     * Update the childProps based on the updated properties passed to the
	     * Option.
	     */
	    value: function componentWillReceiveProps(properties) {
	      this.setState({ childProps: sanitizeChildProps(properties) });
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var optionStyle = void 0;
	
	      if (this.props._isDisplayedAsSelected) {
	        optionStyle = _extends({}, _option2.default.selectStyle, this.props.selectStyle);
	        if (this.context.isDisabled) {
	          optionStyle = _extends({}, optionStyle, _option2.default.disabledSelectStyle, this.props.disabledSelectStyle);
	        }
	      } else {
	        optionStyle = _extends({}, _option2.default.style, this.props.style);
	        if (this.context.isHoveredValue === this.props.value) {
	          optionStyle = _extends({}, optionStyle, _option2.default.hoverStyle, this.props.hoverStyle);
	        }
	      }
	
	      return _react2.default.createElement(
	        'div',
	        _extends({
	          style: optionStyle
	        }, this.state.childProps),
	        this.props.children
	      );
	    }
	  }]);
	
	  return Option;
	}(_react.Component);
	
	Option.displayName = 'Option';
	Option.propTypes = optionPropTypes;
	Option.contextTypes = {
	  isDisabled: _react.PropTypes.bool.isRequired,
	  isHoveredValue: _react.PropTypes.oneOfType([_react.PropTypes.bool, _react.PropTypes.string, _react.PropTypes.number])
	};
	Option.defaultProps = {
	  _isDisplayedAsSelected: false
	};
	exports.default = Option;

/***/ },
/* 428 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var optionStyle = {
	  style: {
	    boxSizing: 'border-box',
	    color: '#666',
	    cursor: 'pointer',
	    padding: 10,
	    fontSize: 15,
	    /*
	    To avoid any kind of flickering the user won't get feedback
	    for selecting the option text
	    */
	    WebkitUserSelect: 'none',
	    MozUserSelect: 'none',
	    MsUserSelect: 'none',
	    userSelect: 'none',
	    /* This button can only be pressed */
	    MsTouchAction: 'manipulation',
	    touchAction: 'manipulation',
	    /*
	    Prevent flickering while tapping on WebKit
	    http://stackoverflow.com/a/3516243/837709
	    */
	    WebkitTapHighlightColor: 'transparent'
	  },
	
	  hoverStyle: {
	    background: '#F5F5F5',
	    color: '#444'
	  },
	
	  selectStyle: {
	    boxSizing: 'border-box',
	    color: '#666',
	    padding: 0,
	    fontSize: 15,
	    /*
	    To avoid any kind of flickering the user won't get feedback
	    for selecting the button text
	    */
	    WebkitUserSelect: 'none',
	    MozUserSelect: 'none',
	    MsUserSelect: 'none',
	    userSelect: 'none',
	    /* This button can only be pressed */
	    MsTouchAction: 'manipulation',
	    touchAction: 'manipulation',
	    /*
	    Prevent flickering while tapping on WebKit
	    http://stackoverflow.com/a/3516243/837709
	    */
	    WebkitTapHighlightColor: 'transparent'
	  },
	
	  disabledSelectStyle: {
	    color: '#9F9F9F',
	    padding: 0
	  }
	};
	
	exports.default = optionStyle;

/***/ },
/* 429 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _helpers = __webpack_require__(417);
	
	var _placeholder = __webpack_require__(430);
	
	var _placeholder2 = _interopRequireDefault(_placeholder);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var placeholderPropTypes = {
	  children: _react.PropTypes.oneOfType([_react.PropTypes.arrayOf(_react.PropTypes.node), _react.PropTypes.node]),
	  style: _react.PropTypes.object,
	  disabledStyle: _react.PropTypes.object,
	  _isDisabled: _react.PropTypes.bool
	};
	
	/**
	 * Returns an object with properties that are relevant for the wrapping div.
	 */
	function sanitizeChildProps(properties) {
	  return (0, _helpers.omit)(properties, Object.keys(placeholderPropTypes));
	}
	
	/**
	 * Placeholder component.
	 *
	 * This component should be used together with Belle's Select.
	 */
	
	var Placeholder = function (_Component) {
	  _inherits(Placeholder, _Component);
	
	  function Placeholder(properties) {
	    _classCallCheck(this, Placeholder);
	
	    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Placeholder).call(this, properties));
	
	    _this.state = {
	      childProps: sanitizeChildProps(properties)
	    };
	    return _this;
	  }
	
	  _createClass(Placeholder, [{
	    key: 'componentWillReceiveProps',
	
	
	    /**
	     * Update the childProps based on the updated properties passed to the
	     * Placeholder.
	     */
	    value: function componentWillReceiveProps(properties) {
	      this.setState({ childProps: sanitizeChildProps(properties) });
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var computedStyle = _extends({}, _placeholder2.default.style, this.props.style);
	      if (this.props._isDisabled) {
	        computedStyle = _extends({}, computedStyle, _placeholder2.default.disabledStyle, this.props.disabledStyle);
	      }
	
	      return _react2.default.createElement(
	        'div',
	        _extends({ style: computedStyle }, this.state.childProps),
	        this.props.children
	      );
	    }
	  }]);
	
	  return Placeholder;
	}(_react.Component);
	
	Placeholder.displayName = 'Placeholder';
	Placeholder.propTypes = placeholderPropTypes;
	Placeholder.defaultProps = {
	  _isDisabled: false
	};
	exports.default = Placeholder;

/***/ },
/* 430 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var placeholderStyle = {
	  style: {
	    boxSizing: 'border-box',
	    color: '#666',
	    cursor: 'pointer',
	    padding: 0,
	    fontSize: 15,
	    /*
	    To avoid any kind of flickering the user won't get feedback
	    for selecting the button text
	    */
	    WebkitUserSelect: 'none',
	    MozUserSelect: 'none',
	    MsUserSelect: 'none',
	    userSelect: 'none',
	    /* This button can only be pressed */
	    MsTouchAction: 'manipulation',
	    touchAction: 'manipulation',
	    /*
	    Prevent flickering while tapping on WebKit
	    http://stackoverflow.com/a/3516243/837709
	    */
	    WebkitTapHighlightColor: 'transparent'
	  },
	
	  disabledStyle: {
	    color: '#9F9F9F',
	    cursor: 'not-allowed'
	  }
	};
	
	exports.default = placeholderStyle;

/***/ },
/* 431 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactDom = __webpack_require__(32);
	
	var _reactDom2 = _interopRequireDefault(_reactDom);
	
	var _helpers = __webpack_require__(417);
	
	var _exenv = __webpack_require__(421);
	
	var _unionClassNames = __webpack_require__(419);
	
	var _unionClassNames2 = _interopRequireDefault(_unionClassNames);
	
	var _injectStyle = __webpack_require__(420);
	
	var _select = __webpack_require__(432);
	
	var _select2 = _interopRequireDefault(_select);
	
	var _select3 = __webpack_require__(433);
	
	var _select4 = _interopRequireDefault(_select3);
	
	var _isComponentOfType = __webpack_require__(434);
	
	var _isComponentOfType2 = _interopRequireDefault(_isComponentOfType);
	
	var _Option = __webpack_require__(427);
	
	var _Option2 = _interopRequireDefault(_Option);
	
	var _Placeholder = __webpack_require__(429);
	
	var _Placeholder2 = _interopRequireDefault(_Placeholder);
	
	var _Separator = __webpack_require__(435);
	
	var _Separator2 = _interopRequireDefault(_Separator);
	
	var _SelectItem = __webpack_require__(437);
	
	var _SelectItem2 = _interopRequireDefault(_SelectItem);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	/**
	 * Returns true if the provided property is a Placeholder component from Belle.
	 */
	function isPlaceholder(reactElement) {
	  return (0, _isComponentOfType2.default)(_Placeholder2.default, reactElement);
	}
	
	/**
	 * Returns true if the provided property is a Option component from Belle.
	 */
	function isOption(reactElement) {
	  return (0, _isComponentOfType2.default)(_Option2.default, reactElement);
	}
	
	/**
	 * Returns true if the provided property is a Separator component from Belle.
	 */
	function isSeparator(reactElement) {
	  return (0, _isComponentOfType2.default)(_Separator2.default, reactElement);
	}
	
	/**
	 * Verifies that the children is an array containing only Options & at maximum
	 * one Placeholder.
	 */
	function validateChildrenAreOptionsAndMaximumOnePlaceholder(props, propName, componentName) {
	  var validChildren = (0, _helpers.filterReactChildren)(props[propName], function (node) {
	    return isOption(node) || isSeparator(node) || isPlaceholder(node);
	  });
	  if (_react2.default.Children.count(props[propName]) !== _react2.default.Children.count(validChildren)) {
	    return new Error('Invalid children supplied to `' + componentName + '`, expected an Option, Separator or Placeholder component from Belle.');
	  }
	
	  var placeholders = (0, _helpers.filterReactChildren)(props[propName], function (node) {
	    return isPlaceholder(node);
	  });
	  if (_react2.default.Children.count(placeholders) > 1) {
	    return new Error('Invalid children supplied to `' + componentName + '`, expected only one Placeholder component.');
	  }
	
	  return undefined;
	}
	
	var selectPropTypes = {
	  children: validateChildrenAreOptionsAndMaximumOnePlaceholder,
	  value: _react.PropTypes.oneOfType([_react.PropTypes.bool, _react.PropTypes.string, _react.PropTypes.number, _react.PropTypes.instanceOf(Date)]),
	  defaultValue: _react.PropTypes.oneOfType([_react.PropTypes.bool, _react.PropTypes.string, _react.PropTypes.number]),
	  onUpdate: _react.PropTypes.func,
	  valueLink: _react.PropTypes.shape({
	    value: _react.PropTypes.string.isRequired,
	    requestChange: _react.PropTypes.func.isRequired
	  }),
	  className: _react.PropTypes.string,
	  shouldPositionOptions: _react.PropTypes.bool,
	  positionOptions: _react.PropTypes.func,
	  style: _react.PropTypes.object,
	  focusStyle: _react.PropTypes.object,
	  hoverStyle: _react.PropTypes.object,
	  activeStyle: _react.PropTypes.object,
	  wrapperStyle: _react.PropTypes.object,
	  menuStyle: _react.PropTypes.object,
	  caretToOpenStyle: _react.PropTypes.object,
	  caretToCloseStyle: _react.PropTypes.object,
	  wrapperProps: _react.PropTypes.object,
	  menuProps: _react.PropTypes.object,
	  caretProps: _react.PropTypes.object,
	  disabled: _react.PropTypes.bool,
	  disabledStyle: _react.PropTypes.object,
	  disabledHoverStyle: _react.PropTypes.object,
	  disabledCaretToOpenStyle: _react.PropTypes.object,
	  id: _react.PropTypes.string,
	  onClick: _react.PropTypes.func,
	  onTouchCancel: _react.PropTypes.func,
	  onMouseDown: _react.PropTypes.func,
	  onMouseUp: _react.PropTypes.func,
	  onTouchEnd: _react.PropTypes.func,
	  onTouchStart: _react.PropTypes.func
	};
	
	/**
	 * Update hover style for the speficied styleId.
	 *
	 * @param styleId {string} - a unique id that exists as class attribute in the DOM
	 * @param properties {object} - the components properties optionally containing hoverStyle
	 */
	function updatePseudoClassStyle(styleId, properties) {
	  var hoverStyle = _extends({}, _select2.default.hoverStyle, properties.hoverStyle);
	  var disabledHoverStyle = _extends({}, _select2.default.disabledHoverStyle, properties.disabledHoverStyle);
	
	  var styles = [{
	    id: styleId,
	    style: hoverStyle,
	    pseudoClass: 'hover'
	  }, {
	    id: styleId,
	    style: disabledHoverStyle,
	    pseudoClass: 'hover',
	    disabled: true
	  }];
	  (0, _injectStyle.injectStyles)(styles);
	}
	
	/**
	 * Returns true in case there one more element in the list.
	 */
	var hasNext = function hasNext(list, currentIndex) {
	  return currentIndex + 2 <= list.length;
	};
	
	/**
	 * Returns true in case there is one previous element in the list.
	 */
	var hasPrevious = function hasPrevious(list, currentIndex) {
	  return currentIndex - 1 >= 0;
	};
	
	/**
	 * Returns an object with properties that are relevant for the wrapping div of
	 * the selected option.
	 */
	function sanitizeSelectedOptionWrapperProps(properties) {
	  return (0, _helpers.omit)(properties, Object.keys(selectPropTypes));
	}
	
	/**
	 * Returns an object with properties that are relevant for the wrapping div of
	 * the selected option.
	 */
	function sanitizeWrapperProps(properties) {
	  return (0, _helpers.omit)(properties, ['style', 'ref', 'tabIndex', 'onKeyDown', 'onBlur', 'onFocus']);
	}
	
	/**
	 * Returns an object with properties that are relevant for the wrapping div of
	 * the selected option.
	 */
	function sanitizeMenuProps(properties) {
	  return (0, _helpers.omit)(properties, ['style', 'ref', 'aria-labelledby', 'role']);
	}
	
	/**
	 * Returns an object with properties that are relevant for the wrapping div of
	 * the selected option.
	 */
	function sanitizeCaretProps(properties) {
	  return (0, _helpers.omit)(properties, ['style', 'ref']);
	}
	
	/**
	 * Select component.
	 *
	 * In its simplest form the select component behaves almost identical to the
	 * native HTML select which the exception that it comes with beautiful styles.
	 *
	 * Example:
	 *
	 *     <Select defaultValue="rome">
	 *       <Option value="vienna">Vienna</Option>
	 *       <Option value="rome">Rome</Option>
	 *     </Select>
	 *
	 * For more advanced examples please see:
	 * nikgraf.github.io/belle/#/component/select
	 *
	 * This component was inpired by:
	 * - Jet Watson: https://github.com/JedWatson/react-select
	 * - Instructure React Team: https://github.com/instructure-react/react-select-box
	 */
	
	var Select = function (_Component) {
	  _inherits(Select, _Component);
	
	  /*
	   * Initialize the component based on the provided properties.
	   *
	   * By default the Select is closed & the focused option in case the user opens
	   * it will be the selected option.
	   */
	
	  function Select(properties) {
	    _classCallCheck(this, Select);
	
	    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Select).call(this, properties));
	
	    _this._onTouchStartAtOption = function (event, index) {
	      if (event.touches.length === 1) {
	        _this._touchStartedAt = _this._getValueForIndex(index);
	
	        // save the scroll position
	        var menuNode = _reactDom2.default.findDOMNode(_this.refs.menu);
	        if (menuNode.scrollHeight > menuNode.offsetHeight) {
	          _this._scrollTopPosition = menuNode.scrollTop;
	
	          // Note: don't use setState in here as it would prevent the scrolling
	        } else {
	            _this._scrollTopPosition = 0;
	            _this.setState({ focusedOptionValue: _this._touchStartedAt });
	          }
	
	        // reset interaction
	        _this._scrollActive = false;
	      }
	    };
	
	    _this._onTouchMoveAtOption = function () {
	      var menuNode = _reactDom2.default.findDOMNode(_this.refs.menu);
	      if (menuNode.scrollTop !== _this._scrollTopPosition) {
	        _this._scrollActive = true;
	      }
	    };
	
	    _this._onTouchEndAtOption = function (event, index) {
	      if (_this._touchStartedAt && !_this._scrollActive) {
	        var value = _this._getValueForIndex(index);
	        if (_this._touchStartedAt === value) {
	          event.preventDefault();
	          _this._triggerChange(value);
	        }
	      }
	
	      _this._touchStartedAt = undefined;
	    };
	
	    _this._onTouchCancelAtOption = function () {
	      _this._touchStartedAt = undefined;
	    };
	
	    _this._onClickAtOption = function (index) {
	      _this._triggerChange(_this._getValueForIndex(index));
	    };
	
	    _this._onBlur = function (event) {
	      _this.setState({
	        isOpen: false,
	        isFocused: false
	      });
	
	      if (_this.props.wrapperProps && _this.props.wrapperProps.onBlur) {
	        _this.props.wrapperProps.onBlur(event);
	      }
	    };
	
	    _this._onFocus = function (event) {
	      _this.setState({
	        isFocused: true
	      });
	
	      if (_this.props.wrapperProps && _this.props.wrapperProps.onFocus) {
	        _this.props.wrapperProps.onFocus(event);
	      }
	    };
	
	    _this._onMouseEnterAtOption = function (index) {
	      _this.setState({
	        focusedOptionValue: _this._getValueForIndex(index)
	      });
	    };
	
	    _this._onTouchStartToggleMenu = function (event) {
	      if (event.touches.length === 1) {
	        _this.setState({ isTouchedToToggle: true, isActive: true });
	      } else {
	        _this.setState({ isTouchedToToggle: false });
	      }
	
	      if (_this.props.onTouchStart) {
	        _this.props.onTouchStart(event);
	      }
	    };
	
	    _this._onTouchEndToggleMenu = function (event) {
	      // In case touch events are used preventDefault is applied to avoid
	      // triggering the click event which would cause trouble for toggling.
	      // In any case calling setState triggers a render. This leads to the fact
	      // that the click event won't be triggered anyways. Nik assumes it's due the
	      // element won't be in the DOM anymore.
	      // This also means the Select's onClick won't be triggered for touchDevices.
	      event.preventDefault();
	
	      /* To avoid weird behaviour we check before focusing again - no specific use-case found */
	      var wrapperNode = _reactDom2.default.findDOMNode(_this.refs.wrapper);
	      if (document.activeElement !== wrapperNode) {
	        wrapperNode.focus();
	      }
	
	      if (_this.state.isTouchedToToggle) {
	        if (_this.state.isOpen) {
	          _this.setState({ isOpen: false });
	        } else {
	          _this.setState({ isOpen: true });
	        }
	      }
	
	      _this.setState({ isTouchedToToggle: false, isActive: false });
	
	      if (_this.props.onTouchEnd) {
	        _this.props.onTouchEnd(event);
	      }
	    };
	
	    _this._onTouchCancelToggleMenu = function (event) {
	      _this.setState({ isTouchedToToggle: false, isActive: false });
	
	      if (_this.props.onTouchCancel) {
	        _this.props.onTouchCancel(event);
	      }
	    };
	
	    _this._onMouseDown = function (event) {
	      _this.setState({ isActive: true });
	
	      if (_this.props.onMouseDown) {
	        _this.props.onMouseDown(event);
	      }
	    };
	
	    _this._onMouseUp = function (event) {
	      _this.setState({ isActive: false });
	
	      if (_this.props.onMouseUp) {
	        _this.props.onMouseUp(event);
	      }
	    };
	
	    _this._onMouseUpOnDocument = function () {
	      _this.setState({ isActive: false });
	    };
	
	    _this._onContextMenu = function () {
	      _this.setState({ isActive: false });
	    };
	
	    _this._onArrowDownKeyDown = function () {
	      if (_this.state.focusedOptionValue !== void 0) {
	        var indexOfFocusedOption = _this._getIndexOfFocusedOption();
	
	        if (hasNext(_this.options, indexOfFocusedOption)) {
	          _this.setState({
	            focusedOptionValue: _this.options[indexOfFocusedOption + 1].props.value
	          });
	        }
	      } else {
	        _this.setState({
	          focusedOptionValue: (0, _helpers.first)(_this.options).props.value
	        });
	      }
	    };
	
	    _this._onArrowUpKeyDown = function () {
	      if (_this.state.focusedOptionValue !== void 0) {
	        var indexOfFocusedOption = _this._getIndexOfFocusedOption();
	
	        if (hasPrevious(_this.options, indexOfFocusedOption)) {
	          _this.setState({
	            focusedOptionValue: _this.options[indexOfFocusedOption - 1].props.value
	          });
	        }
	      } else {
	        _this.setState({
	          focusedOptionValue: (0, _helpers.last)(_this.options).props.value
	        });
	      }
	    };
	
	    _this._onEnterOrSpaceKeyDown = function () {
	      _this._triggerChange(_this.state.focusedOptionValue);
	    };
	
	    _this._onKeyDown = function (event) {
	      if (!_this.props.disabled) {
	        if (!(0, _helpers.isEmpty)(_this.options)) {
	          if (!_this.state.isOpen) {
	            if (event.key === 'ArrowDown' || event.key === 'ArrowUp' || event.key === ' ') {
	              event.preventDefault();
	              _this.setState({ isOpen: true });
	            }
	          } else {
	            // Updates the state to set focus on the next option
	            // In case no option is active it should jump to the first.
	            // In case it is the last it should stop there.
	            if (event.key === 'ArrowDown') {
	              event.preventDefault();
	              _this._onArrowDownKeyDown();
	            } else if (event.key === 'ArrowUp') {
	              event.preventDefault();
	              _this._onArrowUpKeyDown();
	            } else if (event.key === 'Enter' || event.key === ' ') {
	              event.preventDefault();
	              _this._onEnterOrSpaceKeyDown();
	            }
	          }
	
	          if (event.key === 'Escape') {
	            event.preventDefault();
	            _this.setState({ isOpen: false });
	          }
	        }
	      }
	
	      if (_this.props.wrapperProps && _this.props.wrapperProps.onKeyDown) {
	        _this.props.wrapperProps.onKeyDown(event);
	      }
	    };
	
	    _this._onClickToggleMenu = function (event) {
	      if (!_this.props.disabled) {
	        if (_this.state.isOpen) {
	          _this.setState({ isOpen: false });
	        } else {
	          _this.setState({ isOpen: true });
	        }
	      }
	
	      if (_this.props.onClick) {
	        _this.props.onClick(event);
	      }
	    };
	
	    var selectedValue = void 0;
	    var focusedOptionValue = void 0;
	
	    if (properties.children) {
	      _this.children = (0, _helpers.flattenReactChildren)(properties.children);
	      _this.options = (0, _helpers.filter)(_this.children, isOption);
	    }
	
	    if ((0, _helpers.has)(properties, 'valueLink')) {
	      selectedValue = properties.valueLink.value;
	      focusedOptionValue = selectedValue;
	    } else if ((0, _helpers.has)(properties, 'value')) {
	      selectedValue = properties.value;
	      focusedOptionValue = selectedValue;
	    } else if ((0, _helpers.has)(properties, 'defaultValue')) {
	      selectedValue = properties.defaultValue;
	      focusedOptionValue = selectedValue;
	    } else if (!(0, _helpers.isEmpty)(_this.children) && !(0, _helpers.some)(_this.children, isPlaceholder)) {
	      var firstOption = (0, _helpers.first)(_this.options);
	      selectedValue = firstOption ? firstOption.props.value : void 0;
	      focusedOptionValue = selectedValue;
	    } else if (!(0, _helpers.isEmpty)(_this.children)) {
	      var _firstOption = (0, _helpers.first)(_this.options);
	      focusedOptionValue = _firstOption ? _firstOption.props.value : void 0;
	    }
	
	    _this.state = {
	      isOpen: false,
	      isFocused: false,
	      selectedValue: selectedValue,
	      focusedOptionValue: focusedOptionValue,
	      selectedOptionWrapperProps: sanitizeSelectedOptionWrapperProps(properties),
	      wrapperProps: sanitizeWrapperProps(properties.wrapperProps),
	      menuProps: sanitizeMenuProps(properties.menuProps),
	      caretProps: sanitizeCaretProps(properties.caretProps),
	      isTouchedToToggle: false
	    };
	    return _this;
	  }
	
	  _createClass(Select, [{
	    key: 'getChildContext',
	    value: function getChildContext() {
	      return {
	        isDisabled: this.props.disabled,
	        isHoveredValue: this.state.focusedOptionValue
	      };
	    }
	
	    /**
	     * Generates the style-id & inject the focus & hover style.
	     */
	
	  }, {
	    key: 'componentWillMount',
	    value: function componentWillMount() {
	      var id = (0, _helpers.uniqueId)();
	
	      // Note: To ensure server side rendering creates the same results React's internal
	      // id for this element is leveraged.
	      this.selectedOptionWrapperId = this.props.id ? this.props.id : 'belle-select-id-' + id;
	      this._styleId = 'style-id' + id;
	      updatePseudoClassStyle(this._styleId, this.props);
	
	      if (_exenv.canUseDOM) {
	        this.mouseUpOnDocumentCallback = this._onMouseUpOnDocument;
	        document.addEventListener('mouseup', this.mouseUpOnDocumentCallback);
	      }
	    }
	  }, {
	    key: 'componentWillReceiveProps',
	    value: function componentWillReceiveProps(properties) {
	      if (properties.children) {
	        this.children = (0, _helpers.flattenReactChildren)(properties.children);
	        this.options = (0, _helpers.filter)(this.children, isOption);
	      }
	
	      var newState = {
	        selectedOptionWrapperProps: sanitizeSelectedOptionWrapperProps(properties),
	        wrapperProps: sanitizeWrapperProps(properties.wrapperProps),
	        menuProps: sanitizeMenuProps(properties.menuProps),
	        caretProps: sanitizeCaretProps(properties.caretProps)
	      };
	
	      if ((0, _helpers.has)(properties, 'valueLink')) {
	        newState.selectedValue = properties.valueLink.value;
	        newState.focusedOptionValue = properties.valueLink.value;
	      } else if ((0, _helpers.has)(properties, 'value')) {
	        newState.selectedValue = properties.value;
	        newState.focusedOptionValue = properties.value;
	      }
	
	      this.setState(newState);
	      (0, _injectStyle.removeStyle)(this._styleId);
	      updatePseudoClassStyle(this._styleId, properties);
	    }
	
	    /**
	     * In case shouldPositionOptions is active the scrollTop position is stored
	     * to be applied later on. The menu is hidden to make sure it is
	     * not displayed beofre repositioned.
	     */
	
	  }, {
	    key: 'componentWillUpdate',
	    value: function componentWillUpdate(nextProperties, nextState) {
	      var shouldPositionOptions = (0, _helpers.has)(nextProperties, 'shouldPositionOptions') ? nextProperties.shouldPositionOptions : _select4.default.shouldPositionOptions;
	
	      if (shouldPositionOptions) {
	        var menuNode = _reactDom2.default.findDOMNode(this.refs.menu);
	        this.cachedMenuScrollTop = menuNode.scrollTop;
	
	        if (!this.state.isOpen && nextState.isOpen) {
	          menuNode.style.display = 'none';
	        }
	      }
	    }
	
	    /**
	     * In case shouldPositionOptions is active when opening the menu it is
	     * repositioned & switched to be visible.
	     */
	
	  }, {
	    key: 'componentDidUpdate',
	    value: function componentDidUpdate(previousProperties, previousState) {
	      var shouldPositionOptions = (0, _helpers.has)(this.props, 'shouldPositionOptions') ? this.props.shouldPositionOptions : _select4.default.shouldPositionOptions;
	
	      if (shouldPositionOptions && !this.props.disabled) {
	        var menuNode = _reactDom2.default.findDOMNode(this.refs.menu);
	
	        // the menu was just opened
	        if (!previousState.isOpen && this.state.isOpen && this.children && this.children.length > 0) {
	          var positionOptions = (0, _helpers.has)(this.props, 'positionOptions') ? this.props.positionOptions : _select4.default.positionOptions;
	          positionOptions(this);
	
	          // restore the old scrollTop position
	        } else {
	            menuNode.scrollTop = this.cachedMenuScrollTop;
	          }
	
	        var separators = (0, _helpers.filter)(this.children, isSeparator);
	        var childrenPresent = !(0, _helpers.isEmpty)(this.options) || !(0, _helpers.isEmpty)(separators);
	        if (!previousState.isOpen && this.state.isOpen && childrenPresent) {
	          var menuStyle = _extends({}, _select2.default.menuStyle, this.props.menuStyle);
	          menuNode.style.display = menuStyle.display;
	        }
	      }
	    }
	
	    /**
	     * Remove a component's associated styles whenever it gets removed from the DOM.
	     */
	
	  }, {
	    key: 'componentWillUnmount',
	    value: function componentWillUnmount() {
	      (0, _injectStyle.removeStyle)(this._styleId);
	      if (_exenv.canUseDOM) {
	        document.removeEventListener('mouseup', this.mouseUpOnDocumentCallback);
	      }
	    }
	
	    /**
	     * Update the focusedOption based on Option the user is touching.
	     *
	     * Unfortunately updating the focusedOption only works in case the menu
	     * is not scrollable.
	     * If a setState would be triggered during a touch with the intention to
	     * scroll the setState would trigger a re-render & prevent the scrolling.
	     */
	
	
	    /**
	     * Identifies if the menu is scrollable.
	     */
	
	
	    /**
	     * Triggers a change event after the user touched on an Option.
	     */
	
	
	    /**
	     * Triggers a change event after the user touched on an Option.
	     */
	
	
	    /**
	     * Triggers a change event after the user clicked on an Option.
	     */
	
	
	    /**
	     * In order to inform the user which element in the document is active the
	     * component keeps track of when it's de-selected and depending on that
	     * close the menu.
	     */
	
	
	    /**
	     * In order to inform the user which element in the document is active the
	     * component keeps track of when it's de-selected and depending on that
	     * close the menu.
	     */
	
	
	    /**
	     * In order to inform the user which Option is active the component keeps
	     * track of when an option is in focus by the user and depending on that
	     * provide a visual indicator.
	     */
	
	
	    /**
	     * Initiate the toggle for the menu.
	     */
	
	
	    /**
	     * Toggle the menu after a user touched it & resets the pressed state
	     * for to toggle.
	     */
	
	
	    /**
	     * Reset the precondition to initialize a toggle of the menu.
	     */
	
	
	    /**
	     * Set isActive to true on mouse-down.
	     */
	
	
	    /**
	     * Set isActive to false on mouse-up.
	     */
	
	
	    /**
	     * Set isActive to false on mouse-up.
	     */
	
	
	    /**
	     * Set isActive to false on is context menu opens on select's div.
	     */
	
	
	    /**
	     * Update focus for the options for an already open menu.
	     *
	     * The user experience of HTML's native select is good and the goal here is to
	     * achieve the same behaviour.
	     *
	     * - Focus on the first entry in case no options is focused on.
	     * - Switch focus to the next option in case one option already has focus.
	     */
	
	
	    /**
	     * Update focus for the options for an already open menu.
	     *
	     * The user experience of HTML's native select is good and the goal here is to
	     * achieve the same behaviour.
	     *
	     * - Focus on the last entry in case no options is focused on.
	     * - Switch focus to the previous option in case one option already has focus.
	     */
	
	
	    /**
	     * After the user pressed the `Enter` or `Space` key for an already open
	     * menu the focused option is selected.
	     *
	     * Same as _onClickAtOption this update the state & dispatches a change event.
	     */
	
	
	    /**
	     * Manages the keyboard events.
	     *
	     * In case the Select is in focus, but closed ArrowDown, ArrowUp, Enter and
	     * Space will result in opening the menu.
	     *
	     * In case the menu is already open each key press will have
	     * different effects already documented in the related methods.
	     *
	     * Pressing Escape will close the menu.
	     */
	
	
	    /**
	     * Toggle the menu after a user clicked on it.
	     */
	
	  }, {
	    key: '_getIndexOfFocusedOption',
	
	
	    /**
	     * Returns the index of the entry with a certain value from the component's
	     * children.
	     *
	     * The index search includes only option components.
	     */
	    value: function _getIndexOfFocusedOption() {
	      var _this2 = this;
	
	      return (0, _helpers.findIndex)(this.options, function (element) {
	        return element.props.value === _this2.state.focusedOptionValue;
	      });
	    }
	
	    /**
	     * Returns the value of the child with a certain index.
	     */
	
	  }, {
	    key: '_getValueForIndex',
	    value: function _getValueForIndex(index) {
	      return this.options[index].props.value;
	    }
	
	    /**
	     * After an option has been selected the menu gets closed and the
	     * selection processed.
	     *
	     * Depending on the component's properties the value gets updated and the
	     * provided change callback for onUpdate or valueLink is called.
	     */
	
	  }, {
	    key: '_triggerChange',
	    value: function _triggerChange(value) {
	      if ((0, _helpers.has)(this.props, 'valueLink')) {
	        this.props.valueLink.requestChange(value);
	        this.setState({
	          isOpen: false
	        });
	      } else if ((0, _helpers.has)(this.props, 'value')) {
	        this.setState({
	          isOpen: false
	        });
	      } else {
	        this.setState({
	          focusedOptionValue: value,
	          selectedValue: value,
	          isOpen: false
	        });
	      }
	
	      if (this.props.onUpdate) {
	        this.props.onUpdate({ value: value });
	      }
	    }
	  }, {
	    key: '_renderChildren',
	    value: function _renderChildren() {
	      var _this3 = this;
	
	      var optionsIndex = 0;
	
	      return _react2.default.Children.map(this.children, function (entry, index) {
	        if (isOption(entry)) {
	          // filter out all non-Option Components
	          var localOptionIndex = optionsIndex;
	          var isHovered = entry.props.value === _this3.state.focusedOptionValue;
	          var element = _react2.default.createElement(
	            _SelectItem2.default,
	            {
	              onItemClick: _this3._onClickAtOption,
	              onItemTouchStart: _this3._onTouchStartAtOption,
	              onItemTouchMove: _this3._onTouchMoveAtOption,
	              onItemTouchEnd: _this3._onTouchEndAtOption,
	              onItemTouchCancel: _this3._onTouchCancelAtOption,
	              onItemMouseEnter: _this3._onMouseEnterAtOption,
	              isHovered: isHovered,
	              index: localOptionIndex,
	              key: index
	            },
	            entry
	          );
	          optionsIndex++;
	
	          return element;
	        } else if (isSeparator(entry)) {
	          return _react2.default.createElement(
	            'li',
	            {
	              key: index,
	              role: 'presentation'
	            },
	            entry
	          );
	        }
	
	        return null;
	      });
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _this4 = this;
	
	      var defaultStyle = _extends({}, _select2.default.style, this.props.style);
	      var hoverStyle = _extends({}, defaultStyle, _select2.default.hoverStyle, this.props.hoverStyle);
	      var focusStyle = _extends({}, defaultStyle, _select2.default.focusStyle, this.props.focusStyle);
	      var activeStyle = _extends({}, defaultStyle, _select2.default.activeStyle, this.props.activeStyle);
	      var disabledStyle = _extends({}, defaultStyle, _select2.default.disabledStyle, this.props.disabledStyle);
	      var disabledHoverStyle = _extends({}, disabledStyle, _select2.default.disabledHoverStyle, this.props.disabledHoverStyle);
	      var menuStyle = _extends({}, _select2.default.menuStyle, this.props.menuStyle);
	      var caretToCloseStyle = _extends({}, _select2.default.caretToCloseStyle, this.props.caretToCloseStyle);
	      var caretToOpenStyle = _extends({}, _select2.default.caretToOpenStyle, this.props.caretToOpenStyle);
	      var disabledCaretToOpenStyle = _extends({}, caretToOpenStyle, _select2.default.disabledCaretToOpenStyle, this.props.disabledCaretToOpenStyle);
	      var wrapperStyle = _extends({}, _select2.default.wrapperStyle, this.props.wrapperStyle);
	
	      var selectedOptionOrPlaceholder = void 0;
	      if (this.state.selectedValue !== void 0) {
	        var selectedEntry = (0, _helpers.find)(this.children, function (entry) {
	          return entry.props.value === _this4.state.selectedValue;
	        });
	
	        if (selectedEntry) {
	          selectedOptionOrPlaceholder = _react2.default.cloneElement(selectedEntry, {
	            _isDisplayedAsSelected: true
	          });
	        }
	      } else {
	        selectedOptionOrPlaceholder = (0, _helpers.find)(this.children, isPlaceholder);
	      }
	
	      var separators = (0, _helpers.filter)(this.children, isSeparator);
	      var childrenNotPresent = (0, _helpers.isEmpty)(this.options) && (0, _helpers.isEmpty)(separators);
	      var computedMenuStyle = this.props.disabled || !this.state.isOpen || childrenNotPresent ? { display: 'none' } : menuStyle;
	      var hasCustomTabIndex = this.props.wrapperProps && this.props.wrapperProps.tabIndex;
	      var tabIndex = hasCustomTabIndex ? this.props.wrapperProps.tabIndex : '0';
	
	      var selectedOptionWrapperStyle = void 0;
	      if (this.props.disabled) {
	        if (this.state.isTouchedToToggle) {
	          selectedOptionWrapperStyle = disabledHoverStyle;
	        } else {
	          selectedOptionWrapperStyle = disabledStyle;
	        }
	
	        tabIndex = -1;
	      } else {
	        if (this.state.isActive) {
	          selectedOptionWrapperStyle = activeStyle;
	        } else if (this.state.isFocused) {
	          selectedOptionWrapperStyle = focusStyle;
	        } else if (this.state.isTouchedToToggle) {
	          selectedOptionWrapperStyle = hoverStyle;
	        } else {
	          selectedOptionWrapperStyle = defaultStyle;
	        }
	      }
	
	      var caretStyle = void 0;
	      if (this.props.disabled) {
	        caretStyle = disabledCaretToOpenStyle;
	      } else if (this.state.isOpen) {
	        caretStyle = caretToCloseStyle;
	      } else {
	        caretStyle = caretToOpenStyle;
	      }
	
	      return _react2.default.createElement(
	        'div',
	        _extends({
	          style: wrapperStyle,
	          tabIndex: tabIndex,
	          onKeyDown: this._onKeyDown,
	          onBlur: this._onBlur,
	          onFocus: this._onFocus,
	          ref: 'wrapper'
	        }, this.state.wrapperProps),
	        _react2.default.createElement(
	          'div',
	          _extends({
	            onClick: this._onClickToggleMenu,
	            onTouchStart: this._onTouchStartToggleMenu,
	            onTouchEnd: this._onTouchEndToggleMenu,
	            onTouchCancel: this._onTouchCancelToggleMenu,
	            onContextMenu: this._onContextMenu,
	            onMouseDown: this._onMouseDown,
	            onMouseUp: this._onMouseUp,
	            style: selectedOptionWrapperStyle,
	            className: (0, _unionClassNames2.default)(this.props.className, this._styleId),
	            ref: 'selectedOptionWrapper',
	            role: 'button',
	            'aria-expanded': this.state.isOpen,
	            id: this.selectedOptionWrapperId
	          }, this.state.selectedOptionWrapperProps),
	          selectedOptionOrPlaceholder,
	          _react2.default.createElement('span', _extends({
	            style: caretStyle
	          }, this.state.caretProps))
	        ),
	        _react2.default.createElement(
	          'ul',
	          _extends({
	            style: computedMenuStyle,
	            role: 'listbox',
	            'aria-labelledby': this.selectedOptionWrapperId,
	            ref: 'menu'
	          }, this.state.menuProps),
	          this._renderChildren()
	        )
	      );
	    }
	  }]);
	
	  return Select;
	}(_react.Component);
	
	Select.displayName = 'Select';
	Select.propTypes = selectPropTypes;
	Select.childContextTypes = {
	  isDisabled: _react.PropTypes.bool.isRequired,
	  isHoveredValue: _react.PropTypes.oneOfType([_react.PropTypes.bool, _react.PropTypes.string, _react.PropTypes.number])
	};
	Select.defaultProps = {
	  disabled: false
	};
	exports.default = Select;

/***/ },
/* 432 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var selectStyle = {
	  style: {
	    borderBottom: '1px solid #CCC',
	    boxSizing: 'border-box',
	    cursor: 'pointer',
	    /*
	    While the Select should have the same padding as TextInput 4px for
	    paddingBottom was chosen as in Chrome the Text is larger by 1px than in
	    the textarea.
	     */
	    padding: '7px 0 4px 0',
	    position: 'relative',
	
	    /* animations */
	    transition: 'border-bottom 0.2s',
	    transitionTimingFunction: 'ease-out',
	
	    /*
	    To avoid any kind of flickering the user won't get feedback
	    for selecting the button text
	    */
	    WebkitUserSelect: 'none',
	    MozUserSelect: 'none',
	    MsUserSelect: 'none',
	    userSelect: 'none',
	
	    /* This button can only be pressed */
	    MsTouchAction: 'manipulation',
	    touchAction: 'manipulation',
	
	    /*
	    Prevent flickering while tapping on WebKit
	    http://stackoverflow.com/a/3516243/837709
	    */
	    WebkitTapHighlightColor: 'transparent'
	  },
	
	  focusStyle: {
	    borderBottom: '1px solid #6EB8D4'
	  },
	
	  activeStyle: {
	    borderBottom: '1px solid #6EB8D4'
	  },
	
	  hoverStyle: {
	    borderBottom: '1px solid #92D6EF'
	  },
	
	  wrapperStyle: {
	    outline: 0, // to avoid default focus behaviour
	    boxSizing: 'border-box',
	    position: 'relative'
	  },
	
	  disabledStyle: {
	    borderBottom: '1px dotted #9F9F9F'
	  },
	
	  disabledHoverStyle: {
	    borderBottom: '1px dotted #92D6EF',
	    cursor: 'not-allowed'
	  },
	
	  menuStyle: {
	    display: 'block',
	    listStyleType: 'none',
	    background: '#FFF',
	    padding: '6px 0',
	    margin: 0,
	    position: 'absolute',
	    width: '100%',
	    zIndex: 10000,
	    boxSizing: 'border-box',
	    borderRadius: 2,
	    boxShadow: '0 1px 1px rgba(0, 0, 0, 0.2)',
	    borderTop: '1px solid #f2f2f2',
	    top: 0,
	    /* Improve scrolling for mobile Safari */
	    WebkitOverflowScrolling: 'touch'
	  },
	
	  caretToOpenStyle: {
	    height: 0,
	    width: 0,
	    content: '-', // Avoid this warning: was passed a numeric string value for CSS property `content` (value: ` `)
	    position: 'absolute',
	    top: 15,
	    right: 8,
	    borderTop: '6px solid #666',
	    borderLeft: '5px solid transparent',
	    borderRight: '5px solid transparent'
	  },
	
	  caretToCloseStyle: {
	    height: 0,
	    width: 0,
	    content: '-', // Avoid this warning: was passed a numeric string value for CSS property `content` (value: ` `)
	    position: 'absolute',
	    top: 15,
	    right: 8,
	    borderBottom: '6px solid #666',
	    borderLeft: '5px solid transparent',
	    borderRight: '5px solid transparent'
	  },
	
	  disabledCaretToOpenStyle: {
	    borderTop: '6px solid #9F9F9F'
	  }
	};
	
	exports.default = selectStyle;

/***/ },
/* 433 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _reactDom = __webpack_require__(32);
	
	var _reactDom2 = _interopRequireDefault(_reactDom);
	
	var _isComponentOfType = __webpack_require__(434);
	
	var _isComponentOfType2 = _interopRequireDefault(_isComponentOfType);
	
	var _helpers = __webpack_require__(417);
	
	var _Option = __webpack_require__(427);
	
	var _Option2 = _interopRequireDefault(_Option);
	
	var _Separator = __webpack_require__(435);
	
	var _Separator2 = _interopRequireDefault(_Separator);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * Returns the index of the entry with a certain value from the component's
	 * children.
	 *
	 * The index search includes separator & option components.
	 */
	var findIndexOfSelectedOption = function findIndexOfSelectedOption(component) {
	  var filterFunction = function filterFunction(child) {
	    return (0, _isComponentOfType2.default)(_Option2.default, child) || (0, _isComponentOfType2.default)(_Separator2.default, child);
	  };
	  return (0, _helpers.findIndex)((0, _helpers.filterReactChildren)(component.props.children, filterFunction), function (element) {
	    return element.props.value === component.state.selectedValue;
	  });
	};
	
	var selectConfig = {
	
	  shouldPositionOptions: true,
	
	  /**
	   * Repositions to the menu to position the focusedOption right on top
	   * of the selected one.
	   *
	   * @param selectComponent {object} - the Select component itself accessible with `this`
	   */
	  positionOptions: function positionOptions(selectComponent) {
	    var menuNode = _reactDom2.default.findDOMNode(selectComponent.refs.menu);
	    var menuStyle = window.getComputedStyle(menuNode, null);
	    var menuWidth = parseFloat(menuStyle.getPropertyValue('width'));
	
	    // In case of a placeholder no option is focused on initially
	    var optionIndex = void 0;
	    if (selectComponent.state.selectedValue) {
	      optionIndex = findIndexOfSelectedOption(selectComponent);
	    } else {
	      optionIndex = 0;
	    }
	
	    var option = menuNode.childNodes[optionIndex];
	
	    var menuHeight = parseFloat(menuStyle.getPropertyValue('height'));
	    var menuTopBorderWidth = parseFloat(menuStyle.getPropertyValue('border-top-width'));
	
	    // In order to work with legacy browsers the second paramter for pseudoClass
	    // has to be provided http://caniuse.com/#feat=getcomputedstyle
	    var optionStyle = window.getComputedStyle(option.childNodes[0], null);
	    var optionPaddingTop = parseFloat(optionStyle.getPropertyValue('padding-top'));
	    var optionPaddingLeft = parseFloat(optionStyle.getPropertyValue('padding-top'));
	
	    var selectedOptionWrapperNode = _reactDom2.default.findDOMNode(selectComponent.refs.selectedOptionWrapper);
	    var selectedOptionWrapperStyle = window.getComputedStyle(selectedOptionWrapperNode, null);
	    var selectedOptionWrapperPaddingTop = parseFloat(selectedOptionWrapperStyle.getPropertyValue('padding-top'));
	
	    var newTop = option.offsetTop + optionPaddingTop - selectedOptionWrapperPaddingTop + menuTopBorderWidth;
	    var newLeft = option.offsetLeft + optionPaddingLeft;
	
	    // Top positioning
	    if (menuHeight < menuNode.scrollHeight) {
	      if (newTop + menuHeight > menuNode.scrollHeight) {
	        // In case scrolling is not enough the box needs to be moved more to
	        // the top to match the same position.
	        var maxScrollTop = menuNode.scrollHeight - menuHeight;
	        menuNode.scrollTop = maxScrollTop;
	        menuNode.style.top = '-' + (newTop - maxScrollTop) + 'px';
	      } else {
	        // In case it's the first entry scrolling is not used to respect the
	        // menu's paddingTop.
	        if (optionIndex === 0) {
	          menuNode.scrollTop = 0;
	          menuNode.style.top = '-' + newTop + 'px';
	        } else {
	          menuNode.scrollTop = newTop;
	        }
	      }
	    } else {
	      menuNode.style.top = '-' + newTop + 'px';
	    }
	
	    // Left positioning
	    menuNode.style.left = '-' + newLeft + 'px';
	
	    // Increasing the width
	    //
	    // Pro:
	    // - It gives a option in the menu the same width
	    // as in the selectedOptionWrapper.
	    // - There is space to keep the text of the option on the exact same pixel
	    // when opening. The menu is symetric in relation to the
	    // selectedOptionWrapper.
	    //
	    // Con:
	    // - Adding the padding could cause issue with design as it gets wider than
	    // the original field.
	    menuNode.style.width = menuWidth + newLeft * 2 + 'px';
	  }
	};
	
	exports.default = selectConfig;

/***/ },
/* 434 */
/***/ function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = isComponentOfType;
	/**
	 * Returns true if the provided element is a component of the provided type.
	 *
	 * @param classType {ReactElement class} - the class of a React Element
	 * @param reactElement {ReactElement} - any React Element (not a real DOM node)
	 *
	 * @example
	 * // Checks if the component is an Autocomplete
	 * isComponentType(Autocomplete, this.props.children[0]);
	 */
	function isComponentOfType(classType, reactElement) {
	  return reactElement && reactElement.type === classType;
	}

/***/ },
/* 435 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _helpers = __webpack_require__(417);
	
	var _separator = __webpack_require__(436);
	
	var _separator2 = _interopRequireDefault(_separator);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var separatorPropTypes = {
	  children: _react.PropTypes.oneOfType([_react.PropTypes.arrayOf(_react.PropTypes.node), _react.PropTypes.node]),
	  style: _react.PropTypes.object
	};
	
	/**
	 * Returns an object with properties that are relevant for the wrapping div.
	 */
	function sanitizeChildProps(properties) {
	  return (0, _helpers.omit)(properties, Object.keys(separatorPropTypes));
	}
	
	/**
	 * Separator component.
	 *
	 * This component should be used together with Belle's Select.
	 */
	
	var Separator = function (_Component) {
	  _inherits(Separator, _Component);
	
	  function Separator(properties) {
	    _classCallCheck(this, Separator);
	
	    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Separator).call(this, properties));
	
	    _this.state = {
	      childProps: sanitizeChildProps(properties)
	    };
	    return _this;
	  }
	
	  _createClass(Separator, [{
	    key: 'componentWillReceiveProps',
	
	
	    /**
	     * Update the childProperties based on the updated properties passed to the
	     * Separator.
	     */
	    value: function componentWillReceiveProps(properties) {
	      this.setState({ childProps: sanitizeChildProps(properties) });
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var computedStyle = _extends({}, _separator2.default.style, this.props.style);
	
	      return _react2.default.createElement(
	        'div',
	        _extends({ style: computedStyle }, this.state.childProps),
	        this.props.children
	      );
	    }
	  }]);
	
	  return Separator;
	}(_react.Component);
	
	Separator.displayName = 'Separator';
	Separator.propTypes = separatorPropTypes;
	exports.default = Separator;

/***/ },
/* 436 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var separatorStyle = {
	  style: {
	    boxSizing: 'border-box',
	    color: '#666',
	    fontWeight: 'bold',
	    padding: 10
	  }
	};
	
	exports.default = separatorStyle;

/***/ },
/* 437 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	/**
	 * Belle internal component to wrap an Option in a Select.
	 *
	 * This component exists to avoid binding functions in JSX.
	 */
	
	var SelectItem = function (_Component) {
	  _inherits(SelectItem, _Component);
	
	  function SelectItem() {
	    var _Object$getPrototypeO;
	
	    var _temp, _this, _ret;
	
	    _classCallCheck(this, SelectItem);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_Object$getPrototypeO = Object.getPrototypeOf(SelectItem)).call.apply(_Object$getPrototypeO, [this].concat(args))), _this), _this._onClick = function () {
	      _this.props.onItemClick(_this.props.index);
	    }, _this._onTouchStart = function (event) {
	      _this.props.onItemTouchStart(event, _this.props.index);
	    }, _this._onTouchMove = function () {
	      _this.props.onItemTouchMove();
	    }, _this._onTouchEnd = function (event) {
	      _this.props.onItemTouchEnd(event, _this.props.index);
	    }, _this._onTouchCancel = function () {
	      _this.props.onItemTouchCancel();
	    }, _this._onMouseEnter = function () {
	      _this.props.onItemMouseEnter(_this.props.index);
	    }, _temp), _possibleConstructorReturn(_this, _ret);
	  }
	
	  _createClass(SelectItem, [{
	    key: 'render',
	    value: function render() {
	      return _react2.default.createElement(
	        'li',
	        {
	          onMouseDown: this._onClick,
	          onTouchStart: this._onTouchStart,
	          onTouchMove: this._onTouchMove,
	          onTouchEnd: this._onTouchEnd,
	          onTouchCancel: this._onTouchCancel,
	          onMouseEnter: this._onMouseEnter,
	          role: 'option',
	          'aria-selected': this.props.isHovered
	        },
	        this.props.children
	      );
	    }
	  }]);
	
	  return SelectItem;
	}(_react.Component);
	
	SelectItem.displayName = 'SelectItem';
	SelectItem.propTypes = {
	  children: _react.PropTypes.node.isRequired,
	  isHovered: _react.PropTypes.bool.isRequired,
	  index: _react.PropTypes.number.isRequired,
	  onItemClick: _react.PropTypes.func.isRequired,
	  onItemTouchStart: _react.PropTypes.func.isRequired,
	  onItemTouchMove: _react.PropTypes.func.isRequired,
	  onItemTouchEnd: _react.PropTypes.func.isRequired,
	  onItemTouchCancel: _react.PropTypes.func.isRequired,
	  onItemMouseEnter: _react.PropTypes.func.isRequired
	};
	exports.default = SelectItem;

/***/ },
/* 438 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactDom = __webpack_require__(32);
	
	var _reactDom2 = _interopRequireDefault(_reactDom);
	
	var _calculateTextareaHeight = __webpack_require__(439);
	
	var _calculateTextareaHeight2 = _interopRequireDefault(_calculateTextareaHeight);
	
	var _injectStyle = __webpack_require__(420);
	
	var _unionClassNames = __webpack_require__(419);
	
	var _unionClassNames2 = _interopRequireDefault(_unionClassNames);
	
	var _helpers = __webpack_require__(417);
	
	var _textInput = __webpack_require__(440);
	
	var _textInput2 = _interopRequireDefault(_textInput);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var newLineRegex = /[\r\n]/g;
	
	var textInputPropTypes = {
	  className: _react.PropTypes.string,
	  minHeight: _react.PropTypes.number,
	  maxHeight: _react.PropTypes.number,
	  minRows: _react.PropTypes.number,
	  maxRows: _react.PropTypes.number,
	  style: _react.PropTypes.object,
	  hoverStyle: _react.PropTypes.object,
	  focusStyle: _react.PropTypes.object,
	  allowNewLine: _react.PropTypes.bool,
	  disabled: _react.PropTypes.bool,
	  disabledStyle: _react.PropTypes.object,
	  disabledHoverStyle: _react.PropTypes.object,
	  onUpdate: _react.PropTypes.func,
	  onKeyDown: _react.PropTypes.func,
	  value: _react.PropTypes.string,
	  defaultValue: _react.PropTypes.string,
	  valueLink: _react.PropTypes.shape({
	    value: _react.PropTypes.string.isRequired,
	    requestChange: _react.PropTypes.func.isRequired
	  })
	};
	
	/**
	 * Returns an object with properties that are relevant for the TextInput's textarea.
	 *
	 * As the height of the textarea needs to be calculated valueLink can not be
	 * passed down to the textarea, but made available through this component.
	 */
	function sanitizeChildProps(properties) {
	  var childProps = (0, _helpers.omit)(properties, Object.keys(textInputPropTypes));
	  if (_typeof(properties.valueLink) === 'object') {
	    childProps.value = properties.valueLink.value;
	  }
	
	  return childProps;
	}
	
	/**
	 * Update hover & focus style for the speficied styleId.
	 *
	 * @param styleId {string} - a unique id that exists as class attribute in the DOM
	 * @param properties {object} - the components properties optionally containing hoverStyle & focusStyle
	 */
	function updatePseudoClassStyle(styleId, properties) {
	  var hoverStyle = _extends({}, _textInput2.default.hoverStyle, properties.hoverStyle);
	  var focusStyle = _extends({}, _textInput2.default.focusStyle, properties.focusStyle);
	  var disabledHoverStyle = _extends({}, _textInput2.default.disabledHoverStyle, properties.disabledHoverStyle);
	
	  var styles = [{
	    id: styleId,
	    style: hoverStyle,
	    pseudoClass: 'hover'
	  }, {
	    id: styleId,
	    style: focusStyle,
	    pseudoClass: 'focus'
	  }, {
	    id: styleId,
	    style: disabledHoverStyle,
	    pseudoClass: 'hover',
	    disabled: true
	  }];
	  (0, _injectStyle.injectStyles)(styles);
	}
	
	/**
	 * TextInput component with great UX like autogrowing & handling states
	 *
	 * Note on styling: Right now this component doen't allow to change style after
	 * initialisation.
	 *
	 * Note on resizing:
	 * If you fill a textarea only with spaces and the cursor reaches the right end
	 * it won't break the line. This leads to unexpected behaviour for the automatic
	 * resizing.
	 *
	 * This component was highly inspired by the great work from these guys
	 * - Andrey Popp: https://github.com/andreypopp/react-textarea-autosize
	 * - Eugene: https://gist.github.com/eugene1g/5dbaa7d35d0c7d5c2c56
	 */
	
	var TextInput = function (_Component) {
	  _inherits(TextInput, _Component);
	
	  function TextInput(properties) {
	    _classCallCheck(this, TextInput);
	
	    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(TextInput).call(this, properties));
	
	    _this._onKeyDown = function (event) {
	      if (!_this.props.allowNewLine && event.key === 'Enter') {
	        event.preventDefault();
	      }
	
	      if (_this.props.onKeyDown) {
	        _this.props.onKeyDown(event);
	      }
	    };
	
	    _this._onChange = function (event) {
	      var value = event.target.value;
	
	      if (!_this.props.allowNewLine && value.match(newLineRegex) !== null) {
	        value = value.replace(newLineRegex, ' ');
	      }
	
	      if ((0, _helpers.has)(_this.props, 'valueLink')) {
	        _this.props.valueLink.requestChange(value);
	      } else if ((0, _helpers.has)(_this.props, 'defaultValue')) {
	        _this.setState({
	          inputValue: value
	        });
	      }
	
	      if (_this.props.onUpdate) {
	        _this.props.onUpdate({ value: value });
	      }
	
	      _this._triggerResize(value);
	    };
	
	    var inputValue = void 0;
	
	    if ((0, _helpers.has)(properties, 'valueLink')) {
	      inputValue = properties.valueLink.value;
	    } else if ((0, _helpers.has)(properties, 'value')) {
	      inputValue = properties.value;
	    } else if ((0, _helpers.has)(properties, 'defaultValue')) {
	      inputValue = properties.defaultValue;
	    }
	
	    _this.state = {
	      height: 'auto',
	      inputValue: inputValue
	    };
	    _this.textareaProps = sanitizeChildProps(properties);
	    return _this;
	  }
	
	  _createClass(TextInput, [{
	    key: 'componentWillMount',
	
	
	    /**
	     * Generates the style-id & inject the focus & hover style.
	     */
	    value: function componentWillMount() {
	      var id = (0, _helpers.uniqueId)();
	      this._styleId = 'style-id' + id;
	      updatePseudoClassStyle(this._styleId, this.props);
	    }
	
	    /**
	     * Right after the component go injected into the DOM it should be resized.
	     */
	
	  }, {
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      this._triggerResize(this.state.inputValue);
	    }
	
	    /**
	     * Update the properties passed to the textarea and resize as with the new
	     * properties the height might have changed.
	     */
	
	  }, {
	    key: 'componentWillReceiveProps',
	    value: function componentWillReceiveProps(properties) {
	      var _this2 = this;
	
	      // Makes sure we have inputValue available when triggering a resize.
	      var newState = {
	        inputValue: this.state.inputValue
	      };
	      if ((0, _helpers.has)(properties, 'valueLink')) {
	        newState.inputValue = properties.valueLink.value;
	      } else if ((0, _helpers.has)(properties, 'value')) {
	        newState.inputValue = properties.value;
	      }
	
	      this.textareaProps = sanitizeChildProps(properties);
	      (0, _injectStyle.removeStyle)(this._styleId);
	      updatePseudoClassStyle(this._styleId, properties);
	      this.setState(newState, function () {
	        return _this2._triggerResize(newState.inputValue);
	      });
	    }
	
	    /**
	     * Remove a component's associated styles whenever it gets removed from the DOM.
	     */
	
	  }, {
	    key: 'componentWillUnmount',
	    value: function componentWillUnmount() {
	      (0, _injectStyle.removeStyle)(this._styleId);
	    }
	
	    /**
	     * Prevent any newline (except allowNewLine is active) and pass the event to
	     * the onKeyDown property.
	     *
	     * This is an optimization to avoid adding a newline char & removing it right
	     * away in the onUpdate callback.
	     */
	
	
	    /**
	     * Update the height and calls the provided change callback for onUpdate
	     * or valueLink.
	     *
	     * In addition newline characters are replaced by spaces in the textarea value
	     * in case allowNewLine is set to false and newLine characters could be found.
	     */
	
	  }, {
	    key: '_triggerResize',
	
	
	    /**
	     * Calculate the height and store the new height in the state to trigger a render.
	     */
	    value: function _triggerResize(textareaValue) {
	      var height = (0, _calculateTextareaHeight2.default)(_reactDom2.default.findDOMNode(this), textareaValue, this.props.minRows, this.props.maxRows, this.props.minHeight, this.props.maxHeight);
	      this.setState({ height: height });
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var textareaStyle = _extends({}, _textInput2.default.style, this.props.style);
	
	      if (this.props.disabled) {
	        textareaStyle = _extends({}, textareaStyle, _textInput2.default.disabledStyle, this.props.disabledStyle);
	      }
	
	      textareaStyle.height = this.state.height;
	      return _react2.default.createElement('textarea', _extends({
	        style: textareaStyle,
	        value: this.state.inputValue,
	        className: (0, _unionClassNames2.default)(this.props.className, this._styleId),
	        onChange: this._onChange,
	        onKeyDown: this._onKeyDown,
	        disabled: this.props.disabled
	      }, this.textareaProps));
	    }
	  }]);
	
	  return TextInput;
	}(_react.Component);
	
	TextInput.displayName = 'TextInput';
	TextInput.propTypes = textInputPropTypes;
	TextInput.defaultProps = {
	  allowNewLine: false,
	  disabled: false
	};
	exports.default = TextInput;

/***/ },
/* 439 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = calculateTextareaHeight;
	
	var _exenv = __webpack_require__(421);
	
	// our height calculation logic is not compatible with jsdom
	var isNodeTest = typeof process !== 'undefined' && process.env.NODE_ENV === 'test';
	var canUseDOM = _exenv.canUseDOM && !isNodeTest;
	
	var hiddenTextarea = void 0;
	var computedStyleCache = {};
	
	// !important is used here to avoid side-effects from global set CSS.
	var hiddenTextareaStyle = '\n  min-height:none !important;\n  max-height:none !important;\n  height:0 !important;\n  visibility:hidden !important;\n  overflow:hidden !important;\n  position:absolute !important;\n  z-index:-1000 !important;\n  top:0 !important;\n  right:0 !important\n';
	
	var stylesToCopy = ['letter-spacing', 'line-height', 'padding-top', 'padding-bottom', 'font-family', 'font-weight', 'font-size', 'text-rendering', 'text-transform', 'width', 'padding-left', 'padding-right', 'border-width', 'box-sizing'];
	
	/**
	 * Returns an object containing the computed style and the combined vertical
	 * padding size, combined vertical border size and box-sizing value.
	 *
	 * This style is returned as string to be applied as attribute of an element.
	 */
	function calculateStyling(node) {
	  var reactId = node.getAttribute('data-reactid');
	
	  // calculate the computed style only once it's not in the cache
	  if (!computedStyleCache[reactId]) {
	    (function () {
	      // In order to work with legacy browsers the second paramter for pseudoClass
	      // has to be provided http://caniuse.com/#feat=getcomputedstyle
	      var computedStyle = window.getComputedStyle(node, null);
	
	      var boxSizing = computedStyle.getPropertyValue('box-sizing') || computedStyle.getPropertyValue('-moz-box-sizing') || computedStyle.getPropertyValue('-webkit-box-sizing');
	
	      var verticalPaddingSize = 0;
	      verticalPaddingSize = parseFloat(computedStyle.getPropertyValue('padding-bottom')) + parseFloat(computedStyle.getPropertyValue('padding-top'));
	
	      var verticalBorderSize = 0;
	      verticalBorderSize = parseFloat(computedStyle.getPropertyValue('border-bottom-width')) + parseFloat(computedStyle.getPropertyValue('border-top-width'));
	
	      var sizingStyle = stylesToCopy.map(function (styleName) {
	        return styleName + ':' + computedStyle.getPropertyValue(styleName) + '  !important';
	      }).join(';');
	
	      // store the style, vertical padding size, vertical border size and
	      // boxSizing inside the cache
	      computedStyleCache[reactId] = {
	        style: sizingStyle,
	        verticalPaddingSize: verticalPaddingSize,
	        verticalBorderSize: verticalBorderSize,
	        boxSizing: boxSizing
	      };
	    })();
	  }
	
	  return computedStyleCache[reactId];
	}
	
	/**
	 * Returns an object containing height of the textare as if all the content
	 * would be visible. The minHeight & maxHeight are in the object as well and are
	 * based on minRows & maxRows.
	 *
	 * In order to improve the performance a hidden textarea is added to the DOM
	 * and used for further caluculations. In addition the styling of each textarea
	 * is cached to improve performance.
	 */
	function calculateTextareaHeight(textareaElement) {
	  var textareaValue = arguments.length <= 1 || arguments[1] === undefined ? '-' : arguments[1];
	  var minRows = arguments.length <= 2 || arguments[2] === undefined ? null : arguments[2];
	  var maxRows = arguments.length <= 3 || arguments[3] === undefined ? null : arguments[3];
	  var minHeight = arguments.length <= 4 || arguments[4] === undefined ? null : arguments[4];
	  var maxHeight = arguments.length <= 5 || arguments[5] === undefined ? null : arguments[5];
	
	  // Regarding textareaValue: IE will return a height of 0 in case the textare is empty.
	  // To prevent reducing the size to 0 we simply use a dummy text.
	  if (!canUseDOM) {
	    return 0;
	  }
	
	  if (!hiddenTextarea) {
	    hiddenTextarea = document.createElement('textarea');
	    document.body.appendChild(hiddenTextarea);
	    hiddenTextarea.setAttribute('class', 'belle-input-helper');
	  }
	
	  var _calculateStyling = calculateStyling(textareaElement);
	
	  var style = _calculateStyling.style;
	  var verticalPaddingSize = _calculateStyling.verticalPaddingSize;
	  var verticalBorderSize = _calculateStyling.verticalBorderSize;
	  var boxSizing = _calculateStyling.boxSizing;
	
	
	  hiddenTextarea.setAttribute('style', style + ';' + hiddenTextareaStyle);
	  hiddenTextarea.value = textareaValue;
	
	  var calculatedMinHeight = void 0;
	  var calculatedMaxHeight = void 0;
	  var height = hiddenTextarea.scrollHeight;
	
	  // for a textarea with border-box, the border width has to be added while
	  // for content-box it's necessary to subtract the padding
	  if (boxSizing === 'border-box') {
	    // border-box: content + padding + border
	    height = height + verticalBorderSize;
	  } else if (boxSizing === 'content-box') {
	    // content-box: content
	    height = height - verticalPaddingSize;
	  }
	
	  if (minRows !== null && minHeight === null || maxRows !== null && maxHeight === null) {
	    // measure height of a textarea with a single row
	    hiddenTextarea.value = '-';
	    var singleRowHeight = hiddenTextarea.scrollHeight - verticalPaddingSize;
	
	    if (minRows !== null && minHeight === null) {
	      calculatedMinHeight = singleRowHeight * minRows;
	      if (boxSizing === 'border-box') {
	        calculatedMinHeight = calculatedMinHeight + verticalPaddingSize + verticalBorderSize;
	      }
	    }
	
	    if (maxRows !== null && maxHeight === null) {
	      calculatedMaxHeight = singleRowHeight * maxRows;
	      if (boxSizing === 'border-box') {
	        calculatedMaxHeight = calculatedMaxHeight + verticalPaddingSize + verticalBorderSize;
	      }
	    }
	  }
	
	  var finalMinHeight = minHeight || calculatedMinHeight;
	  if (finalMinHeight) {
	    height = Math.max(finalMinHeight, height);
	  }
	
	  var finalMaxHeight = maxHeight || calculatedMaxHeight;
	  if (finalMaxHeight) {
	    height = Math.min(finalMaxHeight, height);
	  }
	
	  return height;
	}
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 440 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var textInputStyle = {
	  style: {
	    /* normalize.css v3.0.1 */
	    font: 'inherit',
	    margin: 0,
	
	    /* Reset the default borderRadius for Mobile Safari */
	    borderRadius: 0,
	
	    /* Belle TextInput style */
	    overflow: 'hidden',
	    resize: 'none',
	    width: '100%',
	    fontSize: 15,
	    padding: '7px 0 5px 0',
	    color: '#505050',
	    border: '0 solid #fff',
	    borderBottom: '1px solid #ccc',
	    background: 'none',
	    display: 'block',
	    boxSizing: 'border-box',
	    minHeight: '0px',
	
	    /* animations */
	    transition: 'border-bottom 0.2s',
	    transitionTimingFunction: 'ease-out'
	  },
	
	  hoverStyle: {
	    borderBottom: '1px solid #92D6EF'
	  },
	
	  focusStyle: {
	    outline: 0, // to avoid default focus behaviour
	    borderBottom: '1px solid #6EB8D4'
	  },
	
	  disabledStyle: {
	    borderBottom: '1px dotted #9F9F9F',
	    color: '#9F9F9F'
	  },
	
	  disabledHoverStyle: {
	    borderBottom: '1px dotted #92D6EF',
	    color: '#9F9F9F',
	    cursor: 'not-allowed'
	  }
	};
	
	exports.default = textInputStyle;

/***/ },
/* 441 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _exenv = __webpack_require__(421);
	
	var _helpers = __webpack_require__(417);
	
	var _rating = __webpack_require__(442);
	
	var _rating2 = _interopRequireDefault(_rating);
	
	var _injectStyle = __webpack_require__(420);
	
	var _unionClassNames = __webpack_require__(419);
	
	var _unionClassNames2 = _interopRequireDefault(_unionClassNames);
	
	var _rating3 = __webpack_require__(443);
	
	var _rating4 = _interopRequireDefault(_rating3);
	
	var _animationFrameManagement = __webpack_require__(444);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var ratingPropTypes = {
	  defaultValue: _react.PropTypes.oneOf([1, 2, 3, 4, 5]),
	  value: _react.PropTypes.oneOf([1, 2, 3, 4, 5]),
	  valueLink: _react.PropTypes.shape({
	    value: _react.PropTypes.oneOf([1, 2, 3, 4, 5]),
	    requestChange: _react.PropTypes.func.isRequired
	  }),
	  disabled: _react.PropTypes.bool,
	  tabIndex: _react.PropTypes.number,
	  character: _react.PropTypes.string,
	  characterProps: _react.PropTypes.object,
	  preventFocusStyleForTouchAndClick: _react.PropTypes.bool,
	  'aria-label': _react.PropTypes.string,
	  style: _react.PropTypes.object,
	  className: _react.PropTypes.string,
	  focusStyle: _react.PropTypes.object,
	  disabledStyle: _react.PropTypes.object,
	  hoverStyle: _react.PropTypes.object,
	  disabledHoverStyle: _react.PropTypes.object,
	  characterStyle: _react.PropTypes.object,
	  activeCharacterStyle: _react.PropTypes.object,
	  hoverCharacterStyle: _react.PropTypes.object,
	  onUpdate: _react.PropTypes.func,
	  onMouseDown: _react.PropTypes.func,
	  onMouseUp: _react.PropTypes.func,
	  onMouseEnter: _react.PropTypes.func,
	  onMouseMove: _react.PropTypes.func,
	  onMouseLeave: _react.PropTypes.func,
	  onTouchStart: _react.PropTypes.func,
	  onTouchMove: _react.PropTypes.func,
	  onTouchEnd: _react.PropTypes.func,
	  onTouchCancel: _react.PropTypes.func,
	  onFocus: _react.PropTypes.func,
	  onBlur: _react.PropTypes.func,
	  onKeyDown: _react.PropTypes.func
	};
	
	/**
	 * sanitize properties for the wrapping div.
	 */
	function sanitizeWrapperProps(properties) {
	  return (0, _helpers.omit)(properties, Object.keys(ratingPropTypes));
	}
	
	/**
	 * sanitize properties for the character span.
	 */
	function sanitizeCharacterProps(properties) {
	  return (0, _helpers.omit)(properties, ['data-belle-value', 'style']);
	}
	
	/**
	 * Injects pseudo classes for styles into the DOM.
	 */
	function updatePseudoClassStyle(ratingWrapperStyleId, properties, preventFocusStyleForTouchAndClick) {
	  var ratingFocusStyle = void 0;
	  if (preventFocusStyleForTouchAndClick) {
	    ratingFocusStyle = { outline: 0 };
	  } else {
	    ratingFocusStyle = _extends({}, _rating2.default.focusStyle, properties.focusStyle);
	  }
	
	  var styles = [{
	    id: ratingWrapperStyleId,
	    style: ratingFocusStyle,
	    pseudoClass: 'focus'
	  }];
	  (0, _injectStyle.injectStyles)(styles);
	}
	
	/**
	 * Rating component
	 *
	 * The component leverages 5 characters (by default stars) to allow the user to
	 * to rate.
	 */
	
	var Rating = function (_Component) {
	  _inherits(Rating, _Component);
	
	  function Rating(properties) {
	    _classCallCheck(this, Rating);
	
	    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Rating).call(this, properties));
	
	    _initialiseProps.call(_this);
	
	    var value = void 0;
	
	    if ((0, _helpers.has)(properties, 'valueLink')) {
	      value = properties.valueLink.value;
	    } else if ((0, _helpers.has)(properties, 'value')) {
	      value = properties.value;
	    } else if ((0, _helpers.has)(properties, 'defaultValue')) {
	      value = properties.defaultValue;
	    }
	
	    _this.state = {
	      value: value,
	      focusedValue: undefined,
	      generalProps: sanitizeWrapperProps(properties),
	      characterProps: sanitizeCharacterProps(properties.characterProps),
	      isFocus: false,
	      isActive: false
	    };
	
	    _this.preventFocusStyleForTouchAndClick = (0, _helpers.has)(properties, 'preventFocusStyleForTouchAndClick') ? properties.preventFocusStyleForTouchAndClick : _rating4.default.preventFocusStyleForTouchAndClick;
	    return _this;
	  }
	
	  /**
	   * Setting default prop values.
	   */
	
	
	  _createClass(Rating, [{
	    key: 'componentWillMount',
	
	
	    /**
	     * Apply pseudo class styling to the wrapper div.
	     */
	    value: function componentWillMount() {
	      var id = (0, _helpers.uniqueId)();
	      this.ratingWrapperStyleId = 'rating-wrapper-style-id' + id;
	      updatePseudoClassStyle(this.ratingWrapperStyleId, this.props, this.preventFocusStyleForTouchAndClick);
	
	      if (_exenv.canUseDOM) {
	        this.mouseUpOnDocumentCallback = this._onMouseUpOnDocument;
	        document.addEventListener('mouseup', this.mouseUpOnDocumentCallback);
	      }
	    }
	  }, {
	    key: 'componentWillReceiveProps',
	    value: function componentWillReceiveProps(properties) {
	      var newState = {
	        wrapperProps: sanitizeWrapperProps(properties),
	        characterProps: sanitizeCharacterProps(properties.characterProps)
	      };
	
	      if (properties.valueLink) {
	        newState.value = properties.valueLink.value;
	      } else if (properties.value) {
	        newState.value = properties.value;
	      }
	
	      this.setState(newState);
	
	      this.preventFocusStyleForTouchAndClick = (0, _helpers.has)(properties, 'preventFocusStyleForTouchAndClick') ? properties.preventFocusStyleForTouchAndClick : _rating4.default.preventFocusStyleForTouchAndClick;
	
	      (0, _injectStyle.removeStyle)(this.ratingWrapperStyleId);
	      updatePseudoClassStyle(this.ratingWrapperStyleId, properties, this.preventFocusStyleForTouchAndClick);
	    }
	
	    /**
	     * Removes pseudo classes from the DOM once component gets removed.
	     */
	
	  }, {
	    key: 'componentWillUnmount',
	    value: function componentWillUnmount() {
	      (0, _injectStyle.removeStyle)(this.ratingWrapperStyleId);
	      if (_exenv.canUseDOM) {
	        document.removeEventListener('mouseup', this.mouseUpOnDocumentCallback);
	      }
	    }
	
	    /**
	     * As soon as the mouse enters the component the focusedValue is updated based
	     * on the value of the targeted span.
	     */
	
	
	    /**
	     * As the mouse moved over the component and enters a new star the focusedValue
	     * is updated based on the value of the targeted span.
	     */
	
	
	    /**
	     * Resets the component as the mouse leaves the hover area.
	     */
	
	
	    /**
	     * Sets isActive state to true.
	     */
	
	
	    /**
	     * Sets isActive state to false.
	     */
	
	
	    /**
	     * Change focusValue and sets isActive state to true.
	     */
	
	
	    /**
	     * set the focusedValue depending on mouse position
	     */
	
	
	    /**
	     * update the component when touch ends
	     */
	
	
	    /**
	     * reset the component in case of touch cancel
	     */
	
	
	    /**
	     * reset the component on blur
	     */
	
	
	    /**
	     * enable focus styling of component when tab is used to focus component
	     */
	
	
	    /**
	     * Manages the keyboard events.
	     *
	     * In case the Rating Component is in focus Space, ArrowUp will result in increasing the value and arrow down will result in decreasing the value.
	     * Enter/ space will result in updating the value of the component.
	     *
	     * Pressing Escape will reset the value to last value.
	     *
	     */
	
	
	    /**
	     * decrease the value by 1 when arrow down key is pressed
	     */
	
	
	    /**
	     * increase value by 1 when arrow up key is pressed
	     */
	
	
	    /**
	     * set component value to current focus value
	     */
	
	
	    /**
	     * reset component when escape key is pressed
	     * esc key should just reset the component displayed rating without removing hover or focus styles
	     */
	
	  }, {
	    key: '_getCurrentValue',
	
	
	    /**
	     * Returns current value of rating to be displayed on the component
	     */
	    value: function _getCurrentValue() {
	      var value = void 0;
	      if (this.state.focusedValue !== undefined) {
	        value = this.state.focusedValue;
	      } else {
	        value = this.state.value ? this.state.value : 0;
	      }
	
	      return value;
	    }
	
	    /**
	     * The function will be passed to requestAnimationFrame for touchMove
	     */
	
	  }, {
	    key: '_triggerComponentUpdateOnTouchMove',
	    value: function _triggerComponentUpdateOnTouchMove(touches) {
	      var touchedElement = document.elementFromPoint(touches.clientX, touches.clientY);
	      var value = Number(touchedElement.getAttribute('data-belle-value'));
	      if (value && this.state.focusedValue !== value) {
	        this.setState({
	          focusedValue: value
	        });
	      }
	    }
	
	    /**
	     * update component when component is clicked, touch ends, enter or space key are hit
	     * different update logic will apply depending on whether component has property defaultValue, value or valueLink specified
	     */
	
	  }, {
	    key: '_triggerComponentUpdate',
	    value: function _triggerComponentUpdate(value) {
	      if ((0, _helpers.has)(this.props, 'valueLink')) {
	        this.props.valueLink.requestChange(value);
	        this.setState({
	          focusedValue: undefined,
	          isActive: false
	        });
	      } else if ((0, _helpers.has)(this.props, 'value')) {
	        this.setState({
	          focusedValue: undefined,
	          isActive: false
	        });
	      } else {
	        this.setState({
	          focusedValue: undefined,
	          isActive: false,
	          value: value
	        });
	      }
	
	      if (this.props.onUpdate) {
	        this.props.onUpdate({ value: value });
	      }
	    }
	
	    /**
	     * Returns the HTML function to be rendered by this component.
	     */
	
	  }, {
	    key: 'render',
	    value: function render() {
	      var _this2 = this;
	
	      var currentValue = this._getCurrentValue();
	      var tabIndex = !this.props.disabled ? this.props.tabIndex : -1;
	
	      var characterStyle = _extends({}, _rating2.default.characterStyle, this.props.characterStyle);
	
	      if (this.state.isActive) {
	        characterStyle = _extends({}, characterStyle, _rating2.default.activeCharacterStyle, this.props.activeCharacterStyle);
	      } else if (this.state.isHover) {
	        characterStyle = _extends({}, characterStyle, _rating2.default.hoverCharacterStyle, this.props.hoverCharacterStyle);
	      }
	
	      var wrapperStyle = _extends({}, _rating2.default.style, this.props.style);
	      if (this.props.disabled) {
	        wrapperStyle = _extends({}, wrapperStyle, _rating2.default.disabledStyle, this.props.disabledStyle);
	        if (this.state.isHover) {
	          wrapperStyle = _extends({}, wrapperStyle, _rating2.default.disabledHoverStyle, this.props.disabledHoverStyle);
	        }
	      } else {
	        if (this.state.isFocus && this.preventFocusStyleForTouchAndClick) {
	          wrapperStyle = _extends({}, wrapperStyle, _rating2.default.focusStyle, this.props.focusStyle);
	        }
	
	        if (this.state.isHover) {
	          wrapperStyle = _extends({}, wrapperStyle, _rating2.default.hoverStyle, this.props.hoverStyle);
	        }
	      }
	
	      return _react2.default.createElement(
	        'div',
	        _extends({
	          ref: 'wrapper',
	          style: wrapperStyle,
	          className: (0, _unionClassNames2.default)(this.props.className, this.ratingWrapperStyleId),
	          onKeyDown: this._onKeyDown,
	          onMouseEnter: this._onMouseEnter,
	          onMouseMove: this._onMouseMove,
	          onMouseLeave: this._onMouseLeave,
	          onMouseUp: this._onMouseUp,
	          onMouseDown: this._onMouseDown,
	          onTouchStart: this._onTouchStart,
	          onTouchMove: this._onTouchMove,
	          onTouchEnd: this._onTouchEnd,
	          onTouchCancel: this._onTouchCancel,
	          onContextMenu: this._onContextMenu,
	          onBlur: this._onBlur,
	          onFocus: this._onFocus,
	          tabIndex: tabIndex,
	          'aria-label': this.props['aria-label'],
	          'aria-valuemax': 5,
	          'aria-valuemin': 1,
	          'aria-valuenow': this.state.value,
	          'aria-disabled': this.props.disabled
	        }, this.state.wrapperProps),
	        _react2.default.Children.map([1, 2, 3, 4, 5], function (value) {
	          var ratingStyle = currentValue >= value ? characterStyle : {};
	          return _react2.default.createElement(
	            'span',
	            _extends({
	              'data-belle-value': value,
	              style: ratingStyle
	            }, _this2.state.characterProps),
	            _this2.props.character
	          );
	        })
	      );
	    }
	  }]);
	
	  return Rating;
	}(_react.Component);
	
	Rating.displayName = 'Rating';
	Rating.propTypes = ratingPropTypes;
	Rating.defaultProps = {
	  disabled: false,
	  tabIndex: 0,
	  character: '★',
	  'aria-label': 'rating'
	};
	
	var _initialiseProps = function _initialiseProps() {
	  var _this3 = this;
	
	  this._onMouseEnter = function (event) {
	    // In case the user pressed the mouse and then hovers over the rating and
	    // releases the mousUp should no be trigger. Only when the mouseDown starts
	    // inside.
	    // Activating inside, going out & coming back should still be possible.
	    if (!_this3.state.isActive) {
	      _this3.preventNextMouseUpTriggerUpdate = true;
	    }
	
	    if (!_this3.props.disabled) {
	      var value = Number(event.target.getAttribute('data-belle-value'));
	      _this3.setState({
	        focusedValue: value,
	        isHover: true
	      });
	    } else {
	      _this3.setState({
	        isHover: true
	      });
	    }
	
	    if (_this3.props.onMouseEnter) {
	      _this3.props.onMouseEnter(event);
	    }
	  };
	
	  this._onMouseMove = function (event) {
	    if (!_this3.props.disabled) {
	      var value = Number(event.target.getAttribute('data-belle-value'));
	      if (_this3.state.focusedValue !== value) {
	        _this3.setState({
	          focusedValue: value
	        });
	      }
	    }
	
	    if (_this3.props.onMouseMove) {
	      _this3.props.onMouseMove(event);
	    }
	  };
	
	  this._onMouseLeave = function (event) {
	    if (!_this3.props.disabled) {
	      _this3.setState({
	        focusedValue: undefined,
	        isHover: false
	      });
	    } else {
	      _this3.setState({
	        isHover: false
	      });
	    }
	
	    if (_this3.props.onMouseLeave) {
	      _this3.props.onMouseLeave(event);
	    }
	  };
	
	  this._onMouseDown = function (event) {
	    if (!_this3.props.disabled && event.button === 0) {
	      _this3.setState({ isActive: true });
	      _this3.preventNextMouseUpTriggerUpdate = false;
	    }
	
	    if (_this3.props.onMouseDown) {
	      _this3.props.onMouseDown(event);
	    }
	  };
	
	  this._onMouseUp = function (event) {
	    if (!_this3.props.disabled && !_this3.preventNextMouseUpTriggerUpdate) {
	      var value = Number(event.target.getAttribute('data-belle-value'));
	      _this3._triggerComponentUpdate(value);
	    }
	
	    if (_this3.props.onMouseUp) {
	      _this3.props.onMouseUp(event);
	    }
	  };
	
	  this._onMouseUpOnDocument = function () {
	    _this3.setState({ isActive: false });
	  };
	
	  this._onContextMenu = function () {
	    _this3.setState({ isActive: false });
	  };
	
	  this._onTouchStart = function (event) {
	    event.preventDefault();
	
	    if (!_this3.props.disabled && event.touches.length === 1) {
	      var value = Number(event.target.getAttribute('data-belle-value'));
	      _this3.setState({
	        focusedValue: value,
	        isActive: true
	      });
	    }
	
	    if (_this3.props.onTouchStart) {
	      _this3.props.onTouchStart(event);
	    }
	  };
	
	  this._onTouchMove = function (event) {
	    if (!_this3.props.disabled && event.touches.length === 1) {
	      var touches = event.touches[0];
	
	      // the requestAnimationFrame function must be executed in the context of window
	      // see http://stackoverflow.com/a/9678166/837709
	      var animationFrame = _animationFrameManagement.requestAnimationFrame.call(window, _this3._triggerComponentUpdateOnTouchMove.bind(_this3, touches));
	
	      if (_this3.previousTouchMoveFrame) {
	        // the cancelAnimationFrame function must be executed in the context of window
	        // see http://stackoverflow.com/a/9678166/837709
	        _animationFrameManagement.cancelAnimationFrame.call(window, _this3.previousTouchMoveFrame);
	      }
	
	      _this3.previousTouchMoveFrame = animationFrame;
	    }
	
	    if (_this3.props.onTouchMove) {
	      _this3.props.onTouchMove(event);
	    }
	  };
	
	  this._onTouchEnd = function (event) {
	    if (!_this3.props.disabled) {
	      event.preventDefault();
	      _this3.setState({ isActive: false });
	      var value = _this3.state.focusedValue;
	      _this3._triggerComponentUpdate(value);
	    }
	
	    if (_this3.props.onTouchEnd) {
	      _this3.props.onTouchEnd(event);
	    }
	  };
	
	  this._onTouchCancel = function (event) {
	    if (!_this3.props.disabled) {
	      _this3.setState({
	        isActive: false,
	        focusedValue: undefined
	      });
	    }
	
	    if (_this3.props.onTouchCancel) {
	      _this3.props.onTouchCancel(event);
	    }
	  };
	
	  this._onBlur = function (event) {
	    if (!_this3.props.disabled) {
	      _this3.setState({
	        focusedValue: undefined,
	        isFocus: false,
	        isActive: false
	      });
	    }
	
	    if (_this3.props.onBlur) {
	      _this3.props.onBlur(event);
	    }
	  };
	
	  this._onFocus = function () {
	    if (!_this3.state.isActive && !_this3.props.disabled) {
	      _this3.setState({ isFocus: true });
	    }
	
	    if (_this3.props.onFocus) {
	      _this3.props.onFocus(event);
	    }
	  };
	
	  this._onKeyDown = function (event) {
	    if (!_this3.props.disabled) {
	      if (event.key === 'ArrowDown' || event.key === 'ArrowLeft') {
	        event.preventDefault();
	        _this3._onArrowDownKeyDown();
	      } else if (event.key === 'ArrowUp' || event.key === 'ArrowRight') {
	        event.preventDefault();
	        _this3._onArrowUpKeyDown();
	      } else if (event.key === 'Enter' || event.key === ' ') {
	        event.preventDefault();
	        _this3._onEnterSpaceKeyDown();
	      } else if (event.key === 'Escape') {
	        event.preventDefault();
	        _this3._onEscapeKeyDown();
	      }
	    }
	
	    if (_this3.props.onKeyDown) {
	      _this3.props.onKeyDown(event);
	    }
	  };
	
	  this._onArrowDownKeyDown = function () {
	    var newValue = _this3.state.focusedValue !== undefined ? _this3.state.focusedValue : _this3.state.value;
	    newValue = newValue > 0 ? newValue - 1 : 0;
	    _this3.setState({
	      focusedValue: newValue
	    });
	  };
	
	  this._onArrowUpKeyDown = function () {
	    var newValue = _this3.state.focusedValue !== undefined ? _this3.state.focusedValue : _this3.state.value;
	    if (!newValue) {
	      newValue = 1;
	    } else if (newValue < 5) {
	      newValue = newValue + 1;
	    } else {
	      newValue = 5;
	    }
	
	    _this3.setState({
	      focusedValue: newValue
	    });
	  };
	
	  this._onEnterSpaceKeyDown = function () {
	    var newValue = void 0;
	    if (_this3.state.focusedValue !== undefined) {
	      if (_this3.state.focusedValue === 0) {
	        newValue = undefined;
	      } else {
	        newValue = _this3.state.focusedValue;
	      }
	
	      _this3._triggerComponentUpdate(newValue);
	    }
	  };
	
	  this._onEscapeKeyDown = function () {
	    _this3.setState({
	      focusedValue: undefined
	    });
	  };
	};
	
	exports.default = Rating;

/***/ },
/* 442 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var ratingStyle = {
	  style: {
	    position: 'relative',
	    display: 'inline-block',
	    cursor: 'pointer',
	    fontSize: '2.6rem',
	    lineHeight: '2.6rem',
	    color: '#e3e3e3',
	    textShadow: '0px 1px 0px #D2D1D1',
	
	    /*
	     To avoid any kind of flickering the user won't get feedback
	     for selecting the rating stars
	     */
	    WebkitUserSelect: 'none',
	    MozUserSelect: 'none',
	    MsUserSelect: 'none',
	    userSelect: 'none',
	
	    /* This button can only be pressed */
	    MsTouchAction: 'none',
	    touchAction: 'none',
	
	    /*
	     Prevent flickering while tapping on WebKit
	     http://stackoverflow.com/a/3516243/837709
	     */
	    WebkitTapHighlightColor: 'transparent'
	  },
	
	  disabledStyle: {
	    opacity: 0.6,
	    cursor: 'not-allowed'
	  },
	
	  focusStyle: {
	    outline: 0,
	    WebkitAnimation: 'belle-rating-focus 2s',
	    borderRadius: 2
	  },
	
	  hoverStyle: {
	    opacity: 1
	  },
	
	  disabledHoverStyle: {
	    opacity: 0.6
	  },
	
	  characterStyle: {
	    color: '#FFCC00',
	    textShadow: '0px 1px 0px #DCB000',
	    top: 0,
	
	    /* animations */
	    transition: 'color 0.1s',
	    transitionTimingFunction: 'ease-out'
	  },
	
	  hoverCharacterStyle: {
	    color: '#FFDA46'
	  },
	
	  activeCharacterStyle: {
	    textShadow: '0px -1px 0px #D6AB00',
	    color: '#F3C200',
	    position: 'relative',
	    top: 1
	  }
	};
	
	exports.default = ratingStyle;

/***/ },
/* 443 */
/***/ function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var ratingConfig = {
	  preventFocusStyleForTouchAndClick: true
	};
	
	exports.default = ratingConfig;

/***/ },
/* 444 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.cancelAnimationFrame = exports.requestAnimationFrame = undefined;
	
	var _exenv = __webpack_require__(421);
	
	var requestAnimationFrame = exports.requestAnimationFrame = void 0; // Inspired by https://gist.github.com/paulirish/1579671
	
	var cancelAnimationFrame = exports.cancelAnimationFrame = void 0;
	
	var lastTime = 0;
	
	if (_exenv.canUseDOM) {
	  exports.requestAnimationFrame = requestAnimationFrame = window.requestAnimationFrame;
	  exports.cancelAnimationFrame = cancelAnimationFrame = window.cancelAnimationFrame;
	
	  var vendors = ['ms', 'moz', 'webkit', 'o'];
	  for (var index = 0; index < vendors.length && !requestAnimationFrame; ++index) {
	    exports.requestAnimationFrame = requestAnimationFrame = window[vendors[index] + 'RequestAnimationFrame'];
	    exports.cancelAnimationFrame = cancelAnimationFrame = window[vendors[index] + 'CancelAnimationFrame'] || window[vendors[index] + 'CancelRequestAnimationFrame'];
	  }
	}
	
	if (!requestAnimationFrame) {
	  exports.requestAnimationFrame = requestAnimationFrame = function requestAnimationFrame(callback) {
	    var currTime = new Date().getTime();
	    var timeToCall = Math.max(0, 16 - (currTime - lastTime));
	    var id = window.setTimeout(function () {
	      callback(currTime + timeToCall);
	    }, timeToCall);
	    lastTime = currTime + timeToCall;
	    return id;
	  };
	}
	
	if (!cancelAnimationFrame) {
	  exports.cancelAnimationFrame = cancelAnimationFrame = function cancelAnimationFrame(id) {
	    clearTimeout(id);
	  };
	}

/***/ },
/* 445 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _injectStyle = __webpack_require__(420);
	
	var _unionClassNames = __webpack_require__(419);
	
	var _unionClassNames2 = _interopRequireDefault(_unionClassNames);
	
	var _helpers = __webpack_require__(417);
	
	var _comboBox = __webpack_require__(446);
	
	var _comboBox2 = _interopRequireDefault(_comboBox);
	
	var _ComboBoxItem = __webpack_require__(447);
	
	var _ComboBoxItem2 = _interopRequireDefault(_ComboBoxItem);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var comboBoxPropTypes = {
	  children: _react.PropTypes.oneOfType([_react.PropTypes.array, _react.PropTypes.object]),
	  defaultValue: _react.PropTypes.string,
	  value: _react.PropTypes.string,
	  valueLink: _react.PropTypes.shape({
	    value: _react.PropTypes.string,
	    requestChange: _react.PropTypes.func.isRequired
	  }),
	  placeholder: _react.PropTypes.string,
	  disabled: _react.PropTypes.bool,
	  wrapperProps: _react.PropTypes.object,
	  menuProps: _react.PropTypes.object,
	  caretProps: _react.PropTypes.object,
	  onUpdate: _react.PropTypes.func,
	  onInputMatch: _react.PropTypes.func,
	  tabIndex: _react.PropTypes.number,
	  onKeyDown: _react.PropTypes.func,
	  onFocus: _react.PropTypes.func,
	  onBlur: _react.PropTypes.func,
	  className: _react.PropTypes.string,
	  caretClassName: _react.PropTypes.string,
	  style: _react.PropTypes.object,
	  wrapperStyle: _react.PropTypes.object,
	  hintStyle: _react.PropTypes.object,
	  menuStyle: _react.PropTypes.object,
	  focusStyle: _react.PropTypes.object,
	  disabledStyle: _react.PropTypes.object,
	  disabledHoverStyle: _react.PropTypes.object,
	  hoverStyle: _react.PropTypes.object,
	  caretToOpenStyle: _react.PropTypes.object,
	  caretToCloseStyle: _react.PropTypes.object,
	  disabledCaretToOpenStyle: _react.PropTypes.object,
	  maxOptions: _react.PropTypes.number,
	  displayCaret: _react.PropTypes.bool,
	  enableHint: _react.PropTypes.bool,
	  filterFunc: _react.PropTypes.func,
	  'aria-label': _react.PropTypes.string
	};
	
	/**
	 * Update hover style for the specified styleId.
	 *
	 * @param styleId {string} - a unique id that exists as class attribute in the DOM
	 * @param caretStyleId {string} - unique is assigned as class to caret span
	 * @param properties {object} - the components properties optionally containing hoverStyle
	 */
	function updatePseudoClassStyle(styleId, caretStyleId, properties) {
	  var hoverStyle = _extends({}, _comboBox2.default.hoverStyle, properties.hoverStyle);
	  var focusStyle = _extends({}, _comboBox2.default.focusStyle, properties.focusStyle);
	  var disabledHoverStyle = _extends({}, _comboBox2.default.disabledHoverStyle, properties.disabledHoverStyle);
	  var caretFocusStyle = _extends({}, _comboBox2.default.caretFocusStyle);
	
	  var styles = [{
	    id: styleId,
	    style: hoverStyle,
	    pseudoClass: 'hover'
	  }, {
	    id: styleId,
	    style: disabledHoverStyle,
	    pseudoClass: 'hover',
	    disabled: true
	  }, {
	    id: styleId,
	    style: focusStyle,
	    pseudoClass: 'focus'
	  }, {
	    id: caretStyleId,
	    style: caretFocusStyle,
	    pseudoClass: 'focus'
	  }];
	  (0, _injectStyle.injectStyles)(styles);
	}
	
	/**
	 * Returns an object with properties that are relevant for the wrapper div.
	 */
	function sanitizeWrapperProps(properties) {
	  return (0, _helpers.omit)(properties, ['style', 'aria-label', 'aria-disabled']);
	}
	
	/**
	 * Returns an object with properties that are relevant for the input box.
	 */
	function sanitizeInputProps(properties) {
	  return (0, _helpers.omit)(properties, Object.keys(comboBoxPropTypes));
	}
	
	/**
	 * Returns an object with properties that are relevant for the wrapping div of
	 * the selected option.
	 */
	function sanitizeCaretProps(properties) {
	  return (0, _helpers.omit)(properties, ['style', 'className', 'onClick', 'tabIndex']);
	}
	
	/**
	 * Returns an object with properties that are relevant for the combo-box menu.
	 */
	function sanitizeMenuProps(properties) {
	  return (0, _helpers.omit)(properties, ['style', 'ref', 'role']);
	}
	
	/**
	 * Default function used for filtering options.
	 */
	function filterFunc(inputValue, optionValue) {
	  if (inputValue && optionValue) {
	    return optionValue.toLowerCase().indexOf(inputValue.toLowerCase()) > -1;
	  }
	
	  return false;
	}
	
	/**
	 * ComboBox React Component.
	 */
	
	var ComboBox = function (_Component) {
	  _inherits(ComboBox, _Component);
	
	  function ComboBox(properties) {
	    _classCallCheck(this, ComboBox);
	
	    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(ComboBox).call(this, properties));
	
	    _this._onTouchStartAtOption = function (event, index) {
	      if (!_this.props.disabled && event.touches.length === 1) {
	        _this._touchStartedAt = index;
	        _this.setState({ focusedOptionIndex: index });
	      }
	    };
	
	    _this._onTouchEndAtOption = function (event, index) {
	      if (!_this.props.disabled && _this._touchStartedAt) {
	        if (_this._touchStartedAt === index) {
	          event.preventDefault();
	          _this._triggerChange(_this._getValueForIndex(index));
	        }
	
	        _this._touchStartedAt = undefined;
	      }
	    };
	
	    _this._onTouchCancelAtOption = function () {
	      if (!_this.props.disabled) {
	        _this._touchStartedAt = undefined;
	        _this.setState({ focusedOptionIndex: undefined });
	      }
	    };
	
	    _this._onBlur = function (event) {
	      if (!_this.props.disabled) {
	        _this.setState({
	          isOpen: false,
	          focusedOptionIndex: undefined
	        });
	      }
	
	      if (_this.props.onBlur) {
	        _this.props.onBlur(event);
	      }
	    };
	
	    _this._onFocus = function (event) {
	      if (!_this.props.disabled) {
	        _this.setState({
	          isOpen: true
	        });
	      }
	
	      if (_this.props.onFocus) {
	        _this.props.onFocus(event);
	      }
	    };
	
	    _this._onCaretClick = function () {
	      if (!_this.props.disabled) {
	        var isOpen = !_this.state.isOpen;
	        _this.setState({
	          isOpen: isOpen
	        });
	      }
	    };
	
	    _this._onMouseEnterAtOption = function (index) {
	      if (!_this.props.disabled) {
	        _this.setState({
	          focusedOptionIndex: index
	        });
	      }
	    };
	
	    _this._onMouseLeaveAtOption = function () {
	      if (!_this.props.disabled) {
	        _this.setState({
	          focusedOptionIndex: undefined
	        });
	      }
	    };
	
	    _this._onClickAtOption = function (index) {
	      if (!_this.props.disabled) {
	        _this._triggerChange(_this._getValueForIndex(index));
	      }
	    };
	
	    _this._onKeyDown = function (event) {
	      if (!_this.props.disabled) {
	        if (!_this.state.isOpen) {
	          if (event.key === 'ArrowDown' || event.key === 'ArrowUp') {
	            event.preventDefault();
	            _this.setState({
	              isOpen: true
	            });
	          }
	        } else {
	          if (event.key === 'ArrowDown') {
	            event.preventDefault();
	            _this._onArrowDownKeyDown();
	          } else if (event.key === 'ArrowUp') {
	            event.preventDefault();
	            _this._onArrowUpKeyDown();
	          } else if (event.key === 'ArrowRight') {
	            if (_this.props.enableHint) {
	              event.preventDefault();
	              var hint = _this._getHint();
	              if (hint) {
	                _this._userUpdateValue(hint);
	              }
	            }
	          } else if (event.key === 'Enter') {
	            event.preventDefault();
	            _this._onEnterOrTabKeyDown();
	          } else if (event.key === 'Tab') {
	            // event.preventDefault(); should not be called here else tab
	            // will not be able to take user to next component on the page
	            _this._onEnterOrTabKeyDown();
	          } else if (event.key === 'Escape') {
	            event.preventDefault();
	            _this.setState({
	              isOpen: false,
	              focusedOptionIndex: undefined
	            });
	          }
	        }
	      }
	
	      if (_this.props.onKeyDown) {
	        _this.props.onKeyDown(event);
	      }
	    };
	
	    _this._onArrowDownKeyDown = function () {
	      var index = 0;
	      if (_this.state.focusedOptionIndex !== undefined && _this.state.focusedOptionIndex + 1 < _this.filteredOptions.length) {
	        index = _this.state.focusedOptionIndex + 1;
	      }
	
	      _this.setState({
	        focusedOptionIndex: index
	      });
	    };
	
	    _this._onChange = function (event) {
	      var value = event.target.value;
	      _this._userUpdateValue(value);
	    };
	
	    var inputValue = void 0;
	
	    if ((0, _helpers.has)(properties, 'valueLink')) {
	      inputValue = properties.valueLink.value;
	    } else if ((0, _helpers.has)(properties, 'value')) {
	      inputValue = properties.value;
	    } else if ((0, _helpers.has)(properties, 'defaultValue')) {
	      inputValue = properties.defaultValue;
	    }
	
	    _this.state = {
	      isOpen: false,
	      focusedOptionIndex: undefined,
	      inputValue: inputValue || '',
	      wrapperProps: sanitizeWrapperProps(properties.wrapperProps),
	      inputProps: sanitizeInputProps(properties),
	      caretProps: sanitizeCaretProps(properties.caretProps),
	      menuProps: sanitizeMenuProps(properties.menuProps)
	    };
	
	    _this.filteredOptions = ComboBox.filterOptions(inputValue, properties);
	    return _this;
	  }
	
	  _createClass(ComboBox, [{
	    key: 'getChildContext',
	    value: function getChildContext() {
	      var value = void 0;
	      if (typeof this.state.focusedOptionIndex !== 'undefined') {
	        value = this.filteredOptions[this.state.focusedOptionIndex].props.value;
	      }
	
	      return {
	        isDisabled: this.props.disabled,
	        isHoveredValue: value
	      };
	    }
	
	    /**
	     * This method will calculate the hint that should be present in comboBox at some point in time. Rules:
	     * 1. If menu is not open hint is undefined
	     * 2. If menu is open but there are no filteredOptions hint is undefined
	     * 3. If if some option is highlighted hint is equal to its value
	     * 4. If no option is highlighted but some value is present in input box hint is equal to value of first filteredOptions
	     * If user has typed some text in input box and there is a hint(according to above calculations), the starting of hint
	     * is replaced by the text input by user ( this is to make sure that case of letters in hint is same as that in input box
	     * value and overlap is perfect.)
	     * todo: simplify logic in method below
	     */
	
	  }, {
	    key: '_getHint',
	    value: function _getHint() {
	      if (this.state.isOpen) {
	        var filteredOptions = this.filteredOptions;
	        if (filteredOptions && filteredOptions.length > 0) {
	          var hint = void 0;
	          var focusedOptionIndex = this.state.focusedOptionIndex;
	          var inputValue = this.state.inputValue;
	          if (focusedOptionIndex >= 0) {
	            hint = filteredOptions[focusedOptionIndex].props.value;
	          } else if (inputValue && inputValue.length > 0) {
	            hint = filteredOptions[0].props.value;
	          }
	
	          if (hint) {
	            if (inputValue && inputValue.length > 0) {
	              var position = hint.toLowerCase().indexOf(inputValue.toLowerCase());
	              if (position === 0) {
	                return inputValue + hint.substr(inputValue.length, hint.length - inputValue.length);
	              } else if (position === -1) {
	                return hint;
	              }
	            } else {
	              return hint;
	            }
	          }
	        }
	      }
	
	      return undefined;
	    }
	
	    /**
	     * Generates the style-id & inject the focus & hover style.
	     */
	
	  }, {
	    key: 'componentWillMount',
	    value: function componentWillMount() {
	      var id = (0, _helpers.uniqueId)();
	      this._styleId = 'style-id' + id;
	      this._caretStyleId = 'caretStyle-id' + id;
	      updatePseudoClassStyle(this._styleId, this._caretStyleId, this.props);
	    }
	  }, {
	    key: 'componentWillReceiveProps',
	    value: function componentWillReceiveProps(properties) {
	      var newState = {
	        wrapperProps: sanitizeWrapperProps(properties.wrapperProps),
	        inputProps: sanitizeInputProps(properties),
	        caretProps: sanitizeCaretProps(properties.caretProps),
	        menuProps: sanitizeMenuProps(properties.menuProps)
	      };
	
	      if ((0, _helpers.has)(properties, 'valueLink')) {
	        newState.inputValue = properties.valueLink.value || '';
	      } else if ((0, _helpers.has)(properties, 'value')) {
	        newState.inputValue = properties.value || '';
	      }
	
	      if (newState.inputValue) {
	        newState.filteredOptions = ComboBox.filterOptions(newState.inputValue, properties);
	      }
	
	      this.setState(newState);
	
	      (0, _injectStyle.removeAllStyles)([this._styleId, this._caretStyleId]);
	      updatePseudoClassStyle(this._styleId, this._caretStyleId, properties);
	    }
	
	    /**
	     * Remove a component's associated styles whenever it gets removed from the DOM.
	     */
	
	  }, {
	    key: 'componentWillUnmount',
	    value: function componentWillUnmount() {
	      (0, _injectStyle.removeAllStyles)([this._styleId, this._caretStyleId]);
	    }
	
	    /**
	     * Update focusedOptionIndex when an option is touched.
	     */
	
	
	    /**
	     * Triggers a change event after the user touched on an Option.
	     */
	
	
	    /**
	     * Update focusedOptionIndex to undefined on touch cancel.
	     */
	
	
	    /**
	     * Closed opened combo-box options and removed focusStyles on blur.
	     */
	
	
	    /**
	     * Set focused state when element is focused.
	     */
	
	
	    /**
	     * Open/ Close menu when create is clicked.
	     */
	
	
	    /**
	     * Update focusedOptionIndex for component when mouse enters an option.
	     */
	
	
	    /**
	     * Set focusedOptionIndex to undefined.
	     */
	
	
	    /**
	     * Update component value when an option is clicked.
	     */
	
	
	    /**
	     * Handle keyDown in input (when input is focused):
	     * 1. ComboBox is closed and ArrowDown/ ArrowUp is pressed -> open the ComboBox
	     * 2. ComboBox is opened and ArrowDown is pressed -> highlight next option
	     * 3. ComboBox is opened and ArrowUp is pressed -> highlight previous option
	     * 4. ComboBox is opened and ArrowRight is pressed -> value of hint is copied over to inputBox
	     * 5. ComboBox is opened and Enter/ Tab is pressed -> update input value to value of option
	     * 6. ComboBox is opened and Esc is pressed -> close ComboBox
	     */
	
	
	    /**
	     * Highlight next option when arrowDown key is pressed.
	     * Highlight first option if currently last option is focused.
	     */
	
	  }, {
	    key: '_onArrowUpKeyDown',
	
	
	    /**
	     * Highlight previous option when arrowUp key is pressed.
	     * Highlight last option if currently first option is focused.
	     */
	    value: function _onArrowUpKeyDown() {
	      if (this.filteredOptions.length > 0) {
	        var index = this.filteredOptions.length - 1;
	        if (this.state.focusedOptionIndex) {
	          index = this.state.focusedOptionIndex - 1;
	        }
	
	        this.setState({
	          focusedOptionIndex: index
	        });
	      }
	    }
	
	    /**
	     * Update value of Input box to the value of highlighted option.
	     */
	
	  }, {
	    key: '_onEnterOrTabKeyDown',
	    value: function _onEnterOrTabKeyDown() {
	      if (this.state.focusedOptionIndex >= 0) {
	        this._triggerChange(this.filteredOptions[this.state.focusedOptionIndex].props.value);
	      }
	    }
	
	    /**
	     * The function will return options (if any) who's value is same as value of the combo-box input.
	     */
	
	  }, {
	    key: '_findMatch',
	    value: function _findMatch(value) {
	      return (0, _helpers.find)(this.filteredOptions, function (entry) {
	        return entry.props.value === value;
	      });
	    }
	
	    /**
	     * The function is called when user selects an option. Function will do following:
	     * 1. Close the options
	     * 2. Change value of input depending on whether its has value, defaultValue or valueLink property
	     * 3. Call onUpdate props function
	     */
	
	  }, {
	    key: '_triggerChange',
	    value: function _triggerChange(value) {
	      if ((0, _helpers.has)(this.props, 'valueLink')) {
	        this.props.valueLink.requestChange(value);
	        this.setState({
	          isOpen: false,
	          focusedOptionIndex: undefined
	        });
	      } else if ((0, _helpers.has)(this.props, 'value')) {
	        this.setState({
	          isOpen: false,
	          focusedOptionIndex: undefined
	        });
	      } else {
	        this.setState({
	          inputValue: value,
	          isOpen: false,
	          focusedOptionIndex: undefined
	        });
	        this.filteredOptions = ComboBox.filterOptions(value, this.props);
	      }
	
	      var obj = { value: value, isOptionSelection: true, isMatchingOption: true };
	      var matchedOption = this._findMatch(value);
	      obj.identifier = matchedOption ? matchedOption.props.identifier : undefined;
	
	      if (this.props.onUpdate) {
	        this.props.onUpdate(obj);
	      }
	    }
	
	    /**
	     * The function is called when user type/ paste value in the input box.
	     */
	
	  }, {
	    key: '_getValueForIndex',
	
	
	    /**
	     * Returns the value of the child with a certain index.
	     */
	    value: function _getValueForIndex(index) {
	      return this.filteredOptions[index].props.value;
	    }
	
	    /**
	     * The function is called when user inputs a value in the input box. This can be done by:
	     * 1. typing/ pasting value into input box
	     * 2. pressing arrowRight key when there is some hint in the input box
	     *
	     * Function will do following:
	     * 1. Open the options
	     * 2. Change value of input depending on whether its has value, defaultValue or valueLink property
	     * 3. Call onUpdate props function
	     */
	
	  }, {
	    key: '_userUpdateValue',
	    value: function _userUpdateValue(value) {
	      if ((0, _helpers.has)(this.props, 'valueLink')) {
	        this.props.valueLink.requestChange(value);
	        this.setState({
	          isOpen: true,
	          focusedOptionIndex: undefined
	        });
	      } else if ((0, _helpers.has)(this.props, 'value')) {
	        this.setState({
	          isOpen: true,
	          focusedOptionIndex: undefined
	        });
	      } else {
	        this.setState({
	          inputValue: value,
	          isOpen: true,
	          focusedOptionIndex: undefined
	        });
	        this.filteredOptions = ComboBox.filterOptions(value, this.props);
	      }
	
	      var obj = { value: value, isOptionSelection: false, isMatchingOption: false };
	
	      var matchedOption = this._findMatch(value);
	      if (matchedOption) {
	        obj.identifier = matchedOption.props.identifier;
	        obj.isMatchingOption = true;
	      }
	
	      if (this.props.onUpdate) {
	        this.props.onUpdate(obj);
	      }
	    }
	
	    /**
	     * Function to filter options using input value.
	     */
	
	  }, {
	    key: 'render',
	    value: function render() {
	      var _this2 = this;
	
	      var inputStyle = _extends({}, _comboBox2.default.style, this.props.style);
	      var hintStyle = _extends({}, _comboBox2.default.hintStyle, this.props.hintStyle);
	      var wrapperStyle = _extends({}, _comboBox2.default.wrapperStyle, this.props.wrapperStyle);
	      var menuStyle = _extends({}, _comboBox2.default.menuStyle, this.props.menuStyle);
	
	      var hint = this.props.enableHint ? this._getHint() : undefined;
	      var placeHolder = !hint ? this.props.placeholder : undefined;
	      var inputClassName = (0, _unionClassNames2.default)(this.props.className, this._styleId);
	      var tabIndex = this.props.tabIndex ? this.props.tabIndex : '0';
	
	      if (this.props.disabled) {
	        inputStyle = _extends({}, inputStyle, _comboBox2.default.disabledStyle, this.props.disabledStyle);
	      }
	
	      // todo: Currently there are no different hover styles for caret, like select they are probably not really needed.
	      var caretStyle = void 0;
	      if (this.props.displayCaret) {
	        if (this.props.disabled) {
	          caretStyle = _extends({}, _comboBox2.default.caretToOpenStyle, this.props.caretToOpenStyle, _comboBox2.default.disabledCaretToOpenStyle, this.props.disabledCaretToOpenStyle);
	        } else if (this.state.isOpen) {
	          caretStyle = _extends({}, _comboBox2.default.caretToCloseStyle, this.props.caretToCloseStyle);
	        } else {
	          caretStyle = _extends({}, _comboBox2.default.caretToOpenStyle, this.props.caretToOpenStyle);
	        }
	      }
	
	      var computedMenuStyle = this.state.isOpen && !this.props.disabled && this.filteredOptions && this.filteredOptions.length > 0 ? menuStyle : { display: 'none' };
	
	      // using value for input makes it a controlled component and it will be changed in controlled manner if (1) user enters value, (2) user selects some option
	      // value will be updated depending on whether user has passed value / valueLink / defaultValue as property
	      return _react2.default.createElement(
	        'div',
	        _extends({
	          style: wrapperStyle,
	          'aria-label': this.props['aria-label'],
	          'aria-disabled': this.props.disabled
	        }, this.state.wrapperProps),
	        _react2.default.createElement('input', {
	          style: hintStyle,
	          value: hint,
	          tabIndex: -1,
	          key: 'style-hint',
	          readOnly: true
	        }),
	        _react2.default.createElement('input', _extends({
	          disabled: this.props.disabled,
	          'aria-disabled': this.props.disabled,
	          value: this.state.inputValue,
	          placeholder: placeHolder,
	          style: inputStyle,
	          className: inputClassName,
	          onChange: this._onChange,
	          tabIndex: tabIndex,
	          onBlur: this._onBlur,
	          onFocus: this._onFocus,
	          onKeyDown: this._onKeyDown,
	          'aria-autocomplete': 'list',
	          key: 'combo-input'
	        }, this.state.inputProps)),
	        _react2.default.createElement('span', _extends({
	          style: caretStyle,
	          className: this._caretStyleId,
	          onClick: this._onCaretClick,
	          tabIndex: -1
	        }, this.state.caretProps)),
	        _react2.default.createElement(
	          'ul',
	          _extends({
	            style: computedMenuStyle,
	            role: 'listbox',
	            'aria-expanded': this.state.isOpen
	          }, this.state.menuProps),
	          _react2.default.Children.map(this.filteredOptions, function (entry, index) {
	            return _react2.default.createElement(
	              _ComboBoxItem2.default,
	              {
	                key: index,
	                index: index,
	                onItemTouchStart: _this2._onTouchStartAtOption,
	                onItemTouchEnd: _this2._onTouchEndAtOption,
	                onItemTouchCancel: _this2._onTouchCancelAtOption,
	                onItemClick: _this2._onClickAtOption,
	                onItemMouseEnter: _this2._onMouseEnterAtOption,
	                onItemMouseLeave: _this2._onMouseLeaveAtOption
	              },
	              entry
	            );
	          })
	        )
	      );
	    }
	  }], [{
	    key: 'filterOptions',
	    value: function filterOptions(inputValue, properties) {
	      /* eslint react/sort-comp:0*/
	      var filteredOptions = [];
	      if (!(0, _helpers.isEmpty)(properties.children)) {
	        if (inputValue) {
	          filteredOptions = (0, _helpers.filterReactChildren)(properties.children, function (entry) {
	            return properties.filterFunc(inputValue, entry.props.value);
	          });
	        } else {
	          filteredOptions = (0, _helpers.getArrayForReactChildren)(properties.children, function (entry) {
	            return entry;
	          });
	        }
	
	        if (properties.maxOptions) {
	          filteredOptions = filteredOptions.splice(0, properties.maxOptions);
	        }
	      }
	
	      return filteredOptions;
	    }
	  }]);
	
	  return ComboBox;
	}(_react.Component);
	
	ComboBox.displayName = 'ComboBox';
	ComboBox.propTypes = comboBoxPropTypes;
	ComboBox.childContextTypes = {
	  isDisabled: _react.PropTypes.bool.isRequired,
	  isHoveredValue: _react.PropTypes.oneOfType([_react.PropTypes.bool, _react.PropTypes.string, _react.PropTypes.number])
	};
	ComboBox.defaultProps = {
	  disabled: false,
	  displayCaret: false,
	  enableHint: false,
	  'aria-label': 'ComboBox',
	  filterFunc: filterFunc, // TODO rename to filterFunction in 4.0.0
	  tabIndex: 0,
	  children: []
	};
	exports.default = ComboBox;

/***/ },
/* 446 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var comboBoxStyle = {
	
	  style: {
	
	    background: 'transparent',
	
	    /* normalize.css v3.0.1 */
	    font: 'inherit',
	    margin: 0,
	
	    /* Reset the default borderRadius for Mobile Safari */
	    borderRadius: 0,
	
	    /* Belle TextInput style */
	    overflow: 'hidden',
	    resize: 'none',
	    width: '100%',
	    fontSize: 15,
	    paddingTop: '7px',
	    paddingBottom: '4px',
	    paddingLeft: 0,
	    color: '#505050',
	    border: '0 solid #fff',
	    borderBottom: '1px solid #ccc',
	    display: 'block',
	    boxSizing: 'border-box',
	    position: 'relative',
	
	    /* animations */
	    transition: 'border-bottom 0.2s',
	    transitionTimingFunction: 'ease-out',
	
	    /* This button can only be pressed */
	    MsTouchAction: 'manipulation',
	    touchAction: 'manipulation',
	
	    /*
	    Prevent flickering while tapping on WebKit
	    http://stackoverflow.com/a/3516243/837709
	    */
	    WebkitTapHighlightColor: 'transparent'
	  },
	
	  focusStyle: {
	    borderBottom: '1px solid #6EB8D4',
	    outline: 'none'
	  },
	
	  hoverStyle: {
	    borderBottom: '1px solid #92D6EF'
	  },
	
	  disabledStyle: {
	    borderBottom: '1px dotted #9F9F9F'
	  },
	
	  disabledHoverStyle: {
	    borderBottom: '1px dotted #92D6EF',
	    cursor: 'not-allowed'
	  },
	
	  wrapperStyle: {
	    outline: 0, // to avoid default focus behaviour
	    boxSizing: 'border-box',
	    position: 'relative'
	  },
	
	  menuStyle: {
	    display: 'block',
	    listStyleType: 'none',
	    background: '#FFF',
	    padding: '6px 0',
	    margin: 0,
	    position: 'absolute',
	    width: '100%',
	    zIndex: 10000,
	    boxSizing: 'border-box',
	    borderRadius: 2,
	    boxShadow: '0 1px 1px rgba(0, 0, 0, 0.2)',
	    borderTop: '1px solid #f2f2f2',
	    /* Improve scrolling for mobile Safari */
	    WebkitOverflowScrolling: 'touch'
	  },
	
	  caretToOpenStyle: {
	    height: 0,
	    width: 0,
	    content: '-', // Avoid this warning: was passed a numeric string value for CSS property `content` (value: ` `)
	    position: 'absolute',
	    top: 15,
	    right: 8,
	    cursor: 'pointer',
	    borderTop: '6px solid #666',
	    borderLeft: '5px solid transparent',
	    borderRight: '5px solid transparent'
	  },
	
	  caretToCloseStyle: {
	    height: 0,
	    width: 0,
	    content: '-', // Avoid this warning: was passed a numeric string value for CSS property `content` (value: ` `)
	    position: 'absolute',
	    top: 15,
	    right: 8,
	    cursor: 'pointer',
	    borderBottom: '6px solid #666',
	    borderLeft: '5px solid transparent',
	    borderRight: '5px solid transparent'
	  },
	
	  caretFocusStyle: {
	    outline: 0
	  },
	
	  disabledCaretToOpenStyle: {
	    borderTop: '6px solid #9F9F9F'
	  },
	
	  hintStyle: {
	
	    position: 'absolute',
	    top: 0,
	    left: 0,
	    outline: 'none',
	    color: '#ccc',
	    border: 'none',
	
	    /* normalize.css v3.0.1 */
	    font: 'inherit',
	    margin: 0,
	
	    /* Reset the default borderRadius for Mobile Safari */
	    borderRadius: 0,
	
	    /* Belle TextInput style */
	    overflow: 'hidden',
	    resize: 'none',
	    width: '100%',
	    fontSize: 15,
	    paddingTop: 7,
	    paddingBottom: 4,
	    paddingLeft: 0,
	    display: 'block',
	    boxSizing: 'border-box',
	
	    /* This button can only be pressed */
	    MsTouchAction: 'manipulation',
	    touchAction: 'manipulation',
	
	    /*
	     Prevent flickering while tapping on WebKit
	     http://stackoverflow.com/a/3516243/837709
	     */
	    WebkitTapHighlightColor: 'transparent'
	  }
	};
	
	exports.default = comboBoxStyle;

/***/ },
/* 447 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	/**
	 * Belle internal component to wrap an Option in a ComboBox.
	 *
	 * This component exists to avoid binding functions in JSX.
	 */
	
	var ComboBoxItem = function (_Component) {
	  _inherits(ComboBoxItem, _Component);
	
	  function ComboBoxItem() {
	    var _Object$getPrototypeO;
	
	    var _temp, _this, _ret;
	
	    _classCallCheck(this, ComboBoxItem);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_Object$getPrototypeO = Object.getPrototypeOf(ComboBoxItem)).call.apply(_Object$getPrototypeO, [this].concat(args))), _this), _this._onClick = function () {
	      _this.props.onItemClick(_this.props.index);
	    }, _this._onTouchStart = function (event) {
	      _this.props.onItemTouchStart(event, _this.props.index);
	    }, _this._onTouchEnd = function (event) {
	      _this.props.onItemTouchEnd(event, _this.props.index);
	    }, _this._onTouchCancel = function () {
	      _this.props.onItemTouchCancel();
	    }, _this._onMouseEnter = function () {
	      _this.props.onItemMouseEnter(_this.props.index);
	    }, _this._onMouseLeave = function () {
	      _this.props.onItemMouseLeave();
	    }, _this._onMouseDown = function (event) {
	      event.preventDefault();
	    }, _temp), _possibleConstructorReturn(_this, _ret);
	  }
	
	  _createClass(ComboBoxItem, [{
	    key: 'render',
	    value: function render() {
	      return _react2.default.createElement(
	        'li',
	        {
	          onClick: this._onClick,
	          onMouseEnter: this._onMouseEnter,
	          onMouseLeave: this._onMouseLeave,
	          onMouseDown: this._onMouseDown,
	          onTouchStart: this._onTouchStart,
	          onTouchEnd: this._onTouchEnd,
	          onTouchCancel: this._onTouchCancel,
	          role: 'option'
	        },
	        this.props.children
	      );
	    }
	  }]);
	
	  return ComboBoxItem;
	}(_react.Component);
	
	ComboBoxItem.displayName = 'ComboBoxItem';
	ComboBoxItem.propTypes = {
	  children: _react.PropTypes.node.isRequired,
	  index: _react.PropTypes.number.isRequired,
	  onItemClick: _react.PropTypes.func.isRequired,
	  onItemTouchStart: _react.PropTypes.func.isRequired,
	  onItemTouchEnd: _react.PropTypes.func.isRequired,
	  onItemTouchCancel: _react.PropTypes.func.isRequired,
	  onItemMouseEnter: _react.PropTypes.func.isRequired,
	  onItemMouseLeave: _react.PropTypes.func.isRequired
	};
	exports.default = ComboBoxItem;

/***/ },
/* 448 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _spinner = __webpack_require__(449);
	
	var _spinner2 = _interopRequireDefault(_spinner);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var animationDelay = function animationDelay(delay) {
	  return {
	    MozAnimationDelay: delay,
	    WebkitAnimationDelay: delay,
	    OAnimationDelay: delay,
	    animationDelay: delay
	  };
	};
	
	/**
	 * Spinner component to be used as loading indicator.
	 */
	
	var Spinner = function (_Component) {
	  _inherits(Spinner, _Component);
	
	  function Spinner() {
	    _classCallCheck(this, Spinner);
	
	    return _possibleConstructorReturn(this, Object.getPrototypeOf(Spinner).apply(this, arguments));
	  }
	
	  _createClass(Spinner, [{
	    key: 'render',
	    value: function render() {
	      var _props = this.props;
	      var style = _props.style;
	      var characterProps = _props.characterProps;
	      var characterStyle = _props.characterStyle;
	
	      var childProps = _objectWithoutProperties(_props, ['style', 'characterProps', 'characterStyle']);
	
	      var computedCharStyle = _extends({}, _spinner2.default.characterStyle, characterStyle);
	      return _react2.default.createElement(
	        'span',
	        _extends({}, childProps, { style: _extends({}, _spinner2.default.style, style) }),
	        _react2.default.createElement(
	          'span',
	          _extends({}, characterProps, { style: computedCharStyle }),
	          '.'
	        ),
	        _react2.default.createElement(
	          'span',
	          _extends({}, characterProps, { style: _extends({}, computedCharStyle, animationDelay('400ms')) }),
	          '.'
	        ),
	        _react2.default.createElement(
	          'span',
	          _extends({}, characterProps, { style: _extends({}, computedCharStyle, animationDelay('800ms')) }),
	          '.'
	        )
	      );
	    }
	  }]);
	
	  return Spinner;
	}(_react.Component);
	
	Spinner.displayName = 'Spinner';
	Spinner.propTypes = {
	  characterProps: _react.PropTypes.object,
	  characterStyle: _react.PropTypes.object,
	  style: _react.PropTypes.object
	};
	exports.default = Spinner;

/***/ },
/* 449 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var spinnerStyle = {
	  style: {
	    display: 'inline-block',
	    fontSize: 15,
	    textAlign: 'center'
	  },
	
	  characterStyle: {
	    color: '#666',
	    display: 'inline-block',
	    WebkitAnimation: 'belle-spinner-pulse 2s infinite ease-in-out',
	    OAnimation: 'belle-spinner-pulse 2s infinite ease-in-out',
	    animation: 'belle-spinner-pulse 2s infinite ease-in-out'
	  }
	};
	
	exports.default = spinnerStyle;

/***/ },
/* 450 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactDom = __webpack_require__(32);
	
	var _reactDom2 = _interopRequireDefault(_reactDom);
	
	var _injectStyle = __webpack_require__(420);
	
	var _helpers = __webpack_require__(417);
	
	var _toggle = __webpack_require__(451);
	
	var _toggle2 = _interopRequireDefault(_toggle);
	
	var _toggle3 = __webpack_require__(452);
	
	var _toggle4 = _interopRequireDefault(_toggle3);
	
	var _isComponentOfType = __webpack_require__(434);
	
	var _isComponentOfType2 = _interopRequireDefault(_isComponentOfType);
	
	var _animationFrameManagement = __webpack_require__(444);
	
	var _unionClassNames = __webpack_require__(419);
	
	var _unionClassNames2 = _interopRequireDefault(_unionClassNames);
	
	var _Choice = __webpack_require__(426);
	
	var _Choice2 = _interopRequireDefault(_Choice);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	/**
	 * Verifies that the children is an array containing only two choices with a
	 * different value.
	 */
	function validateChoices(props, propName, componentName) {
	  var propValue = props[propName];
	  if (!propValue) {
	    return undefined;
	  }
	
	  if (!Array.isArray(propValue) || propValue.length !== 2) {
	    return new Error('Invalid ' + propName + ' supplied to `' + componentName + '`, expected exactly two Choice components.');
	  }
	
	  for (var i = 0; i < propValue.length; ++i) {
	    var item = propValue[i];
	    if (!item || !(0, _isComponentOfType2.default)(_Choice2.default, item)) {
	      return new Error('Invalid ' + propName + '[' + i + '] supplied to `' + componentName + '`, expected a Choice component from Belle.');
	    }
	  }
	
	  if ((0, _helpers.first)(propValue).props.value === (0, _helpers.last)(propValue).props.value) {
	    return new Error('Invalid ' + propName + ' supplied to `' + componentName + '`, expected different value properties for the provided Choice components.');
	  }
	
	  return undefined;
	}
	
	var togglePropTypes = {
	  activeHandleStyle: _react.PropTypes.object,
	  children: validateChoices,
	  className: _react.PropTypes.string,
	  defaultValue: _react.PropTypes.bool,
	  disabled: _react.PropTypes.bool,
	  disabledHandleStyle: _react.PropTypes.object,
	  disabledStyle: _react.PropTypes.object,
	  firstChoiceProps: _react.PropTypes.object,
	  firstChoiceStyle: _react.PropTypes.shape({
	    width: _react.PropTypes.number
	  }),
	  focusStyle: _react.PropTypes.object,
	  handleProps: _react.PropTypes.shape({
	    onMouseDown: _react.PropTypes.func,
	    onMouseMove: _react.PropTypes.func,
	    onMouseUp: _react.PropTypes.func,
	    onMouseLeave: _react.PropTypes.func,
	    onTouchStart: _react.PropTypes.func,
	    onTouchMove: _react.PropTypes.func,
	    onTouchEnd: _react.PropTypes.func,
	    onTouchCancel: _react.PropTypes.func
	  }),
	  handleStyle: _react.PropTypes.shape({
	    height: _react.PropTypes.number,
	    width: _react.PropTypes.number
	  }),
	  hoverHandleStyle: _react.PropTypes.object,
	  onBlur: _react.PropTypes.func,
	  onUpdate: _react.PropTypes.func,
	  onFocus: _react.PropTypes.func,
	  onKeyDown: _react.PropTypes.func,
	  onMouseDown: _react.PropTypes.func,
	  onMouseEnter: _react.PropTypes.func,
	  onMouseLeave: _react.PropTypes.func,
	  onMouseUp: _react.PropTypes.func,
	  onTouchStart: _react.PropTypes.func,
	  secondChoiceProps: _react.PropTypes.object,
	  secondChoiceStyle: _react.PropTypes.shape({
	    width: _react.PropTypes.number
	  }),
	  sliderProps: _react.PropTypes.shape({
	    onClick: _react.PropTypes.func,
	    onTouchStart: _react.PropTypes.func,
	    onTouchMove: _react.PropTypes.func,
	    onTouchEnd: _react.PropTypes.func,
	    onTouchCancel: _react.PropTypes.func
	  }),
	  sliderStyle: _react.PropTypes.object,
	  sliderWrapperProps: _react.PropTypes.object,
	  sliderWrapperStyle: _react.PropTypes.object,
	  style: _react.PropTypes.shape({
	    width: _react.PropTypes.number
	  }),
	  value: _react.PropTypes.bool,
	  valueLink: _react.PropTypes.shape({
	    value: _react.PropTypes.bool.isRequired,
	    requestChange: _react.PropTypes.func.isRequired
	  }),
	  wrapperProps: _react.PropTypes.object
	};
	
	function sanitizeChildProps(properties) {
	  return (0, _helpers.omit)(properties, Object.keys(togglePropTypes));
	}
	
	function sanitizeSliderProps(properties) {
	  return (0, _helpers.omit)(properties, ['style', 'onClick', 'onTouchStart', 'onTouchMove', 'onTouchEnd', 'onTouchCancel']);
	}
	
	function sanitizeSliderWrapperProps(properties) {
	  return (0, _helpers.omit)(properties, ['ref', 'style']);
	}
	
	function sanitizeChoiceProps(properties) {
	  return (0, _helpers.omit)(properties, ['ref', 'style']);
	}
	
	function sanitizeHandleProps(properties) {
	  return (0, _helpers.omit)(properties, ['onMouseDown', 'onMouseMove', 'onMouseUp', 'onMouseLeave', 'onTouchStart', 'onTouchMove', 'onTouchEnd', 'onTouchCancel', 'ref', 'style']);
	}
	
	/**
	 * Update focus style for the speficied styleId.
	 *
	 * @param styleId {string} - a unique id that exists as class attribute in the DOM
	 * @param properties {object} - the components properties optionally containing custom styles
	 */
	function updatePseudoClassStyle(styleId, properties, preventFocusStyleForTouchAndClick) {
	  var focusStyle = void 0;
	  if (preventFocusStyleForTouchAndClick) {
	    focusStyle = { outline: 0 };
	  } else {
	    focusStyle = _extends({}, _toggle2.default.focusStyle, properties.focusStyle);
	  }
	
	  var styles = [{
	    id: styleId,
	    style: focusStyle,
	    pseudoClass: 'focus'
	  }];
	
	  (0, _injectStyle.injectStyles)(styles);
	}
	
	/**
	 * Toggle component
	 */
	
	var Toggle = function (_Component) {
	  _inherits(Toggle, _Component);
	
	  function Toggle(properties) {
	    _classCallCheck(this, Toggle);
	
	    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Toggle).call(this, properties));
	
	    _initialiseProps.call(_this);
	
	    var value = void 0;
	    if ((0, _helpers.has)(properties, 'valueLink')) {
	      value = properties.valueLink.value;
	    } else if ((0, _helpers.has)(properties, 'value')) {
	      value = properties.value;
	    } else if ((0, _helpers.has)(properties, 'defaultValue')) {
	      value = properties.defaultValue;
	    } else {
	      value = false;
	    }
	
	    _this.state = {
	      firstChoiceProps: sanitizeChoiceProps(properties.firstChoiceProps),
	      childProps: sanitizeChildProps(properties),
	      secondChoiceProps: sanitizeChoiceProps(properties.secondChoiceProps),
	      handleProps: sanitizeHandleProps(properties.handleProps),
	      isActive: false,
	      isDraggingWithMouse: false,
	      isDraggingWithTouch: false,
	      sliderProps: sanitizeSliderProps(properties.sliderProps),
	      sliderWrapperProps: sanitizeSliderWrapperProps(properties.sliderWrapperProps),
	      value: value,
	      wasFocusedWithClickOrTouch: false
	    };
	
	    _this._touchStartedAtSlider = false;
	    _this._touchEndedNotInSlider = false;
	
	    _this._preventTouchSwitch = false;
	
	    _this._mouseDragStart = undefined;
	    _this._mouseDragEnd = undefined;
	    _this._preventMouseSwitch = false;
	
	    // The isFocused attribute is used to apply the one-time focus animation.
	    // As it is reset after every render it can't be set inside state as this
	    // would trigger an endless loop.
	    _this.isFocused = false;
	
	    _this.preventFocusStyleForTouchAndClick = (0, _helpers.has)(properties, 'preventFocusStyleForTouchAndClick') ? properties.preventFocusStyleForTouchAndClick : _toggle4.default.preventFocusStyleForTouchAndClick;
	    return _this;
	  }
	
	  _createClass(Toggle, [{
	    key: 'componentWillMount',
	
	
	    /**
	     * Generates the style-id & inject the focus style.
	     */
	    value: function componentWillMount() {
	      var id = (0, _helpers.uniqueId)();
	      this.styleId = 'style-id' + id;
	      updatePseudoClassStyle(this.styleId, this.props, this.preventFocusStyleForTouchAndClick);
	    }
	  }, {
	    key: 'componentWillReceiveProps',
	    value: function componentWillReceiveProps(properties) {
	      var newState = {
	        firstChoiceProps: sanitizeChoiceProps(properties.firstChoiceProps),
	        childProps: sanitizeChildProps(properties),
	        secondChoiceProps: sanitizeChoiceProps(properties.secondChoiceProps),
	        handleProps: sanitizeHandleProps(properties.handleProps),
	        sliderProps: sanitizeSliderProps(properties.sliderProps),
	        sliderWrapperProps: sanitizeSliderWrapperProps(properties.sliderWrapperProps)
	      };
	
	      if ((0, _helpers.has)(properties, 'valueLink')) {
	        newState.value = properties.valueLink.value;
	      } else if ((0, _helpers.has)(properties, 'value')) {
	        newState.value = properties.value;
	      }
	
	      this.setState(newState);
	
	      this.preventFocusStyleForTouchAndClick = (0, _helpers.has)(properties, 'preventFocusStyleForTouchAndClick') ? properties.preventFocusStyleForTouchAndClick : _toggle4.default.preventFocusStyleForTouchAndClick;
	
	      (0, _injectStyle.removeStyle)(this.styleId);
	      updatePseudoClassStyle(this.styleId, properties, this.preventFocusStyleForTouchAndClick);
	    }
	
	    /**
	     * Deactivate the focused attribute in order to make sure the focus animation
	     * only runs once when the component is focused on & not after re-rendering
	     * e.g when the user clicks on the toggle.
	     */
	
	  }, {
	    key: 'componentDidUpdate',
	    value: function componentDidUpdate() {
	      this.isFocused = false;
	    }
	
	    /**
	     * Remove a component's associated styles whenever it gets removed from the DOM.
	     */
	
	  }, {
	    key: 'componentWillUnmount',
	    value: function componentWillUnmount() {
	      (0, _injectStyle.removeStyle)(this.styleId);
	    }
	
	    /**
	     * Activate the focused attribute used to determine when to show the
	     * one-time focus animation and trigger a render.
	     */
	
	
	    /**
	     * Deactivate the focused attribute used to determine when to show the
	     * one-time focus animation and trigger a render.
	     */
	
	  }, {
	    key: '_onArrowLeftKeyDown',
	
	
	    /**
	     * Flip value in case it is false.
	     */
	    value: function _onArrowLeftKeyDown() {
	      if (this.state.value === true) {
	        this._triggerChange(false);
	      }
	    }
	
	    /**
	     * Flip value in case it is true.
	     */
	
	  }, {
	    key: '_onArrowRightKeyDown',
	    value: function _onArrowRightKeyDown() {
	      if (this.state.value === false) {
	        this._triggerChange(true);
	      }
	    }
	
	    /**
	     * Flip value and trigger change.
	     */
	
	  }, {
	    key: '_onEnterOrSpaceKeyDown',
	    value: function _onEnterOrSpaceKeyDown() {
	      this._triggerChange(!this.state.value);
	    }
	  }, {
	    key: '_getHandleHeight',
	    value: function _getHandleHeight() {
	      return (0, _helpers.has)(this.props.handleStyle, 'height') ? this.props.handleStyle.height : _toggle2.default.handleStyle.height;
	    }
	  }, {
	    key: '_getHandleWidth',
	    value: function _getHandleWidth() {
	      return (0, _helpers.has)(this.props.handleStyle, 'width') ? this.props.handleStyle.width : _toggle2.default.handleStyle.width;
	    }
	  }, {
	    key: '_getSliderOffset',
	    value: function _getSliderOffset() {
	      var firstChoiceWidth = (0, _helpers.has)(this.props.firstChoiceStyle, 'width') ? this.props.firstChoiceStyle.width : _toggle2.default.firstChoiceStyle.width;
	
	      return firstChoiceWidth - this._getHandleWidth() / 2;
	    }
	  }, {
	    key: '_getToggleWidth',
	    value: function _getToggleWidth() {
	      return (0, _helpers.has)(this.props.style, 'width') ? this.props.style.width : _toggle2.default.style.width;
	    }
	  }, {
	    key: '_triggerChange',
	    value: function _triggerChange(value) {
	      if ((0, _helpers.has)(this.props, 'valueLink')) {
	        this.props.valueLink.requestChange(value);
	        this.setState({
	          isDraggingWithMouse: false,
	          isDraggingWithTouch: false,
	          isActive: false
	        });
	      } else if ((0, _helpers.has)(this.props, 'value')) {
	        this.setState({
	          isDraggingWithMouse: false,
	          isDraggingWithTouch: false,
	          isActive: false
	        });
	      } else {
	        this.setState({
	          value: value,
	          isDraggingWithMouse: false,
	          isDraggingWithTouch: false,
	          isActive: false
	        });
	      }
	
	      if (this.props.onUpdate) {
	        this.props.onUpdate({ value: value });
	      }
	    }
	  }, {
	    key: '_triggerUpdateComponentOnMouseMove',
	    value: function _triggerUpdateComponentOnMouseMove(pageX) {
	      var difference = pageX - this._mouseDragStart;
	
	      if (this.state.value && this._mouseDragEnd && difference > this._mouseDragEnd) {
	        this._preventMouseSwitch = true;
	      } else if (!this.state.value && this._mouseDragEnd && difference < this._mouseDragEnd) {
	        this._preventMouseSwitch = true;
	      }
	
	      this._mouseDragEnd = difference;
	
	      if (difference < 0 || difference > this._getToggleWidth() - this._getHandleWidth()) return;
	
	      this.setState({
	        sliderOffset: difference
	      });
	    }
	  }, {
	    key: '_triggerUpdateComponentOnTouchMoveAtSlider',
	    value: function _triggerUpdateComponentOnTouchMoveAtSlider(touch) {
	      var touchedElement = document.elementFromPoint(touch.clientX, touch.clientY);
	      var firstChoiceNode = _reactDom2.default.findDOMNode(this.refs.firstChoice);
	      var secondChoiceNode = _reactDom2.default.findDOMNode(this.refs.secondChoice);
	
	      this._touchEndedNotInSlider = touchedElement !== firstChoiceNode && touchedElement !== secondChoiceNode;
	      if (this.state.isActive && this._touchEndedNotInSlider) {
	        this.setState({ isActive: false });
	      } else if (!this.state.isActive && !this._touchEndedNotInSlider) {
	        this.setState({ isActive: true });
	      }
	    }
	  }, {
	    key: '_triggerUpdateComponentOnTouchMoveAtHandle',
	    value: function _triggerUpdateComponentOnTouchMoveAtHandle(touch) {
	      var sliderWrapperNode = _reactDom2.default.findDOMNode(this.refs.sliderWrapper);
	      var rect = sliderWrapperNode.getBoundingClientRect();
	      var difference = touch.pageX - this._touchDragStart;
	      var horizontalTolerance = this._getHandleWidth() * 2;
	      var verticalTolerance = this._getHandleHeight() * 2;
	
	      // touch left the allowed handle drag area
	      if (touch.clientX < rect.left - horizontalTolerance || touch.clientX > rect.right + horizontalTolerance || touch.clientY < rect.top - verticalTolerance || touch.clientY > rect.bottom + verticalTolerance) {
	        if (this._preventTouchSwitch) {
	          var value = difference > this._getHandleWidth() / 2;
	          this._triggerChange(value);
	        } else {
	          this._triggerChange(!this.state.value);
	        }
	      } else if (this.state.isDraggingWithTouch) {
	        // is still dragging
	        if (this.state.value && this._touchDragEnd && difference > this._touchDragEnd) {
	          this._preventTouchSwitch = true;
	        } else if (!this.state.value && this._touchDragEnd && difference < this._touchDragEnd) {
	          this._preventTouchSwitch = true;
	        }
	
	        if (difference < 0 || difference > this._getToggleWidth() - this._getHandleWidth()) return;
	
	        this._touchDragEnd = difference;
	        this.setState({
	          sliderOffset: difference
	        });
	      }
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var wrapperStyle = _extends({}, _toggle2.default.style, this.props.style);
	
	      if (this.isFocused && !this.state.wasFocusedWithClickOrTouch) {
	        wrapperStyle = _extends({}, wrapperStyle, _toggle2.default.focusStyle, this.props.focusStyle);
	      }
	
	      var computedSliderStyle = void 0;
	      var handleStyle = void 0;
	
	      var sliderWrapperStyle = _extends({}, _toggle2.default.sliderWrapperStyle, this.props.sliderWrapperStyle);
	      var defaultSliderOffset = this._getSliderOffset();
	
	      if (this.state.isDraggingWithMouse || this.state.isDraggingWithTouch) {
	        computedSliderStyle = _extends({}, _toggle2.default.sliderStyle, this.props.sliderStyle, {
	          left: this.state.sliderOffset - defaultSliderOffset,
	          transition: 'none'
	        });
	
	        // right now even when handle is clicked, it momentarily shows this grabbing styles
	        // may be this.state.isDraggingWithMouse should be set to true only after mouse movement starts
	        var activeStyle = _extends({}, _toggle2.default.activeHandleStyle, this.props.handleStyle);
	        handleStyle = _extends({}, _toggle2.default.handleStyle, activeStyle, this.props.activeHandleStyle, {
	          left: this.state.sliderOffset,
	          transition: activeStyle.transition ? activeStyle.transition : 'none'
	        });
	      } else {
	        handleStyle = _extends({}, _toggle2.default.handleStyle, this.props.handleStyle);
	        computedSliderStyle = _extends({}, _toggle2.default.sliderStyle, {
	          left: this.state.value ? 0 : -defaultSliderOffset
	        });
	
	        if (this.state.isActive) {
	          handleStyle = _extends({}, handleStyle, _toggle2.default.activeHandleStyle, this.props.activeHandleStyle);
	        } else if (this.state.isHovered) {
	          handleStyle = _extends({}, handleStyle, _toggle2.default.hoverHandleStyle, this.props.hoverHandleStyle);
	        }
	
	        var position = {
	          left: this.state.value ? defaultSliderOffset : 0
	        };
	        handleStyle = _extends({}, handleStyle, position);
	      }
	
	      var computedTrueChoice = (0, _helpers.first)(this.props.children) ? (0, _helpers.first)(this.props.children) : '✓';
	      var computedFalseChoice = (0, _helpers.last)(this.props.children) ? (0, _helpers.last)(this.props.children) : '✘';
	
	      var computedTrueChoiceStyle = _extends({}, _toggle2.default.firstChoiceStyle, this.props.firstChoiceStyle);
	      var computedFalseChoiceStyle = _extends({}, _toggle2.default.secondChoiceStyle, this.props.secondChoiceStyle);
	
	      var hasCustomTabIndex = this.props.wrapperProps && this.props.wrapperProps.tabIndex;
	      var tabIndex = hasCustomTabIndex ? this.props.wrapperProps.tabIndex : '0';
	      if (this.props.disabled) {
	        tabIndex = -1;
	        wrapperStyle = _extends({}, wrapperStyle, _toggle2.default.disabledStyle, this.props.disabledStyle);
	        handleStyle = _extends({}, handleStyle, _toggle2.default.disabledHandleStyle, this.props.disabledHandleStyle);
	      }
	
	      var role = (0, _helpers.has)(this.state.childProps, 'role') ? this.state.childProps.role : 'checkbox';
	
	      return _react2.default.createElement(
	        'div',
	        _extends({
	          style: wrapperStyle,
	          tabIndex: tabIndex,
	          className: (0, _unionClassNames2.default)(this.props.className, this.styleId),
	          onKeyDown: this._onKeyDown,
	          onMouseDown: this._onMouseDownOnWrapper,
	          onMouseUp: this._onMouseUpOnWrapper,
	          onTouchStart: this._onTouchStartOnWrapper,
	          onFocus: this._onFocus,
	          onBlur: this._onBlur,
	          onMouseEnter: this._onMouseEnterAtSliderWrapper,
	          onMouseLeave: this._onMouseLeaveAtSliderWrapper,
	          role: role,
	          'aria-checked': this.state.value
	        }, this.state.childProps),
	        _react2.default.createElement(
	          'div',
	          _extends({
	            style: sliderWrapperStyle,
	            ref: 'sliderWrapper'
	          }, this.state.sliderWrapperProps),
	          _react2.default.createElement(
	            'div',
	            _extends({
	              style: computedSliderStyle,
	              onClick: this._onClickAtSlider,
	              onTouchStart: this._onTouchStartAtSlider,
	              onTouchMove: this._onTouchMoveAtSlider,
	              onTouchEnd: this._onTouchEndAtSlider,
	              onTouchCancel: this._onTouchCancelAtSlider
	            }, this.state.sliderProps),
	            _react2.default.createElement(
	              'div',
	              _extends({
	                ref: 'firstChoice',
	                style: computedTrueChoiceStyle
	              }, this.state.firstChoiceProps),
	              computedTrueChoice
	            ),
	            _react2.default.createElement(
	              'div',
	              _extends({
	                ref: 'secondChoice',
	                style: computedFalseChoiceStyle
	              }, this.state.secondChoiceProps),
	              computedFalseChoice
	            )
	          )
	        ),
	        _react2.default.createElement('div', _extends({
	          ref: 'handle',
	          style: handleStyle,
	          onMouseDown: this._onMouseDownOnHandle,
	          onMouseMove: this._onMouseMoveOnHandle,
	          onMouseUp: this._onMouseUpOnHandle,
	          onMouseLeave: this._onMouseLeaveOnHandle,
	          onTouchStart: this._onTouchStartHandle,
	          onTouchMove: this._onTouchMoveHandle,
	          onTouchEnd: this._onTouchEndHandle,
	          onTouchCancel: this._onTouchCancelHandle
	        }, this.state.handleProps))
	      );
	    }
	  }]);
	
	  return Toggle;
	}(_react.Component);
	
	Toggle.displayName = 'Toggle';
	Toggle.propTypes = togglePropTypes;
	Toggle.defaultProps = {
	  disabled: false
	};
	
	var _initialiseProps = function _initialiseProps() {
	  var _this2 = this;
	
	  this._onFocus = function (event) {
	    if (!_this2.props.disabled) {
	      _this2.isFocused = true;
	      _this2.forceUpdate();
	    }
	
	    if (_this2.props.onFocus) {
	      _this2.props.onFocus(event);
	    }
	  };
	
	  this._onBlur = function (event) {
	    _this2.isFocused = false;
	    _this2.setState({ wasFocusedWithClickOrTouch: false });
	
	    if (_this2.props.onBlur) {
	      _this2.props.onBlur(event);
	    }
	  };
	
	  this._onMouseDownOnWrapper = function (event) {
	    if (!_this2.props.disabled) {
	      _this2.setState({ wasFocusedWithClickOrTouch: true, isActive: true });
	    }
	
	    if (_this2.props.onMouseDown) {
	      _this2.props.onMouseDown(event);
	    }
	  };
	
	  this._onMouseUpOnWrapper = function (event) {
	    if (!_this2.props.disabled) {
	      _this2.setState({ isActive: false });
	    }
	
	    if (_this2.props.onMouseUp) {
	      _this2.props.onMouseUp(event);
	    }
	  };
	
	  this._onTouchStartOnWrapper = function (event) {
	    if (!_this2.props.disabled) {
	      _this2.setState({ wasFocusedWithClickOrTouch: true });
	    }
	
	    if (_this2.props.onTouchStart) {
	      _this2.props.onTouchStart(event);
	    }
	  };
	
	  this._onClickAtSlider = function (event) {
	    if (!_this2.props.disabled) {
	      _this2._triggerChange(!_this2.state.value);
	    }
	
	    if (_this2.props.sliderProps && _this2.props.sliderProps.onClick) {
	      _this2.props.sliderProps.onClick(event);
	    }
	  };
	
	  this._onMouseDownOnHandle = function (event) {
	    // check for left mouse button pressed
	    if (event.button === 0 && !_this2.props.disabled) {
	      var defaultSliderOffset = _this2._getSliderOffset();
	      _this2._mouseDragStart = event.pageX - (_this2.state.value ? defaultSliderOffset : 0);
	      _this2._preventMouseSwitch = false;
	
	      _this2.setState({
	        isDraggingWithMouse: true,
	        sliderOffset: _this2.state.value ? defaultSliderOffset : 0
	      });
	    }
	
	    if (_this2.props.handleProps && _this2.props.handleProps.onMouseDown) {
	      _this2.props.handleProps.onMouseDown(event);
	    }
	  };
	
	  this._onMouseMoveOnHandle = function (event) {
	    if (_this2.state.isDraggingWithMouse && !_this2.props.disabled) {
	      // the requestAnimationFrame function must be executed in the context of window
	      // see http://stackoverflow.com/a/9678166/837709
	      var animationFrame = _animationFrameManagement.requestAnimationFrame.call(window, _this2._triggerUpdateComponentOnMouseMove.bind(_this2, event.pageX));
	
	      if (_this2.previousMouseMoveFrame) {
	        // the cancelAnimationFrame function must be executed in the context of window
	        // see http://stackoverflow.com/a/9678166/837709
	        _animationFrameManagement.cancelAnimationFrame.call(window, _this2.previousMouseMoveFrame);
	      }
	
	      _this2.previousMouseMoveFrame = animationFrame;
	    }
	
	    if (_this2.props.handleProps && _this2.props.handleProps.onMouseMove) {
	      _this2.props.handleProps.onMouseMove(event);
	    }
	  };
	
	  this._onMouseUpOnHandle = function (event) {
	    if (!_this2.props.disabled) {
	      if (_this2._mouseDragEnd) {
	        if (!_this2._preventMouseSwitch) {
	          _this2._triggerChange(!_this2.state.value);
	        } else if (_this2._preventMouseSwitch) {
	          var value = _this2._mouseDragEnd > _this2._getHandleWidth() / 2;
	          _this2._triggerChange(value);
	        }
	      } else {
	        _this2._triggerChange(!_this2.state.value);
	      }
	    }
	
	    _this2._mouseDragStart = undefined;
	    _this2._mouseDragEnd = undefined;
	    _this2._preventMouseSwitch = false;
	
	    if (_this2.props.handleProps && _this2.props.handleProps.onMouseUp) {
	      _this2.props.handleProps.onMouseUp(event);
	    }
	  };
	
	  this._onMouseLeaveOnHandle = function (event) {
	    if (!_this2.props.disabled) {
	      if (_this2._mouseDragStart && !_this2._preventMouseSwitch) {
	        _this2._triggerChange(!_this2.state.value);
	      } else if (_this2._mouseDragStart && _this2._preventMouseSwitch) {
	        var value = _this2._mouseDragEnd > _this2._getHandleWidth() / 2;
	        _this2._triggerChange(value);
	      } else {
	        _this2.setState({ isActive: false });
	      }
	    }
	
	    _this2._mouseDragStart = undefined;
	    _this2._mouseDragEnd = undefined;
	    _this2._preventMouseSwitch = false;
	
	    if (_this2.props.handleProps && _this2.props.handleProps.onMouseLeave) {
	      _this2.props.handleProps.onMouseLeave(event);
	    }
	  };
	
	  this._onTouchStartAtSlider = function (event) {
	    if (event.touches.length === 1 && !_this2.props.disabled) {
	      _this2._touchStartedAtSlider = true;
	      _this2.setState({
	        isActive: true
	      });
	    }
	
	    if (_this2.props.sliderProps && _this2.props.sliderProps.onTouchStart) {
	      _this2.props.sliderProps.onTouchStart(event);
	    }
	  };
	
	  this._onTouchMoveAtSlider = function (event) {
	    if (event.touches.length === 1 && _this2._touchStartedAtSlider && !_this2.props.disabled) {
	      // the requestAnimationFrame function must be executed in the context of window
	      // see http://stackoverflow.com/a/9678166/837709
	      var animationFrame = _animationFrameManagement.requestAnimationFrame.call(window, _this2._triggerUpdateComponentOnTouchMoveAtSlider.bind(_this2, event.touches[0]));
	
	      if (_this2.previousTouchMoveAtSliderFrame) {
	        // the cancelAnimationFrame function must be executed in the context of window
	        // see http://stackoverflow.com/a/9678166/837709
	        _animationFrameManagement.cancelAnimationFrame.call(window, _this2.previousTouchMoveAtSliderFrame);
	      }
	
	      _this2.previousTouchMoveAtSliderFrame = animationFrame;
	    }
	
	    if (_this2.props.sliderProps && _this2.props.sliderProps.onTouchMove) {
	      _this2.props.sliderProps.onTouchMove(event);
	    }
	  };
	
	  this._onTouchEndAtSlider = function (event) {
	    // prevent the onClick to happen
	    event.preventDefault();
	
	    if (_this2._touchStartedAtSlider && !_this2._touchEndedNotInSlider && !_this2.props.disabled) {
	      _this2.setState({
	        isActive: false
	      });
	      _this2._triggerChange(!_this2.state.value);
	    } else {
	      _this2.setState({ isActive: false });
	    }
	
	    _this2._touchStartedAtSlider = false;
	    _this2._touchEndedNotInSlider = false;
	
	    if (_this2.props.sliderProps && _this2.props.sliderProps.onTouchEnd) {
	      _this2.props.sliderProps.onTouchEnd(event);
	    }
	  };
	
	  this._onTouchCancelAtSlider = function (event) {
	    _this2.setState({ isActive: false });
	    _this2._touchStartedAtSlider = false;
	    _this2._touchEndedNotInSlider = false;
	
	    if (_this2.props.sliderProps && _this2.props.sliderProps.onTouchCancel) {
	      _this2.props.sliderProps.onTouchCancel(event);
	    }
	  };
	
	  this._onTouchStartHandle = function (event) {
	    event.preventDefault();
	
	    // check for one touch as multiple could be browser gestures and only one
	    // is relevant for us
	    if (event.touches.length === 1 && !_this2.props.disabled) {
	      _this2._preventTouchSwitch = false;
	
	      var defaultSliderOffset = _this2._getSliderOffset();
	      _this2.setState({
	        isDraggingWithTouch: true,
	        sliderOffset: _this2.state.value ? defaultSliderOffset : 0
	      });
	
	      _this2._touchDragStart = event.touches[0].pageX - (_this2.state.value ? defaultSliderOffset : 0);
	    }
	
	    if (_this2.props.handleProps && _this2.props.handleProps.onTouchStart) {
	      _this2.props.handleProps.onTouchStart(event);
	    }
	  };
	
	  this._onTouchMoveHandle = function (event) {
	    if (event.touches.length === 1 && _this2.state.isDraggingWithTouch && !_this2.props.disabled) {
	      // the requestAnimationFrame function must be executed in the context of window
	      // see http://stackoverflow.com/a/9678166/837709
	      var animationFrame = _animationFrameManagement.requestAnimationFrame.call(window, _this2._triggerUpdateComponentOnTouchMoveAtHandle.bind(_this2, event.touches[0]));
	
	      if (_this2.previousTouchMoveAtHandleFrame) {
	        // the cancelAnimationFrame function must be executed in the context of window
	        // see http://stackoverflow.com/a/9678166/837709
	        _animationFrameManagement.cancelAnimationFrame.call(window, _this2.previousTouchMoveAtHandleFrame);
	      }
	
	      _this2.previousTouchMoveAtHandleFrame = animationFrame;
	    }
	
	    if (_this2.props.handleProps && _this2.props.handleProps.onTouchMove) {
	      _this2.props.handleProps.onTouchMove(event);
	    }
	  };
	
	  this._onTouchEndHandle = function (event) {
	    // prevent the onClick to happen
	    event.preventDefault();
	
	    if (_this2.state.isDraggingWithTouch && !_this2.props.disabled) {
	      // no click & move was involved
	      if (_this2._touchDragEnd) {
	        if (_this2._preventTouchSwitch) {
	          var value = _this2._touchDragEnd > _this2._getHandleWidth() / 2;
	          _this2._triggerChange(value);
	        } else {
	          _this2._triggerChange(!_this2.state.value);
	        }
	      } else {
	        // click like
	        _this2._triggerChange(!_this2.state.value);
	      }
	    } else {
	      _this2.setState({
	        isActive: false,
	        isDraggingWithTouch: false
	      });
	    }
	
	    _this2._touchDragStart = undefined;
	    _this2._touchDragEnd = undefined;
	    _this2._preventTouchSwitch = false;
	
	    if (_this2.props.handleProps && _this2.props.handleProps.onTouchEnd) {
	      _this2.props.handleProps.onTouchEnd(event);
	    }
	  };
	
	  this._onTouchCancelHandle = function (event) {
	    _this2.setState({
	      isDraggingWithTouch: false
	    });
	    _this2._touchDragStart = undefined;
	    _this2._touchDragEnd = undefined;
	    _this2._preventTouchSwitch = false;
	
	    if (_this2.props.handleProps && _this2.props.handleProps.onTouchCancel) {
	      _this2.props.handleProps.onTouchCancel(event);
	    }
	  };
	
	  this._onKeyDown = function (event) {
	    if (!_this2.props.disabled) {
	      if (event.key === 'ArrowLeft') {
	        event.preventDefault();
	        _this2._onArrowLeftKeyDown();
	      } else if (event.key === 'ArrowRight') {
	        event.preventDefault();
	        _this2._onArrowRightKeyDown();
	      } else if (event.key === 'Enter' || event.key === ' ') {
	        event.preventDefault();
	        _this2._onEnterOrSpaceKeyDown();
	      }
	    }
	
	    if (_this2.props.onKeyDown) {
	      _this2.props.onKeyDown(event);
	    }
	  };
	
	  this._onMouseEnterAtSliderWrapper = function () {
	    _this2.setState({
	      isHovered: true
	    });
	    if (_this2.props.onMouseEnter) {
	      _this2.props.onMouseEnter(event);
	    }
	  };
	
	  this._onMouseLeaveAtSliderWrapper = function () {
	    _this2.setState({
	      isHovered: false,
	      isActive: false
	    });
	    if (_this2.props.onMouseLeave) {
	      _this2.props.onMouseLeave(event);
	    }
	  };
	};
	
	exports.default = Toggle;

/***/ },
/* 451 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var toggleStyle = {
	  style: {
	    boxSizing: 'border-box',
	    borderRadius: 32,
	    height: 32,
	    width: 68,
	    WebkitUserSelect: 'none',
	    position: 'relative',
	    cursor: 'pointer',
	    display: 'inline-block'
	  },
	
	  focusStyle: {
	    WebkitAnimation: 'belle-toggle-focus 2s',
	    outline: 0 },
	
	  // avoid default focus behaviour
	  disabledStyle: {
	    opacity: 0.6,
	    cursor: 'not-allowed'
	  },
	
	  sliderStyle: {
	    boxSizing: 'border-box',
	    position: 'relative',
	
	    // Calculated with 2 * the width of choice area
	    width: 104,
	    transition: 'left 0.1s',
	    transitionTimingFunction: 'ease-in-out',
	
	    /*
	    Prevent flickering while tapping on WebKit
	    http://stackoverflow.com/a/3516243/837709
	    */
	    WebkitTapHighlightColor: 'transparent'
	  },
	
	  sliderWrapperStyle: {
	    boxSizing: 'border-box',
	    overflow: 'hidden',
	    borderRadius: 32,
	    lineHeight: 1,
	    boxShadow: 'inset 0 1px 0px 0px rgba(0,0,0,0.6)'
	  },
	
	  handleStyle: {
	    position: 'absolute',
	    top: 0,
	    left: 0,
	    boxSizing: 'border-box',
	    borderRadius: 32,
	    backgroundColor: 'rgb(243, 243, 243)',
	    height: 31,
	    width: 32,
	    cursor: 'pointer',
	    border: '1px solid rgb(220, 220, 220)',
	    boxShadow: '0 1px 0px 0px rgb(185, 185, 185)',
	
	    /* animations */
	    transition: 'left 0.1s',
	    transitionTimingFunction: 'ease-in-out',
	
	    /*
	    To avoid any kind of flickering the user won't get feedback
	    for selecting the button text
	    */
	    WebkitUserSelect: 'none',
	    MozUserSelect: 'none',
	    MsUserSelect: 'none',
	    userSelect: 'none',
	
	    /* This button can only be pressed */
	    MsTouchAction: 'none',
	    touchAction: 'none',
	
	    /*
	    Prevent flickering while tapping on WebKit
	    http://stackoverflow.com/a/3516243/837709
	    */
	    WebkitTapHighlightColor: 'transparent'
	  },
	
	  firstChoiceStyle: {
	    display: 'inline-block',
	    boxSizing: 'border-box',
	    height: 32,
	
	    // Calculated with the width of the whole toggle - half of the width from the handle
	    //
	    // This allows to have a round handle that is position exactly in on top of the
	    // border between the two choice areas.
	    width: 52,
	    lineHeight: '32px',
	    textAlign: 'center',
	    color: '#FFF',
	    backgroundColor: 'rgba(43, 206, 56, 0.8)',
	    textIndent: -10,
	    fontSize: 15,
	
	    /*
	    To avoid any kind of flickering the user won't get feedback
	    for selecting the button text
	    */
	    WebkitUserSelect: 'none',
	    MozUserSelect: 'none',
	    MsUserSelect: 'none',
	    userSelect: 'none',
	
	    /* This button can only be pressed */
	    MsTouchAction: 'manipulation',
	    touchAction: 'manipulation',
	
	    /*
	    Prevent flickering while tapping on WebKit
	    http://stackoverflow.com/a/3516243/837709
	    */
	    WebkitTapHighlightColor: 'transparent'
	  },
	
	  secondChoiceStyle: {
	    display: 'inline-block',
	    boxSizing: 'border-box',
	    height: 32,
	
	    // Calculated with the width of the whole toggle - half of the width from the handle
	    //
	    // This allows to have a round handle that is position exactly in on top of the
	    // border between the two choice areas.
	    width: 52,
	    lineHeight: '32px',
	    textAlign: 'center',
	    color: '#FFF',
	    backgroundColor: 'rgba(205, 205, 205, 0.8)',
	    textIndent: 10,
	    fontSize: 15,
	
	    /*
	    To avoid any kind of flickering the user won't get feedback
	    for selecting the button text
	    */
	    WebkitUserSelect: 'none',
	    MozUserSelect: 'none',
	    MsUserSelect: 'none',
	    userSelect: 'none',
	
	    /* This button can only be pressed */
	    MsTouchAction: 'manipulation',
	    touchAction: 'manipulation',
	
	    /*
	    Prevent flickering while tapping on WebKit
	    http://stackoverflow.com/a/3516243/837709
	    */
	    WebkitTapHighlightColor: 'transparent'
	  },
	
	  hoverHandleStyle: {
	    backgroundColor: 'rgb(250, 250, 250)'
	  },
	
	  activeHandleStyle: {
	    height: 32,
	    backgroundColor: 'rgb(246, 246, 246)',
	    boxShadow: '0 0 0 0 rgb(189, 189, 189)'
	  },
	
	  disabledHandleStyle: {
	    cursor: 'not-allowed'
	  }
	};
	
	exports.default = toggleStyle;

/***/ },
/* 452 */
/***/ function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var toggleConfig = {
	  preventFocusStyleForTouchAndClick: true
	};
	
	exports.default = toggleConfig;

/***/ },
/* 453 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _injectStyle = __webpack_require__(420);
	
	var _unionClassNames = __webpack_require__(419);
	
	var _unionClassNames2 = _interopRequireDefault(_unionClassNames);
	
	var _helpers = __webpack_require__(417);
	
	var _dateHelpers = __webpack_require__(454);
	
	var _datePicker = __webpack_require__(456);
	
	var _datePicker2 = _interopRequireDefault(_datePicker);
	
	var _datePicker3 = __webpack_require__(457);
	
	var _datePicker4 = _interopRequireDefault(_datePicker3);
	
	var _ActionArea = __webpack_require__(458);
	
	var _ActionArea2 = _interopRequireDefault(_ActionArea);
	
	var _DisabledDay = __webpack_require__(460);
	
	var _DisabledDay2 = _interopRequireDefault(_DisabledDay);
	
	var _Day = __webpack_require__(461);
	
	var _Day2 = _interopRequireDefault(_Day);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var datePickerPropTypes = {
	  // value related props
	  defaultValue: _react.PropTypes.instanceOf(Date),
	  value: _react.PropTypes.instanceOf(Date),
	  valueLink: _react.PropTypes.shape({
	    value: _react.PropTypes.instanceOf(Date),
	    requestChange: _react.PropTypes.func.isRequired
	  }),
	
	  min: _react.PropTypes.instanceOf(Date),
	  max: _react.PropTypes.instanceOf(Date),
	
	  // component config related props
	  locale: _react.PropTypes.string,
	  month: _react.PropTypes.oneOf([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),
	  defaultMonth: _react.PropTypes.oneOf([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),
	  year: _react.PropTypes.number,
	  defaultYear: _react.PropTypes.number,
	  showOtherMonthDate: _react.PropTypes.bool,
	  renderDay: _react.PropTypes.func,
	  tabIndex: _react.PropTypes.number,
	  'aria-label': _react.PropTypes.string,
	  disabled: _react.PropTypes.bool,
	  readOnly: _react.PropTypes.bool,
	  preventFocusStyleForTouchAndClick: _react.PropTypes.bool,
	
	  // event callbacks for wrapper
	  onFocus: _react.PropTypes.func,
	  onBlur: _react.PropTypes.func,
	  onKeyDown: _react.PropTypes.func,
	  onMouseDown: _react.PropTypes.func,
	  onMouseUp: _react.PropTypes.func,
	  onTouchStart: _react.PropTypes.func,
	  onTouchEnd: _react.PropTypes.func,
	  onTouchCancel: _react.PropTypes.func,
	
	  // callbacks for change of values
	  onUpdate: _react.PropTypes.func,
	  onMonthUpdate: _react.PropTypes.func,
	
	  // props
	  dayProps: _react.PropTypes.object,
	  navBarProps: _react.PropTypes.object,
	  prevMonthNavProps: _react.PropTypes.object,
	  prevMonthNavIconProps: _react.PropTypes.object,
	  nextMonthNavProps: _react.PropTypes.object,
	  nextMonthNavIconProps: _react.PropTypes.object,
	  monthLabelProps: _react.PropTypes.object,
	  dayLabelProps: _react.PropTypes.object,
	  weekHeaderProps: _react.PropTypes.object,
	  weekGridProps: _react.PropTypes.object,
	
	  // ClassNames
	  className: _react.PropTypes.string,
	
	  // wrapper styles
	  style: _react.PropTypes.object,
	  disabledStyle: _react.PropTypes.object,
	  readOnlyStyle: _react.PropTypes.object,
	  hoverStyle: _react.PropTypes.object,
	  activeStyle: _react.PropTypes.object,
	  focusStyle: _react.PropTypes.object,
	  disabledHoverStyle: _react.PropTypes.object,
	
	  // navbar styles
	  navBarStyle: _react.PropTypes.object,
	
	  // prevMonthNav styles
	  prevMonthNavStyle: _react.PropTypes.object,
	  prevMonthNavIconStyle: _react.PropTypes.object,
	  hoverPrevMonthNavStyle: _react.PropTypes.object,
	  activePrevMonthNavStyle: _react.PropTypes.object,
	
	  // nextMonthNav styles
	  nextMonthNavStyle: _react.PropTypes.object,
	  nextMonthNavIconStyle: _react.PropTypes.object,
	  hoverNextMonthNavStyle: _react.PropTypes.object,
	  activeNextMonthNavStyle: _react.PropTypes.object,
	
	  weekHeaderStyle: _react.PropTypes.object,
	
	  // monthlbl styles
	  monthLabelStyle: _react.PropTypes.object,
	
	  // daylbl styles
	  dayLabelStyle: _react.PropTypes.object,
	  disabledDayLabelStyle: _react.PropTypes.object,
	  weekendLabelStyle: _react.PropTypes.object,
	
	  // day styles
	  dayStyle: _react.PropTypes.object,
	  disabledDayStyle: _react.PropTypes.object,
	  readOnlyDayStyle: _react.PropTypes.object,
	  activeDayStyle: _react.PropTypes.object,
	  focusDayStyle: _react.PropTypes.object,
	  disabledFocusDayStyle: _react.PropTypes.object,
	  todayStyle: _react.PropTypes.object,
	  selectedDayStyle: _react.PropTypes.object,
	  otherMonthDayStyle: _react.PropTypes.object,
	  weekendStyle: _react.PropTypes.object
	};
	
	/**
	 * Returns an object with properties that are relevant for the wrapping div of the date picker.
	 */
	function sanitizeWrapperProps(properties) {
	  return (0, _helpers.omit)(properties, Object.keys(datePickerPropTypes));
	}
	
	/**
	 * Returns an object with properties that are relevant for day span.
	 */
	function sanitizeEmptyDayProps(properties) {
	  return (0, _helpers.omit)(properties, ['key', 'style']);
	}
	
	/**
	 * Returns an object with properties that are relevant for day span.
	 */
	function sanitizeDisabledDayProps(properties) {
	  return (0, _helpers.omit)(properties, ['key', 'onMouseEnter', 'onMouseLeave', 'style']);
	}
	
	/**
	 * Returns an object with properties that are relevant for day span.
	 */
	function sanitizeDayProps(properties) {
	  return (0, _helpers.omit)(properties, ['key', 'onMouseDown', 'onMouseUp', 'onMouseEnter', 'onMouseLeave', 'onTouchStart', 'onTouchEnd', 'onTouchCancel', 'aria-selected', 'style', 'role']);
	}
	
	function sanitizeNavBarProps(properties) {
	  return (0, _helpers.omit)(properties, ['style']);
	}
	
	function sanitizePrevMonthNavProps(properties) {
	  return (0, _helpers.omit)(properties, ['aria-label', 'className', 'onClick', 'style']);
	}
	
	function sanitizePrevMonthNavIconProps(properties) {
	  return (0, _helpers.omit)(properties, ['style']);
	}
	
	function sanitizeNextMonthNavProps(properties) {
	  return (0, _helpers.omit)(properties, ['aria-label', 'className', 'onClick', 'style']);
	}
	
	function sanitizeNextMonthNavIconProps(properties) {
	  return (0, _helpers.omit)(properties, ['style']);
	}
	
	function sanitizeMonthLabelProps(properties) {
	  return (0, _helpers.omit)(properties, ['id', 'role', 'style']);
	}
	
	function sanitizeDayLabelProps(properties) {
	  return (0, _helpers.omit)(properties, ['key', 'role', 'style']);
	}
	
	function sanitizeWeekHeaderProps(properties) {
	  return (0, _helpers.omit)(properties, ['style']);
	}
	
	function sanitizeWeekGridProps(properties) {
	  return (0, _helpers.omit)(properties, ['role', 'style']);
	}
	
	/**
	 * Injects pseudo classes for styles into the DOM.
	 */
	function updatePseudoClassStyle(pseudoStyleIds, properties, preventFocusStyleForTouchAndClick) {
	  var styles = [{
	    id: pseudoStyleIds.prevMonthNavStyleId,
	    style: _extends({}, _datePicker2.default.hoverPrevMonthNavStyle, properties.hoverPrevMonthNavStyle),
	    pseudoClass: 'hover'
	
	  }, {
	    id: pseudoStyleIds.nextMonthNavStyleId,
	    style: _extends({}, _datePicker2.default.hoverNextMonthNavStyle, properties.hoverNextMonthNavStyle),
	    pseudoClass: 'hover'
	  }];
	  var focusStyle = void 0;
	  if (preventFocusStyleForTouchAndClick) {
	    focusStyle = { outline: 0 };
	  } else {
	    focusStyle = _extends({}, _datePicker2.default.focusStyle, properties.focusStyle);
	  }
	
	  styles.push({
	    id: pseudoStyleIds.styleId,
	    style: focusStyle,
	    pseudoClass: 'focus'
	  });
	  (0, _injectStyle.injectStyles)(styles);
	}
	
	/**
	 * DatePicker React Component.
	 *
	 * This implementation follows the recommendations proposed here:
	 * http://www.w3.org/TR/wai-aria-practices/#datepicker
	 */
	
	var DatePicker = function (_Component) {
	  _inherits(DatePicker, _Component);
	
	  function DatePicker(properties) {
	    _classCallCheck(this, DatePicker);
	
	    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(DatePicker).call(this, properties));
	
	    _initialiseProps.call(_this);
	
	    var selectedDate = void 0;
	    var month = void 0;
	    var year = void 0;
	
	    if ((0, _helpers.has)(properties, 'valueLink')) {
	      selectedDate = properties.valueLink.value;
	    } else if ((0, _helpers.has)(properties, 'value')) {
	      selectedDate = properties.value;
	    } else if ((0, _helpers.has)(properties, 'defaultValue')) {
	      selectedDate = properties.defaultValue;
	    }
	
	    if (properties.defaultMonth) {
	      month = properties.defaultMonth - 1;
	    } else if (selectedDate) {
	      month = selectedDate.getMonth();
	    } else {
	      month = (0, _dateHelpers.today)().getMonth();
	    }
	
	    if (properties.defaultYear) {
	      year = properties.defaultYear;
	    } else if (selectedDate) {
	      year = selectedDate.getFullYear();
	    } else {
	      year = (0, _dateHelpers.today)().getFullYear();
	    }
	
	    _this.state = {
	      isFocused: false,
	      isActive: false,
	      selectedDate: selectedDate,
	      month: month,
	      year: year
	    };
	
	    _this.localeData = (0, _dateHelpers.getLocaleData)(properties.locale);
	    _this.wrapperProps = sanitizeWrapperProps(properties);
	    _this.dayProps = sanitizeDayProps(properties.dayProps);
	    _this.disabledDayProps = sanitizeDisabledDayProps(properties.dayProps);
	    _this.emptyDayProps = sanitizeEmptyDayProps(properties.dayProps);
	    _this.navBarProps = sanitizeNavBarProps(properties.navBarProps);
	    _this.prevMonthNavProps = sanitizePrevMonthNavProps(properties.prevMonthNavProps);
	    _this.prevMonthNavIconProps = sanitizePrevMonthNavIconProps(properties.prevMonthNavIconProps);
	    _this.nextMonthNavProps = sanitizeNextMonthNavProps(properties.nextMonthNavProps);
	    _this.nextMonthNavIconProps = sanitizeNextMonthNavIconProps(properties.nextMonthNavIconProps);
	    _this.monthLabelProps = sanitizeMonthLabelProps(properties.monthLabelProps);
	    _this.dayLabelProps = sanitizeDayLabelProps(properties.dayLabelProps);
	    _this.weekHeaderProps = sanitizeWeekHeaderProps(properties.weekHeaderProps);
	    _this.weekGridProps = sanitizeWeekGridProps(properties.weekGridProps);
	
	    _this.preventFocusStyleForTouchAndClick = (0, _helpers.has)(properties, 'preventFocusStyleForTouchAndClick') ? properties.preventFocusStyleForTouchAndClick : _datePicker4.default.preventFocusStyleForTouchAndClick;
	    return _this;
	  }
	
	  _createClass(DatePicker, [{
	    key: 'componentWillMount',
	
	
	    /**
	     * Generates the style-id based on React's unique DOM node id.
	     * Calls function to inject the pseudo classes into the dom.
	     */
	    value: function componentWillMount() {
	      var id = (0, _helpers.uniqueId)();
	      this.pseudoStyleIds = {};
	      this.pseudoStyleIds.styleId = 'wrapper-style-id' + id;
	      this.pseudoStyleIds.prevMonthNavStyleId = 'prevMonthNav-style-id' + id;
	      this.pseudoStyleIds.nextMonthNavStyleId = 'nextMonthNav-style-id' + id;
	      updatePseudoClassStyle(this.pseudoStyleIds, this.props, this.preventFocusStyleForTouchAndClick);
	    }
	
	    /**
	     * Function will update component state and styles as new props are received.
	     */
	
	  }, {
	    key: 'componentWillReceiveProps',
	    value: function componentWillReceiveProps(properties) {
	      var newState = {};
	
	      if ((0, _helpers.has)(properties, 'valueLink')) {
	        newState.selectedDate = properties.valueLink.value;
	      } else if ((0, _helpers.has)(properties, 'value')) {
	        newState.selectedDate = properties.value;
	      }
	
	      this.setState(newState);
	
	      this.localeData = (0, _dateHelpers.getLocaleData)(properties.locale);
	      this.wrapperProps = sanitizeWrapperProps(properties);
	      this.dayProps = sanitizeDayProps(properties.dayProps);
	      this.disabledDayProps = sanitizeDisabledDayProps(properties.dayProps);
	      this.emptyDayProps = sanitizeEmptyDayProps(properties.dayProps);
	      this.navBarProps = sanitizeNavBarProps(properties.navBarProps);
	      this.prevMonthNavProps = sanitizePrevMonthNavProps(properties.prevMonthNavProps);
	      this.prevMonthNavIconProps = sanitizePrevMonthNavIconProps(properties.prevMonthNavIconProps);
	      this.nextMonthNavProps = sanitizeNextMonthNavProps(properties.nextMonthNavProps);
	      this.nextMonthNavIconProps = sanitizeNextMonthNavIconProps(properties.nextMonthNavIconProps);
	      this.monthLabelProps = sanitizeMonthLabelProps(properties.monthLabelProps);
	      this.dayLabelProps = sanitizeDayLabelProps(properties.dayLabelProps);
	      this.weekHeaderProps = sanitizeWeekHeaderProps(properties.weekHeaderProps);
	      this.weekGridProps = sanitizeWeekGridProps(properties.weekGridProps);
	
	      this.preventFocusStyleForTouchAndClick = (0, _helpers.has)(properties, 'preventFocusStyleForTouchAndClick') ? properties.preventFocusStyleForTouchAndClick : _datePicker4.default.preventFocusStyleForTouchAndClick;
	
	      (0, _injectStyle.removeAllStyles)(Object.keys(this.pseudoStyleIds));
	      updatePseudoClassStyle(this.pseudoStyleIds, properties, this.preventFocusStyleForTouchAndClick);
	    }
	
	    /**
	     * Removes pseudo classes from the DOM once component gets unmounted.
	     */
	
	  }, {
	    key: 'componentWillUnmount',
	    value: function componentWillUnmount() {
	      (0, _injectStyle.removeAllStyles)(Object.keys(this.pseudoStyleIds));
	    }
	
	    /**
	     * Callback is called when wrapper is focused, it will conditionally set isFocused.
	     *
	     * In addition this.state.focusedDateKey will be set to current date of whichever month is displayed on date-picker (if this.state.focusedDateKey is undefined).
	     */
	
	
	    /**
	     * Callback is called when wrapper is blurred, it will reset isFocused, focusedDateKey.
	     */
	
	
	    /**
	      * Callback is called when wrapper receives mouseDown. Conditionally set isActive.
	      */
	
	
	    /**
	     * Callback is called when wrapper receives mouseUp. Reset isActive.
	     */
	
	
	    /**
	     * Callback is called when touch starts on wrapper. Conditionally sets isActive.
	     */
	
	
	    /**
	     * Callback is called when touch ends on wrapper. Reset isActive.
	     */
	
	
	    /**
	     * On keyDown on wrapper if date-picker is not disabled and some day is focused:
	     * 1. arrow keys will navigate calendar
	     * 2. enter key will set selectedDate of component
	     * 3. space key will set / unset selectedDate
	     * 4. props.onKeyDown will be called
	     */
	
	
	    /**
	     * Function will handle pageUp key down event.
	     */
	
	
	    /**
	     * Function will handle pageDown key down event.
	     */
	
	
	    /**
	     * Callback is called when some day receives mouseDown.
	     * It will conditionally set this.state.activeDay, this.state.focusedDateKey and call props.onDayMouseDown.
	     *
	     * Note: mouseEvent.button is supported by all browsers are are targeting: https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/button
	     */
	
	
	    /**
	     * Callback is called when some day receives mouseUp.
	     * It will reset this.state.activeDay and call props.onDayMouseUp.
	     */
	
	
	    /**
	     * Callback is called when some day receives MouseEnter. It will conditionally set this.state.focusedDateKey.
	     */
	
	
	    /**
	     * Callback is called when some day receives MouseLeave. It will reset this.state.focusedDateKey.
	     */
	
	
	    /**
	     * Callback is called when some day receives touchStart.
	     * It will conditionally set this.state.activeDay and call props.onDayTouchStart.
	     */
	
	
	    /**
	     * Callback is called when some day receives touchEnd.
	     * It will reset this.state.activeDay and call props.onDayTouchEnd.
	     */
	
	  }, {
	    key: '_triggerSelectDate',
	
	
	    /**
	     * Depending on whether component is controlled or uncontrolled the function will update this.state.selectedDate.
	     * It will also call props.onUpdate.
	     */
	    value: function _triggerSelectDate(day, month, year) {
	      if (!this.props.disabled && !this.props.readOnly) {
	        var selectedDate = day ? new Date(year, month, day) : undefined;
	
	        if ((0, _helpers.has)(this.props, 'valueLink')) {
	          this.props.valueLink.requestChange(selectedDate);
	        } else if (!(0, _helpers.has)(this.props, 'value')) {
	          this.setState({
	            selectedDate: selectedDate,
	            month: month,
	            year: year
	          });
	        }
	
	        if (this.props.onUpdate) {
	          this.props.onUpdate({
	            value: selectedDate
	          });
	        }
	      }
	    }
	
	    /**
	     * Function will select / deselect date passed to it, it is used in case of 'Space' keyDown on a day.
	     */
	
	  }, {
	    key: '_triggerToggleDate',
	    value: function _triggerToggleDate(date) {
	      if (!this.props.disabled && !this.props.readOnly) {
	        var day = void 0;
	        var month = void 0;
	        var year = void 0;
	        if (this.state.selectedDate && date && this.state.selectedDate.getDate() === date.getDate() && this.state.selectedDate.getMonth() === date.getMonth() && this.state.selectedDate.getFullYear() === date.getFullYear()) {
	          day = undefined;
	          month = this.state.month;
	          year = this.state.year;
	        } else {
	          day = date.getDate();
	          month = date.getMonth();
	          year = date.getFullYear();
	        }
	
	        this._triggerSelectDate(day, month, year);
	      }
	    }
	  }, {
	    key: '_focusOnTheFistDayOfTheMonth',
	    value: function _focusOnTheFistDayOfTheMonth() {
	      this.setState({
	        focusedDateKey: this.state.year + '-' + (this.state.month + 1) + '-1'
	      });
	    }
	  }, {
	    key: '_focusOnFallbackDay',
	    value: function _focusOnFallbackDay() {
	      if (this.state.lastHoveredDay) {
	        this.setState({
	          focusedDateKey: this.state.lastHoveredDay
	        });
	      } else {
	        this._focusOnTheFistDayOfTheMonth();
	      }
	    }
	
	    /**
	     * The function is mainly used when some day is focused and Arrow keys are pressed to navigate to some other day.
	     * days is the number of days by which focused should be moved ahead or behind.
	     */
	
	  }, {
	    key: '_focusOtherDay',
	    value: function _focusOtherDay(days) {
	      var focusedDate = (0, _dateHelpers.getDateForDateKey)(this.state.focusedDateKey);
	      var currentMonth = focusedDate.getMonth();
	
	      var nextFocusedDate = (0, _dateHelpers.getDateForDateKey)(this.state.focusedDateKey);
	      nextFocusedDate.setDate(nextFocusedDate.getDate() + days);
	      var nextFocusedDateKey = (0, _dateHelpers.convertDateToDateKey)(nextFocusedDate);
	      var nextMonth = nextFocusedDate.getMonth();
	
	      if (nextMonth !== currentMonth) {
	        if ((nextMonth < currentMonth || nextMonth === 11 && currentMonth === 0) && !(nextMonth === 0 && currentMonth === 11)) {
	          this._decreaseMonthYear();
	        } else if ((nextMonth > currentMonth || nextMonth === 0 && currentMonth === 11) && !(nextMonth === 11 && currentMonth === 0)) {
	          this._increaseMonthYear();
	        }
	      }
	
	      this.setState({
	        focusedDateKey: nextFocusedDateKey
	      });
	    }
	
	    /**
	     * The function will decrease current month in state. It will also call props.onMonthUpdate.
	     */
	
	  }, {
	    key: '_decreaseMonthYear',
	    value: function _decreaseMonthYear() {
	      var newMonth = void 0;
	      var newYear = void 0;
	      if (this.state.month === 0) {
	        newMonth = 11;
	        newYear = this.state.year - 1;
	      } else {
	        newMonth = this.state.month - 1;
	        newYear = this.state.year;
	      }
	
	      this.setState({
	        month: newMonth,
	        year: newYear,
	        focusedDateKey: undefined,
	        lastHoveredDay: undefined
	      });
	      if (this.props.onMonthUpdate) {
	        this.props.onMonthUpdate(newMonth + 1, newYear);
	      }
	    }
	
	    /**
	     * The function will increase current month in state. It will also call props.onMonthUpdate.
	     */
	
	  }, {
	    key: '_increaseMonthYear',
	    value: function _increaseMonthYear() {
	      var newMonth = void 0;
	      var newYear = void 0;
	      if (this.state.month === 11) {
	        newMonth = 0;
	        newYear = this.state.year + 1;
	      } else {
	        newMonth = this.state.month + 1;
	        newYear = this.state.year;
	      }
	
	      this.setState({
	        month: newMonth,
	        year: newYear,
	        focusedDateKey: undefined,
	        lastHoveredDay: undefined
	      });
	      if (this.props.onMonthUpdate) {
	        this.props.onMonthUpdate(newMonth + 1, newYear);
	      }
	    }
	  }, {
	    key: '_isWithinMinAndMax',
	    value: function _isWithinMinAndMax(date) {
	      return !(this.props.min && date < this.props.min || this.props.max && date > this.props.max);
	    }
	  }, {
	    key: '_renderPrevMonthNav',
	    value: function _renderPrevMonthNav() {
	      var prevMonthNavStyle = _extends({}, _datePicker2.default.prevMonthNavStyle, this.props.prevMonthNavStyle);
	
	      var prevMonthNavIconStyle = _extends({}, _datePicker2.default.prevMonthNavIconStyle, this.props.prevMonthNavIconStyle);
	
	      var className = this.pseudoStyleIds.prevMonthNavStyleId;
	      if (this.props.prevMonthNavProps) {
	        className = (0, _unionClassNames2.default)(this.props.prevMonthNavProps.className, className);
	      }
	
	      return _react2.default.createElement(
	        _ActionArea2.default,
	        _extends({
	          onUpdate: this._onClickPrevMonth,
	          style: prevMonthNavStyle,
	          className: className,
	          'aria-label': 'Go to previous month'
	        }, this.prevMonthNavProps),
	        _react2.default.createElement('div', _extends({
	          style: prevMonthNavIconStyle
	        }, this.prevMonthNavIconProps))
	      );
	    }
	  }, {
	    key: '_renderNextMonthNav',
	    value: function _renderNextMonthNav() {
	      var nextMonthNavStyle = _extends({}, _datePicker2.default.nextMonthNavStyle, this.props.nextMonthNavStyle);
	
	      var nextMonthNavIconStyle = _extends({}, _datePicker2.default.nextMonthNavIconStyle, this.props.nextMonthNavIconStyle);
	
	      var className = this.pseudoStyleIds.nextMonthNavStyleId;
	      if (this.props.nextMonthNavProps) {
	        className = (0, _unionClassNames2.default)(this.props.nextMonthNavProps.className, className);
	      }
	
	      return _react2.default.createElement(
	        _ActionArea2.default,
	        _extends({
	          onUpdate: this._onClickNextMonth,
	          style: nextMonthNavStyle,
	          className: className,
	          'aria-label': 'Go to next month'
	        }, this.nextMonthNavProps),
	        _react2.default.createElement('div', _extends({
	          style: nextMonthNavIconStyle
	        }, this.nextMonthNavIconProps))
	      );
	    }
	
	    /**
	     * Function will return jsx for rendering the nav bar for calendar.
	     * Depending on following rules it will apply styles to prevMonthNav and nextMonthNav:
	     * 1. If disabled hide navs
	     * 2. If active apply activeStyles
	     */
	
	  }, {
	    key: '_renderNavBar',
	    value: function _renderNavBar() {
	      var navBarStyle = _extends({}, _datePicker2.default.navBarStyle, this.props.navBarStyle);
	      var monthLabelStyle = _extends({}, _datePicker2.default.monthLabelStyle, this.props.monthLabelStyle);
	
	      return _react2.default.createElement(
	        'div',
	        _extends({
	          style: navBarStyle
	        }, this.navBarProps),
	        this._renderPrevMonthNav(),
	        _react2.default.createElement(
	          'span',
	          _extends({
	            style: monthLabelStyle,
	            role: 'heading'
	            /*
	              This label has an id as suggested in http://www.w3.org/TR/wai-aria-practices/#datepicker
	            */
	            , id: this.state.year + '-' + this.state.month
	          }, this.monthLabelProps),
	          this.localeData.monthNames[this.state.month] + ' ' + this.state.year
	        ),
	        this._renderNextMonthNav()
	      );
	    }
	
	    /**
	     * Function will return jsx for rendering the week header for calendar.
	     * Disabled styles will be applied for disabled date-picker.
	     * Day headers will be rendered using locale information.
	     */
	
	  }, {
	    key: '_renderWeekHeader',
	    value: function _renderWeekHeader() {
	      var _this2 = this;
	
	      var weekHeaderStyle = _extends({}, _datePicker2.default.weekHeaderStyle, this.props.weekHeaderStyle);
	
	      var dayLabelStyle = _extends({}, _datePicker2.default.dayLabelStyle, this.props.dayLabelStyle);
	      if (this.props.disabled) {
	        dayLabelStyle = _extends({}, dayLabelStyle, _datePicker2.default.disabledDayLabelStyle, this.props.disabledDayLabelStyle);
	      }
	
	      var weekendLabelStyle = _extends({}, dayLabelStyle, _datePicker2.default.weekendLabelStyle, this.props.weekendLabelStyle);
	      var dayNames = (0, _helpers.shift)(this.localeData.dayNamesMin, this.localeData.firstDay);
	      dayNames = this.localeData.isRTL ? (0, _helpers.reverse)(dayNames) : dayNames;
	      var weekendIndex = (7 - this.localeData.firstDay) % 7 + this.localeData.weekEnd;
	      weekendIndex = this.localeData.isRTL ? 6 - weekendIndex : weekendIndex;
	
	      return _react2.default.createElement(
	        'div',
	        _extends({
	          style: weekHeaderStyle
	        }, this.weekHeaderProps),
	        (0, _helpers.map)(dayNames, function (dayAbbr, index) {
	          return _react2.default.createElement(
	            'span',
	            _extends({
	              key: 'dayAbbr-' + index,
	              style: index === weekendIndex ? weekendLabelStyle : dayLabelStyle,
	              role: 'columnheader'
	            }, _this2.dayLabelProps),
	            dayAbbr
	          );
	        })
	      );
	    }
	
	    /**
	     * Function will return jsx for rendering the a day.
	     * It will apply various styles in sequence as below (styles will be additive):
	     * 1. If component is readOnly apply readOnly styles
	     * 2. If component is disabled apply disabled styles
	     *    - If component is disabled and hovered apply disableHover styles
	     * 3. If day is weekend apply weekendStyle
	     * 4. If its day in current month and component is not disabled or readOnly:
	     *    - If its current day apply todayStyle
	     *    - If this is selected day apply selectedDayStyle
	     *    - If component is hovered apply hover styles
	     *    - If component is hovered and active apply hoveredStyles + activeStyles
	     *    - If component is hovered and not active but focused and preventFocusStyleForTouchAndClick apply focus styles
	     * 5. If current day represents other months day in calendar apply otherMonthDayStyle
	     */
	
	  }, {
	    key: '_renderDay',
	    value: function _renderDay(currentDate, index) {
	      var day = currentDate.getDate();
	      var month = currentDate.getMonth();
	      var year = currentDate.getFullYear();
	      var isOtherMonth = month !== this.state.month;
	      var dateKey = (0, _dateHelpers.convertDateToDateKey)(currentDate);
	      var isDisabledDay = !this._isWithinMinAndMax(currentDate);
	
	      var ariaSelected = false;
	
	      var dayStyle = _extends({}, _datePicker2.default.dayStyle, this.props.dayStyle);
	
	      if (this.props.readOnly) {
	        dayStyle = _extends({}, dayStyle, _datePicker2.default.readOnlyDayStyle, this.props.readOnlyDayStyle);
	      }
	
	      if (isOtherMonth) {
	        dayStyle = _extends({}, dayStyle, _datePicker2.default.otherMonthDayStyle, this.props.otherMonthDayStyle);
	      }
	
	      if (this.props.disabled || isDisabledDay) {
	        dayStyle = _extends({}, dayStyle, _datePicker2.default.disabledDayStyle, this.props.disabledDayStyle);
	      }
	
	      if (currentDate.getDay() === this.localeData.weekEnd) {
	        dayStyle = _extends({}, dayStyle, _datePicker2.default.weekendStyle, this.props.weekendStyle);
	      }
	
	      if (day === (0, _dateHelpers.today)().getDate() && month === (0, _dateHelpers.today)().getMonth() && year === (0, _dateHelpers.today)().getFullYear()) {
	        dayStyle = _extends({}, dayStyle, _datePicker2.default.todayStyle, this.props.todayStyle);
	      }
	
	      if (this.state.selectedDate && day === this.state.selectedDate.getDate() && currentDate.getMonth() === this.state.selectedDate.getMonth() && currentDate.getFullYear() === this.state.selectedDate.getFullYear()) {
	        dayStyle = _extends({}, dayStyle, _datePicker2.default.selectedDayStyle, this.props.selectedDayStyle);
	        ariaSelected = true;
	      }
	
	      if (this.state.focusedDateKey === dateKey) {
	        dayStyle = _extends({}, dayStyle, _datePicker2.default.focusDayStyle, this.props.focusDayStyle);
	        if (this.props.disabled || isDisabledDay) {
	          dayStyle = _extends({}, dayStyle, _datePicker2.default.disabledFocusDayStyle, this.props.disabledFocusDayStyle);
	        }
	      }
	
	      if (!this.props.disabled && !this.props.readOnly && this.state.activeDay === dateKey) {
	        dayStyle = _extends({}, dayStyle, _datePicker2.default.activeDayStyle, this.props.activeDayStyle);
	      }
	
	      var renderedDay = this.props.renderDay ? this.props.renderDay(currentDate) : day;
	
	      if (!this.props.showOtherMonthDate && isOtherMonth) {
	        return _react2.default.createElement('span', _extends({
	          key: 'day-' + index,
	          style: dayStyle
	        }, this.emptyDayProps));
	      }
	
	      if (isDisabledDay) {
	        return _react2.default.createElement(
	          _DisabledDay2.default,
	          {
	            key: 'day-' + index,
	            style: dayStyle,
	            dateKey: dateKey,
	            onDayMouseEnter: this._onDayMouseEnter,
	            onDayMouseLeave: this._onDayMouseLeave,
	            disabledDayProps: this.disabledDayProps
	          },
	          renderedDay
	        );
	      }
	
	      return _react2.default.createElement(
	        _Day2.default,
	        {
	          key: 'day-' + index,
	          dateKey: dateKey,
	          onDayMouseDown: this._onDayMouseDown,
	          onDayMouseUp: this._onDayMouseUp,
	          onDayMouseEnter: this._onDayMouseEnter,
	          onDayMouseLeave: this._onDayMouseLeave,
	          onDayTouchStart: this._onDayTouchStart,
	          onDayTouchEnd: this._onDayTouchEnd,
	          onDayTouchCancel: this._onDayTouchCancel,
	          selected: ariaSelected,
	          style: dayStyle,
	          dayProps: this.dayProps
	        },
	        renderedDay
	      );
	    }
	
	    /**
	     * Function will render:
	     * - main calendar component
	     * - call methods to render navBar and week header
	     * - get array of weeks in a month and for each day in the week call method to render day
	     *
	     * It will apply styles sequentially according to Wrapper according to following rules:
	     * 1. If component is readOnly apply readOnlyStyle
	     * 2. If component is disabled apply disabledStyle
	     *    - If disabled component is hovered apply disabledHoverStyle
	     * 3. If component is not disabled:
	     *    - If component is hovered apply hover style
	     *    - If component is hovered and active apply hover + active styles
	     *    - If component is hovered and focused but not active and preventFocusStyleForTouchAndClick is true apply focusStyles
	     */
	
	  }, {
	    key: 'render',
	    value: function render() {
	      var _this3 = this;
	
	      var style = _extends({}, _datePicker2.default.style, this.props.style);
	      if (this.props.readOnly) {
	        style = _extends({}, style, _datePicker2.default.readOnlyStyle, this.props.readOnlyStyle);
	      }
	
	      if (this.props.disabled) {
	        style = _extends({}, style, _datePicker2.default.disabledStyle, this.props.disabledStyle);
	      }
	
	      if (this.preventFocusStyleForTouchAndClick && this.state.isFocused) {
	        style = _extends({}, style, _datePicker2.default.focusStyle, this.props.focusStyle);
	      }
	
	      if (this.state.isActive) {
	        style = _extends({}, style, _datePicker2.default.activeStyle, this.props.activeStyle);
	      }
	
	      var weekArray = (0, _dateHelpers.getWeekArrayForMonth)(this.state.month, this.state.year, this.localeData.firstDay);
	
	      var tabIndex = !this.props.disabled ? this.props.tabIndex : false;
	
	      return _react2.default.createElement(
	        'div',
	        _extends({
	          tabIndex: tabIndex,
	          onFocus: this._onFocus,
	          onBlur: this._onBlur,
	          onKeyDown: this._onKeyDown,
	          onMouseDown: this._onMouseDown,
	          onMouseUp: this._onMouseUp,
	          onTouchStart: this._onTouchStart,
	          onTouchEnd: this._onTouchEnd,
	          onTouchCancel: this._onTouchCancel,
	          'aria-label': this.props['aria-label'],
	          'aria-disabled': this.props.disabled,
	          'aria-readonly': this.props.readOnly,
	          style: style,
	          className: (0, _unionClassNames2.default)(this.props.className, this.pseudoStyleIds.styleId)
	        }, this.wrapperProps),
	        this._renderNavBar(),
	        _react2.default.createElement(
	          'div',
	          _extends({
	            role: 'grid',
	            style: _datePicker2.default.weekGridStyle
	          }, this.weekGridProps),
	          this._renderWeekHeader(),
	          (0, _helpers.map)(weekArray, function (week) {
	            var weekDays = _this3.localeData.isRTL ? (0, _helpers.reverse)(week) : week;
	            return (0, _helpers.map)(weekDays, function (day, dayIndex) {
	              return _this3._renderDay(day, dayIndex);
	            });
	          })
	        )
	      );
	    }
	  }]);
	
	  return DatePicker;
	}(_react.Component);
	
	DatePicker.displayName = 'DatePicker';
	DatePicker.propTypes = datePickerPropTypes;
	DatePicker.defaultProps = {
	  tabIndex: 0,
	  'aria-label': 'datepicker',
	  disabled: false,
	  readOnly: false,
	  showOtherMonthDate: true
	};
	
	var _initialiseProps = function _initialiseProps() {
	  var _this4 = this;
	
	  this._onFocus = function () {
	    if (!_this4.props.disabled) {
	      if (!_this4.state.isActive) {
	        var newState = {
	          isFocused: true
	        };
	        if (!_this4.state.focusedDateKey) {
	          if (_this4.state.selectedDate && _this4.state.selectedDate.getMonth() === _this4.state.month && _this4.state.selectedDate.getFullYear() === _this4.state.year) {
	            newState.focusedDateKey = (0, _dateHelpers.convertDateToDateKey)(_this4.state.selectedDate);
	          } else if (_this4.state.month === (0, _dateHelpers.today)().getMonth() && _this4.state.year === (0, _dateHelpers.today)().getFullYear()) {
	            newState.focusedDateKey = (0, _dateHelpers.getDateKey)((0, _dateHelpers.today)().getFullYear(), (0, _dateHelpers.today)().getMonth() + 1, (0, _dateHelpers.today)().getDate());
	          } else {
	            newState.focusedDateKey = (0, _dateHelpers.getDateKey)(_this4.state.year, _this4.state.month + 1, 1);
	          }
	        }
	
	        _this4.setState(newState);
	      }
	    }
	
	    if (_this4.props.onFocus) {
	      _this4.props.onFocus(event);
	    }
	  };
	
	  this._onBlur = function () {
	    if (!_this4.props.disabled) {
	      _this4.setState({
	        isFocused: false,
	        focusedDateKey: undefined
	      });
	    }
	
	    if (_this4.props.onBlur) {
	      _this4.props.onBlur(event);
	    }
	  };
	
	  this._onMouseDown = function (event) {
	    if (!_this4.props.disabled && event.button === 0) {
	      _this4.setState({
	        isActive: true
	      });
	    }
	
	    if (_this4.props.onMouseDown) {
	      _this4.props.onMouseDown(event);
	    }
	  };
	
	  this._onMouseUp = function (event) {
	    if (!_this4.props.disabled && event.button === 0) {
	      _this4.setState({
	        isActive: false
	      });
	    }
	
	    if (_this4.props.onMouseUp) {
	      _this4.props.onMouseUp(event);
	    }
	  };
	
	  this._onTouchStart = function (event) {
	    if (!_this4.props.disabled && event.touches.length === 1) {
	      _this4.setState({
	        isActive: true
	      });
	    }
	
	    if (_this4.props.onTouchStart) {
	      _this4.props.onTouchStart(event);
	    }
	  };
	
	  this._onTouchEnd = function () {
	    if (!_this4.props.disabled) {
	      _this4.setState({
	        isActive: false
	      });
	    }
	
	    if (_this4.props.onTouchEnd) {
	      _this4.props.onTouchEnd(event);
	    }
	  };
	
	  this._onTouchCancel = function () {
	    _this4.setState({
	      isActive: false
	    });
	
	    if (_this4.props.onTouchCancel) {
	      _this4.props.onTouchCancel(event);
	    }
	  };
	
	  this._onKeyDown = function (event) {
	    if (!_this4.props.disabled) {
	      if (event.key === 'Home') {
	        // Moves to the first day of the current month.
	        event.preventDefault();
	        _this4._focusOnTheFistDayOfTheMonth();
	      } else if (event.key === 'End') {
	        // Moves to the last day of the current month.
	        event.preventDefault();
	        var date = (0, _dateHelpers.getLastDayForMonth)(_this4.state.year, _this4.state.month);
	        _this4.setState({
	          focusedDateKey: (0, _dateHelpers.convertDateToDateKey)(date)
	        });
	      }
	
	      if (_this4.state.focusedDateKey) {
	        if (event.key === 'ArrowDown') {
	          event.preventDefault();
	          _this4._focusOtherDay(7);
	        } else if (event.key === 'ArrowUp') {
	          event.preventDefault();
	          _this4._focusOtherDay(-7);
	        } else if (event.key === 'ArrowLeft') {
	          event.preventDefault();
	          _this4._focusOtherDay(_this4.localeData.isRTL ? 1 : -1);
	        } else if (event.key === 'ArrowRight') {
	          event.preventDefault();
	          _this4._focusOtherDay(_this4.localeData.isRTL ? -1 : 1);
	        } else if (event.key === 'PageUp') {
	          _this4._onPageUpKeyDown(event);
	        } else if (event.key === 'PageDown') {
	          _this4._onPageDownKeyDown(event);
	        } else if (event.key === 'Enter') {
	          event.preventDefault();
	          var _date = (0, _dateHelpers.getDateForDateKey)(_this4.state.focusedDateKey);
	          if (_this4._isWithinMinAndMax(_date)) {
	            _this4._triggerSelectDate(_date.getDate(), _date.getMonth(), _date.getFullYear());
	          }
	        } else if (event.key === ' ') {
	          event.preventDefault();
	          var _date2 = (0, _dateHelpers.getDateForDateKey)(_this4.state.focusedDateKey);
	          if (_this4._isWithinMinAndMax(_date2)) {
	            _this4._triggerToggleDate(_date2);
	          }
	        }
	      } else {
	        if (event.key === 'ArrowDown' || event.key === 'ArrowUp' || event.key === 'ArrowLeft' || event.key === 'ArrowRight') {
	          event.preventDefault();
	          _this4._focusOnFallbackDay();
	        }
	      }
	    }
	
	    if (_this4.props.onKeyDown) {
	      _this4.props.onKeyDown(event);
	    }
	  };
	
	  this._onPageUpKeyDown = function (event) {
	    // Moves to the same date in the previous month.
	    event.preventDefault();
	
	    // TODO extract this to a helper function and test various edge cases
	    var date = void 0;
	    var lastDayInMonth = (0, _dateHelpers.getLastDayForMonth)(_this4.state.year, _this4.state.month - 1);
	    var focusedDate = (0, _dateHelpers.getDateForDateKey)(_this4.state.focusedDateKey);
	
	    // jump from March 30 to Feb 29
	    if (focusedDate.getDate() > lastDayInMonth.getDate()) {
	      date = lastDayInMonth;
	    } else {
	      date = (0, _dateHelpers.getDateForDateKey)(_this4.state.focusedDateKey);
	      date.setMonth(date.getMonth() - 1);
	    }
	
	    _this4.setState({
	      focusedDateKey: (0, _dateHelpers.convertDateToDateKey)(date),
	      month: date.getMonth(),
	      year: date.getFullYear(),
	      lastHoveredDay: undefined
	    });
	  };
	
	  this._onPageDownKeyDown = function (event) {
	    // Moves to the same date in the next month.
	    event.preventDefault();
	
	    // TODO extract this to a helper function and test various edge cases
	    var date = void 0;
	    var lastDayInMonth = (0, _dateHelpers.getLastDayForMonth)(_this4.state.year, _this4.state.month + 1);
	    var focusedDate = (0, _dateHelpers.getDateForDateKey)(_this4.state.focusedDateKey);
	
	    // Use case: Jump from Jan 31 to Feb 29
	    if (focusedDate.getDate() > lastDayInMonth.getDate()) {
	      date = lastDayInMonth;
	    } else {
	      date = (0, _dateHelpers.getDateForDateKey)(_this4.state.focusedDateKey);
	      date.setMonth(date.getMonth() + 1);
	    }
	
	    _this4.setState({
	      focusedDateKey: (0, _dateHelpers.convertDateToDateKey)(date),
	      month: date.getMonth(),
	      year: date.getFullYear(),
	      lastHoveredDay: undefined
	    });
	  };
	
	  this._onDayMouseDown = function (dateKey, event) {
	    if (event.button === 0 && !_this4.props.disabled && !_this4.props.readOnly) {
	      _this4.setState({
	        activeDay: dateKey
	      });
	    }
	
	    if (_this4.props.dayProps && _this4.props.dayProps.onMouseDown) {
	      _this4.props.dayProps.onMouseDown(event);
	    }
	  };
	
	  this._onDayMouseUp = function (dateKey, event) {
	    if (event.button === 0 && !_this4.props.disabled && !_this4.props.readOnly && _this4.state.activeDay === dateKey) {
	      var date = (0, _dateHelpers.getDateForDateKey)(dateKey);
	      var day = date.getDate();
	      var month = date.getMonth();
	      var year = date.getFullYear();
	      _this4._triggerSelectDate(day, month, year);
	      _this4.setState({
	        // Note: updating focusedDateKey in mouseEnter normally would be good enough,
	        // but it is necessary to set on mouseUp for the following edge case:
	        // A user moves the cursor over a day. Moves on with the keyboard and
	        // then without moving again just pressing the mouse. In this case
	        // mouseEnter did not get called again.
	        focusedDateKey: dateKey,
	        activeDay: undefined
	      });
	    }
	
	    if (_this4.props.dayProps && _this4.props.dayProps.onMouseUp) {
	      _this4.props.dayProps.onMouseUp(event);
	    }
	  };
	
	  this._onDayMouseEnter = function (dateKey, event) {
	    if (!_this4.props.readOnly) {
	      _this4.setState({
	        focusedDateKey: dateKey
	      });
	    }
	
	    if (_this4.props.dayProps && _this4.props.dayProps.onMouseEnter) {
	      _this4.props.dayProps.onMouseEnter(event);
	    }
	  };
	
	  this._onDayMouseLeave = function (dateKey, event) {
	    if (!_this4.props.readOnly && event.button === 0 && _this4.state.focusedDateKey === dateKey) {
	      _this4.setState({
	        focusedDateKey: undefined,
	        lastHoveredDay: _this4.state.focusedDateKey
	      });
	    }
	
	    if (_this4.props.dayProps && _this4.props.dayProps.onMouseLeave) {
	      _this4.props.dayProps.onMouseLeave(event);
	    }
	  };
	
	  this._onDayTouchStart = function (dateKey, event) {
	    if (!_this4.props.disabled && !_this4.props.readOnly && event.touches.length === 1) {
	      _this4.setState({
	        activeDay: dateKey
	      });
	    }
	
	    if (_this4.props.dayProps && _this4.props.dayProps.onTouchStart) {
	      _this4.props.dayProps.onTouchStart(event);
	    }
	  };
	
	  this._onDayTouchEnd = function (dateKey, event) {
	    if (!_this4.props.disabled && !_this4.props.readOnly) {
	      var date = (0, _dateHelpers.getDateForDateKey)(dateKey);
	      var day = date.getDate();
	      var month = date.getMonth();
	      var year = date.getFullYear();
	      _this4._triggerSelectDate(day, month, year);
	      if (_this4.state.activeDay === dateKey) {
	        _this4.setState({
	          activeDay: undefined
	        });
	      }
	    }
	
	    if (_this4.props.dayProps && _this4.props.dayProps.onTouchEnd) {
	      _this4.props.dayProps.onTouchEnd(event);
	    }
	  };
	
	  this._onDayTouchCancel = function (dateKey, event) {
	    _this4.setState({
	      activeDay: undefined
	    });
	
	    if (_this4.props.dayProps && _this4.props.dayProps.onTouchCancel) {
	      _this4.props.dayProps.onTouchCancel(event);
	    }
	  };
	
	  this._onClickPrevMonth = function () {
	    _this4._decreaseMonthYear();
	    if (_this4.props.prevMonthNavProps && _this4.props.prevMonthNavProps.onClick) {
	      _this4.props.prevMonthNavProps.onClick(event);
	    }
	  };
	
	  this._onClickNextMonth = function () {
	    _this4._increaseMonthYear();
	    if (_this4.props.nextMonthNavProps && _this4.props.nextMonthNavProps.onClick) {
	      _this4.props.nextMonthNavProps.onClick(event);
	    }
	  };
	};
	
	exports.default = DatePicker;

/***/ },
/* 454 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.today = exports.convertDateToDateKey = exports.getDateForDateKey = exports.getDateKey = exports.getLocaleData = exports.getLastDayForMonth = exports.getWeekArrayForMonth = undefined;
	
	var _i18n = __webpack_require__(455);
	
	var _i18n2 = _interopRequireDefault(_i18n);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * The function will take a month and year value and will return an array of weeks for that month.
	 * Each element in this array will be in-turn an array of days in the week.
	 * @param {number} month: the month for which array of weeks is needed
	 * @param {number} year: the year for which array of weeks is needed
	 * @param {number} firstDayOfWeek: first day of the week in the locale
	 * @returns {Array}: Array of weeks in a month, each week is in turn array of days in that week
	 */
	var getWeekArrayForMonth = exports.getWeekArrayForMonth = function getWeekArrayForMonth(month, year, firstDayOfWeek) {
	  var monthDay = new Date(year, month, 1);
	
	  // Todo: simplify this calculation of first date
	  var firstDate = 1 + firstDayOfWeek - monthDay.getDay();
	  firstDate = firstDate <= 1 ? firstDate : firstDate - 7;
	  monthDay.setDate(firstDate);
	  var lastDate = new Date(year, month + 1, 0);
	
	  var weekArray = [];
	  while (monthDay <= lastDate) {
	    var newWeek = [];
	    for (var dayCounter = 0; dayCounter < 7; dayCounter++) {
	      var weekDate = new Date(monthDay.getFullYear(), monthDay.getMonth(), monthDay.getDate());
	      newWeek.push(weekDate);
	      monthDay.setDate(monthDay.getDate() + 1);
	    }
	
	    weekArray.push(newWeek);
	  }
	
	  return weekArray;
	};
	
	var getLastDayForMonth = exports.getLastDayForMonth = function getLastDayForMonth(year, month) {
	  return new Date(year, month + 1, 0);
	};
	
	/**
	 * Function will return locale data for locale. If data is not available in config files it will return default data.
	 * @param locale - locale for which data is needed.
	 * @returns {Object}: Object containing locale data.
	 */
	var getLocaleData = exports.getLocaleData = function getLocaleData(locale) {
	  var localeResult = {};
	  var lData = void 0;
	  if (locale) {
	    lData = _i18n2.default.localeData[locale];
	  }
	
	  var monthNames = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];
	
	  localeResult.monthNames = lData && lData.monthNames ? lData.monthNames : monthNames;
	  localeResult.dayNamesMin = lData && lData.dayNamesMin ? lData.dayNamesMin : ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'];
	  localeResult.firstDay = lData && lData.firstDay ? lData.firstDay : 0;
	  localeResult.weekEnd = lData && lData.weekEnd ? lData.weekEnd : 0;
	  localeResult.isRTL = lData && lData.isRTL ? lData.isRTL : false;
	  return localeResult;
	};
	
	/**
	 * Returns the string representation for a provided year, month & day.
	 *
	 * @param year {number} - any year
	 * @param month {number} - can be between 1 and 12
	 * @param day {number} - can be between 1 and 31 depending on the month
	 * @returns {string}: a string representing the date in the format yyyy-mm-dd
	 */
	var getDateKey = exports.getDateKey = function getDateKey(year, month, day) {
	  return year + '-' + month + '-' + day;
	};
	
	/**
	 * Returns the date for a date string representation.
	 *
	 * @param year {number} - any year
	 * @param month {number} - can be between 1 and 12
	 * @param day {number} - can be between 1 and 31 depending on the month
	 * @returns {date} - the parse date
	 */
	var getDateForDateKey = exports.getDateForDateKey = function getDateForDateKey(dateKey) {
	  var splittedDate = dateKey.split('-');
	  return new Date(parseInt(splittedDate[0], 10), parseInt(splittedDate[1], 10) - 1, parseInt(splittedDate[2], 10));
	};
	
	/**
	 * Returns the string representation for a provided date.
	 *
	 * @param date {date} - a valid date
	 * @returns {string}: a string representing the date in the format yyyy-mm-dd
	 */
	var convertDateToDateKey = exports.convertDateToDateKey = function convertDateToDateKey(date) {
	  return getDateKey(date.getFullYear(), date.getMonth() + 1, date.getDate());
	};
	
	/**
	 * Returns the date of today
	 *
	 * @returns {date}: today's date
	 */
	var today = exports.today = function today() {
	  return new Date();
	};

/***/ },
/* 455 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var i18nConfig = {
	
	  localeData: {
	    nl: {
	      monthNames: ['januari', 'februari', 'maart', 'april', 'mei', 'juni', 'juli', 'augustus', 'september', 'oktober', 'november', 'december'],
	      dayNamesMin: ['zo', 'ma', 'di', 'wo', 'do', 'vr', 'za'],
	      firstDay: 1,
	      weekEnd: 0,
	      isRTL: false
	    },
	    ar: {
	      monthNames: ['يناير', 'فبراير', 'مارس', 'أبريل', 'مايو', 'يونيو', 'يوليو', 'أغسطس', 'سبتمبر', 'أكتوبر', 'نوفمبر', 'ديسمبر'],
	      dayNamesMin: ['ح', 'ن', 'ث', 'ر', 'خ', 'ج', 'س'],
	      firstDay: 6,
	      weekEnd: 5,
	      isRTL: true
	    },
	    he: {
	      monthNames: ['ינואר', 'פברואר', 'מרץ', 'אפריל', 'מאי', 'יוני', 'יולי', 'אוגוסט', 'ספטמבר', 'אוקטובר', 'נובמבר', 'דצמבר'],
	      dayNamesMin: ['א\'', 'ב\'', 'ג\'', 'ד\'', 'ה\'', 'ו\'', 'שבת'],
	      firstDay: 0,
	      weekEnd: 6,
	      isRTL: true
	    },
	    fr: {
	      monthNames: ['janvier', 'février', 'mars', 'avril', 'mai', 'juin', 'juillet', 'août', 'septembre', 'octobre', 'novembre', 'décembre'],
	      dayNamesMin: ['D', 'L', 'M', 'M', 'J', 'V', 'S'],
	      firstDay: 1,
	      weekEnd: 0,
	      isRTL: false
	    },
	    'zh-CN': {
	      monthNames: ['一月', '二月', '三月', '四月', '五月', '六月', '七月', '八月', '九月', '十月', '十一月', '十二月'],
	      dayNamesMin: ['日', '一', '二', '三', '四', '五', '六'],
	      firstDay: 1,
	      weekEnd: 0,
	      isRTL: false
	    }
	  }
	
	};
	
	exports.default = i18nConfig;

/***/ },
/* 456 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var datePickerStyle = {
	
	  // wrapper of entire component
	  style: {
	    borderRadius: 2,
	    width: 267,
	    fontSize: 14,
	    textAlign: 'center',
	    boxSizing: 'border-box',
	    backgroundColor: 'white',
	
	    /*
	     To avoid any kind of flickering the user won't get feedback
	     for selecting the button text
	     */
	    WebkitUserSelect: 'none',
	    MozUserSelect: 'none',
	    MsUserSelect: 'none',
	    userSelect: 'none',
	
	    MsTouchAction: 'manipulation',
	    touchAction: 'manipulation',
	
	    /*
	     Prevent flickering while tapping on WebKit
	     http://stackoverflow.com/a/3516243/837709
	     */
	    WebkitTapHighlightColor: 'transparent',
	
	    transition: 'color 0.1s',
	    transitionTimingFunction: 'ease-out'
	  },
	
	  disabledStyle: {},
	
	  readOnlyStyle: {},
	
	  hoverStyle: {},
	
	  focusStyle: {
	    WebkitAnimation: 'belle-button-focus 2s',
	    outline: 0 },
	
	  // avoid default focus behaviour
	  disabledHoverStyle: {
	    backgroundColor: '#E1E9EC'
	  },
	
	  // nav-bar at top for month navigation
	  navBarStyle: {
	    height: 38,
	    border: '1px solid #E0E0E0',
	    boxSizing: 'border-box'
	  },
	
	  // left button in nav-bar to go to previous month
	  prevMonthNavStyle: {
	    float: 'left',
	    marginLeft: -1,
	    paddingLeft: '15px',
	    paddingRight: '19px'
	  },
	
	  prevMonthNavIconStyle: {
	    width: 0,
	    height: 0,
	    borderTop: '7px solid transparent',
	    borderBottom: '7px solid transparent',
	    borderRight: '12px solid #666',
	    borderRadius: 2
	  },
	
	  hoverPrevMonthNavStyle: {},
	
	  activePrevMonthNavStyle: {},
	
	  // right button in nav-bar to go to previous month
	  nextMonthNavStyle: {
	    float: 'right',
	    marginRight: -1,
	    paddingLeft: '19px',
	    paddingRight: '15px'
	  },
	
	  nextMonthNavIconStyle: {
	    width: 0,
	    height: 0,
	    borderTop: '7px solid transparent',
	    borderBottom: '7px solid transparent',
	    borderLeft: '12px solid #666',
	    borderRadius: 2
	  },
	
	  hoverNextMonthNavStyle: {},
	
	  activeNextMonthNavStyle: {},
	
	  // styling for month label on top of calendar
	  monthLabelStyle: {
	    fontSize: 15,
	    boxSizing: 'border-box',
	    paddingTop: 7,
	    display: 'inline-block',
	
	    /*
	     User should be able to copy date.
	     */
	    WebkitUserSelect: 'initial',
	    MozUserSelect: 'initial',
	    MsUserSelect: 'initial',
	    userSelect: 'initial'
	  },
	
	  // styling for entire grid of week-header and weeks
	  weekGridStyle: {
	    boxSizing: 'border-box',
	    overflow: 'auto',
	    paddingBottom: 1
	  },
	
	  weekHeaderStyle: {
	    overflow: 'auto',
	    boxSizing: 'border-box',
	    boxShadow: '1px 0 0 0 #E0E0E0 inset, -1px 0 0 0 #E0E0E0 inset'
	  },
	
	  // styling for week's day label
	  dayLabelStyle: {
	    width: 39,
	    height: 32,
	    marginRight: -1,
	    color: '#666',
	    display: 'block',
	    float: 'left',
	    boxSizing: 'border-box',
	    paddingTop: 5,
	
	    /*
	     User should be able to copy date.
	     */
	    WebkitUserSelect: 'initial',
	    MozUserSelect: 'initial',
	    MsUserSelect: 'initial',
	    userSelect: 'initial'
	  },
	
	  disabledDayLabelStyle: {},
	
	  weekendLabelStyle: {
	    // color: '#8E8071',
	  },
	
	  // styling for individual day
	  dayStyle: {
	    width: 39,
	    height: 32,
	    borderLeft: '1px solid #E0E0E0',
	    borderRight: '1px solid #E0E0E0',
	    borderTop: '1px solid #E0E0E0',
	    borderBottom: '1px solid #E0E0E0',
	    color: '#716D6D',
	    float: 'left',
	    marginRight: -1,
	    marginBottom: -1,
	    boxSizing: 'border-box',
	    paddingTop: 5,
	    position: 'relative',
	    zIndex: 100,
	    cursor: 'default',
	
	    /*
	     To avoid any kind of flickering the user won't get feedback
	     for selecting the button text
	     */
	    WebkitUserSelect: 'none',
	    MozUserSelect: 'none',
	    MsUserSelect: 'none',
	    userSelect: 'none',
	
	    /* This button can only be pressed */
	    MsTouchAction: 'manipulation',
	    touchAction: 'manipulation',
	
	    /*
	     Prevent flickering while tapping on WebKit
	     http://stackoverflow.com/a/3516243/837709
	     */
	    WebkitTapHighlightColor: 'transparent'
	  },
	
	  readOnlyDayStyle: {},
	
	  activeDayStyle: {
	    borderTop: '1px solid #B1B1B1',
	    borderLeft: '1px solid #D0D0D0',
	    borderRight: '1px solid #D0D0D0',
	    borderBottom: '1px solid #D4D4D4',
	    background: '#E0E0E0',
	    zIndex: 200
	  },
	
	  focusDayStyle: {
	    background: '#EEE',
	    cursor: 'pointer'
	  },
	
	  disabledDayStyle: {
	    color: '#C1BABA',
	    cursor: 'not-allowed'
	  },
	
	  disabledFocusDayStyle: {
	    cursor: 'not-allowed'
	  },
	
	  todayStyle: {
	    color: '#2C87A9'
	  },
	
	  weekendStyle: {
	    color: '#8E8071'
	  },
	
	  selectedDayStyle: {
	    borderTop: '1px solid #B1B1B1',
	    borderLeft: '1px solid #D0D0D0',
	    borderRight: '1px solid #D0D0D0',
	    borderBottom: '1px solid #D4D4D4',
	    background: '#E0E0E0',
	    zIndex: 200
	  },
	
	  otherMonthDayStyle: {
	    color: '#BDBDBD'
	  }
	};
	
	exports.default = datePickerStyle;

/***/ },
/* 457 */
/***/ function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var datePickerConfig = {
	  preventFocusStyleForTouchAndClick: true
	};
	
	exports.default = datePickerConfig;

/***/ },
/* 458 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _actionArea = __webpack_require__(459);
	
	var _actionArea2 = _interopRequireDefault(_actionArea);
	
	var _helpers = __webpack_require__(417);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var actionAreaPropTypes = {
	  activeStyle: _react.PropTypes.object,
	  children: _react.PropTypes.oneOfType([_react.PropTypes.arrayOf(_react.PropTypes.node), _react.PropTypes.node]),
	  hoverStyle: _react.PropTypes.object,
	  onTouchStart: _react.PropTypes.func,
	  onTouchEnd: _react.PropTypes.func,
	  onTouchCancel: _react.PropTypes.func,
	  onMouseDown: _react.PropTypes.func,
	  onMouseEnter: _react.PropTypes.func,
	  onMouseLeave: _react.PropTypes.func,
	
	  // TODO investigate how we solve mouseUp in other compents (like the right click edgecase)
	  onMouseUp: _react.PropTypes.func,
	  onUpdate: _react.PropTypes.func,
	  onClick: _react.PropTypes.func,
	  style: _react.PropTypes.object
	};
	
	function sanitizeChildProps(properties) {
	  return (0, _helpers.omit)(properties, Object.keys(actionAreaPropTypes));
	}
	
	/**
	 * ActionArea
	 *
	 * The purpose of this component is to provide a button like behaviour for a
	 * click like interaction within other components. Button can't be used in such
	 * cases as it always will have it's own focus which is not desired in
	 * components like DatePicker e.g. next month button.
	 *
	 * Note: Use the ActionArea's onUpdate instead of onClick as otherwise on iOS9
	 * the ActionArea will trigger onFocus for it's parent with a set tabindex.
	 */
	
	var ActionArea = function (_Component) {
	  _inherits(ActionArea, _Component);
	
	  function ActionArea(properties) {
	    _classCallCheck(this, ActionArea);
	
	    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(ActionArea).call(this, properties));
	
	    _this.state = {
	      // Note: On touch devices mouseEnter is fired while mouseLeave is not.
	      // This would result in a hover effect that keeps active until another
	      // element is focused on. This would result in the same behaviour as using
	      // the :hover pseudo class. To prevent it from happening activating the
	      // hover state is prevented when a touch event has been triggered before.
	      // source: http://stackoverflow.com/a/22444532/837709
	      isIgnoringHover: false,
	      isActive: false,
	      isHovered: false
	    };
	
	    _this._onMouseEnter = function (event) {
	      if (!_this.state.isIgnoringHover) {
	        _this.setState({
	          isHovered: true,
	          isIgnoringHover: false
	        });
	      }
	
	      if (_this.props.onMouseEnter) {
	        _this.props.onMouseEnter(event);
	      }
	    };
	
	    _this._onMouseLeave = function (event) {
	      _this.setState({
	        isHovered: false
	      });
	
	      if (_this.props.onMouseLeave) {
	        _this.props.onMouseLeave(event);
	      }
	    };
	
	    _this._onMouseDown = function (event) {
	      if (event.button === 0) {
	        _this.setState({
	          isActive: true
	        });
	      }
	
	      if (_this.props.onMouseDown) {
	        _this.props.onMouseDown(event);
	      }
	    };
	
	    _this._onMouseUp = function (event) {
	      if (event.button === 0) {
	        _this.setState({
	          isActive: false
	        });
	      }
	
	      if (_this.props.onMouseUp) {
	        _this.props.onMouseUp(event);
	      }
	    };
	
	    _this._onTouchStart = function (event) {
	      if (event.touches.length === 1) {
	        _this.setState({
	          isActive: true,
	          isIgnoringHover: true
	        });
	      }
	
	      if (_this.props.onTouchStart) {
	        _this.props.onTouchStart(event);
	      }
	    };
	
	    _this._onTouchEnd = function () {
	      _this.setState({
	        isActive: false,
	        isIgnoringHover: true
	      });
	
	      if (_this.props.onTouchEnd) {
	        _this.props.onTouchEnd(event);
	      }
	    };
	
	    _this._onTouchCancel = function () {
	      _this.setState({
	        isActive: false,
	        isIgnoringHover: true
	      });
	
	      if (_this.props.onTouchCancel) {
	        _this.props.onTouchCancel(event);
	      }
	    };
	
	    _this._onClick = function (event) {
	      if (_this.props.onClick) {
	        _this.props.onClick(event);
	      }
	
	      if (_this.props.onUpdate) {
	        _this.props.onUpdate({});
	      }
	    };
	
	    _this.childProps = sanitizeChildProps(properties);
	    return _this;
	  }
	
	  _createClass(ActionArea, [{
	    key: 'componentWillReceiveProps',
	
	
	    /**
	     * Update the childProps based on the updated properties passed to the card.
	     */
	    value: function componentWillReceiveProps(properties) {
	      this.childProps = sanitizeChildProps(properties);
	    }
	
	    /**
	     * As soon as the mouse enters the component the isHovered state is activated.
	     *
	     * The state isHovered is not set to true in case onMouseEnter was triggered
	     * by a touch event.
	     */
	
	
	    /**
	     * Deactivate the isHovered state.
	     */
	
	
	    /**
	     * Activates the active state in case the main mouse button was pressed.
	     */
	
	
	    /**
	     * Triggers onUpdate in case the mouse button was pressed on this element.
	     *
	     * In addition the active state is deactivated.
	     */
	
	
	    /**
	     * Updates the button to be active and makes sure the next onMouseEnter is
	     * ignored.
	     */
	
	
	    /**
	     * Triggers onUpdate in case the touch event started on this element and makes
	     * sure the next onMouseEnter is ignored.
	     */
	
	
	    /**
	     * Updates the button to be release and makes sure the next onMouseEnter is
	     * ignored.
	     */
	
	  }, {
	    key: 'render',
	    value: function render() {
	      var style = _extends({}, _actionArea2.default.style, this.props.style);
	      if (this.state.isHovered) {
	        style = _extends({}, style, _actionArea2.default.hoverStyle, this.props.hoverStyle);
	      }
	
	      if (this.state.isActive) {
	        style = _extends({}, style, _actionArea2.default.activeStyle, this.props.activeStyle);
	      }
	
	      return _react2.default.createElement(
	        'div',
	        _extends({
	          role: 'button'
	        }, this.childProps, {
	          onMouseDown: this._onMouseDown,
	          onMouseUp: this._onMouseUp,
	          onMouseEnter: this._onMouseEnter,
	          onMouseLeave: this._onMouseLeave,
	          onTouchStart: this._onTouchStart,
	          onTouchEnd: this._onTouchEnd,
	          onTouchCancel: this._onTouchCancel,
	          onClick: this._onClick,
	          style: style
	        }),
	        this.props.children
	      );
	    }
	  }]);
	
	  return ActionArea;
	}(_react.Component);
	
	ActionArea.displayName = 'ActionArea';
	ActionArea.propTypes = actionAreaPropTypes;
	exports.default = ActionArea;

/***/ },
/* 459 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var actionAreaStyle = {
	
	  style: {
	    boxSizing: 'border-box',
	    color: '#716D6D',
	    fontSize: 17,
	    paddingTop: '11px',
	    paddingBottom: '11px',
	    paddingLeft: '16px',
	    paddingRight: '16px',
	    marginTop: -1,
	    textAlign: 'center',
	    textDecoration: 'none',
	    width: 48,
	    borderLeft: '1px solid #E0E0E0',
	    borderRight: '1px solid #E0E0E0',
	    borderTop: '1px solid #E0E0E0',
	    borderBottom: '1px solid #E0E0E0',
	
	    /* animations */
	    transition: 'background 0.1s, border-top 0.1s, border-bottom 0.1s, color 0.1s',
	    transitionTimingFunction: 'ease-out',
	
	    /*
	    To avoid any kind of flickering the user won't get feedback
	    for selecting the button text
	    */
	    WebkitUserSelect: 'none',
	    MozUserSelect: 'none',
	    MsUserSelect: 'none',
	    userSelect: 'none',
	
	    /* This button can only be pressed */
	    MsTouchAction: 'manipulation',
	    touchAction: 'manipulation',
	
	    /*
	    Prevent flickering while tapping on WebKit
	    http://stackoverflow.com/a/3516243/837709
	    */
	    WebkitTapHighlightColor: 'transparent'
	  },
	
	  hoverStyle: {
	    background: '#EEE',
	    cursor: 'pointer'
	  },
	
	  activeStyle: {
	    borderTop: '1px solid #B1B1B1',
	    borderLeft: '1px solid #D0D0D0',
	    borderRight: '1px solid #D0D0D0',
	    borderBottom: '1px solid #D4D4D4',
	    background: '#E0E0E0'
	  }
	};
	
	exports.default = actionAreaStyle;

/***/ },
/* 460 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	/**
	 * Belle internal component to wrap a DisabledDay in a DatePicker.
	 *
	 * This component exists to avoid binding functions in JSX.
	 */
	
	var DisabledDay = function (_Component) {
	  _inherits(DisabledDay, _Component);
	
	  function DisabledDay() {
	    var _Object$getPrototypeO;
	
	    var _temp, _this, _ret;
	
	    _classCallCheck(this, DisabledDay);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_Object$getPrototypeO = Object.getPrototypeOf(DisabledDay)).call.apply(_Object$getPrototypeO, [this].concat(args))), _this), _this._onMouseEnter = function (event) {
	      _this.props.onDayMouseEnter(_this.props.dateKey, event);
	    }, _this._onMouseLeave = function (event) {
	      _this.props.onDayMouseLeave(_this.props.dateKey, event);
	    }, _temp), _possibleConstructorReturn(_this, _ret);
	  }
	
	  _createClass(DisabledDay, [{
	    key: 'render',
	    value: function render() {
	      return _react2.default.createElement(
	        'span',
	        _extends({
	          style: this.props.style,
	          onMouseEnter: this._onDayMouseEnter,
	          onMouseLeave: this._onDayMouseLeave
	        }, this.props.disabledDayProps),
	        this.props.children
	      );
	    }
	  }]);
	
	  return DisabledDay;
	}(_react.Component);
	
	DisabledDay.displayName = 'DisabledDay';
	DisabledDay.propTypes = {
	  children: _react.PropTypes.node.isRequired,
	  dateKey: _react.PropTypes.string.isRequired,
	  onDayMouseEnter: _react.PropTypes.func.isRequired,
	  onDayMouseLeave: _react.PropTypes.func.isRequired,
	  style: _react.PropTypes.object.isRequired,
	  disabledDayProps: _react.PropTypes.any
	};
	exports.default = DisabledDay;

/***/ },
/* 461 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	/**
	 * Belle internal component to wrap a Day in a DatePicker.
	 *
	 * This component exists to avoid binding functions in JSX.
	 */
	
	var Day = function (_Component) {
	  _inherits(Day, _Component);
	
	  function Day() {
	    var _Object$getPrototypeO;
	
	    var _temp, _this, _ret;
	
	    _classCallCheck(this, Day);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_Object$getPrototypeO = Object.getPrototypeOf(Day)).call.apply(_Object$getPrototypeO, [this].concat(args))), _this), _this._onMouseEnter = function (event) {
	      _this.props.onDayMouseEnter(_this.props.dateKey, event);
	    }, _this._onMouseLeave = function (event) {
	      _this.props.onDayMouseLeave(_this.props.dateKey, event);
	    }, _this._onMouseDown = function (event) {
	      _this.props.onDayMouseDown(_this.props.dateKey, event);
	    }, _this._onMouseUp = function (event) {
	      _this.props.onDayMouseUp(_this.props.dateKey, event);
	    }, _this._onTouchStart = function (event) {
	      _this.props.onDayTouchStart(_this.props.dateKey, event);
	    }, _this._onTouchEnd = function (event) {
	      _this.props.onDayTouchEnd(_this.props.dateKey, event);
	    }, _this._onTouchCancel = function (event) {
	      _this.props.onDayTouchCancel(_this.props.dateKey, event);
	    }, _temp), _possibleConstructorReturn(_this, _ret);
	  }
	
	  _createClass(Day, [{
	    key: 'render',
	    value: function render() {
	      var _extends2;
	
	      return _react2.default.createElement(
	        'span',
	        _extends((_extends2 = {
	          style: this.props.style,
	          onMouseEnter: this._onMouseEnter,
	          onMouseLeave: this._onMouseLeave,
	          onMouseDown: this._onMouseDown,
	          onMouseUp: this._onMouseUp,
	          onTouchStart: this._onTouchStart,
	          onTouchEnd: this._onTouchEnd,
	          onTouchCancel: this._onTouchCancel,
	          'aria-selected': this.props.selected
	        }, _defineProperty(_extends2, 'style', this.props.style), _defineProperty(_extends2, 'role', 'gridcell'), _extends2), this.props.dayProps),
	        this.props.children
	      );
	    }
	  }]);
	
	  return Day;
	}(_react.Component);
	
	Day.displayName = 'Day';
	Day.propTypes = {
	  children: _react.PropTypes.node.isRequired,
	  dateKey: _react.PropTypes.string.isRequired,
	  onDayMouseEnter: _react.PropTypes.func.isRequired,
	  onDayMouseLeave: _react.PropTypes.func.isRequired,
	  onDayMouseDown: _react.PropTypes.func.isRequired,
	  onDayMouseUp: _react.PropTypes.func.isRequired,
	  onDayTouchStart: _react.PropTypes.func.isRequired,
	  onDayTouchEnd: _react.PropTypes.func.isRequired,
	  onDayTouchCancel: _react.PropTypes.func.isRequired,
	  style: _react.PropTypes.object.isRequired,
	  dayProps: _react.PropTypes.any,
	  selected: _react.PropTypes.bool.isRequired
	};
	exports.default = Day;

/***/ },
/* 462 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _reactRedux = __webpack_require__(309);
	
	var _map = __webpack_require__(463);
	
	var _map2 = _interopRequireDefault(_map);
	
	var _search_actions = __webpack_require__(292);
	
	var _selectors = __webpack_require__(465);
	
	var _filter_actions = __webpack_require__(300);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var mapStateToProps = function mapStateToProps(state) {
	  return {
	    searchListings: (0, _selectors.searchListingsAsArray)(state.search),
	    searchFilters: state.filters
	  };
	};
	
	var mapDispatchToProps = function mapDispatchToProps(dispatch) {
	  return {
	    fetchSearchListings: function fetchSearchListings(filters) {
	      return dispatch((0, _search_actions.fetchSearchListings)(filters));
	    },
	    receiveBounds: function receiveBounds(filters) {
	      return dispatch((0, _filter_actions.receiveBounds)(filters));
	    },
	    receiveCenter: function receiveCenter(center) {
	      return dispatch((0, _filter_actions.receiveCenter)(center));
	    }
	  };
	};
	
	exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(_map2.default);

/***/ },
/* 463 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactDom = __webpack_require__(32);
	
	var _reactDom2 = _interopRequireDefault(_reactDom);
	
	var _reactRouter = __webpack_require__(326);
	
	var _marker_manager = __webpack_require__(464);
	
	var _marker_manager2 = _interopRequireDefault(_marker_manager);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var _getCoordsObj = function _getCoordsObj(latLng) {
	  return {
	    lat: latLng.lat(),
	    lng: latLng.lng()
	  };
	};
	
	var _mapOptions = {
	  center: { lat: 37.75023068394664, lng: -122.44104483349611 }, // San Francisco coords
	  zoom: 11,
	  scrollwheel: false
	};
	
	var style = { retro: [{ elementType: 'geometry', stylers: [{ color: '#ebe3cd' }] }, { elementType: 'labels.text.fill', stylers: [{ color: '#523735' }] }, { elementType: 'labels.text.stroke', stylers: [{ color: '#f5f1e6' }] }, {
	    featureType: 'administrative',
	    elementType: 'geometry.stroke',
	    stylers: [{ color: '#c9b2a6' }]
	  }, {
	    featureType: 'administrative.land_parcel',
	    elementType: 'geometry.stroke',
	    stylers: [{ color: '#dcd2be' }]
	  }, {
	    featureType: 'administrative.land_parcel',
	    elementType: 'labels.text.fill',
	    stylers: [{ color: '#ae9e90' }]
	  }, {
	    featureType: 'landscape.natural',
	    elementType: 'geometry',
	    stylers: [{ color: '#dfd2ae' }]
	  }, {
	    featureType: 'poi',
	    elementType: 'geometry',
	    stylers: [{ color: '#dfd2ae' }]
	  }, {
	    featureType: 'poi',
	    elementType: 'labels.text.fill',
	    stylers: [{ color: '#93817c' }]
	  }, {
	    featureType: 'poi.park',
	    elementType: 'geometry.fill',
	    stylers: [{ color: '#a5b076' }]
	  }, {
	    featureType: 'poi.park',
	    elementType: 'labels.text.fill',
	    stylers: [{ color: '#447530' }]
	  }, {
	    featureType: 'road',
	    elementType: 'geometry',
	    stylers: [{ color: '#f5f1e6' }]
	  }, {
	    featureType: 'road.arterial',
	    elementType: 'geometry',
	    stylers: [{ color: '#fdfcf8' }]
	  }, {
	    featureType: 'road.highway',
	    elementType: 'geometry',
	    stylers: [{ color: '#f8c967' }]
	  }, {
	    featureType: 'road.highway',
	    elementType: 'geometry.stroke',
	    stylers: [{ color: '#e9bc62' }]
	  }, {
	    featureType: 'road.highway.controlled_access',
	    elementType: 'geometry',
	    stylers: [{ color: '#e98d58' }]
	  }, {
	    featureType: 'road.highway.controlled_access',
	    elementType: 'geometry.stroke',
	    stylers: [{ color: '#db8555' }]
	  }, {
	    featureType: 'road.local',
	    elementType: 'labels.text.fill',
	    stylers: [{ color: '#806b63' }]
	  }, {
	    featureType: 'transit.line',
	    elementType: 'geometry',
	    stylers: [{ color: '#dfd2ae' }]
	  }, {
	    featureType: 'transit.line',
	    elementType: 'labels.text.fill',
	    stylers: [{ color: '#8f7d77' }]
	  }, {
	    featureType: 'transit.line',
	    elementType: 'labels.text.stroke',
	    stylers: [{ color: '#ebe3cd' }]
	  }, {
	    featureType: 'transit.station',
	    elementType: 'geometry',
	    stylers: [{ color: '#dfd2ae' }]
	  }, {
	    featureType: 'water',
	    elementType: 'geometry.fill',
	    stylers: [{ color: '#b9d3c2' }]
	  }, {
	    featureType: 'water',
	    elementType: 'labels.text.fill',
	    stylers: [{ color: '#92998d' }]
	  }]
	};
	
	var Map = function (_Component) {
	  _inherits(Map, _Component);
	
	  function Map() {
	    _classCallCheck(this, Map);
	
	    return _possibleConstructorReturn(this, (Map.__proto__ || Object.getPrototypeOf(Map)).apply(this, arguments));
	  }
	
	  _createClass(Map, [{
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      var map = this.refs.map;
	      this.map = new google.maps.Map(map, _mapOptions);
	      this.MarkerManager = new _marker_manager2.default(this.map, this._handleMarkerClick.bind(this));
	      this._registerListeners();
	      this.MarkerManager.updateMarkers(this.props.searchListings);
	
	      //styling
	      this.map.setOptions({ styles: style['retro'] });
	
	      // geolocation
	      // let infoWindow = new google.maps.InfoWindow({map: this.map});
	      // let thisMap = this.map;
	      // if (navigator.geolocation) {
	      //   navigator.geolocation.getCurrentPosition(function(position) {
	      //     var pos = {
	      //       lat: position.coords.latitude,
	      //       lng: position.coords.longitude
	      //     };
	      //
	      //     infoWindow.setPosition(pos);
	      //     infoWindow.setContent('You are here!');
	      //   }, function() {
	      //     handleLocationError(true, infoWindow, thisMap.getCenter());
	      //   });
	      // } else {
	      //   // Browser doesn't support Geolocation
	      //   handleLocationError(false, infoWindow, thisMap.getCenter());
	      // }
	      //
	      // let handleLocationError = (browserHasGeolocation, infoWindow, pos) => {
	      // infoWindow.setPosition(pos);
	      // infoWindow.setContent(browserHasGeolocation ?
	      //                       'The Geolocation service was not permitted.' :
	      //                       'Error: Your browser doesn\'t support geolocation.');
	      // };
	    }
	  }, {
	    key: 'componentDidUpdate',
	    value: function componentDidUpdate() {
	      this.MarkerManager.updateMarkers(this.props.searchListings);
	    }
	  }, {
	    key: 'componentWillReceiveProps',
	    value: function componentWillReceiveProps(nextProps) {
	      this.map.setCenter(nextProps.searchFilters.center);
	    }
	  }, {
	    key: '_registerListeners',
	    value: function _registerListeners() {
	      var _this2 = this;
	
	      google.maps.event.addListener(this.map, 'idle', function () {
	        var _map$getBounds$toJSON = _this2.map.getBounds().toJSON(),
	            north = _map$getBounds$toJSON.north,
	            south = _map$getBounds$toJSON.south,
	            east = _map$getBounds$toJSON.east,
	            west = _map$getBounds$toJSON.west;
	
	        var bounds = {
	          northEast: { lat: north, lng: east },
	          southWest: { lat: south, lng: west }
	        };
	        _this2.props.receiveBounds(bounds);
	        _this2.props.fetchSearchListings(_this2.props.searchFilters);
	      });
	
	      google.maps.event.addListener(this.map, 'dragend', function () {
	        _this2.props.receiveCenter(_this2.map.getCenter().toJSON());
	      });
	
	      // google.maps.event.addListener(this.map, 'click', event => {
	      //   const coords = _getCoordsObj(event.latLng);
	      //   this._handleClick(coords);
	      // });
	    }
	  }, {
	    key: '_handleMarkerClick',
	    value: function _handleMarkerClick(listing) {
	      this.props.router.replace('listings/' + listing.id);
	    }
	  }, {
	    key: '_handleClick',
	    value: function _handleClick(coords) {
	      // this.props.router.push({
	      //   pathname: "listings/new",
	      //   query: coords
	      // });
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      return _react2.default.createElement(
	        'div',
	        { className: 'map', id: 'map-container', ref: 'map' },
	        'Map'
	      );
	    }
	  }]);
	
	  return Map;
	}(_react.Component);
	
	exports.default = (0, _reactRouter.withRouter)(Map);

/***/ },
/* 464 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var MarkerManager = function () {
	  function MarkerManager(map, handleClick) {
	    _classCallCheck(this, MarkerManager);
	
	    this.map = map;
	    this.markers = [];
	    this.handleClick = handleClick;
	    this._createMarkerFromListing = this._createMarkerFromListing.bind(this);
	    this._removeMarker = this._removeMarker.bind(this);
	    this._markersToRemove = this._markersToRemove.bind(this);
	  }
	
	  _createClass(MarkerManager, [{
	    key: 'updateMarkers',
	    value: function updateMarkers(listings) {
	      this.listings = listings;
	      this._listingsToAdd().forEach(this._createMarkerFromListing);
	      this._markersToRemove().forEach(this._removeMarker);
	    }
	  }, {
	    key: '_listingsToAdd',
	    value: function _listingsToAdd() {
	      var currentListings = this.markers.map(function (marker) {
	        return marker.listingId;
	      });
	      return this.listings.filter(function (listing) {
	        return !currentListings.includes(listing.id);
	      });
	    }
	  }, {
	    key: '_markersToRemove',
	    value: function _markersToRemove() {
	      var ListingIds = this.listings.map(function (listing) {
	        return listing.id;
	      });
	      return this.markers.filter(function (marker) {
	        return !ListingIds.includes(marker.listingId);
	      });
	    }
	  }, {
	    key: '_createMarkerFromListing',
	    value: function _createMarkerFromListing(listing) {
	      var _this = this;
	
	      var pos = new google.maps.LatLng(listing.lat, listing.lng);
	      var marker = new google.maps.Marker({
	        position: pos,
	        map: this.map,
	        listingId: listing.id
	      });
	      marker.addListener('click', function () {
	        return _this.handleClick(listing);
	      });
	      this.markers.push(marker);
	    }
	  }, {
	    key: '_removeMarker',
	    value: function _removeMarker(marker) {
	      var idx = this.markers.indexOf(marker);
	      this.markers[idx].setMap(null);
	      this.markers.splice(idx, 1);
	    }
	  }]);
	
	  return MarkerManager;
	}();
	
	exports.default = MarkerManager;

/***/ },
/* 465 */
/***/ function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var selectListing = exports.selectListing = function selectListing(_ref, id) {
	  var search = _ref.search;
	
	  var searchListings = search.searchListings;
	  var listing = searchListings[id] || {};
	  return listing;
	};
	
	var searchListingsAsArray = exports.searchListingsAsArray = function searchListingsAsArray(searchListings) {
	  if (searchListings === null) {
	    return [];
	  } else {
	    return Object.keys(searchListings).map(function (key) {
	      return searchListings[key];
	    });
	  }
	};

/***/ },
/* 466 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = __webpack_require__(467);

/***/ },
/* 467 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _defineProperty2 = __webpack_require__(468);
	
	var _defineProperty3 = _interopRequireDefault(_defineProperty2);
	
	var _toConsumableArray2 = __webpack_require__(487);
	
	var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);
	
	var _extends2 = __webpack_require__(526);
	
	var _extends3 = _interopRequireDefault(_extends2);
	
	var _classCallCheck2 = __webpack_require__(533);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(534);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(557);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _reactDom = __webpack_require__(32);
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _addEventListener = __webpack_require__(565);
	
	var _addEventListener2 = _interopRequireDefault(_addEventListener);
	
	var _classnames = __webpack_require__(404);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _Track = __webpack_require__(569);
	
	var _Track2 = _interopRequireDefault(_Track);
	
	var _Handle = __webpack_require__(570);
	
	var _Handle2 = _interopRequireDefault(_Handle);
	
	var _Steps = __webpack_require__(604);
	
	var _Steps2 = _interopRequireDefault(_Steps);
	
	var _Marks = __webpack_require__(605);
	
	var _Marks2 = _interopRequireDefault(_Marks);
	
	var _warning = __webpack_require__(333);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
	
	var noop = function noop() {};
	
	var isNotTouchEvent = function isNotTouchEvent(e) {
	  return e.touches.length > 1 || e.type.toLowerCase() === 'touchend' && e.touches.length > 0;
	};
	
	var getTouchPosition = function getTouchPosition(vertical, e) {
	  return vertical ? e.touches[0].clientY : e.touches[0].pageX;
	};
	
	var getMousePosition = function getMousePosition(vertical, e) {
	  return vertical ? e.clientY : e.pageX;
	};
	
	var getHandleCenterPosition = function getHandleCenterPosition(vertical, handle) {
	  var coords = handle.getBoundingClientRect();
	  return vertical ? coords.top + coords.height * 0.5 : coords.left + coords.width * 0.5;
	};
	
	var pauseEvent = function pauseEvent(e) {
	  e.stopPropagation();
	  e.preventDefault();
	};
	
	var Slider = function (_React$Component) {
	  (0, _inherits3["default"])(Slider, _React$Component);
	
	  function Slider(props) {
	    (0, _classCallCheck3["default"])(this, Slider);
	
	    var _this = (0, _possibleConstructorReturn3["default"])(this, _React$Component.call(this, props));
	
	    var range = props.range,
	        min = props.min,
	        max = props.max,
	        step = props.step;
	
	    var initialValue = range ? Array.apply(null, Array(range + 1)).map(function () {
	      return min;
	    }) : min;
	    var defaultValue = 'defaultValue' in props ? props.defaultValue : initialValue;
	    var value = props.value !== undefined ? props.value : defaultValue;
	
	    var bounds = (range ? value : [min, value]).map(function (v) {
	      return _this.trimAlignValue(v);
	    });
	
	    var recent = void 0;
	    if (range && bounds[0] === bounds[bounds.length - 1] && bounds[0] === max) {
	      recent = 0;
	    } else {
	      recent = bounds.length - 1;
	    }
	
	    if (process.env.NODE_ENV !== 'production' && step && Math.floor(step) === step && (max - min) % step !== 0) {
	      (0, _warning2["default"])(false, 'Slider[max] - Slider[min] (%s) should be a multiple of Slider[step] (%s)', max - min, step);
	    }
	
	    _this.state = {
	      handle: null,
	      recent: recent,
	      bounds: bounds
	    };
	
	    _this.onTouchStart = _this.onTouchStart.bind(_this);
	    _this.onMouseDown = _this.onMouseDown.bind(_this);
	    return _this;
	  }
	
	  Slider.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
	    var _this2 = this;
	
	    if (!('value' in nextProps || 'min' in nextProps || 'max' in nextProps)) return;
	
	    var bounds = this.state.bounds;
	
	    if (nextProps.range) {
	      var value = nextProps.value || bounds;
	      var nextBounds = value.map(function (v) {
	        return _this2.trimAlignValue(v, nextProps);
	      });
	      if (nextBounds.every(function (v, i) {
	        return v === bounds[i];
	      })) return;
	
	      this.setState({ bounds: nextBounds });
	      if (bounds.some(function (v) {
	        return _this2.isValueOutOfBounds(v, nextProps);
	      })) {
	        this.props.onChange(nextBounds);
	      }
	    } else {
	      var _value = nextProps.value !== undefined ? nextProps.value : bounds[1];
	      var nextValue = this.trimAlignValue(_value, nextProps);
	      if (nextValue === bounds[1] && bounds[0] === nextProps.min) return;
	
	      this.setState({ bounds: [nextProps.min, nextValue] });
	      if (this.isValueOutOfBounds(bounds[1], nextProps)) {
	        this.props.onChange(nextValue);
	      }
	    }
	  };
	
	  Slider.prototype.onChange = function onChange(state) {
	    var props = this.props;
	    var isNotControlled = !('value' in props);
	    if (isNotControlled) {
	      this.setState(state);
	    } else if (state.handle !== undefined) {
	      this.setState({ handle: state.handle });
	    }
	
	    var data = (0, _extends3["default"])({}, this.state, state);
	    var changedValue = props.range ? data.bounds : data.bounds[1];
	    props.onChange(changedValue);
	  };
	
	  Slider.prototype.onMouseDown = function onMouseDown(e) {
	    if (e.button !== 0) {
	      return;
	    }
	
	    var position = getMousePosition(this.props.vertical, e);
	    if (!this.isEventFromHandle(e)) {
	      this.dragOffset = 0;
	    } else {
	      var handlePosition = getHandleCenterPosition(this.props.vertical, e.target);
	      this.dragOffset = position - handlePosition;
	      position = handlePosition;
	    }
	    this.onStart(position);
	    this.addDocumentEvents('mouse');
	    pauseEvent(e);
	  };
	
	  Slider.prototype.onMouseMove = function onMouseMove(e) {
	    var position = getMousePosition(this.props.vertical, e);
	    this.onMove(e, position - this.dragOffset);
	  };
	
	  Slider.prototype.onMove = function onMove(e, position) {
	    pauseEvent(e);
	    var props = this.props;
	    var state = this.state;
	
	    var diffPosition = position - this.startPosition;
	    diffPosition = this.props.vertical ? -diffPosition : diffPosition;
	    var diffValue = diffPosition / this.getSliderLength() * (props.max - props.min);
	
	    var value = this.trimAlignValue(this.startValue + diffValue);
	    var oldValue = state.bounds[state.handle];
	    if (value === oldValue) return;
	
	    var nextBounds = [].concat((0, _toConsumableArray3["default"])(state.bounds));
	    nextBounds[state.handle] = value;
	    var nextHandle = state.handle;
	    if (props.pushable !== false) {
	      var originalValue = state.bounds[nextHandle];
	      this.pushSurroundingHandles(nextBounds, nextHandle, originalValue);
	    } else if (props.allowCross) {
	      nextBounds.sort(function (a, b) {
	        return a - b;
	      });
	      nextHandle = nextBounds.indexOf(value);
	    }
	    this.onChange({
	      handle: nextHandle,
	      bounds: nextBounds
	    });
	  };
	
	  Slider.prototype.onStart = function onStart(position) {
	    var props = this.props;
	    props.onBeforeChange(this.getValue());
	
	    var value = this.calcValueByPos(position);
	    this.startValue = value;
	    this.startPosition = position;
	
	    var state = this.state;
	    var bounds = state.bounds;
	
	
	    var valueNeedChanging = 1;
	    if (this.props.range) {
	      var closestBound = 0;
	      for (var i = 1; i < bounds.length - 1; ++i) {
	        if (value > bounds[i]) {
	          closestBound = i;
	        }
	      }
	      if (Math.abs(bounds[closestBound + 1] - value) < Math.abs(bounds[closestBound] - value)) {
	        closestBound = closestBound + 1;
	      }
	      valueNeedChanging = closestBound;
	
	      var isAtTheSamePoint = bounds[closestBound + 1] === bounds[closestBound];
	      if (isAtTheSamePoint) {
	        valueNeedChanging = state.recent;
	      }
	
	      if (isAtTheSamePoint && value !== bounds[closestBound + 1]) {
	        valueNeedChanging = value < bounds[closestBound + 1] ? closestBound : closestBound + 1;
	      }
	    }
	
	    this.setState({
	      handle: valueNeedChanging,
	      recent: valueNeedChanging
	    });
	
	    var oldValue = state.bounds[valueNeedChanging];
	    if (value === oldValue) return;
	
	    var nextBounds = [].concat((0, _toConsumableArray3["default"])(state.bounds));
	    nextBounds[valueNeedChanging] = value;
	    this.onChange({ bounds: nextBounds });
	  };
	
	  Slider.prototype.onTouchMove = function onTouchMove(e) {
	    if (isNotTouchEvent(e)) {
	      this.end('touch');
	      return;
	    }
	
	    var position = getTouchPosition(this.props.vertical, e);
	    this.onMove(e, position - this.dragOffset);
	  };
	
	  Slider.prototype.onTouchStart = function onTouchStart(e) {
	    if (isNotTouchEvent(e)) return;
	
	    var position = getTouchPosition(this.props.vertical, e);
	    if (!this.isEventFromHandle(e)) {
	      this.dragOffset = 0;
	    } else {
	      var handlePosition = getHandleCenterPosition(this.props.vertical, e.target);
	      this.dragOffset = position - handlePosition;
	      position = handlePosition;
	    }
	    this.onStart(position);
	    this.addDocumentEvents('touch');
	    pauseEvent(e);
	  };
	
	  /**
	   * Returns an array of possible slider points, taking into account both
	   * `marks` and `step`. The result is cached.
	   */
	
	
	  Slider.prototype.getPoints = function getPoints() {
	    var _props = this.props,
	        marks = _props.marks,
	        step = _props.step,
	        min = _props.min,
	        max = _props.max;
	
	    var cache = this._getPointsCache;
	    if (!cache || cache.marks !== marks || cache.step !== step) {
	      var pointsObject = (0, _extends3["default"])({}, marks);
	      if (step !== null) {
	        for (var point = min; point <= max; point += step) {
	          pointsObject[point] = point;
	        }
	      }
	      var points = Object.keys(pointsObject).map(parseFloat);
	      points.sort(function (a, b) {
	        return a - b;
	      });
	      this._getPointsCache = { marks: marks, step: step, points: points };
	    }
	    return this._getPointsCache.points;
	  };
	
	  Slider.prototype.getPrecision = function getPrecision(step) {
	    var stepString = step.toString();
	    var precision = 0;
	    if (stepString.indexOf('.') >= 0) {
	      precision = stepString.length - stepString.indexOf('.') - 1;
	    }
	    return precision;
	  };
	
	  Slider.prototype.getSliderLength = function getSliderLength() {
	    var slider = this.refs.slider;
	    if (!slider) {
	      return 0;
	    }
	
	    return this.props.vertical ? slider.clientHeight : slider.clientWidth;
	  };
	
	  Slider.prototype.getSliderStart = function getSliderStart() {
	    var slider = this.refs.slider;
	    var rect = slider.getBoundingClientRect();
	
	    return this.props.vertical ? rect.top : rect.left;
	  };
	
	  Slider.prototype.getValue = function getValue() {
	    var bounds = this.state.bounds;
	
	    return this.props.range ? bounds : bounds[1];
	  };
	
	  Slider.prototype.addDocumentEvents = function addDocumentEvents(type) {
	    if (type === 'touch') {
	      // just work for chrome iOS Safari and Android Browser
	      this.onTouchMoveListener = (0, _addEventListener2["default"])(document, 'touchmove', this.onTouchMove.bind(this));
	      this.onTouchUpListener = (0, _addEventListener2["default"])(document, 'touchend', this.end.bind(this, 'touch'));
	    } else if (type === 'mouse') {
	      this.onMouseMoveListener = (0, _addEventListener2["default"])(document, 'mousemove', this.onMouseMove.bind(this));
	      this.onMouseUpListener = (0, _addEventListener2["default"])(document, 'mouseup', this.end.bind(this, 'mouse'));
	    }
	  };
	
	  Slider.prototype.calcOffset = function calcOffset(value) {
	    var _props2 = this.props,
	        min = _props2.min,
	        max = _props2.max;
	
	    var ratio = (value - min) / (max - min);
	    return ratio * 100;
	  };
	
	  Slider.prototype.calcValue = function calcValue(offset) {
	    var _props3 = this.props,
	        vertical = _props3.vertical,
	        min = _props3.min,
	        max = _props3.max;
	
	    var ratio = Math.abs(offset / this.getSliderLength());
	    var value = vertical ? (1 - ratio) * (max - min) + min : ratio * (max - min) + min;
	    return value;
	  };
	
	  Slider.prototype.calcValueByPos = function calcValueByPos(position) {
	    var pixelOffset = position - this.getSliderStart();
	    var nextValue = this.trimAlignValue(this.calcValue(pixelOffset));
	    return nextValue;
	  };
	
	  Slider.prototype.end = function end(type) {
	    this.removeEvents(type);
	    this.props.onAfterChange(this.getValue());
	    this.setState({ handle: null });
	  };
	
	  Slider.prototype.isEventFromHandle = function isEventFromHandle(e) {
	    var _this3 = this;
	
	    return this.state.bounds.some(function (x, i) {
	      return _this3.refs['handle-' + i] && e.target === (0, _reactDom.findDOMNode)(_this3.refs['handle-' + i]);
	    });
	  };
	
	  Slider.prototype.isValueOutOfBounds = function isValueOutOfBounds(value, props) {
	    return value < props.min || value > props.max;
	  };
	
	  Slider.prototype.pushHandle = function pushHandle(bounds, handle, direction, amount) {
	    var originalValue = bounds[handle];
	    var currentValue = bounds[handle];
	    while (direction * (currentValue - originalValue) < amount) {
	      if (!this.pushHandleOnePoint(bounds, handle, direction)) {
	        // can't push handle enough to create the needed `amount` gap, so we
	        // revert its position to the original value
	        bounds[handle] = originalValue;
	        return false;
	      }
	      currentValue = bounds[handle];
	    }
	    // the handle was pushed enough to create the needed `amount` gap
	    return true;
	  };
	
	  Slider.prototype.pushHandleOnePoint = function pushHandleOnePoint(bounds, handle, direction) {
	    var points = this.getPoints();
	    var pointIndex = points.indexOf(bounds[handle]);
	    var nextPointIndex = pointIndex + direction;
	    if (nextPointIndex >= points.length || nextPointIndex < 0) {
	      // reached the minimum or maximum available point, can't push anymore
	      return false;
	    }
	    var nextHandle = handle + direction;
	    var nextValue = points[nextPointIndex];
	    var threshold = this.props.pushable;
	
	    var diffToNext = direction * (bounds[nextHandle] - nextValue);
	    if (!this.pushHandle(bounds, nextHandle, direction, threshold - diffToNext)) {
	      // couldn't push next handle, so we won't push this one either
	      return false;
	    }
	    // push the handle
	    bounds[handle] = nextValue;
	    return true;
	  };
	
	  Slider.prototype.pushSurroundingHandles = function pushSurroundingHandles(bounds, handle, originalValue) {
	    var threshold = this.props.pushable;
	
	    var value = bounds[handle];
	
	    var direction = 0;
	    if (bounds[handle + 1] - value < threshold) {
	      direction = +1;
	    } else if (value - bounds[handle - 1] < threshold) {
	      direction = -1;
	    }
	
	    if (direction === 0) {
	      return;
	    }
	
	    var nextHandle = handle + direction;
	    var diffToNext = direction * (bounds[nextHandle] - value);
	    if (!this.pushHandle(bounds, nextHandle, direction, threshold - diffToNext)) {
	      // revert to original value if pushing is impossible
	      bounds[handle] = originalValue;
	    }
	  };
	
	  Slider.prototype.removeEvents = function removeEvents(type) {
	    if (type === 'touch') {
	      this.onTouchMoveListener.remove();
	      this.onTouchUpListener.remove();
	    } else if (type === 'mouse') {
	      this.onMouseMoveListener.remove();
	      this.onMouseUpListener.remove();
	    }
	  };
	
	  Slider.prototype.trimAlignValue = function trimAlignValue(v, nextProps) {
	    var state = this.state || {};
	    var handle = state.handle,
	        bounds = state.bounds;
	
	    var _props4 = (0, _extends3["default"])({}, this.props, nextProps || {}),
	        marks = _props4.marks,
	        step = _props4.step,
	        min = _props4.min,
	        max = _props4.max,
	        allowCross = _props4.allowCross;
	
	    var val = v;
	    if (val <= min) {
	      val = min;
	    }
	    if (val >= max) {
	      val = max;
	    }
	    /* eslint-disable eqeqeq */
	    if (!allowCross && handle != null && handle > 0 && val <= bounds[handle - 1]) {
	      val = bounds[handle - 1];
	    }
	    if (!allowCross && handle != null && handle < bounds.length - 1 && val >= bounds[handle + 1]) {
	      val = bounds[handle + 1];
	    }
	    /* eslint-enable eqeqeq */
	
	    var points = Object.keys(marks).map(parseFloat);
	    if (step !== null) {
	      var closestStep = Math.round((val - min) / step) * step + min;
	      points.push(closestStep);
	    }
	
	    var diffs = points.map(function (point) {
	      return Math.abs(val - point);
	    });
	    var closestPoint = points[diffs.indexOf(Math.min.apply(Math, diffs))];
	
	    return step !== null ? parseFloat(closestPoint.toFixed(this.getPrecision(step))) : closestPoint;
	  };
	
	  Slider.prototype.render = function render() {
	    var _this4 = this,
	        _classNames3;
	
	    var _state = this.state,
	        handle = _state.handle,
	        bounds = _state.bounds;
	    var _props5 = this.props,
	        className = _props5.className,
	        prefixCls = _props5.prefixCls,
	        tooltipPrefixCls = _props5.tooltipPrefixCls,
	        disabled = _props5.disabled,
	        vertical = _props5.vertical,
	        dots = _props5.dots,
	        included = _props5.included,
	        range = _props5.range,
	        step = _props5.step,
	        marks = _props5.marks,
	        max = _props5.max,
	        min = _props5.min,
	        tipTransitionName = _props5.tipTransitionName,
	        tipFormatter = _props5.tipFormatter,
	        children = _props5.children,
	        style = _props5.style;
	
	
	    var customHandle = this.props.handle;
	
	    var offsets = bounds.map(function (v) {
	      return _this4.calcOffset(v);
	    });
	
	    var handleClassName = prefixCls + '-handle';
	
	    var handlesClassNames = bounds.map(function (v, i) {
	      var _classNames;
	
	      return (0, _classnames2["default"])((_classNames = {}, (0, _defineProperty3["default"])(_classNames, handleClassName, true), (0, _defineProperty3["default"])(_classNames, handleClassName + '-' + (i + 1), true), (0, _defineProperty3["default"])(_classNames, handleClassName + '-lower', i === 0), (0, _defineProperty3["default"])(_classNames, handleClassName + '-upper', i === bounds.length - 1), _classNames));
	    });
	
	    var isNoTip = step === null || tipFormatter === null;
	
	    var commonHandleProps = {
	      prefixCls: prefixCls,
	      tooltipPrefixCls: tooltipPrefixCls,
	      noTip: isNoTip,
	      tipTransitionName: tipTransitionName,
	      tipFormatter: tipFormatter,
	      vertical: vertical
	    };
	
	    var handles = bounds.map(function (v, i) {
	      return (0, _react.cloneElement)(customHandle, (0, _extends3["default"])({}, commonHandleProps, {
	        className: handlesClassNames[i],
	        value: v,
	        offset: offsets[i],
	        dragging: handle === i,
	        index: i,
	        key: i,
	        ref: 'handle-' + i
	      }));
	    });
	    if (!range) {
	      handles.shift();
	    }
	
	    var tracks = [];
	    for (var i = 1; i < bounds.length; ++i) {
	      var _classNames2;
	
	      var trackClassName = (0, _classnames2["default"])((_classNames2 = {}, (0, _defineProperty3["default"])(_classNames2, prefixCls + '-track', true), (0, _defineProperty3["default"])(_classNames2, prefixCls + '-track-' + i, true), _classNames2));
	      tracks.push(_react2["default"].createElement(_Track2["default"], {
	        className: trackClassName,
	        vertical: vertical,
	        included: included,
	        offset: offsets[i - 1],
	        length: offsets[i] - offsets[i - 1],
	        key: i
	      }));
	    }
	
	    var sliderClassName = (0, _classnames2["default"])((_classNames3 = {}, (0, _defineProperty3["default"])(_classNames3, prefixCls, true), (0, _defineProperty3["default"])(_classNames3, prefixCls + '-with-marks', Object.keys(marks).length), (0, _defineProperty3["default"])(_classNames3, prefixCls + '-disabled', disabled), (0, _defineProperty3["default"])(_classNames3, prefixCls + '-vertical', this.props.vertical), (0, _defineProperty3["default"])(_classNames3, className, !!className), _classNames3));
	
	    return _react2["default"].createElement(
	      'div',
	      {
	        ref: 'slider',
	        className: sliderClassName,
	        onTouchStart: disabled ? noop : this.onTouchStart,
	        onMouseDown: disabled ? noop : this.onMouseDown,
	        style: style
	      },
	      _react2["default"].createElement('div', { className: prefixCls + '-rail' }),
	      tracks,
	      _react2["default"].createElement(_Steps2["default"], {
	        prefixCls: prefixCls,
	        vertical: vertical,
	        marks: marks,
	        dots: dots,
	        step: step,
	        included: included,
	        lowerBound: bounds[0],
	        upperBound: bounds[bounds.length - 1],
	        max: max,
	        min: min
	      }),
	      handles,
	      _react2["default"].createElement(_Marks2["default"], {
	        className: prefixCls + '-mark',
	        vertical: vertical,
	        marks: marks,
	        included: included,
	        lowerBound: bounds[0],
	        upperBound: bounds[bounds.length - 1],
	        max: max,
	        min: min
	      }),
	      children
	    );
	  };
	
	  return Slider;
	}(_react2["default"].Component);
	
	Slider.propTypes = {
	  min: _react2["default"].PropTypes.number,
	  max: _react2["default"].PropTypes.number,
	  step: _react2["default"].PropTypes.number,
	  defaultValue: _react2["default"].PropTypes.oneOfType([_react2["default"].PropTypes.number, _react2["default"].PropTypes.arrayOf(_react2["default"].PropTypes.number)]),
	  value: _react2["default"].PropTypes.oneOfType([_react2["default"].PropTypes.number, _react2["default"].PropTypes.arrayOf(_react2["default"].PropTypes.number)]),
	  marks: _react2["default"].PropTypes.object,
	  included: _react2["default"].PropTypes.bool,
	  className: _react2["default"].PropTypes.string,
	  prefixCls: _react2["default"].PropTypes.string,
	  tooltipPrefixCls: _react2["default"].PropTypes.string,
	  disabled: _react2["default"].PropTypes.bool,
	  children: _react2["default"].PropTypes.any,
	  onBeforeChange: _react2["default"].PropTypes.func,
	  onChange: _react2["default"].PropTypes.func,
	  onAfterChange: _react2["default"].PropTypes.func,
	  handle: _react2["default"].PropTypes.element,
	  tipTransitionName: _react2["default"].PropTypes.string,
	  tipFormatter: _react2["default"].PropTypes.func,
	  dots: _react2["default"].PropTypes.bool,
	  range: _react2["default"].PropTypes.oneOfType([_react2["default"].PropTypes.bool, _react2["default"].PropTypes.number]),
	  vertical: _react2["default"].PropTypes.bool,
	  allowCross: _react2["default"].PropTypes.bool,
	  pushable: _react2["default"].PropTypes.oneOfType([_react2["default"].PropTypes.bool, _react2["default"].PropTypes.number]),
	  style: _react2["default"].PropTypes.object
	};
	
	Slider.defaultProps = {
	  prefixCls: 'rc-slider',
	  className: '',
	  tipTransitionName: '',
	  min: 0,
	  max: 100,
	  step: 1,
	  marks: {},
	  handle: _react2["default"].createElement(_Handle2["default"], null),
	  onBeforeChange: noop,
	  onChange: noop,
	  onAfterChange: noop,
	  tipFormatter: function tipFormatter(value) {
	    return value;
	  },
	  included: true,
	  disabled: false,
	  dots: false,
	  range: false,
	  vertical: false,
	  allowCross: true,
	  pushable: false
	};
	
	exports["default"] = Slider;
	module.exports = exports['default'];
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 468 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _defineProperty = __webpack_require__(469);
	
	var _defineProperty2 = _interopRequireDefault(_defineProperty);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = function (obj, key, value) {
	  if (key in obj) {
	    (0, _defineProperty2.default)(obj, key, {
	      value: value,
	      enumerable: true,
	      configurable: true,
	      writable: true
	    });
	  } else {
	    obj[key] = value;
	  }
	
	  return obj;
	};

/***/ },
/* 469 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(470), __esModule: true };

/***/ },
/* 470 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(471);
	var $Object = __webpack_require__(474).Object;
	module.exports = function defineProperty(it, key, desc){
	  return $Object.defineProperty(it, key, desc);
	};

/***/ },
/* 471 */
/***/ function(module, exports, __webpack_require__) {

	var $export = __webpack_require__(472);
	// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)
	$export($export.S + $export.F * !__webpack_require__(482), 'Object', {defineProperty: __webpack_require__(478).f});

/***/ },
/* 472 */
/***/ function(module, exports, __webpack_require__) {

	var global    = __webpack_require__(473)
	  , core      = __webpack_require__(474)
	  , ctx       = __webpack_require__(475)
	  , hide      = __webpack_require__(477)
	  , PROTOTYPE = 'prototype';
	
	var $export = function(type, name, source){
	  var IS_FORCED = type & $export.F
	    , IS_GLOBAL = type & $export.G
	    , IS_STATIC = type & $export.S
	    , IS_PROTO  = type & $export.P
	    , IS_BIND   = type & $export.B
	    , IS_WRAP   = type & $export.W
	    , exports   = IS_GLOBAL ? core : core[name] || (core[name] = {})
	    , expProto  = exports[PROTOTYPE]
	    , target    = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE]
	    , key, own, out;
	  if(IS_GLOBAL)source = name;
	  for(key in source){
	    // contains in native
	    own = !IS_FORCED && target && target[key] !== undefined;
	    if(own && key in exports)continue;
	    // export native or passed
	    out = own ? target[key] : source[key];
	    // prevent global pollution for namespaces
	    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]
	    // bind timers to global for call from export context
	    : IS_BIND && own ? ctx(out, global)
	    // wrap global constructors for prevent change them in library
	    : IS_WRAP && target[key] == out ? (function(C){
	      var F = function(a, b, c){
	        if(this instanceof C){
	          switch(arguments.length){
	            case 0: return new C;
	            case 1: return new C(a);
	            case 2: return new C(a, b);
	          } return new C(a, b, c);
	        } return C.apply(this, arguments);
	      };
	      F[PROTOTYPE] = C[PROTOTYPE];
	      return F;
	    // make static versions for prototype methods
	    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
	    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%
	    if(IS_PROTO){
	      (exports.virtual || (exports.virtual = {}))[key] = out;
	      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%
	      if(type & $export.R && expProto && !expProto[key])hide(expProto, key, out);
	    }
	  }
	};
	// type bitmap
	$export.F = 1;   // forced
	$export.G = 2;   // global
	$export.S = 4;   // static
	$export.P = 8;   // proto
	$export.B = 16;  // bind
	$export.W = 32;  // wrap
	$export.U = 64;  // safe
	$export.R = 128; // real proto method for `library` 
	module.exports = $export;

/***/ },
/* 473 */
/***/ function(module, exports) {

	// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
	var global = module.exports = typeof window != 'undefined' && window.Math == Math
	  ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();
	if(typeof __g == 'number')__g = global; // eslint-disable-line no-undef

/***/ },
/* 474 */
/***/ function(module, exports) {

	var core = module.exports = {version: '2.4.0'};
	if(typeof __e == 'number')__e = core; // eslint-disable-line no-undef

/***/ },
/* 475 */
/***/ function(module, exports, __webpack_require__) {

	// optional / simple context binding
	var aFunction = __webpack_require__(476);
	module.exports = function(fn, that, length){
	  aFunction(fn);
	  if(that === undefined)return fn;
	  switch(length){
	    case 1: return function(a){
	      return fn.call(that, a);
	    };
	    case 2: return function(a, b){
	      return fn.call(that, a, b);
	    };
	    case 3: return function(a, b, c){
	      return fn.call(that, a, b, c);
	    };
	  }
	  return function(/* ...args */){
	    return fn.apply(that, arguments);
	  };
	};

/***/ },
/* 476 */
/***/ function(module, exports) {

	module.exports = function(it){
	  if(typeof it != 'function')throw TypeError(it + ' is not a function!');
	  return it;
	};

/***/ },
/* 477 */
/***/ function(module, exports, __webpack_require__) {

	var dP         = __webpack_require__(478)
	  , createDesc = __webpack_require__(486);
	module.exports = __webpack_require__(482) ? function(object, key, value){
	  return dP.f(object, key, createDesc(1, value));
	} : function(object, key, value){
	  object[key] = value;
	  return object;
	};

/***/ },
/* 478 */
/***/ function(module, exports, __webpack_require__) {

	var anObject       = __webpack_require__(479)
	  , IE8_DOM_DEFINE = __webpack_require__(481)
	  , toPrimitive    = __webpack_require__(485)
	  , dP             = Object.defineProperty;
	
	exports.f = __webpack_require__(482) ? Object.defineProperty : function defineProperty(O, P, Attributes){
	  anObject(O);
	  P = toPrimitive(P, true);
	  anObject(Attributes);
	  if(IE8_DOM_DEFINE)try {
	    return dP(O, P, Attributes);
	  } catch(e){ /* empty */ }
	  if('get' in Attributes || 'set' in Attributes)throw TypeError('Accessors not supported!');
	  if('value' in Attributes)O[P] = Attributes.value;
	  return O;
	};

/***/ },
/* 479 */
/***/ function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(480);
	module.exports = function(it){
	  if(!isObject(it))throw TypeError(it + ' is not an object!');
	  return it;
	};

/***/ },
/* 480 */
/***/ function(module, exports) {

	module.exports = function(it){
	  return typeof it === 'object' ? it !== null : typeof it === 'function';
	};

/***/ },
/* 481 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = !__webpack_require__(482) && !__webpack_require__(483)(function(){
	  return Object.defineProperty(__webpack_require__(484)('div'), 'a', {get: function(){ return 7; }}).a != 7;
	});

/***/ },
/* 482 */
/***/ function(module, exports, __webpack_require__) {

	// Thank's IE8 for his funny defineProperty
	module.exports = !__webpack_require__(483)(function(){
	  return Object.defineProperty({}, 'a', {get: function(){ return 7; }}).a != 7;
	});

/***/ },
/* 483 */
/***/ function(module, exports) {

	module.exports = function(exec){
	  try {
	    return !!exec();
	  } catch(e){
	    return true;
	  }
	};

/***/ },
/* 484 */
/***/ function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(480)
	  , document = __webpack_require__(473).document
	  // in old IE typeof document.createElement is 'object'
	  , is = isObject(document) && isObject(document.createElement);
	module.exports = function(it){
	  return is ? document.createElement(it) : {};
	};

/***/ },
/* 485 */
/***/ function(module, exports, __webpack_require__) {

	// 7.1.1 ToPrimitive(input [, PreferredType])
	var isObject = __webpack_require__(480);
	// instead of the ES6 spec version, we didn't implement @@toPrimitive case
	// and the second argument - flag - preferred type is a string
	module.exports = function(it, S){
	  if(!isObject(it))return it;
	  var fn, val;
	  if(S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;
	  if(typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it)))return val;
	  if(!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;
	  throw TypeError("Can't convert object to primitive value");
	};

/***/ },
/* 486 */
/***/ function(module, exports) {

	module.exports = function(bitmap, value){
	  return {
	    enumerable  : !(bitmap & 1),
	    configurable: !(bitmap & 2),
	    writable    : !(bitmap & 4),
	    value       : value
	  };
	};

/***/ },
/* 487 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _from = __webpack_require__(488);
	
	var _from2 = _interopRequireDefault(_from);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = function (arr) {
	  if (Array.isArray(arr)) {
	    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
	      arr2[i] = arr[i];
	    }
	
	    return arr2;
	  } else {
	    return (0, _from2.default)(arr);
	  }
	};

/***/ },
/* 488 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(489), __esModule: true };

/***/ },
/* 489 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(490);
	__webpack_require__(519);
	module.exports = __webpack_require__(474).Array.from;

/***/ },
/* 490 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $at  = __webpack_require__(491)(true);
	
	// 21.1.3.27 String.prototype[@@iterator]()
	__webpack_require__(494)(String, 'String', function(iterated){
	  this._t = String(iterated); // target
	  this._i = 0;                // next index
	// 21.1.5.2.1 %StringIteratorPrototype%.next()
	}, function(){
	  var O     = this._t
	    , index = this._i
	    , point;
	  if(index >= O.length)return {value: undefined, done: true};
	  point = $at(O, index);
	  this._i += point.length;
	  return {value: point, done: false};
	});

/***/ },
/* 491 */
/***/ function(module, exports, __webpack_require__) {

	var toInteger = __webpack_require__(492)
	  , defined   = __webpack_require__(493);
	// true  -> String#at
	// false -> String#codePointAt
	module.exports = function(TO_STRING){
	  return function(that, pos){
	    var s = String(defined(that))
	      , i = toInteger(pos)
	      , l = s.length
	      , a, b;
	    if(i < 0 || i >= l)return TO_STRING ? '' : undefined;
	    a = s.charCodeAt(i);
	    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff
	      ? TO_STRING ? s.charAt(i) : a
	      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
	  };
	};

/***/ },
/* 492 */
/***/ function(module, exports) {

	// 7.1.4 ToInteger
	var ceil  = Math.ceil
	  , floor = Math.floor;
	module.exports = function(it){
	  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
	};

/***/ },
/* 493 */
/***/ function(module, exports) {

	// 7.2.1 RequireObjectCoercible(argument)
	module.exports = function(it){
	  if(it == undefined)throw TypeError("Can't call method on  " + it);
	  return it;
	};

/***/ },
/* 494 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var LIBRARY        = __webpack_require__(495)
	  , $export        = __webpack_require__(472)
	  , redefine       = __webpack_require__(496)
	  , hide           = __webpack_require__(477)
	  , has            = __webpack_require__(497)
	  , Iterators      = __webpack_require__(498)
	  , $iterCreate    = __webpack_require__(499)
	  , setToStringTag = __webpack_require__(515)
	  , getPrototypeOf = __webpack_require__(517)
	  , ITERATOR       = __webpack_require__(516)('iterator')
	  , BUGGY          = !([].keys && 'next' in [].keys()) // Safari has buggy iterators w/o `next`
	  , FF_ITERATOR    = '@@iterator'
	  , KEYS           = 'keys'
	  , VALUES         = 'values';
	
	var returnThis = function(){ return this; };
	
	module.exports = function(Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED){
	  $iterCreate(Constructor, NAME, next);
	  var getMethod = function(kind){
	    if(!BUGGY && kind in proto)return proto[kind];
	    switch(kind){
	      case KEYS: return function keys(){ return new Constructor(this, kind); };
	      case VALUES: return function values(){ return new Constructor(this, kind); };
	    } return function entries(){ return new Constructor(this, kind); };
	  };
	  var TAG        = NAME + ' Iterator'
	    , DEF_VALUES = DEFAULT == VALUES
	    , VALUES_BUG = false
	    , proto      = Base.prototype
	    , $native    = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT]
	    , $default   = $native || getMethod(DEFAULT)
	    , $entries   = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined
	    , $anyNative = NAME == 'Array' ? proto.entries || $native : $native
	    , methods, key, IteratorPrototype;
	  // Fix native
	  if($anyNative){
	    IteratorPrototype = getPrototypeOf($anyNative.call(new Base));
	    if(IteratorPrototype !== Object.prototype){
	      // Set @@toStringTag to native iterators
	      setToStringTag(IteratorPrototype, TAG, true);
	      // fix for some old engines
	      if(!LIBRARY && !has(IteratorPrototype, ITERATOR))hide(IteratorPrototype, ITERATOR, returnThis);
	    }
	  }
	  // fix Array#{values, @@iterator}.name in V8 / FF
	  if(DEF_VALUES && $native && $native.name !== VALUES){
	    VALUES_BUG = true;
	    $default = function values(){ return $native.call(this); };
	  }
	  // Define iterator
	  if((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])){
	    hide(proto, ITERATOR, $default);
	  }
	  // Plug for library
	  Iterators[NAME] = $default;
	  Iterators[TAG]  = returnThis;
	  if(DEFAULT){
	    methods = {
	      values:  DEF_VALUES ? $default : getMethod(VALUES),
	      keys:    IS_SET     ? $default : getMethod(KEYS),
	      entries: $entries
	    };
	    if(FORCED)for(key in methods){
	      if(!(key in proto))redefine(proto, key, methods[key]);
	    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);
	  }
	  return methods;
	};

/***/ },
/* 495 */
/***/ function(module, exports) {

	module.exports = true;

/***/ },
/* 496 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(477);

/***/ },
/* 497 */
/***/ function(module, exports) {

	var hasOwnProperty = {}.hasOwnProperty;
	module.exports = function(it, key){
	  return hasOwnProperty.call(it, key);
	};

/***/ },
/* 498 */
/***/ function(module, exports) {

	module.exports = {};

/***/ },
/* 499 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var create         = __webpack_require__(500)
	  , descriptor     = __webpack_require__(486)
	  , setToStringTag = __webpack_require__(515)
	  , IteratorPrototype = {};
	
	// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
	__webpack_require__(477)(IteratorPrototype, __webpack_require__(516)('iterator'), function(){ return this; });
	
	module.exports = function(Constructor, NAME, next){
	  Constructor.prototype = create(IteratorPrototype, {next: descriptor(1, next)});
	  setToStringTag(Constructor, NAME + ' Iterator');
	};

/***/ },
/* 500 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
	var anObject    = __webpack_require__(479)
	  , dPs         = __webpack_require__(501)
	  , enumBugKeys = __webpack_require__(513)
	  , IE_PROTO    = __webpack_require__(510)('IE_PROTO')
	  , Empty       = function(){ /* empty */ }
	  , PROTOTYPE   = 'prototype';
	
	// Create object with fake `null` prototype: use iframe Object with cleared prototype
	var createDict = function(){
	  // Thrash, waste and sodomy: IE GC bug
	  var iframe = __webpack_require__(484)('iframe')
	    , i      = enumBugKeys.length
	    , lt     = '<'
	    , gt     = '>'
	    , iframeDocument;
	  iframe.style.display = 'none';
	  __webpack_require__(514).appendChild(iframe);
	  iframe.src = 'javascript:'; // eslint-disable-line no-script-url
	  // createDict = iframe.contentWindow.Object;
	  // html.removeChild(iframe);
	  iframeDocument = iframe.contentWindow.document;
	  iframeDocument.open();
	  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
	  iframeDocument.close();
	  createDict = iframeDocument.F;
	  while(i--)delete createDict[PROTOTYPE][enumBugKeys[i]];
	  return createDict();
	};
	
	module.exports = Object.create || function create(O, Properties){
	  var result;
	  if(O !== null){
	    Empty[PROTOTYPE] = anObject(O);
	    result = new Empty;
	    Empty[PROTOTYPE] = null;
	    // add "__proto__" for Object.getPrototypeOf polyfill
	    result[IE_PROTO] = O;
	  } else result = createDict();
	  return Properties === undefined ? result : dPs(result, Properties);
	};


/***/ },
/* 501 */
/***/ function(module, exports, __webpack_require__) {

	var dP       = __webpack_require__(478)
	  , anObject = __webpack_require__(479)
	  , getKeys  = __webpack_require__(502);
	
	module.exports = __webpack_require__(482) ? Object.defineProperties : function defineProperties(O, Properties){
	  anObject(O);
	  var keys   = getKeys(Properties)
	    , length = keys.length
	    , i = 0
	    , P;
	  while(length > i)dP.f(O, P = keys[i++], Properties[P]);
	  return O;
	};

/***/ },
/* 502 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.14 / 15.2.3.14 Object.keys(O)
	var $keys       = __webpack_require__(503)
	  , enumBugKeys = __webpack_require__(513);
	
	module.exports = Object.keys || function keys(O){
	  return $keys(O, enumBugKeys);
	};

/***/ },
/* 503 */
/***/ function(module, exports, __webpack_require__) {

	var has          = __webpack_require__(497)
	  , toIObject    = __webpack_require__(504)
	  , arrayIndexOf = __webpack_require__(507)(false)
	  , IE_PROTO     = __webpack_require__(510)('IE_PROTO');
	
	module.exports = function(object, names){
	  var O      = toIObject(object)
	    , i      = 0
	    , result = []
	    , key;
	  for(key in O)if(key != IE_PROTO)has(O, key) && result.push(key);
	  // Don't enum bug & hidden keys
	  while(names.length > i)if(has(O, key = names[i++])){
	    ~arrayIndexOf(result, key) || result.push(key);
	  }
	  return result;
	};

/***/ },
/* 504 */
/***/ function(module, exports, __webpack_require__) {

	// to indexed object, toObject with fallback for non-array-like ES3 strings
	var IObject = __webpack_require__(505)
	  , defined = __webpack_require__(493);
	module.exports = function(it){
	  return IObject(defined(it));
	};

/***/ },
/* 505 */
/***/ function(module, exports, __webpack_require__) {

	// fallback for non-array-like ES3 and non-enumerable old V8 strings
	var cof = __webpack_require__(506);
	module.exports = Object('z').propertyIsEnumerable(0) ? Object : function(it){
	  return cof(it) == 'String' ? it.split('') : Object(it);
	};

/***/ },
/* 506 */
/***/ function(module, exports) {

	var toString = {}.toString;
	
	module.exports = function(it){
	  return toString.call(it).slice(8, -1);
	};

/***/ },
/* 507 */
/***/ function(module, exports, __webpack_require__) {

	// false -> Array#indexOf
	// true  -> Array#includes
	var toIObject = __webpack_require__(504)
	  , toLength  = __webpack_require__(508)
	  , toIndex   = __webpack_require__(509);
	module.exports = function(IS_INCLUDES){
	  return function($this, el, fromIndex){
	    var O      = toIObject($this)
	      , length = toLength(O.length)
	      , index  = toIndex(fromIndex, length)
	      , value;
	    // Array#includes uses SameValueZero equality algorithm
	    if(IS_INCLUDES && el != el)while(length > index){
	      value = O[index++];
	      if(value != value)return true;
	    // Array#toIndex ignores holes, Array#includes - not
	    } else for(;length > index; index++)if(IS_INCLUDES || index in O){
	      if(O[index] === el)return IS_INCLUDES || index || 0;
	    } return !IS_INCLUDES && -1;
	  };
	};

/***/ },
/* 508 */
/***/ function(module, exports, __webpack_require__) {

	// 7.1.15 ToLength
	var toInteger = __webpack_require__(492)
	  , min       = Math.min;
	module.exports = function(it){
	  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
	};

/***/ },
/* 509 */
/***/ function(module, exports, __webpack_require__) {

	var toInteger = __webpack_require__(492)
	  , max       = Math.max
	  , min       = Math.min;
	module.exports = function(index, length){
	  index = toInteger(index);
	  return index < 0 ? max(index + length, 0) : min(index, length);
	};

/***/ },
/* 510 */
/***/ function(module, exports, __webpack_require__) {

	var shared = __webpack_require__(511)('keys')
	  , uid    = __webpack_require__(512);
	module.exports = function(key){
	  return shared[key] || (shared[key] = uid(key));
	};

/***/ },
/* 511 */
/***/ function(module, exports, __webpack_require__) {

	var global = __webpack_require__(473)
	  , SHARED = '__core-js_shared__'
	  , store  = global[SHARED] || (global[SHARED] = {});
	module.exports = function(key){
	  return store[key] || (store[key] = {});
	};

/***/ },
/* 512 */
/***/ function(module, exports) {

	var id = 0
	  , px = Math.random();
	module.exports = function(key){
	  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
	};

/***/ },
/* 513 */
/***/ function(module, exports) {

	// IE 8- don't enum bug keys
	module.exports = (
	  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'
	).split(',');

/***/ },
/* 514 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(473).document && document.documentElement;

/***/ },
/* 515 */
/***/ function(module, exports, __webpack_require__) {

	var def = __webpack_require__(478).f
	  , has = __webpack_require__(497)
	  , TAG = __webpack_require__(516)('toStringTag');
	
	module.exports = function(it, tag, stat){
	  if(it && !has(it = stat ? it : it.prototype, TAG))def(it, TAG, {configurable: true, value: tag});
	};

/***/ },
/* 516 */
/***/ function(module, exports, __webpack_require__) {

	var store      = __webpack_require__(511)('wks')
	  , uid        = __webpack_require__(512)
	  , Symbol     = __webpack_require__(473).Symbol
	  , USE_SYMBOL = typeof Symbol == 'function';
	
	var $exports = module.exports = function(name){
	  return store[name] || (store[name] =
	    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));
	};
	
	$exports.store = store;

/***/ },
/* 517 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)
	var has         = __webpack_require__(497)
	  , toObject    = __webpack_require__(518)
	  , IE_PROTO    = __webpack_require__(510)('IE_PROTO')
	  , ObjectProto = Object.prototype;
	
	module.exports = Object.getPrototypeOf || function(O){
	  O = toObject(O);
	  if(has(O, IE_PROTO))return O[IE_PROTO];
	  if(typeof O.constructor == 'function' && O instanceof O.constructor){
	    return O.constructor.prototype;
	  } return O instanceof Object ? ObjectProto : null;
	};

/***/ },
/* 518 */
/***/ function(module, exports, __webpack_require__) {

	// 7.1.13 ToObject(argument)
	var defined = __webpack_require__(493);
	module.exports = function(it){
	  return Object(defined(it));
	};

/***/ },
/* 519 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var ctx            = __webpack_require__(475)
	  , $export        = __webpack_require__(472)
	  , toObject       = __webpack_require__(518)
	  , call           = __webpack_require__(520)
	  , isArrayIter    = __webpack_require__(521)
	  , toLength       = __webpack_require__(508)
	  , createProperty = __webpack_require__(522)
	  , getIterFn      = __webpack_require__(523);
	
	$export($export.S + $export.F * !__webpack_require__(525)(function(iter){ Array.from(iter); }), 'Array', {
	  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)
	  from: function from(arrayLike/*, mapfn = undefined, thisArg = undefined*/){
	    var O       = toObject(arrayLike)
	      , C       = typeof this == 'function' ? this : Array
	      , aLen    = arguments.length
	      , mapfn   = aLen > 1 ? arguments[1] : undefined
	      , mapping = mapfn !== undefined
	      , index   = 0
	      , iterFn  = getIterFn(O)
	      , length, result, step, iterator;
	    if(mapping)mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);
	    // if object isn't iterable or it's array with default iterator - use simple case
	    if(iterFn != undefined && !(C == Array && isArrayIter(iterFn))){
	      for(iterator = iterFn.call(O), result = new C; !(step = iterator.next()).done; index++){
	        createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);
	      }
	    } else {
	      length = toLength(O.length);
	      for(result = new C(length); length > index; index++){
	        createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);
	      }
	    }
	    result.length = index;
	    return result;
	  }
	});


/***/ },
/* 520 */
/***/ function(module, exports, __webpack_require__) {

	// call something on iterator step with safe closing on error
	var anObject = __webpack_require__(479);
	module.exports = function(iterator, fn, value, entries){
	  try {
	    return entries ? fn(anObject(value)[0], value[1]) : fn(value);
	  // 7.4.6 IteratorClose(iterator, completion)
	  } catch(e){
	    var ret = iterator['return'];
	    if(ret !== undefined)anObject(ret.call(iterator));
	    throw e;
	  }
	};

/***/ },
/* 521 */
/***/ function(module, exports, __webpack_require__) {

	// check on default Array iterator
	var Iterators  = __webpack_require__(498)
	  , ITERATOR   = __webpack_require__(516)('iterator')
	  , ArrayProto = Array.prototype;
	
	module.exports = function(it){
	  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);
	};

/***/ },
/* 522 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $defineProperty = __webpack_require__(478)
	  , createDesc      = __webpack_require__(486);
	
	module.exports = function(object, index, value){
	  if(index in object)$defineProperty.f(object, index, createDesc(0, value));
	  else object[index] = value;
	};

/***/ },
/* 523 */
/***/ function(module, exports, __webpack_require__) {

	var classof   = __webpack_require__(524)
	  , ITERATOR  = __webpack_require__(516)('iterator')
	  , Iterators = __webpack_require__(498);
	module.exports = __webpack_require__(474).getIteratorMethod = function(it){
	  if(it != undefined)return it[ITERATOR]
	    || it['@@iterator']
	    || Iterators[classof(it)];
	};

/***/ },
/* 524 */
/***/ function(module, exports, __webpack_require__) {

	// getting tag from 19.1.3.6 Object.prototype.toString()
	var cof = __webpack_require__(506)
	  , TAG = __webpack_require__(516)('toStringTag')
	  // ES3 wrong here
	  , ARG = cof(function(){ return arguments; }()) == 'Arguments';
	
	// fallback for IE11 Script Access Denied error
	var tryGet = function(it, key){
	  try {
	    return it[key];
	  } catch(e){ /* empty */ }
	};
	
	module.exports = function(it){
	  var O, T, B;
	  return it === undefined ? 'Undefined' : it === null ? 'Null'
	    // @@toStringTag case
	    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T
	    // builtinTag case
	    : ARG ? cof(O)
	    // ES3 arguments fallback
	    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;
	};

/***/ },
/* 525 */
/***/ function(module, exports, __webpack_require__) {

	var ITERATOR     = __webpack_require__(516)('iterator')
	  , SAFE_CLOSING = false;
	
	try {
	  var riter = [7][ITERATOR]();
	  riter['return'] = function(){ SAFE_CLOSING = true; };
	  Array.from(riter, function(){ throw 2; });
	} catch(e){ /* empty */ }
	
	module.exports = function(exec, skipClosing){
	  if(!skipClosing && !SAFE_CLOSING)return false;
	  var safe = false;
	  try {
	    var arr  = [7]
	      , iter = arr[ITERATOR]();
	    iter.next = function(){ return {done: safe = true}; };
	    arr[ITERATOR] = function(){ return iter; };
	    exec(arr);
	  } catch(e){ /* empty */ }
	  return safe;
	};

/***/ },
/* 526 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _assign = __webpack_require__(527);
	
	var _assign2 = _interopRequireDefault(_assign);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = _assign2.default || function (target) {
	  for (var i = 1; i < arguments.length; i++) {
	    var source = arguments[i];
	
	    for (var key in source) {
	      if (Object.prototype.hasOwnProperty.call(source, key)) {
	        target[key] = source[key];
	      }
	    }
	  }
	
	  return target;
	};

/***/ },
/* 527 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(528), __esModule: true };

/***/ },
/* 528 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(529);
	module.exports = __webpack_require__(474).Object.assign;

/***/ },
/* 529 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.3.1 Object.assign(target, source)
	var $export = __webpack_require__(472);
	
	$export($export.S + $export.F, 'Object', {assign: __webpack_require__(530)});

/***/ },
/* 530 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// 19.1.2.1 Object.assign(target, source, ...)
	var getKeys  = __webpack_require__(502)
	  , gOPS     = __webpack_require__(531)
	  , pIE      = __webpack_require__(532)
	  , toObject = __webpack_require__(518)
	  , IObject  = __webpack_require__(505)
	  , $assign  = Object.assign;
	
	// should work with symbols and should have deterministic property order (V8 bug)
	module.exports = !$assign || __webpack_require__(483)(function(){
	  var A = {}
	    , B = {}
	    , S = Symbol()
	    , K = 'abcdefghijklmnopqrst';
	  A[S] = 7;
	  K.split('').forEach(function(k){ B[k] = k; });
	  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;
	}) ? function assign(target, source){ // eslint-disable-line no-unused-vars
	  var T     = toObject(target)
	    , aLen  = arguments.length
	    , index = 1
	    , getSymbols = gOPS.f
	    , isEnum     = pIE.f;
	  while(aLen > index){
	    var S      = IObject(arguments[index++])
	      , keys   = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S)
	      , length = keys.length
	      , j      = 0
	      , key;
	    while(length > j)if(isEnum.call(S, key = keys[j++]))T[key] = S[key];
	  } return T;
	} : $assign;

/***/ },
/* 531 */
/***/ function(module, exports) {

	exports.f = Object.getOwnPropertySymbols;

/***/ },
/* 532 */
/***/ function(module, exports) {

	exports.f = {}.propertyIsEnumerable;

/***/ },
/* 533 */
/***/ function(module, exports) {

	"use strict";
	
	exports.__esModule = true;
	
	exports.default = function (instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError("Cannot call a class as a function");
	  }
	};

/***/ },
/* 534 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _typeof2 = __webpack_require__(535);
	
	var _typeof3 = _interopRequireDefault(_typeof2);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = function (self, call) {
	  if (!self) {
	    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
	  }
	
	  return call && ((typeof call === "undefined" ? "undefined" : (0, _typeof3.default)(call)) === "object" || typeof call === "function") ? call : self;
	};

/***/ },
/* 535 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _iterator = __webpack_require__(536);
	
	var _iterator2 = _interopRequireDefault(_iterator);
	
	var _symbol = __webpack_require__(543);
	
	var _symbol2 = _interopRequireDefault(_symbol);
	
	var _typeof = typeof _symbol2.default === "function" && typeof _iterator2.default === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? "symbol" : typeof obj; };
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = typeof _symbol2.default === "function" && _typeof(_iterator2.default) === "symbol" ? function (obj) {
	  return typeof obj === "undefined" ? "undefined" : _typeof(obj);
	} : function (obj) {
	  return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? "symbol" : typeof obj === "undefined" ? "undefined" : _typeof(obj);
	};

/***/ },
/* 536 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(537), __esModule: true };

/***/ },
/* 537 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(490);
	__webpack_require__(538);
	module.exports = __webpack_require__(542).f('iterator');

/***/ },
/* 538 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(539);
	var global        = __webpack_require__(473)
	  , hide          = __webpack_require__(477)
	  , Iterators     = __webpack_require__(498)
	  , TO_STRING_TAG = __webpack_require__(516)('toStringTag');
	
	for(var collections = ['NodeList', 'DOMTokenList', 'MediaList', 'StyleSheetList', 'CSSRuleList'], i = 0; i < 5; i++){
	  var NAME       = collections[i]
	    , Collection = global[NAME]
	    , proto      = Collection && Collection.prototype;
	  if(proto && !proto[TO_STRING_TAG])hide(proto, TO_STRING_TAG, NAME);
	  Iterators[NAME] = Iterators.Array;
	}

/***/ },
/* 539 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var addToUnscopables = __webpack_require__(540)
	  , step             = __webpack_require__(541)
	  , Iterators        = __webpack_require__(498)
	  , toIObject        = __webpack_require__(504);
	
	// 22.1.3.4 Array.prototype.entries()
	// 22.1.3.13 Array.prototype.keys()
	// 22.1.3.29 Array.prototype.values()
	// 22.1.3.30 Array.prototype[@@iterator]()
	module.exports = __webpack_require__(494)(Array, 'Array', function(iterated, kind){
	  this._t = toIObject(iterated); // target
	  this._i = 0;                   // next index
	  this._k = kind;                // kind
	// 22.1.5.2.1 %ArrayIteratorPrototype%.next()
	}, function(){
	  var O     = this._t
	    , kind  = this._k
	    , index = this._i++;
	  if(!O || index >= O.length){
	    this._t = undefined;
	    return step(1);
	  }
	  if(kind == 'keys'  )return step(0, index);
	  if(kind == 'values')return step(0, O[index]);
	  return step(0, [index, O[index]]);
	}, 'values');
	
	// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
	Iterators.Arguments = Iterators.Array;
	
	addToUnscopables('keys');
	addToUnscopables('values');
	addToUnscopables('entries');

/***/ },
/* 540 */
/***/ function(module, exports) {

	module.exports = function(){ /* empty */ };

/***/ },
/* 541 */
/***/ function(module, exports) {

	module.exports = function(done, value){
	  return {value: value, done: !!done};
	};

/***/ },
/* 542 */
/***/ function(module, exports, __webpack_require__) {

	exports.f = __webpack_require__(516);

/***/ },
/* 543 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(544), __esModule: true };

/***/ },
/* 544 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(545);
	__webpack_require__(554);
	__webpack_require__(555);
	__webpack_require__(556);
	module.exports = __webpack_require__(474).Symbol;

/***/ },
/* 545 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// ECMAScript 6 symbols shim
	var global         = __webpack_require__(473)
	  , has            = __webpack_require__(497)
	  , DESCRIPTORS    = __webpack_require__(482)
	  , $export        = __webpack_require__(472)
	  , redefine       = __webpack_require__(496)
	  , META           = __webpack_require__(546).KEY
	  , $fails         = __webpack_require__(483)
	  , shared         = __webpack_require__(511)
	  , setToStringTag = __webpack_require__(515)
	  , uid            = __webpack_require__(512)
	  , wks            = __webpack_require__(516)
	  , wksExt         = __webpack_require__(542)
	  , wksDefine      = __webpack_require__(547)
	  , keyOf          = __webpack_require__(548)
	  , enumKeys       = __webpack_require__(549)
	  , isArray        = __webpack_require__(550)
	  , anObject       = __webpack_require__(479)
	  , toIObject      = __webpack_require__(504)
	  , toPrimitive    = __webpack_require__(485)
	  , createDesc     = __webpack_require__(486)
	  , _create        = __webpack_require__(500)
	  , gOPNExt        = __webpack_require__(551)
	  , $GOPD          = __webpack_require__(553)
	  , $DP            = __webpack_require__(478)
	  , $keys          = __webpack_require__(502)
	  , gOPD           = $GOPD.f
	  , dP             = $DP.f
	  , gOPN           = gOPNExt.f
	  , $Symbol        = global.Symbol
	  , $JSON          = global.JSON
	  , _stringify     = $JSON && $JSON.stringify
	  , PROTOTYPE      = 'prototype'
	  , HIDDEN         = wks('_hidden')
	  , TO_PRIMITIVE   = wks('toPrimitive')
	  , isEnum         = {}.propertyIsEnumerable
	  , SymbolRegistry = shared('symbol-registry')
	  , AllSymbols     = shared('symbols')
	  , OPSymbols      = shared('op-symbols')
	  , ObjectProto    = Object[PROTOTYPE]
	  , USE_NATIVE     = typeof $Symbol == 'function'
	  , QObject        = global.QObject;
	// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
	var setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;
	
	// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
	var setSymbolDesc = DESCRIPTORS && $fails(function(){
	  return _create(dP({}, 'a', {
	    get: function(){ return dP(this, 'a', {value: 7}).a; }
	  })).a != 7;
	}) ? function(it, key, D){
	  var protoDesc = gOPD(ObjectProto, key);
	  if(protoDesc)delete ObjectProto[key];
	  dP(it, key, D);
	  if(protoDesc && it !== ObjectProto)dP(ObjectProto, key, protoDesc);
	} : dP;
	
	var wrap = function(tag){
	  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);
	  sym._k = tag;
	  return sym;
	};
	
	var isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function(it){
	  return typeof it == 'symbol';
	} : function(it){
	  return it instanceof $Symbol;
	};
	
	var $defineProperty = function defineProperty(it, key, D){
	  if(it === ObjectProto)$defineProperty(OPSymbols, key, D);
	  anObject(it);
	  key = toPrimitive(key, true);
	  anObject(D);
	  if(has(AllSymbols, key)){
	    if(!D.enumerable){
	      if(!has(it, HIDDEN))dP(it, HIDDEN, createDesc(1, {}));
	      it[HIDDEN][key] = true;
	    } else {
	      if(has(it, HIDDEN) && it[HIDDEN][key])it[HIDDEN][key] = false;
	      D = _create(D, {enumerable: createDesc(0, false)});
	    } return setSymbolDesc(it, key, D);
	  } return dP(it, key, D);
	};
	var $defineProperties = function defineProperties(it, P){
	  anObject(it);
	  var keys = enumKeys(P = toIObject(P))
	    , i    = 0
	    , l = keys.length
	    , key;
	  while(l > i)$defineProperty(it, key = keys[i++], P[key]);
	  return it;
	};
	var $create = function create(it, P){
	  return P === undefined ? _create(it) : $defineProperties(_create(it), P);
	};
	var $propertyIsEnumerable = function propertyIsEnumerable(key){
	  var E = isEnum.call(this, key = toPrimitive(key, true));
	  if(this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key))return false;
	  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;
	};
	var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key){
	  it  = toIObject(it);
	  key = toPrimitive(key, true);
	  if(it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key))return;
	  var D = gOPD(it, key);
	  if(D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key]))D.enumerable = true;
	  return D;
	};
	var $getOwnPropertyNames = function getOwnPropertyNames(it){
	  var names  = gOPN(toIObject(it))
	    , result = []
	    , i      = 0
	    , key;
	  while(names.length > i){
	    if(!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META)result.push(key);
	  } return result;
	};
	var $getOwnPropertySymbols = function getOwnPropertySymbols(it){
	  var IS_OP  = it === ObjectProto
	    , names  = gOPN(IS_OP ? OPSymbols : toIObject(it))
	    , result = []
	    , i      = 0
	    , key;
	  while(names.length > i){
	    if(has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true))result.push(AllSymbols[key]);
	  } return result;
	};
	
	// 19.4.1.1 Symbol([description])
	if(!USE_NATIVE){
	  $Symbol = function Symbol(){
	    if(this instanceof $Symbol)throw TypeError('Symbol is not a constructor!');
	    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);
	    var $set = function(value){
	      if(this === ObjectProto)$set.call(OPSymbols, value);
	      if(has(this, HIDDEN) && has(this[HIDDEN], tag))this[HIDDEN][tag] = false;
	      setSymbolDesc(this, tag, createDesc(1, value));
	    };
	    if(DESCRIPTORS && setter)setSymbolDesc(ObjectProto, tag, {configurable: true, set: $set});
	    return wrap(tag);
	  };
	  redefine($Symbol[PROTOTYPE], 'toString', function toString(){
	    return this._k;
	  });
	
	  $GOPD.f = $getOwnPropertyDescriptor;
	  $DP.f   = $defineProperty;
	  __webpack_require__(552).f = gOPNExt.f = $getOwnPropertyNames;
	  __webpack_require__(532).f  = $propertyIsEnumerable;
	  __webpack_require__(531).f = $getOwnPropertySymbols;
	
	  if(DESCRIPTORS && !__webpack_require__(495)){
	    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);
	  }
	
	  wksExt.f = function(name){
	    return wrap(wks(name));
	  }
	}
	
	$export($export.G + $export.W + $export.F * !USE_NATIVE, {Symbol: $Symbol});
	
	for(var symbols = (
	  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14
	  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'
	).split(','), i = 0; symbols.length > i; )wks(symbols[i++]);
	
	for(var symbols = $keys(wks.store), i = 0; symbols.length > i; )wksDefine(symbols[i++]);
	
	$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {
	  // 19.4.2.1 Symbol.for(key)
	  'for': function(key){
	    return has(SymbolRegistry, key += '')
	      ? SymbolRegistry[key]
	      : SymbolRegistry[key] = $Symbol(key);
	  },
	  // 19.4.2.5 Symbol.keyFor(sym)
	  keyFor: function keyFor(key){
	    if(isSymbol(key))return keyOf(SymbolRegistry, key);
	    throw TypeError(key + ' is not a symbol!');
	  },
	  useSetter: function(){ setter = true; },
	  useSimple: function(){ setter = false; }
	});
	
	$export($export.S + $export.F * !USE_NATIVE, 'Object', {
	  // 19.1.2.2 Object.create(O [, Properties])
	  create: $create,
	  // 19.1.2.4 Object.defineProperty(O, P, Attributes)
	  defineProperty: $defineProperty,
	  // 19.1.2.3 Object.defineProperties(O, Properties)
	  defineProperties: $defineProperties,
	  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
	  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,
	  // 19.1.2.7 Object.getOwnPropertyNames(O)
	  getOwnPropertyNames: $getOwnPropertyNames,
	  // 19.1.2.8 Object.getOwnPropertySymbols(O)
	  getOwnPropertySymbols: $getOwnPropertySymbols
	});
	
	// 24.3.2 JSON.stringify(value [, replacer [, space]])
	$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function(){
	  var S = $Symbol();
	  // MS Edge converts symbol values to JSON as {}
	  // WebKit converts symbol values to JSON as null
	  // V8 throws on boxed symbols
	  return _stringify([S]) != '[null]' || _stringify({a: S}) != '{}' || _stringify(Object(S)) != '{}';
	})), 'JSON', {
	  stringify: function stringify(it){
	    if(it === undefined || isSymbol(it))return; // IE8 returns string on undefined
	    var args = [it]
	      , i    = 1
	      , replacer, $replacer;
	    while(arguments.length > i)args.push(arguments[i++]);
	    replacer = args[1];
	    if(typeof replacer == 'function')$replacer = replacer;
	    if($replacer || !isArray(replacer))replacer = function(key, value){
	      if($replacer)value = $replacer.call(this, key, value);
	      if(!isSymbol(value))return value;
	    };
	    args[1] = replacer;
	    return _stringify.apply($JSON, args);
	  }
	});
	
	// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)
	$Symbol[PROTOTYPE][TO_PRIMITIVE] || __webpack_require__(477)($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);
	// 19.4.3.5 Symbol.prototype[@@toStringTag]
	setToStringTag($Symbol, 'Symbol');
	// 20.2.1.9 Math[@@toStringTag]
	setToStringTag(Math, 'Math', true);
	// 24.3.3 JSON[@@toStringTag]
	setToStringTag(global.JSON, 'JSON', true);

/***/ },
/* 546 */
/***/ function(module, exports, __webpack_require__) {

	var META     = __webpack_require__(512)('meta')
	  , isObject = __webpack_require__(480)
	  , has      = __webpack_require__(497)
	  , setDesc  = __webpack_require__(478).f
	  , id       = 0;
	var isExtensible = Object.isExtensible || function(){
	  return true;
	};
	var FREEZE = !__webpack_require__(483)(function(){
	  return isExtensible(Object.preventExtensions({}));
	});
	var setMeta = function(it){
	  setDesc(it, META, {value: {
	    i: 'O' + ++id, // object ID
	    w: {}          // weak collections IDs
	  }});
	};
	var fastKey = function(it, create){
	  // return primitive with prefix
	  if(!isObject(it))return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
	  if(!has(it, META)){
	    // can't set metadata to uncaught frozen object
	    if(!isExtensible(it))return 'F';
	    // not necessary to add metadata
	    if(!create)return 'E';
	    // add missing metadata
	    setMeta(it);
	  // return object ID
	  } return it[META].i;
	};
	var getWeak = function(it, create){
	  if(!has(it, META)){
	    // can't set metadata to uncaught frozen object
	    if(!isExtensible(it))return true;
	    // not necessary to add metadata
	    if(!create)return false;
	    // add missing metadata
	    setMeta(it);
	  // return hash weak collections IDs
	  } return it[META].w;
	};
	// add metadata on freeze-family methods calling
	var onFreeze = function(it){
	  if(FREEZE && meta.NEED && isExtensible(it) && !has(it, META))setMeta(it);
	  return it;
	};
	var meta = module.exports = {
	  KEY:      META,
	  NEED:     false,
	  fastKey:  fastKey,
	  getWeak:  getWeak,
	  onFreeze: onFreeze
	};

/***/ },
/* 547 */
/***/ function(module, exports, __webpack_require__) {

	var global         = __webpack_require__(473)
	  , core           = __webpack_require__(474)
	  , LIBRARY        = __webpack_require__(495)
	  , wksExt         = __webpack_require__(542)
	  , defineProperty = __webpack_require__(478).f;
	module.exports = function(name){
	  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});
	  if(name.charAt(0) != '_' && !(name in $Symbol))defineProperty($Symbol, name, {value: wksExt.f(name)});
	};

/***/ },
/* 548 */
/***/ function(module, exports, __webpack_require__) {

	var getKeys   = __webpack_require__(502)
	  , toIObject = __webpack_require__(504);
	module.exports = function(object, el){
	  var O      = toIObject(object)
	    , keys   = getKeys(O)
	    , length = keys.length
	    , index  = 0
	    , key;
	  while(length > index)if(O[key = keys[index++]] === el)return key;
	};

/***/ },
/* 549 */
/***/ function(module, exports, __webpack_require__) {

	// all enumerable object keys, includes symbols
	var getKeys = __webpack_require__(502)
	  , gOPS    = __webpack_require__(531)
	  , pIE     = __webpack_require__(532);
	module.exports = function(it){
	  var result     = getKeys(it)
	    , getSymbols = gOPS.f;
	  if(getSymbols){
	    var symbols = getSymbols(it)
	      , isEnum  = pIE.f
	      , i       = 0
	      , key;
	    while(symbols.length > i)if(isEnum.call(it, key = symbols[i++]))result.push(key);
	  } return result;
	};

/***/ },
/* 550 */
/***/ function(module, exports, __webpack_require__) {

	// 7.2.2 IsArray(argument)
	var cof = __webpack_require__(506);
	module.exports = Array.isArray || function isArray(arg){
	  return cof(arg) == 'Array';
	};

/***/ },
/* 551 */
/***/ function(module, exports, __webpack_require__) {

	// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
	var toIObject = __webpack_require__(504)
	  , gOPN      = __webpack_require__(552).f
	  , toString  = {}.toString;
	
	var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames
	  ? Object.getOwnPropertyNames(window) : [];
	
	var getWindowNames = function(it){
	  try {
	    return gOPN(it);
	  } catch(e){
	    return windowNames.slice();
	  }
	};
	
	module.exports.f = function getOwnPropertyNames(it){
	  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));
	};


/***/ },
/* 552 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)
	var $keys      = __webpack_require__(503)
	  , hiddenKeys = __webpack_require__(513).concat('length', 'prototype');
	
	exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O){
	  return $keys(O, hiddenKeys);
	};

/***/ },
/* 553 */
/***/ function(module, exports, __webpack_require__) {

	var pIE            = __webpack_require__(532)
	  , createDesc     = __webpack_require__(486)
	  , toIObject      = __webpack_require__(504)
	  , toPrimitive    = __webpack_require__(485)
	  , has            = __webpack_require__(497)
	  , IE8_DOM_DEFINE = __webpack_require__(481)
	  , gOPD           = Object.getOwnPropertyDescriptor;
	
	exports.f = __webpack_require__(482) ? gOPD : function getOwnPropertyDescriptor(O, P){
	  O = toIObject(O);
	  P = toPrimitive(P, true);
	  if(IE8_DOM_DEFINE)try {
	    return gOPD(O, P);
	  } catch(e){ /* empty */ }
	  if(has(O, P))return createDesc(!pIE.f.call(O, P), O[P]);
	};

/***/ },
/* 554 */
/***/ function(module, exports) {



/***/ },
/* 555 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(547)('asyncIterator');

/***/ },
/* 556 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(547)('observable');

/***/ },
/* 557 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _setPrototypeOf = __webpack_require__(558);
	
	var _setPrototypeOf2 = _interopRequireDefault(_setPrototypeOf);
	
	var _create = __webpack_require__(562);
	
	var _create2 = _interopRequireDefault(_create);
	
	var _typeof2 = __webpack_require__(535);
	
	var _typeof3 = _interopRequireDefault(_typeof2);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = function (subClass, superClass) {
	  if (typeof superClass !== "function" && superClass !== null) {
	    throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : (0, _typeof3.default)(superClass)));
	  }
	
	  subClass.prototype = (0, _create2.default)(superClass && superClass.prototype, {
	    constructor: {
	      value: subClass,
	      enumerable: false,
	      writable: true,
	      configurable: true
	    }
	  });
	  if (superClass) _setPrototypeOf2.default ? (0, _setPrototypeOf2.default)(subClass, superClass) : subClass.__proto__ = superClass;
	};

/***/ },
/* 558 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(559), __esModule: true };

/***/ },
/* 559 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(560);
	module.exports = __webpack_require__(474).Object.setPrototypeOf;

/***/ },
/* 560 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.3.19 Object.setPrototypeOf(O, proto)
	var $export = __webpack_require__(472);
	$export($export.S, 'Object', {setPrototypeOf: __webpack_require__(561).set});

/***/ },
/* 561 */
/***/ function(module, exports, __webpack_require__) {

	// Works with __proto__ only. Old v8 can't work with null proto objects.
	/* eslint-disable no-proto */
	var isObject = __webpack_require__(480)
	  , anObject = __webpack_require__(479);
	var check = function(O, proto){
	  anObject(O);
	  if(!isObject(proto) && proto !== null)throw TypeError(proto + ": can't set as prototype!");
	};
	module.exports = {
	  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line
	    function(test, buggy, set){
	      try {
	        set = __webpack_require__(475)(Function.call, __webpack_require__(553).f(Object.prototype, '__proto__').set, 2);
	        set(test, []);
	        buggy = !(test instanceof Array);
	      } catch(e){ buggy = true; }
	      return function setPrototypeOf(O, proto){
	        check(O, proto);
	        if(buggy)O.__proto__ = proto;
	        else set(O, proto);
	        return O;
	      };
	    }({}, false) : undefined),
	  check: check
	};

/***/ },
/* 562 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(563), __esModule: true };

/***/ },
/* 563 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(564);
	var $Object = __webpack_require__(474).Object;
	module.exports = function create(P, D){
	  return $Object.create(P, D);
	};

/***/ },
/* 564 */
/***/ function(module, exports, __webpack_require__) {

	var $export = __webpack_require__(472)
	// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
	$export($export.S, 'Object', {create: __webpack_require__(500)});

/***/ },
/* 565 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = addEventListenerWrap;
	
	var _addDomEventListener = __webpack_require__(566);
	
	var _addDomEventListener2 = _interopRequireDefault(_addDomEventListener);
	
	var _reactDom = __webpack_require__(32);
	
	var _reactDom2 = _interopRequireDefault(_reactDom);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
	
	function addEventListenerWrap(target, eventType, cb) {
	  /* eslint camelcase: 2 */
	  var callback = _reactDom2["default"].unstable_batchedUpdates ? function run(e) {
	    _reactDom2["default"].unstable_batchedUpdates(cb, e);
	  } : cb;
	  return (0, _addDomEventListener2["default"])(target, eventType, callback);
	}
	module.exports = exports['default'];

/***/ },
/* 566 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = addEventListener;
	
	var _EventObject = __webpack_require__(567);
	
	var _EventObject2 = _interopRequireDefault(_EventObject);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
	
	function addEventListener(target, eventType, callback) {
	  function wrapCallback(e) {
	    var ne = new _EventObject2["default"](e);
	    callback.call(target, ne);
	  }
	
	  if (target.addEventListener) {
	    target.addEventListener(eventType, wrapCallback, false);
	    return {
	      remove: function remove() {
	        target.removeEventListener(eventType, wrapCallback, false);
	      }
	    };
	  } else if (target.attachEvent) {
	    target.attachEvent('on' + eventType, wrapCallback);
	    return {
	      remove: function remove() {
	        target.detachEvent('on' + eventType, wrapCallback);
	      }
	    };
	  }
	}
	module.exports = exports['default'];

/***/ },
/* 567 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _EventBaseObject = __webpack_require__(568);
	
	var _EventBaseObject2 = _interopRequireDefault(_EventBaseObject);
	
	var _objectAssign = __webpack_require__(4);
	
	var _objectAssign2 = _interopRequireDefault(_objectAssign);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
	
	/**
	 * @ignore
	 * event object for dom
	 * @author yiminghe@gmail.com
	 */
	
	var TRUE = true;
	var FALSE = false;
	var commonProps = ['altKey', 'bubbles', 'cancelable', 'ctrlKey', 'currentTarget', 'eventPhase', 'metaKey', 'shiftKey', 'target', 'timeStamp', 'view', 'type'];
	
	function isNullOrUndefined(w) {
	  return w === null || w === undefined;
	}
	
	var eventNormalizers = [{
	  reg: /^key/,
	  props: ['char', 'charCode', 'key', 'keyCode', 'which'],
	  fix: function fix(event, nativeEvent) {
	    if (isNullOrUndefined(event.which)) {
	      event.which = !isNullOrUndefined(nativeEvent.charCode) ? nativeEvent.charCode : nativeEvent.keyCode;
	    }
	
	    // add metaKey to non-Mac browsers (use ctrl for PC 's and Meta for Macs)
	    if (event.metaKey === undefined) {
	      event.metaKey = event.ctrlKey;
	    }
	  }
	}, {
	  reg: /^touch/,
	  props: ['touches', 'changedTouches', 'targetTouches']
	}, {
	  reg: /^hashchange$/,
	  props: ['newURL', 'oldURL']
	}, {
	  reg: /^gesturechange$/i,
	  props: ['rotation', 'scale']
	}, {
	  reg: /^(mousewheel|DOMMouseScroll)$/,
	  props: [],
	  fix: function fix(event, nativeEvent) {
	    var deltaX = void 0;
	    var deltaY = void 0;
	    var delta = void 0;
	    var wheelDelta = nativeEvent.wheelDelta;
	    var axis = nativeEvent.axis;
	    var wheelDeltaY = nativeEvent.wheelDeltaY;
	    var wheelDeltaX = nativeEvent.wheelDeltaX;
	    var detail = nativeEvent.detail;
	
	    // ie/webkit
	    if (wheelDelta) {
	      delta = wheelDelta / 120;
	    }
	
	    // gecko
	    if (detail) {
	      // press control e.detail == 1 else e.detail == 3
	      delta = 0 - (detail % 3 === 0 ? detail / 3 : detail);
	    }
	
	    // Gecko
	    if (axis !== undefined) {
	      if (axis === event.HORIZONTAL_AXIS) {
	        deltaY = 0;
	        deltaX = 0 - delta;
	      } else if (axis === event.VERTICAL_AXIS) {
	        deltaX = 0;
	        deltaY = delta;
	      }
	    }
	
	    // Webkit
	    if (wheelDeltaY !== undefined) {
	      deltaY = wheelDeltaY / 120;
	    }
	    if (wheelDeltaX !== undefined) {
	      deltaX = -1 * wheelDeltaX / 120;
	    }
	
	    // 默认 deltaY (ie)
	    if (!deltaX && !deltaY) {
	      deltaY = delta;
	    }
	
	    if (deltaX !== undefined) {
	      /**
	       * deltaX of mousewheel event
	       * @property deltaX
	       * @member Event.DomEvent.Object
	       */
	      event.deltaX = deltaX;
	    }
	
	    if (deltaY !== undefined) {
	      /**
	       * deltaY of mousewheel event
	       * @property deltaY
	       * @member Event.DomEvent.Object
	       */
	      event.deltaY = deltaY;
	    }
	
	    if (delta !== undefined) {
	      /**
	       * delta of mousewheel event
	       * @property delta
	       * @member Event.DomEvent.Object
	       */
	      event.delta = delta;
	    }
	  }
	}, {
	  reg: /^mouse|contextmenu|click|mspointer|(^DOMMouseScroll$)/i,
	  props: ['buttons', 'clientX', 'clientY', 'button', 'offsetX', 'relatedTarget', 'which', 'fromElement', 'toElement', 'offsetY', 'pageX', 'pageY', 'screenX', 'screenY'],
	  fix: function fix(event, nativeEvent) {
	    var eventDoc = void 0;
	    var doc = void 0;
	    var body = void 0;
	    var target = event.target;
	    var button = nativeEvent.button;
	
	    // Calculate pageX/Y if missing and clientX/Y available
	    if (target && isNullOrUndefined(event.pageX) && !isNullOrUndefined(nativeEvent.clientX)) {
	      eventDoc = target.ownerDocument || document;
	      doc = eventDoc.documentElement;
	      body = eventDoc.body;
	      event.pageX = nativeEvent.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0);
	      event.pageY = nativeEvent.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0);
	    }
	
	    // which for click: 1 === left; 2 === middle; 3 === right
	    // do not use button
	    if (!event.which && button !== undefined) {
	      if (button & 1) {
	        event.which = 1;
	      } else if (button & 2) {
	        event.which = 3;
	      } else if (button & 4) {
	        event.which = 2;
	      } else {
	        event.which = 0;
	      }
	    }
	
	    // add relatedTarget, if necessary
	    if (!event.relatedTarget && event.fromElement) {
	      event.relatedTarget = event.fromElement === target ? event.toElement : event.fromElement;
	    }
	
	    return event;
	  }
	}];
	
	function retTrue() {
	  return TRUE;
	}
	
	function retFalse() {
	  return FALSE;
	}
	
	function DomEventObject(nativeEvent) {
	  var type = nativeEvent.type;
	
	  var isNative = typeof nativeEvent.stopPropagation === 'function' || typeof nativeEvent.cancelBubble === 'boolean';
	
	  _EventBaseObject2["default"].call(this);
	
	  this.nativeEvent = nativeEvent;
	
	  // in case dom event has been mark as default prevented by lower dom node
	  var isDefaultPrevented = retFalse;
	  if ('defaultPrevented' in nativeEvent) {
	    isDefaultPrevented = nativeEvent.defaultPrevented ? retTrue : retFalse;
	  } else if ('getPreventDefault' in nativeEvent) {
	    // https://bugzilla.mozilla.org/show_bug.cgi?id=691151
	    isDefaultPrevented = nativeEvent.getPreventDefault() ? retTrue : retFalse;
	  } else if ('returnValue' in nativeEvent) {
	    isDefaultPrevented = nativeEvent.returnValue === FALSE ? retTrue : retFalse;
	  }
	
	  this.isDefaultPrevented = isDefaultPrevented;
	
	  var fixFns = [];
	  var fixFn = void 0;
	  var l = void 0;
	  var prop = void 0;
	  var props = commonProps.concat();
	
	  eventNormalizers.forEach(function (normalizer) {
	    if (type.match(normalizer.reg)) {
	      props = props.concat(normalizer.props);
	      if (normalizer.fix) {
	        fixFns.push(normalizer.fix);
	      }
	    }
	  });
	
	  l = props.length;
	
	  // clone properties of the original event object
	  while (l) {
	    prop = props[--l];
	    this[prop] = nativeEvent[prop];
	  }
	
	  // fix target property, if necessary
	  if (!this.target && isNative) {
	    this.target = nativeEvent.srcElement || document; // srcElement might not be defined either
	  }
	
	  // check if target is a text node (safari)
	  if (this.target && this.target.nodeType === 3) {
	    this.target = this.target.parentNode;
	  }
	
	  l = fixFns.length;
	
	  while (l) {
	    fixFn = fixFns[--l];
	    fixFn(this, nativeEvent);
	  }
	
	  this.timeStamp = nativeEvent.timeStamp || Date.now();
	}
	
	var EventBaseObjectProto = _EventBaseObject2["default"].prototype;
	
	(0, _objectAssign2["default"])(DomEventObject.prototype, EventBaseObjectProto, {
	  constructor: DomEventObject,
	
	  preventDefault: function preventDefault() {
	    var e = this.nativeEvent;
	
	    // if preventDefault exists run it on the original event
	    if (e.preventDefault) {
	      e.preventDefault();
	    } else {
	      // otherwise set the returnValue property of the original event to FALSE (IE)
	      e.returnValue = FALSE;
	    }
	
	    EventBaseObjectProto.preventDefault.call(this);
	  },
	  stopPropagation: function stopPropagation() {
	    var e = this.nativeEvent;
	
	    // if stopPropagation exists run it on the original event
	    if (e.stopPropagation) {
	      e.stopPropagation();
	    } else {
	      // otherwise set the cancelBubble property of the original event to TRUE (IE)
	      e.cancelBubble = TRUE;
	    }
	
	    EventBaseObjectProto.stopPropagation.call(this);
	  }
	});
	
	exports["default"] = DomEventObject;
	module.exports = exports['default'];

/***/ },
/* 568 */
/***/ function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	/**
	 * @ignore
	 * base event object for custom and dom event.
	 * @author yiminghe@gmail.com
	 */
	
	function returnFalse() {
	  return false;
	}
	
	function returnTrue() {
	  return true;
	}
	
	function EventBaseObject() {
	  this.timeStamp = Date.now();
	  this.target = undefined;
	  this.currentTarget = undefined;
	}
	
	EventBaseObject.prototype = {
	  isEventObject: 1,
	
	  constructor: EventBaseObject,
	
	  isDefaultPrevented: returnFalse,
	
	  isPropagationStopped: returnFalse,
	
	  isImmediatePropagationStopped: returnFalse,
	
	  preventDefault: function preventDefault() {
	    this.isDefaultPrevented = returnTrue;
	  },
	  stopPropagation: function stopPropagation() {
	    this.isPropagationStopped = returnTrue;
	  },
	  stopImmediatePropagation: function stopImmediatePropagation() {
	    this.isImmediatePropagationStopped = returnTrue;
	    // fixed 1.2
	    // call stopPropagation implicitly
	    this.stopPropagation();
	  },
	  halt: function halt(immediate) {
	    if (immediate) {
	      this.stopImmediatePropagation();
	    } else {
	      this.stopPropagation();
	    }
	    this.preventDefault();
	  }
	};
	
	exports["default"] = EventBaseObject;
	module.exports = exports['default'];

/***/ },
/* 569 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
	
	var Track = function Track(_ref) {
	  var className = _ref.className,
	      included = _ref.included,
	      vertical = _ref.vertical,
	      offset = _ref.offset,
	      length = _ref.length;
	
	  var style = {
	    visibility: included ? 'visible' : 'hidden'
	  };
	  if (vertical) {
	    style.bottom = offset + '%';
	    style.height = length + '%';
	  } else {
	    style.left = offset + '%';
	    style.width = length + '%';
	  }
	  return _react2["default"].createElement('div', { className: className, style: style });
	};
	
	exports["default"] = Track;
	module.exports = exports['default'];

/***/ },
/* 570 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _classCallCheck2 = __webpack_require__(533);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(534);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(557);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _rcTooltip = __webpack_require__(571);
	
	var _rcTooltip2 = _interopRequireDefault(_rcTooltip);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
	
	var Handle = function (_React$Component) {
	  (0, _inherits3["default"])(Handle, _React$Component);
	
	  function Handle(props) {
	    (0, _classCallCheck3["default"])(this, Handle);
	
	    var _this = (0, _possibleConstructorReturn3["default"])(this, _React$Component.call(this, props));
	
	    _this.state = {
	      isTooltipVisible: false
	    };
	
	    _this.showTooltip = _this.showTooltip.bind(_this);
	    _this.hideTooltip = _this.hideTooltip.bind(_this);
	    return _this;
	  }
	
	  Handle.prototype.hideTooltip = function hideTooltip() {
	    this.setState({
	      isTooltipVisible: false
	    });
	  };
	
	  Handle.prototype.showTooltip = function showTooltip() {
	    this.setState({
	      isTooltipVisible: true
	    });
	  };
	
	  Handle.prototype.render = function render() {
	    var _props = this.props,
	        prefixCls = _props.prefixCls,
	        tooltipPrefixCls = _props.tooltipPrefixCls,
	        className = _props.className,
	        tipTransitionName = _props.tipTransitionName,
	        tipFormatter = _props.tipFormatter,
	        vertical = _props.vertical,
	        offset = _props.offset,
	        value = _props.value,
	        dragging = _props.dragging,
	        noTip = _props.noTip,
	        index = _props.index;
	
	
	    var style = vertical ? { bottom: offset + '%' } : { left: offset + '%' };
	    var handle = _react2["default"].createElement('div', {
	      className: className,
	      style: style,
	      onMouseUp: this.showTooltip,
	      onMouseEnter: this.showTooltip,
	      onMouseLeave: this.hideTooltip
	    });
	
	    if (noTip) {
	      return handle;
	    }
	
	    var isTooltipVisible = dragging || this.state.isTooltipVisible;
	    return _react2["default"].createElement(
	      _rcTooltip2["default"],
	      {
	        prefixCls: tooltipPrefixCls || prefixCls + '-tooltip',
	        placement: 'top',
	        visible: isTooltipVisible,
	        overlay: _react2["default"].createElement(
	          'span',
	          null,
	          tipFormatter(value, index)
	        ),
	        delay: 0,
	        transitionName: tipTransitionName
	      },
	      handle
	    );
	  };
	
	  return Handle;
	}(_react2["default"].Component);
	
	exports["default"] = Handle;
	
	
	Handle.propTypes = {
	  prefixCls: _react2["default"].PropTypes.string,
	  tooltipPrefixCls: _react2["default"].PropTypes.string,
	  className: _react2["default"].PropTypes.string,
	  vertical: _react2["default"].PropTypes.bool,
	  offset: _react2["default"].PropTypes.number,
	  tipTransitionName: _react2["default"].PropTypes.string,
	  tipFormatter: _react2["default"].PropTypes.func,
	  value: _react2["default"].PropTypes.number,
	  dragging: _react2["default"].PropTypes.bool,
	  noTip: _react2["default"].PropTypes.bool,
	  index: _react2["default"].PropTypes.number
	};
	module.exports = exports['default'];

/***/ },
/* 571 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = __webpack_require__(572);

/***/ },
/* 572 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _placements = __webpack_require__(573);
	
	var _rcTrigger = __webpack_require__(574);
	
	var _rcTrigger2 = _interopRequireDefault(_rcTrigger);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	var Tooltip = _react2["default"].createClass({
	  displayName: 'Tooltip',
	
	  propTypes: {
	    trigger: _react.PropTypes.any,
	    children: _react.PropTypes.any,
	    defaultVisible: _react.PropTypes.bool,
	    visible: _react.PropTypes.bool,
	    placement: _react.PropTypes.string,
	    transitionName: _react.PropTypes.string,
	    animation: _react.PropTypes.any,
	    onVisibleChange: _react.PropTypes.func,
	    afterVisibleChange: _react.PropTypes.func,
	    overlay: _react.PropTypes.oneOfType([_react2["default"].PropTypes.node, _react2["default"].PropTypes.func]).isRequired,
	    overlayStyle: _react.PropTypes.object,
	    overlayClassName: _react.PropTypes.string,
	    prefixCls: _react.PropTypes.string,
	    mouseEnterDelay: _react.PropTypes.number,
	    mouseLeaveDelay: _react.PropTypes.number,
	    getTooltipContainer: _react.PropTypes.func,
	    destroyTooltipOnHide: _react.PropTypes.bool,
	    align: _react.PropTypes.object,
	    arrowContent: _react.PropTypes.any
	  },
	
	  getDefaultProps: function getDefaultProps() {
	    return {
	      prefixCls: 'rc-tooltip',
	      mouseEnterDelay: 0,
	      destroyTooltipOnHide: false,
	      mouseLeaveDelay: 0.1,
	      align: {},
	      placement: 'right',
	      trigger: ['hover'],
	      arrowContent: null
	    };
	  },
	  getPopupElement: function getPopupElement() {
	    var _props = this.props;
	    var arrowContent = _props.arrowContent;
	    var overlay = _props.overlay;
	    var prefixCls = _props.prefixCls;
	
	    return [_react2["default"].createElement(
	      'div',
	      { className: prefixCls + '-arrow', key: 'arrow' },
	      arrowContent
	    ), _react2["default"].createElement(
	      'div',
	      { className: prefixCls + '-inner', key: 'content' },
	      typeof overlay === 'function' ? overlay() : overlay
	    )];
	  },
	  getPopupDomNode: function getPopupDomNode() {
	    return this.refs.trigger.getPopupDomNode();
	  },
	  render: function render() {
	    var _props2 = this.props;
	    var overlayClassName = _props2.overlayClassName;
	    var trigger = _props2.trigger;
	    var mouseEnterDelay = _props2.mouseEnterDelay;
	    var mouseLeaveDelay = _props2.mouseLeaveDelay;
	    var overlayStyle = _props2.overlayStyle;
	    var prefixCls = _props2.prefixCls;
	    var children = _props2.children;
	    var onVisibleChange = _props2.onVisibleChange;
	    var transitionName = _props2.transitionName;
	    var animation = _props2.animation;
	    var placement = _props2.placement;
	    var align = _props2.align;
	    var destroyTooltipOnHide = _props2.destroyTooltipOnHide;
	    var defaultVisible = _props2.defaultVisible;
	    var getTooltipContainer = _props2.getTooltipContainer;
	
	    var restProps = _objectWithoutProperties(_props2, ['overlayClassName', 'trigger', 'mouseEnterDelay', 'mouseLeaveDelay', 'overlayStyle', 'prefixCls', 'children', 'onVisibleChange', 'transitionName', 'animation', 'placement', 'align', 'destroyTooltipOnHide', 'defaultVisible', 'getTooltipContainer']);
	
	    var extraProps = _extends({}, restProps);
	    if ('visible' in this.props) {
	      extraProps.popupVisible = this.props.visible;
	    }
	    return _react2["default"].createElement(
	      _rcTrigger2["default"],
	      _extends({
	        popupClassName: overlayClassName,
	        ref: 'trigger',
	        prefixCls: prefixCls,
	        popup: this.getPopupElement,
	        action: trigger,
	        builtinPlacements: _placements.placements,
	        popupPlacement: placement,
	        popupAlign: align,
	        getPopupContainer: getTooltipContainer,
	        onPopupVisibleChange: onVisibleChange,
	        popupTransitionName: transitionName,
	        popupAnimation: animation,
	        defaultPopupVisible: defaultVisible,
	        destroyPopupOnHide: destroyTooltipOnHide,
	        mouseLeaveDelay: mouseLeaveDelay,
	        popupStyle: overlayStyle,
	        mouseEnterDelay: mouseEnterDelay
	      }, extraProps),
	      children
	    );
	  }
	});
	
	exports["default"] = Tooltip;
	module.exports = exports['default'];

/***/ },
/* 573 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var autoAdjustOverflow = {
	  adjustX: 1,
	  adjustY: 1
	};
	
	var targetOffset = [0, 0];
	
	var placements = exports.placements = {
	  left: {
	    points: ['cr', 'cl'],
	    overflow: autoAdjustOverflow,
	    offset: [-4, 0],
	    targetOffset: targetOffset
	  },
	  right: {
	    points: ['cl', 'cr'],
	    overflow: autoAdjustOverflow,
	    offset: [4, 0],
	    targetOffset: targetOffset
	  },
	  top: {
	    points: ['bc', 'tc'],
	    overflow: autoAdjustOverflow,
	    offset: [0, -4],
	    targetOffset: targetOffset
	  },
	  bottom: {
	    points: ['tc', 'bc'],
	    overflow: autoAdjustOverflow,
	    offset: [0, 4],
	    targetOffset: targetOffset
	  },
	  topLeft: {
	    points: ['bl', 'tl'],
	    overflow: autoAdjustOverflow,
	    offset: [0, -4],
	    targetOffset: targetOffset
	  },
	  leftTop: {
	    points: ['tr', 'tl'],
	    overflow: autoAdjustOverflow,
	    offset: [-4, 0],
	    targetOffset: targetOffset
	  },
	  topRight: {
	    points: ['br', 'tr'],
	    overflow: autoAdjustOverflow,
	    offset: [0, -4],
	    targetOffset: targetOffset
	  },
	  rightTop: {
	    points: ['tl', 'tr'],
	    overflow: autoAdjustOverflow,
	    offset: [4, 0],
	    targetOffset: targetOffset
	  },
	  bottomRight: {
	    points: ['tr', 'br'],
	    overflow: autoAdjustOverflow,
	    offset: [0, 4],
	    targetOffset: targetOffset
	  },
	  rightBottom: {
	    points: ['bl', 'br'],
	    overflow: autoAdjustOverflow,
	    offset: [4, 0],
	    targetOffset: targetOffset
	  },
	  bottomLeft: {
	    points: ['tl', 'bl'],
	    overflow: autoAdjustOverflow,
	    offset: [0, 4],
	    targetOffset: targetOffset
	  },
	  leftBottom: {
	    points: ['br', 'bl'],
	    overflow: autoAdjustOverflow,
	    offset: [-4, 0],
	    targetOffset: targetOffset
	  }
	};
	
	exports["default"] = placements;

/***/ },
/* 574 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = __webpack_require__(575);

/***/ },
/* 575 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends2 = __webpack_require__(526);
	
	var _extends3 = _interopRequireDefault(_extends2);
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactDom = __webpack_require__(32);
	
	var _reactDom2 = _interopRequireDefault(_reactDom);
	
	var _contains = __webpack_require__(576);
	
	var _contains2 = _interopRequireDefault(_contains);
	
	var _addEventListener = __webpack_require__(565);
	
	var _addEventListener2 = _interopRequireDefault(_addEventListener);
	
	var _Popup = __webpack_require__(577);
	
	var _Popup2 = _interopRequireDefault(_Popup);
	
	var _utils = __webpack_require__(602);
	
	var _getContainerRenderMixin = __webpack_require__(603);
	
	var _getContainerRenderMixin2 = _interopRequireDefault(_getContainerRenderMixin);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
	
	function noop() {}
	
	function returnEmptyString() {
	  return '';
	}
	
	var ALL_HANDLERS = ['onClick', 'onMouseDown', 'onTouchStart', 'onMouseEnter', 'onMouseLeave', 'onFocus', 'onBlur'];
	
	var Trigger = _react2["default"].createClass({
	  displayName: 'Trigger',
	
	  propTypes: {
	    children: _react.PropTypes.any,
	    action: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.arrayOf(_react.PropTypes.string)]),
	    showAction: _react.PropTypes.any,
	    hideAction: _react.PropTypes.any,
	    getPopupClassNameFromAlign: _react.PropTypes.any,
	    onPopupVisibleChange: _react.PropTypes.func,
	    afterPopupVisibleChange: _react.PropTypes.func,
	    popup: _react.PropTypes.oneOfType([_react.PropTypes.node, _react.PropTypes.func]).isRequired,
	    popupStyle: _react.PropTypes.object,
	    prefixCls: _react.PropTypes.string,
	    popupClassName: _react.PropTypes.string,
	    popupPlacement: _react.PropTypes.string,
	    builtinPlacements: _react.PropTypes.object,
	    popupTransitionName: _react.PropTypes.string,
	    popupAnimation: _react.PropTypes.any,
	    mouseEnterDelay: _react.PropTypes.number,
	    mouseLeaveDelay: _react.PropTypes.number,
	    zIndex: _react.PropTypes.number,
	    focusDelay: _react.PropTypes.number,
	    blurDelay: _react.PropTypes.number,
	    getPopupContainer: _react.PropTypes.func,
	    destroyPopupOnHide: _react.PropTypes.bool,
	    mask: _react.PropTypes.bool,
	    maskClosable: _react.PropTypes.bool,
	    onPopupAlign: _react.PropTypes.func,
	    popupAlign: _react.PropTypes.object,
	    popupVisible: _react.PropTypes.bool,
	    maskTransitionName: _react.PropTypes.string,
	    maskAnimation: _react.PropTypes.string
	  },
	
	  mixins: [(0, _getContainerRenderMixin2["default"])({
	    autoMount: false,
	
	    isVisible: function isVisible(instance) {
	      return instance.state.popupVisible;
	    },
	    getContainer: function getContainer(instance) {
	      var popupContainer = document.createElement('div');
	      var mountNode = instance.props.getPopupContainer ? instance.props.getPopupContainer((0, _reactDom.findDOMNode)(instance)) : document.body;
	      mountNode.appendChild(popupContainer);
	      return popupContainer;
	    }
	  })],
	
	  getDefaultProps: function getDefaultProps() {
	    return {
	      prefixCls: 'rc-trigger-popup',
	      getPopupClassNameFromAlign: returnEmptyString,
	      onPopupVisibleChange: noop,
	      afterPopupVisibleChange: noop,
	      onPopupAlign: noop,
	      popupClassName: '',
	      mouseEnterDelay: 0,
	      mouseLeaveDelay: 0.1,
	      focusDelay: 0,
	      blurDelay: 0.15,
	      popupStyle: {},
	      destroyPopupOnHide: false,
	      popupAlign: {},
	      defaultPopupVisible: false,
	      mask: false,
	      maskClosable: true,
	      action: [],
	      showAction: [],
	      hideAction: []
	    };
	  },
	  getInitialState: function getInitialState() {
	    var props = this.props;
	    var popupVisible = void 0;
	    if ('popupVisible' in props) {
	      popupVisible = !!props.popupVisible;
	    } else {
	      popupVisible = !!props.defaultPopupVisible;
	    }
	    return {
	      popupVisible: popupVisible
	    };
	  },
	  componentWillMount: function componentWillMount() {
	    var _this = this;
	
	    ALL_HANDLERS.forEach(function (h) {
	      _this['fire' + h] = function (e) {
	        _this.fireEvents(h, e);
	      };
	    });
	  },
	  componentDidMount: function componentDidMount() {
	    this.componentDidUpdate({}, {
	      popupVisible: this.state.popupVisible
	    });
	  },
	  componentWillReceiveProps: function componentWillReceiveProps(_ref) {
	    var popupVisible = _ref.popupVisible;
	
	    if (popupVisible !== undefined) {
	      this.setState({
	        popupVisible: popupVisible
	      });
	    }
	  },
	  componentDidUpdate: function componentDidUpdate(_, prevState) {
	    var props = this.props;
	    var state = this.state;
	    this.renderComponent(null, function () {
	      if (prevState.popupVisible !== state.popupVisible) {
	        props.afterPopupVisibleChange(state.popupVisible);
	      }
	    });
	    if (this.isClickToHide()) {
	      if (state.popupVisible) {
	        if (!this.clickOutsideHandler) {
	          this.clickOutsideHandler = (0, _addEventListener2["default"])(document, 'mousedown', this.onDocumentClick);
	          this.touchOutsideHandler = (0, _addEventListener2["default"])(document, 'touchstart', this.onDocumentClick);
	        }
	        return;
	      }
	    }
	    if (this.clickOutsideHandler) {
	      this.clickOutsideHandler.remove();
	      this.touchOutsideHandler.remove();
	      this.clickOutsideHandler = null;
	      this.touchOutsideHandler = null;
	    }
	  },
	  componentWillUnmount: function componentWillUnmount() {
	    this.clearDelayTimer();
	    if (this.clickOutsideHandler) {
	      this.clickOutsideHandler.remove();
	      this.touchOutsideHandler.remove();
	      this.clickOutsideHandler = null;
	      this.touchOutsideHandler = null;
	    }
	  },
	  onMouseEnter: function onMouseEnter(e) {
	    this.fireEvents('onMouseEnter', e);
	    this.delaySetPopupVisible(true, this.props.mouseEnterDelay);
	  },
	  onMouseLeave: function onMouseLeave(e) {
	    this.fireEvents('onMouseLeave', e);
	    this.delaySetPopupVisible(false, this.props.mouseLeaveDelay);
	  },
	  onPopupMouseEnter: function onPopupMouseEnter() {
	    this.clearDelayTimer();
	  },
	  onPopupMouseLeave: function onPopupMouseLeave(e) {
	    // https://github.com/react-component/trigger/pull/13
	    // react bug?
	    if (e.relatedTarget && !e.relatedTarget.setTimeout && this._component && (0, _contains2["default"])(this._component.getPopupDomNode(), e.relatedTarget)) {
	      return;
	    }
	    this.delaySetPopupVisible(false, this.props.mouseLeaveDelay);
	  },
	  onFocus: function onFocus(e) {
	    this.fireEvents('onFocus', e);
	    // incase focusin and focusout
	    this.clearDelayTimer();
	    if (this.isFocusToShow()) {
	      this.focusTime = Date.now();
	      this.delaySetPopupVisible(true, this.props.focusDelay);
	    }
	  },
	  onMouseDown: function onMouseDown(e) {
	    this.fireEvents('onMouseDown', e);
	    this.preClickTime = Date.now();
	  },
	  onTouchStart: function onTouchStart(e) {
	    this.fireEvents('onTouchStart', e);
	    this.preTouchTime = Date.now();
	  },
	  onBlur: function onBlur(e) {
	    this.fireEvents('onBlur', e);
	    this.clearDelayTimer();
	    if (this.isBlurToHide()) {
	      this.delaySetPopupVisible(false, this.props.blurDelay);
	    }
	  },
	  onClick: function onClick(event) {
	    this.fireEvents('onClick', event);
	    // focus will trigger click
	    if (this.focusTime) {
	      var preTime = void 0;
	      if (this.preClickTime && this.preTouchTime) {
	        preTime = Math.min(this.preClickTime, this.preTouchTime);
	      } else if (this.preClickTime) {
	        preTime = this.preClickTime;
	      } else if (this.preTouchTime) {
	        preTime = this.preTouchTime;
	      }
	      if (Math.abs(preTime - this.focusTime) < 20) {
	        return;
	      }
	      this.focusTime = 0;
	    }
	    this.preClickTime = 0;
	    this.preTouchTime = 0;
	    event.preventDefault();
	    var nextVisible = !this.state.popupVisible;
	    if (this.isClickToHide() && !nextVisible || nextVisible && this.isClickToShow()) {
	      this.setPopupVisible(!this.state.popupVisible);
	    }
	  },
	  onDocumentClick: function onDocumentClick(event) {
	    if (this.props.mask && !this.props.maskClosable) {
	      return;
	    }
	    var target = event.target;
	    var root = (0, _reactDom.findDOMNode)(this);
	    var popupNode = this.getPopupDomNode();
	    if (!(0, _contains2["default"])(root, target) && !(0, _contains2["default"])(popupNode, target)) {
	      this.close();
	    }
	  },
	  getPopupDomNode: function getPopupDomNode() {
	    // for test
	    if (this._component) {
	      return this._component.isMounted() ? this._component.getPopupDomNode() : null;
	    }
	    return null;
	  },
	  getRootDomNode: function getRootDomNode() {
	    return _reactDom2["default"].findDOMNode(this);
	  },
	  getPopupClassNameFromAlign: function getPopupClassNameFromAlign(align) {
	    var className = [];
	    var props = this.props;
	    var popupPlacement = props.popupPlacement,
	        builtinPlacements = props.builtinPlacements,
	        prefixCls = props.prefixCls;
	
	    if (popupPlacement && builtinPlacements) {
	      className.push((0, _utils.getPopupClassNameFromAlign)(builtinPlacements, prefixCls, align));
	    }
	    if (props.getPopupClassNameFromAlign) {
	      className.push(props.getPopupClassNameFromAlign(align));
	    }
	    return className.join(' ');
	  },
	  getPopupAlign: function getPopupAlign() {
	    var props = this.props;
	    var popupPlacement = props.popupPlacement,
	        popupAlign = props.popupAlign,
	        builtinPlacements = props.builtinPlacements;
	
	    if (popupPlacement && builtinPlacements) {
	      return (0, _utils.getAlignFromPlacement)(builtinPlacements, popupPlacement, popupAlign);
	    }
	    return popupAlign;
	  },
	  getComponent: function getComponent() {
	    var props = this.props,
	        state = this.state;
	
	    var mouseProps = {};
	    if (this.isMouseEnterToShow()) {
	      mouseProps.onMouseEnter = this.onPopupMouseEnter;
	    }
	    if (this.isMouseLeaveToHide()) {
	      mouseProps.onMouseLeave = this.onPopupMouseLeave;
	    }
	    return _react2["default"].createElement(
	      _Popup2["default"],
	      (0, _extends3["default"])({
	        prefixCls: props.prefixCls,
	        destroyPopupOnHide: props.destroyPopupOnHide,
	        visible: state.popupVisible,
	        className: props.popupClassName,
	        action: props.action,
	        align: this.getPopupAlign(),
	        onAlign: props.onPopupAlign,
	        animation: props.popupAnimation,
	        getClassNameFromAlign: this.getPopupClassNameFromAlign
	      }, mouseProps, {
	        getRootDomNode: this.getRootDomNode,
	        style: props.popupStyle,
	        mask: props.mask,
	        zIndex: props.zIndex,
	        transitionName: props.popupTransitionName,
	        maskAnimation: props.maskAnimation,
	        maskTransitionName: props.maskTransitionName
	      }),
	      typeof props.popup === 'function' ? props.popup() : props.popup
	    );
	  },
	  setPopupVisible: function setPopupVisible(popupVisible) {
	    this.clearDelayTimer();
	    if (this.state.popupVisible !== popupVisible) {
	      if (!('popupVisible' in this.props)) {
	        this.setState({
	          popupVisible: popupVisible
	        });
	      }
	      this.props.onPopupVisibleChange(popupVisible);
	    }
	  },
	  delaySetPopupVisible: function delaySetPopupVisible(visible, delayS) {
	    var _this2 = this;
	
	    var delay = delayS * 1000;
	    this.clearDelayTimer();
	    if (delay) {
	      this.delayTimer = setTimeout(function () {
	        _this2.setPopupVisible(visible);
	        _this2.clearDelayTimer();
	      }, delay);
	    } else {
	      this.setPopupVisible(visible);
	    }
	  },
	  clearDelayTimer: function clearDelayTimer() {
	    if (this.delayTimer) {
	      clearTimeout(this.delayTimer);
	      this.delayTimer = null;
	    }
	  },
	  createTwoChains: function createTwoChains(event) {
	    var childPros = this.props.children.props;
	    var props = this.props;
	    if (childPros[event] && props[event]) {
	      return this['fire' + event];
	    }
	    return childPros[event] || props[event];
	  },
	  isClickToShow: function isClickToShow() {
	    var _props = this.props,
	        action = _props.action,
	        showAction = _props.showAction;
	
	    return action.indexOf('click') !== -1 || showAction.indexOf('click') !== -1;
	  },
	  isClickToHide: function isClickToHide() {
	    var _props2 = this.props,
	        action = _props2.action,
	        hideAction = _props2.hideAction;
	
	    return action.indexOf('click') !== -1 || hideAction.indexOf('click') !== -1;
	  },
	  isMouseEnterToShow: function isMouseEnterToShow() {
	    var _props3 = this.props,
	        action = _props3.action,
	        showAction = _props3.showAction;
	
	    return action.indexOf('hover') !== -1 || showAction.indexOf('mouseEnter') !== -1;
	  },
	  isMouseLeaveToHide: function isMouseLeaveToHide() {
	    var _props4 = this.props,
	        action = _props4.action,
	        hideAction = _props4.hideAction;
	
	    return action.indexOf('hover') !== -1 || hideAction.indexOf('mouseLeave') !== -1;
	  },
	  isFocusToShow: function isFocusToShow() {
	    var _props5 = this.props,
	        action = _props5.action,
	        showAction = _props5.showAction;
	
	    return action.indexOf('focus') !== -1 || showAction.indexOf('focus') !== -1;
	  },
	  isBlurToHide: function isBlurToHide() {
	    var _props6 = this.props,
	        action = _props6.action,
	        hideAction = _props6.hideAction;
	
	    return action.indexOf('focus') !== -1 || hideAction.indexOf('blur') !== -1;
	  },
	  forcePopupAlign: function forcePopupAlign() {
	    if (this.state.popupVisible && this.popupInstance && this.popupInstance.alignInstance) {
	      this.popupInstance.alignInstance.forceAlign();
	    }
	  },
	  fireEvents: function fireEvents(type, e) {
	    var childCallback = this.props.children.props[type];
	    if (childCallback) {
	      childCallback(e);
	    }
	    var callback = this.props[type];
	    if (callback) {
	      callback(e);
	    }
	  },
	  close: function close() {
	    this.setPopupVisible(false);
	  },
	  render: function render() {
	    var props = this.props;
	    var children = props.children;
	    var child = _react2["default"].Children.only(children);
	    var newChildProps = {};
	
	    if (this.isClickToHide() || this.isClickToShow()) {
	      newChildProps.onClick = this.onClick;
	      newChildProps.onMouseDown = this.onMouseDown;
	      newChildProps.onTouchStart = this.onTouchStart;
	    } else {
	      newChildProps.onClick = this.createTwoChains('onClick');
	      newChildProps.onMouseDown = this.createTwoChains('onMouseDown');
	      newChildProps.onTouchStart = this.createTwoChains('onTouchStart');
	    }
	    if (this.isMouseEnterToShow()) {
	      newChildProps.onMouseEnter = this.onMouseEnter;
	    } else {
	      newChildProps.onMouseEnter = this.createTwoChains('onMouseEnter');
	    }
	    if (this.isMouseLeaveToHide()) {
	      newChildProps.onMouseLeave = this.onMouseLeave;
	    } else {
	      newChildProps.onMouseLeave = this.createTwoChains('onMouseLeave');
	    }
	    if (this.isFocusToShow() || this.isBlurToHide()) {
	      newChildProps.onFocus = this.onFocus;
	      newChildProps.onBlur = this.onBlur;
	    } else {
	      newChildProps.onFocus = this.createTwoChains('onFocus');
	      newChildProps.onBlur = this.createTwoChains('onBlur');
	    }
	
	    return _react2["default"].cloneElement(child, newChildProps);
	  }
	});
	
	exports["default"] = Trigger;
	module.exports = exports['default'];

/***/ },
/* 576 */
/***/ function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = contains;
	function contains(root, n) {
	  var node = n;
	  while (node) {
	    if (node === root) {
	      return true;
	    }
	    node = node.parentNode;
	  }
	
	  return false;
	}
	module.exports = exports['default'];

/***/ },
/* 577 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends2 = __webpack_require__(526);
	
	var _extends3 = _interopRequireDefault(_extends2);
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactDom = __webpack_require__(32);
	
	var _reactDom2 = _interopRequireDefault(_reactDom);
	
	var _rcAlign = __webpack_require__(578);
	
	var _rcAlign2 = _interopRequireDefault(_rcAlign);
	
	var _rcAnimate = __webpack_require__(590);
	
	var _rcAnimate2 = _interopRequireDefault(_rcAnimate);
	
	var _PopupInner = __webpack_require__(599);
	
	var _PopupInner2 = _interopRequireDefault(_PopupInner);
	
	var _LazyRenderBox = __webpack_require__(600);
	
	var _LazyRenderBox2 = _interopRequireDefault(_LazyRenderBox);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
	
	var Popup = _react2["default"].createClass({
	  displayName: 'Popup',
	
	  propTypes: {
	    visible: _react.PropTypes.bool,
	    style: _react.PropTypes.object,
	    getClassNameFromAlign: _react.PropTypes.func,
	    onAlign: _react.PropTypes.func,
	    getRootDomNode: _react.PropTypes.func,
	    onMouseEnter: _react.PropTypes.func,
	    align: _react.PropTypes.any,
	    destroyPopupOnHide: _react.PropTypes.bool,
	    className: _react.PropTypes.string,
	    prefixCls: _react.PropTypes.string,
	    onMouseLeave: _react.PropTypes.func
	  },
	
	  componentDidMount: function componentDidMount() {
	    this.rootNode = this.getPopupDomNode();
	  },
	  onAlign: function onAlign(popupDomNode, align) {
	    var props = this.props;
	    var alignClassName = props.getClassNameFromAlign(props.align);
	    var currentAlignClassName = props.getClassNameFromAlign(align);
	    if (alignClassName !== currentAlignClassName) {
	      this.currentAlignClassName = currentAlignClassName;
	      popupDomNode.className = this.getClassName(currentAlignClassName);
	    }
	    props.onAlign(popupDomNode, align);
	  },
	  getPopupDomNode: function getPopupDomNode() {
	    return _reactDom2["default"].findDOMNode(this.refs.popup);
	  },
	  getTarget: function getTarget() {
	    return this.props.getRootDomNode();
	  },
	  getMaskTransitionName: function getMaskTransitionName() {
	    var props = this.props;
	    var transitionName = props.maskTransitionName;
	    var animation = props.maskAnimation;
	    if (!transitionName && animation) {
	      transitionName = props.prefixCls + '-' + animation;
	    }
	    return transitionName;
	  },
	  getTransitionName: function getTransitionName() {
	    var props = this.props;
	    var transitionName = props.transitionName;
	    if (!transitionName && props.animation) {
	      transitionName = props.prefixCls + '-' + props.animation;
	    }
	    return transitionName;
	  },
	  getClassName: function getClassName(currentAlignClassName) {
	    return this.props.prefixCls + ' ' + this.props.className + ' ' + currentAlignClassName;
	  },
	  getPopupElement: function getPopupElement() {
	    var props = this.props;
	    var align = props.align,
	        style = props.style,
	        visible = props.visible,
	        prefixCls = props.prefixCls,
	        destroyPopupOnHide = props.destroyPopupOnHide;
	
	    var className = this.getClassName(this.currentAlignClassName || props.getClassNameFromAlign(align));
	    var hiddenClassName = prefixCls + '-hidden';
	    if (!visible) {
	      this.currentAlignClassName = null;
	    }
	    var newStyle = (0, _extends3["default"])({}, style, this.getZIndexStyle());
	    var popupInnerProps = {
	      className: className,
	      prefixCls: prefixCls,
	      ref: 'popup',
	      onMouseEnter: props.onMouseEnter,
	      onMouseLeave: props.onMouseLeave,
	      style: newStyle
	    };
	    if (destroyPopupOnHide) {
	      return _react2["default"].createElement(
	        _rcAnimate2["default"],
	        {
	          component: '',
	          exclusive: true,
	          transitionAppear: true,
	          transitionName: this.getTransitionName()
	        },
	        visible ? _react2["default"].createElement(
	          _rcAlign2["default"],
	          {
	            target: this.getTarget,
	            key: 'popup',
	            ref: this.saveAlign,
	            monitorWindowResize: true,
	            align: align,
	            onAlign: this.onAlign
	          },
	          _react2["default"].createElement(
	            _PopupInner2["default"],
	            (0, _extends3["default"])({
	              visible: true
	            }, popupInnerProps),
	            props.children
	          )
	        ) : null
	      );
	    }
	    return _react2["default"].createElement(
	      _rcAnimate2["default"],
	      {
	        component: '',
	        exclusive: true,
	        transitionAppear: true,
	        transitionName: this.getTransitionName(),
	        showProp: 'xVisible'
	      },
	      _react2["default"].createElement(
	        _rcAlign2["default"],
	        {
	          target: this.getTarget,
	          key: 'popup',
	          ref: this.saveAlign,
	          monitorWindowResize: true,
	          xVisible: visible,
	          childrenProps: { visible: 'xVisible' },
	          disabled: !visible,
	          align: align,
	          onAlign: this.onAlign
	        },
	        _react2["default"].createElement(
	          _PopupInner2["default"],
	          (0, _extends3["default"])({
	            hiddenClassName: hiddenClassName
	          }, popupInnerProps),
	          props.children
	        )
	      )
	    );
	  },
	  getZIndexStyle: function getZIndexStyle() {
	    var style = {};
	    var props = this.props;
	    if (props.zIndex !== undefined) {
	      style.zIndex = props.zIndex;
	    }
	    return style;
	  },
	  getMaskElement: function getMaskElement() {
	    var props = this.props;
	    var maskElement = void 0;
	    if (props.mask) {
	      var maskTransition = this.getMaskTransitionName();
	      maskElement = _react2["default"].createElement(_LazyRenderBox2["default"], {
	        style: this.getZIndexStyle(),
	        key: 'mask',
	        className: props.prefixCls + '-mask',
	        hiddenClassName: props.prefixCls + '-mask-hidden',
	        visible: props.visible
	      });
	      if (maskTransition) {
	        maskElement = _react2["default"].createElement(
	          _rcAnimate2["default"],
	          {
	            key: 'mask',
	            showProp: 'visible',
	            transitionAppear: true,
	            component: '',
	            transitionName: maskTransition
	          },
	          maskElement
	        );
	      }
	    }
	    return maskElement;
	  },
	  saveAlign: function saveAlign(align) {
	    this.alignInstance = align;
	  },
	  render: function render() {
	    return _react2["default"].createElement(
	      'div',
	      null,
	      this.getMaskElement(),
	      this.getPopupElement()
	    );
	  }
	});
	
	exports["default"] = Popup;
	module.exports = exports['default'];

/***/ },
/* 578 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _Align = __webpack_require__(579);
	
	var _Align2 = _interopRequireDefault(_Align);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
	
	exports["default"] = _Align2["default"]; // export this package's api
	
	module.exports = exports['default'];

/***/ },
/* 579 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactDom = __webpack_require__(32);
	
	var _reactDom2 = _interopRequireDefault(_reactDom);
	
	var _domAlign = __webpack_require__(580);
	
	var _domAlign2 = _interopRequireDefault(_domAlign);
	
	var _addEventListener = __webpack_require__(565);
	
	var _addEventListener2 = _interopRequireDefault(_addEventListener);
	
	var _isWindow = __webpack_require__(589);
	
	var _isWindow2 = _interopRequireDefault(_isWindow);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
	
	function buffer(fn, ms) {
	  var timer = void 0;
	
	  function clear() {
	    if (timer) {
	      clearTimeout(timer);
	      timer = null;
	    }
	  }
	
	  function bufferFn() {
	    clear();
	    timer = setTimeout(fn, ms);
	  }
	
	  bufferFn.clear = clear;
	
	  return bufferFn;
	}
	
	var Align = _react2["default"].createClass({
	  displayName: 'Align',
	
	  propTypes: {
	    childrenProps: _react.PropTypes.object,
	    align: _react.PropTypes.object.isRequired,
	    target: _react.PropTypes.func,
	    onAlign: _react.PropTypes.func,
	    monitorBufferTime: _react.PropTypes.number,
	    monitorWindowResize: _react.PropTypes.bool,
	    disabled: _react.PropTypes.bool,
	    children: _react.PropTypes.any
	  },
	
	  getDefaultProps: function getDefaultProps() {
	    return {
	      target: function target() {
	        return window;
	      },
	      onAlign: function onAlign() {},
	
	      monitorBufferTime: 50,
	      monitorWindowResize: false,
	      disabled: false
	    };
	  },
	  componentDidMount: function componentDidMount() {
	    var props = this.props;
	    // if parent ref not attached .... use document.getElementById
	    this.forceAlign();
	    if (!props.disabled && props.monitorWindowResize) {
	      this.startMonitorWindowResize();
	    }
	  },
	  componentDidUpdate: function componentDidUpdate(prevProps) {
	    var reAlign = false;
	    var props = this.props;
	
	    if (!props.disabled) {
	      if (prevProps.disabled || prevProps.align !== props.align) {
	        reAlign = true;
	      } else {
	        var lastTarget = prevProps.target();
	        var currentTarget = props.target();
	        if ((0, _isWindow2["default"])(lastTarget) && (0, _isWindow2["default"])(currentTarget)) {
	          reAlign = false;
	        } else if (lastTarget !== currentTarget) {
	          reAlign = true;
	        }
	      }
	    }
	
	    if (reAlign) {
	      this.forceAlign();
	    }
	
	    if (props.monitorWindowResize && !props.disabled) {
	      this.startMonitorWindowResize();
	    } else {
	      this.stopMonitorWindowResize();
	    }
	  },
	  componentWillUnmount: function componentWillUnmount() {
	    this.stopMonitorWindowResize();
	  },
	  startMonitorWindowResize: function startMonitorWindowResize() {
	    if (!this.resizeHandler) {
	      this.bufferMonitor = buffer(this.forceAlign, this.props.monitorBufferTime);
	      this.resizeHandler = (0, _addEventListener2["default"])(window, 'resize', this.bufferMonitor);
	    }
	  },
	  stopMonitorWindowResize: function stopMonitorWindowResize() {
	    if (this.resizeHandler) {
	      this.bufferMonitor.clear();
	      this.resizeHandler.remove();
	      this.resizeHandler = null;
	    }
	  },
	  forceAlign: function forceAlign() {
	    var props = this.props;
	    if (!props.disabled) {
	      var source = _reactDom2["default"].findDOMNode(this);
	      props.onAlign(source, (0, _domAlign2["default"])(source, props.target(), props.align));
	    }
	  },
	  render: function render() {
	    var _props = this.props,
	        childrenProps = _props.childrenProps,
	        children = _props.children;
	
	    var child = _react2["default"].Children.only(children);
	    if (childrenProps) {
	      var newProps = {};
	      for (var prop in childrenProps) {
	        if (childrenProps.hasOwnProperty(prop)) {
	          newProps[prop] = this.props[childrenProps[prop]];
	        }
	      }
	      return _react2["default"].cloneElement(child, newProps);
	    }
	    return child;
	  }
	});
	
	exports["default"] = Align;
	module.exports = exports['default'];

/***/ },
/* 580 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _utils = __webpack_require__(581);
	
	var _utils2 = _interopRequireDefault(_utils);
	
	var _getOffsetParent = __webpack_require__(583);
	
	var _getOffsetParent2 = _interopRequireDefault(_getOffsetParent);
	
	var _getVisibleRectForElement = __webpack_require__(584);
	
	var _getVisibleRectForElement2 = _interopRequireDefault(_getVisibleRectForElement);
	
	var _adjustForViewport = __webpack_require__(585);
	
	var _adjustForViewport2 = _interopRequireDefault(_adjustForViewport);
	
	var _getRegion = __webpack_require__(586);
	
	var _getRegion2 = _interopRequireDefault(_getRegion);
	
	var _getElFuturePos = __webpack_require__(587);
	
	var _getElFuturePos2 = _interopRequireDefault(_getElFuturePos);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
	
	// http://yiminghe.iteye.com/blog/1124720
	
	/**
	 * align dom node flexibly
	 * @author yiminghe@gmail.com
	 */
	
	function isFailX(elFuturePos, elRegion, visibleRect) {
	  return elFuturePos.left < visibleRect.left || elFuturePos.left + elRegion.width > visibleRect.right;
	}
	
	function isFailY(elFuturePos, elRegion, visibleRect) {
	  return elFuturePos.top < visibleRect.top || elFuturePos.top + elRegion.height > visibleRect.bottom;
	}
	
	function isCompleteFailX(elFuturePos, elRegion, visibleRect) {
	  return elFuturePos.left > visibleRect.right || elFuturePos.left + elRegion.width < visibleRect.left;
	}
	
	function isCompleteFailY(elFuturePos, elRegion, visibleRect) {
	  return elFuturePos.top > visibleRect.bottom || elFuturePos.top + elRegion.height < visibleRect.top;
	}
	
	function flip(points, reg, map) {
	  var ret = [];
	  _utils2["default"].each(points, function (p) {
	    ret.push(p.replace(reg, function (m) {
	      return map[m];
	    }));
	  });
	  return ret;
	}
	
	function flipOffset(offset, index) {
	  offset[index] = -offset[index];
	  return offset;
	}
	
	function convertOffset(str, offsetLen) {
	  var n = void 0;
	  if (/%$/.test(str)) {
	    n = parseInt(str.substring(0, str.length - 1), 10) / 100 * offsetLen;
	  } else {
	    n = parseInt(str, 10);
	  }
	  return n || 0;
	}
	
	function normalizeOffset(offset, el) {
	  offset[0] = convertOffset(offset[0], el.width);
	  offset[1] = convertOffset(offset[1], el.height);
	}
	
	function domAlign(el, refNode, align) {
	  var points = align.points;
	  var offset = align.offset || [0, 0];
	  var targetOffset = align.targetOffset || [0, 0];
	  var overflow = align.overflow;
	  var target = align.target || refNode;
	  var source = align.source || el;
	  offset = [].concat(offset);
	  targetOffset = [].concat(targetOffset);
	  overflow = overflow || {};
	  var newOverflowCfg = {};
	
	  var fail = 0;
	  // 当前节点可以被放置的显示区域
	  var visibleRect = (0, _getVisibleRectForElement2["default"])(source);
	  // 当前节点所占的区域, left/top/width/height
	  var elRegion = (0, _getRegion2["default"])(source);
	  // 参照节点所占的区域, left/top/width/height
	  var refNodeRegion = (0, _getRegion2["default"])(target);
	  // 将 offset 转换成数值，支持百分比
	  normalizeOffset(offset, elRegion);
	  normalizeOffset(targetOffset, refNodeRegion);
	  // 当前节点将要被放置的位置
	  var elFuturePos = (0, _getElFuturePos2["default"])(elRegion, refNodeRegion, points, offset, targetOffset);
	  // 当前节点将要所处的区域
	  var newElRegion = _utils2["default"].merge(elRegion, elFuturePos);
	
	  // 如果可视区域不能完全放置当前节点时允许调整
	  if (visibleRect && (overflow.adjustX || overflow.adjustY)) {
	    if (overflow.adjustX) {
	      // 如果横向不能放下
	      if (isFailX(elFuturePos, elRegion, visibleRect)) {
	        // 对齐位置反下
	        var newPoints = flip(points, /[lr]/ig, {
	          l: 'r',
	          r: 'l'
	        });
	        // 偏移量也反下
	        var newOffset = flipOffset(offset, 0);
	        var newTargetOffset = flipOffset(targetOffset, 0);
	        var newElFuturePos = (0, _getElFuturePos2["default"])(elRegion, refNodeRegion, newPoints, newOffset, newTargetOffset);
	        if (!isCompleteFailX(newElFuturePos, elRegion, visibleRect)) {
	          fail = 1;
	          points = newPoints;
	          offset = newOffset;
	          targetOffset = newTargetOffset;
	        }
	      }
	    }
	
	    if (overflow.adjustY) {
	      // 如果纵向不能放下
	      if (isFailY(elFuturePos, elRegion, visibleRect)) {
	        // 对齐位置反下
	        var _newPoints = flip(points, /[tb]/ig, {
	          t: 'b',
	          b: 't'
	        });
	        // 偏移量也反下
	        var _newOffset = flipOffset(offset, 1);
	        var _newTargetOffset = flipOffset(targetOffset, 1);
	        var _newElFuturePos = (0, _getElFuturePos2["default"])(elRegion, refNodeRegion, _newPoints, _newOffset, _newTargetOffset);
	        if (!isCompleteFailY(_newElFuturePos, elRegion, visibleRect)) {
	          fail = 1;
	          points = _newPoints;
	          offset = _newOffset;
	          targetOffset = _newTargetOffset;
	        }
	      }
	    }
	
	    // 如果失败，重新计算当前节点将要被放置的位置
	    if (fail) {
	      elFuturePos = (0, _getElFuturePos2["default"])(elRegion, refNodeRegion, points, offset, targetOffset);
	      _utils2["default"].mix(newElRegion, elFuturePos);
	    }
	
	    // 检查反下后的位置是否可以放下了
	    // 如果仍然放不下只有指定了可以调整当前方向才调整
	    newOverflowCfg.adjustX = overflow.adjustX && isFailX(elFuturePos, elRegion, visibleRect);
	
	    newOverflowCfg.adjustY = overflow.adjustY && isFailY(elFuturePos, elRegion, visibleRect);
	
	    // 确实要调整，甚至可能会调整高度宽度
	    if (newOverflowCfg.adjustX || newOverflowCfg.adjustY) {
	      newElRegion = (0, _adjustForViewport2["default"])(elFuturePos, elRegion, visibleRect, newOverflowCfg);
	    }
	  }
	
	  // need judge to in case set fixed with in css on height auto element
	  if (newElRegion.width !== elRegion.width) {
	    _utils2["default"].css(source, 'width', _utils2["default"].width(source) + newElRegion.width - elRegion.width);
	  }
	
	  if (newElRegion.height !== elRegion.height) {
	    _utils2["default"].css(source, 'height', _utils2["default"].height(source) + newElRegion.height - elRegion.height);
	  }
	
	  // https://github.com/kissyteam/kissy/issues/190
	  // 相对于屏幕位置没变，而 left/top 变了
	  // 例如 <div 'relative'><el absolute></div>
	  _utils2["default"].offset(source, {
	    left: newElRegion.left,
	    top: newElRegion.top
	  }, {
	    useCssRight: align.useCssRight,
	    useCssBottom: align.useCssBottom,
	    useCssTransform: align.useCssTransform
	  });
	
	  return {
	    points: points,
	    offset: offset,
	    targetOffset: targetOffset,
	    overflow: newOverflowCfg
	  };
	}
	
	domAlign.__getOffsetParent = _getOffsetParent2["default"];
	
	domAlign.__getVisibleRectForElement = _getVisibleRectForElement2["default"];
	
	exports["default"] = domAlign;
	/**
	 *  2012-04-26 yiminghe@gmail.com
	 *   - 优化智能对齐算法
	 *   - 慎用 resizeXX
	 *
	 *  2011-07-13 yiminghe@gmail.com note:
	 *   - 增加智能对齐，以及大小调整选项
	 **/
	
	module.exports = exports['default'];

/***/ },
/* 581 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var _propertyUtils = __webpack_require__(582);
	
	var RE_NUM = /[\-+]?(?:\d*\.|)\d+(?:[eE][\-+]?\d+|)/.source;
	
	var getComputedStyleX = void 0;
	
	function force(x, y) {
	  return x + y;
	}
	
	function css(el, name, v) {
	  var value = v;
	  if ((typeof name === 'undefined' ? 'undefined' : _typeof(name)) === 'object') {
	    for (var i in name) {
	      if (name.hasOwnProperty(i)) {
	        css(el, i, name[i]);
	      }
	    }
	    return undefined;
	  }
	  if (typeof value !== 'undefined') {
	    if (typeof value === 'number') {
	      value = value + 'px';
	    }
	    el.style[name] = value;
	    return undefined;
	  }
	  return getComputedStyleX(el, name);
	}
	
	function getClientPosition(elem) {
	  var box = void 0;
	  var x = void 0;
	  var y = void 0;
	  var doc = elem.ownerDocument;
	  var body = doc.body;
	  var docElem = doc && doc.documentElement;
	  // 根据 GBS 最新数据，A-Grade Browsers 都已支持 getBoundingClientRect 方法，不用再考虑传统的实现方式
	  box = elem.getBoundingClientRect();
	
	  // 注：jQuery 还考虑减去 docElem.clientLeft/clientTop
	  // 但测试发现，这样反而会导致当 html 和 body 有边距/边框样式时，获取的值不正确
	  // 此外，ie6 会忽略 html 的 margin 值，幸运地是没有谁会去设置 html 的 margin
	
	  x = box.left;
	  y = box.top;
	
	  // In IE, most of the time, 2 extra pixels are added to the top and left
	  // due to the implicit 2-pixel inset border.  In IE6/7 quirks mode and
	  // IE6 standards mode, this border can be overridden by setting the
	  // document element's border to zero -- thus, we cannot rely on the
	  // offset always being 2 pixels.
	
	  // In quirks mode, the offset can be determined by querying the body's
	  // clientLeft/clientTop, but in standards mode, it is found by querying
	  // the document element's clientLeft/clientTop.  Since we already called
	  // getClientBoundingRect we have already forced a reflow, so it is not
	  // too expensive just to query them all.
	
	  // ie 下应该减去窗口的边框吧，毕竟默认 absolute 都是相对窗口定位的
	  // 窗口边框标准是设 documentElement ,quirks 时设置 body
	  // 最好禁止在 body 和 html 上边框 ，但 ie < 9 html 默认有 2px ，减去
	  // 但是非 ie 不可能设置窗口边框，body html 也不是窗口 ,ie 可以通过 html,body 设置
	  // 标准 ie 下 docElem.clientTop 就是 border-top
	  // ie7 html 即窗口边框改变不了。永远为 2
	  // 但标准 firefox/chrome/ie9 下 docElem.clientTop 是窗口边框，即使设了 border-top 也为 0
	
	  x -= docElem.clientLeft || body.clientLeft || 0;
	  y -= docElem.clientTop || body.clientTop || 0;
	
	  return {
	    left: x,
	    top: y
	  };
	}
	
	function getScroll(w, top) {
	  var ret = w['page' + (top ? 'Y' : 'X') + 'Offset'];
	  var method = 'scroll' + (top ? 'Top' : 'Left');
	  if (typeof ret !== 'number') {
	    var d = w.document;
	    // ie6,7,8 standard mode
	    ret = d.documentElement[method];
	    if (typeof ret !== 'number') {
	      // quirks mode
	      ret = d.body[method];
	    }
	  }
	  return ret;
	}
	
	function getScrollLeft(w) {
	  return getScroll(w);
	}
	
	function getScrollTop(w) {
	  return getScroll(w, true);
	}
	
	function getOffset(el) {
	  var pos = getClientPosition(el);
	  var doc = el.ownerDocument;
	  var w = doc.defaultView || doc.parentWindow;
	  pos.left += getScrollLeft(w);
	  pos.top += getScrollTop(w);
	  return pos;
	}
	function _getComputedStyle(elem, name, cs) {
	  var computedStyle = cs;
	  var val = '';
	  var d = elem.ownerDocument;
	  computedStyle = computedStyle || d.defaultView.getComputedStyle(elem, null);
	
	  // https://github.com/kissyteam/kissy/issues/61
	  if (computedStyle) {
	    val = computedStyle.getPropertyValue(name) || computedStyle[name];
	  }
	
	  return val;
	}
	
	var _RE_NUM_NO_PX = new RegExp('^(' + RE_NUM + ')(?!px)[a-z%]+$', 'i');
	var RE_POS = /^(top|right|bottom|left)$/;
	var CURRENT_STYLE = 'currentStyle';
	var RUNTIME_STYLE = 'runtimeStyle';
	var LEFT = 'left';
	var PX = 'px';
	
	function _getComputedStyleIE(elem, name) {
	  // currentStyle maybe null
	  // http://msdn.microsoft.com/en-us/library/ms535231.aspx
	  var ret = elem[CURRENT_STYLE] && elem[CURRENT_STYLE][name];
	
	  // 当 width/height 设置为百分比时，通过 pixelLeft 方式转换的 width/height 值
	  // 一开始就处理了! CUSTOM_STYLE.height,CUSTOM_STYLE.width ,cssHook 解决@2011-08-19
	  // 在 ie 下不对，需要直接用 offset 方式
	  // borderWidth 等值也有问题，但考虑到 borderWidth 设为百分比的概率很小，这里就不考虑了
	
	  // From the awesome hack by Dean Edwards
	  // http://erik.eae.net/archives/2007/07/27/18.54.15/#comment-102291
	  // If we're not dealing with a regular pixel number
	  // but a number that has a weird ending, we need to convert it to pixels
	  // exclude left right for relativity
	  if (_RE_NUM_NO_PX.test(ret) && !RE_POS.test(name)) {
	    // Remember the original values
	    var style = elem.style;
	    var left = style[LEFT];
	    var rsLeft = elem[RUNTIME_STYLE][LEFT];
	
	    // prevent flashing of content
	    elem[RUNTIME_STYLE][LEFT] = elem[CURRENT_STYLE][LEFT];
	
	    // Put in the new values to get a computed value out
	    style[LEFT] = name === 'fontSize' ? '1em' : ret || 0;
	    ret = style.pixelLeft + PX;
	
	    // Revert the changed values
	    style[LEFT] = left;
	
	    elem[RUNTIME_STYLE][LEFT] = rsLeft;
	  }
	  return ret === '' ? 'auto' : ret;
	}
	
	if (typeof window !== 'undefined') {
	  getComputedStyleX = window.getComputedStyle ? _getComputedStyle : _getComputedStyleIE;
	}
	
	function getOffsetDirection(dir, option) {
	  if (dir === 'left') {
	    return option.useCssRight ? 'right' : dir;
	  }
	  return option.useCssBottom ? 'bottom' : dir;
	}
	
	function oppositeOffsetDirection(dir) {
	  if (dir === 'left') {
	    return 'right';
	  } else if (dir === 'right') {
	    return 'left';
	  } else if (dir === 'top') {
	    return 'bottom';
	  } else if (dir === 'bottom') {
	    return 'top';
	  }
	}
	
	// 设置 elem 相对 elem.ownerDocument 的坐标
	function setLeftTop(elem, offset, option) {
	  // set position first, in-case top/left are set even on static elem
	  if (css(elem, 'position') === 'static') {
	    elem.style.position = 'relative';
	  }
	  var presetH = -999;
	  var presetV = -999;
	  var horizontalProperty = getOffsetDirection('left', option);
	  var verticalProperty = getOffsetDirection('top', option);
	  var oppositeHorizontalProperty = oppositeOffsetDirection(horizontalProperty);
	  var oppositeVerticalProperty = oppositeOffsetDirection(verticalProperty);
	
	  if (horizontalProperty !== 'left') {
	    presetH = 999;
	  }
	
	  if (verticalProperty !== 'top') {
	    presetV = 999;
	  }
	  var originalTransition = '';
	  var originalOffset = getOffset(elem);
	  if ('left' in offset || 'top' in offset) {
	    originalTransition = (0, _propertyUtils.getTransitionProperty)(elem) || '';
	    (0, _propertyUtils.setTransitionProperty)(elem, 'none');
	  }
	  if ('left' in offset) {
	    elem.style[oppositeHorizontalProperty] = '';
	    elem.style[horizontalProperty] = presetH + 'px';
	  }
	  if ('top' in offset) {
	    elem.style[oppositeVerticalProperty] = '';
	    elem.style[verticalProperty] = presetV + 'px';
	  }
	  var old = getOffset(elem);
	  var originalStyle = {};
	  for (var key in offset) {
	    if (offset.hasOwnProperty(key)) {
	      var dir = getOffsetDirection(key, option);
	      var preset = key === 'left' ? presetH : presetV;
	      var off = originalOffset[key] - old[key];
	      if (dir === key) {
	        originalStyle[dir] = preset + off;
	      } else {
	        originalStyle[dir] = preset - off;
	      }
	    }
	  }
	  css(elem, originalStyle);
	  // force relayout
	  force(elem.offsetTop, elem.offsetLeft);
	  if ('left' in offset || 'top' in offset) {
	    (0, _propertyUtils.setTransitionProperty)(elem, originalTransition);
	  }
	  var ret = {};
	  for (var _key in offset) {
	    if (offset.hasOwnProperty(_key)) {
	      var _dir = getOffsetDirection(_key, option);
	      var _off = offset[_key] - originalOffset[_key];
	      if (_key === _dir) {
	        ret[_dir] = originalStyle[_dir] + _off;
	      } else {
	        ret[_dir] = originalStyle[_dir] - _off;
	      }
	    }
	  }
	  css(elem, ret);
	}
	
	function setTransform(elem, offset) {
	  var originalOffset = getOffset(elem);
	  var originalXY = (0, _propertyUtils.getTransformXY)(elem);
	  var resultXY = { x: originalXY.x, y: originalXY.y };
	  if ('left' in offset) {
	    resultXY.x = originalXY.x + offset.left - originalOffset.left;
	  }
	  if ('top' in offset) {
	    resultXY.y = originalXY.y + offset.top - originalOffset.top;
	  }
	  (0, _propertyUtils.setTransformXY)(elem, resultXY);
	}
	
	function setOffset(elem, offset, option) {
	  if (option.useCssRight || option.useCssBottom) {
	    setLeftTop(elem, offset, option);
	  } else if (option.useCssTransform && (0, _propertyUtils.getTransformName)() in document.body.style) {
	    setTransform(elem, offset, option);
	  } else {
	    setLeftTop(elem, offset, option);
	  }
	}
	
	function each(arr, fn) {
	  for (var i = 0; i < arr.length; i++) {
	    fn(arr[i]);
	  }
	}
	
	function isBorderBoxFn(elem) {
	  return getComputedStyleX(elem, 'boxSizing') === 'border-box';
	}
	
	var BOX_MODELS = ['margin', 'border', 'padding'];
	var CONTENT_INDEX = -1;
	var PADDING_INDEX = 2;
	var BORDER_INDEX = 1;
	var MARGIN_INDEX = 0;
	
	function swap(elem, options, callback) {
	  var old = {};
	  var style = elem.style;
	  var name = void 0;
	
	  // Remember the old values, and insert the new ones
	  for (name in options) {
	    if (options.hasOwnProperty(name)) {
	      old[name] = style[name];
	      style[name] = options[name];
	    }
	  }
	
	  callback.call(elem);
	
	  // Revert the old values
	  for (name in options) {
	    if (options.hasOwnProperty(name)) {
	      style[name] = old[name];
	    }
	  }
	}
	
	function getPBMWidth(elem, props, which) {
	  var value = 0;
	  var prop = void 0;
	  var j = void 0;
	  var i = void 0;
	  for (j = 0; j < props.length; j++) {
	    prop = props[j];
	    if (prop) {
	      for (i = 0; i < which.length; i++) {
	        var cssProp = void 0;
	        if (prop === 'border') {
	          cssProp = '' + prop + which[i] + 'Width';
	        } else {
	          cssProp = prop + which[i];
	        }
	        value += parseFloat(getComputedStyleX(elem, cssProp)) || 0;
	      }
	    }
	  }
	  return value;
	}
	
	/**
	 * A crude way of determining if an object is a window
	 * @member util
	 */
	function isWindow(obj) {
	  // must use == for ie8
	  /* eslint eqeqeq:0 */
	  return obj !== null && obj !== undefined && obj == obj.window;
	}
	
	var domUtils = {};
	
	each(['Width', 'Height'], function (name) {
	  domUtils['doc' + name] = function (refWin) {
	    var d = refWin.document;
	    return Math.max(
	    // firefox chrome documentElement.scrollHeight< body.scrollHeight
	    // ie standard mode : documentElement.scrollHeight> body.scrollHeight
	    d.documentElement['scroll' + name],
	    // quirks : documentElement.scrollHeight 最大等于可视窗口多一点？
	    d.body['scroll' + name], domUtils['viewport' + name](d));
	  };
	
	  domUtils['viewport' + name] = function (win) {
	    // pc browser includes scrollbar in window.innerWidth
	    var prop = 'client' + name;
	    var doc = win.document;
	    var body = doc.body;
	    var documentElement = doc.documentElement;
	    var documentElementProp = documentElement[prop];
	    // 标准模式取 documentElement
	    // backcompat 取 body
	    return doc.compatMode === 'CSS1Compat' && documentElementProp || body && body[prop] || documentElementProp;
	  };
	});
	
	/*
	 得到元素的大小信息
	 @param elem
	 @param name
	 @param {String} [extra]  'padding' : (css width) + padding
	 'border' : (css width) + padding + border
	 'margin' : (css width) + padding + border + margin
	 */
	function getWH(elem, name, ex) {
	  var extra = ex;
	  if (isWindow(elem)) {
	    return name === 'width' ? domUtils.viewportWidth(elem) : domUtils.viewportHeight(elem);
	  } else if (elem.nodeType === 9) {
	    return name === 'width' ? domUtils.docWidth(elem) : domUtils.docHeight(elem);
	  }
	  var which = name === 'width' ? ['Left', 'Right'] : ['Top', 'Bottom'];
	  var borderBoxValue = name === 'width' ? elem.offsetWidth : elem.offsetHeight;
	  var computedStyle = getComputedStyleX(elem);
	  var isBorderBox = isBorderBoxFn(elem, computedStyle);
	  var cssBoxValue = 0;
	  if (borderBoxValue === null || borderBoxValue === undefined || borderBoxValue <= 0) {
	    borderBoxValue = undefined;
	    // Fall back to computed then un computed css if necessary
	    cssBoxValue = getComputedStyleX(elem, name);
	    if (cssBoxValue === null || cssBoxValue === undefined || Number(cssBoxValue) < 0) {
	      cssBoxValue = elem.style[name] || 0;
	    }
	    // Normalize '', auto, and prepare for extra
	    cssBoxValue = parseFloat(cssBoxValue) || 0;
	  }
	  if (extra === undefined) {
	    extra = isBorderBox ? BORDER_INDEX : CONTENT_INDEX;
	  }
	  var borderBoxValueOrIsBorderBox = borderBoxValue !== undefined || isBorderBox;
	  var val = borderBoxValue || cssBoxValue;
	  if (extra === CONTENT_INDEX) {
	    if (borderBoxValueOrIsBorderBox) {
	      return val - getPBMWidth(elem, ['border', 'padding'], which, computedStyle);
	    }
	    return cssBoxValue;
	  } else if (borderBoxValueOrIsBorderBox) {
	    if (extra === BORDER_INDEX) {
	      return val;
	    }
	    return val + (extra === PADDING_INDEX ? -getPBMWidth(elem, ['border'], which, computedStyle) : getPBMWidth(elem, ['margin'], which, computedStyle));
	  }
	  return cssBoxValue + getPBMWidth(elem, BOX_MODELS.slice(extra), which, computedStyle);
	}
	
	var cssShow = {
	  position: 'absolute',
	  visibility: 'hidden',
	  display: 'block'
	};
	
	// fix #119 : https://github.com/kissyteam/kissy/issues/119
	function getWHIgnoreDisplay() {
	  for (var _len = arguments.length, args = Array(_len), _key2 = 0; _key2 < _len; _key2++) {
	    args[_key2] = arguments[_key2];
	  }
	
	  var val = void 0;
	  var elem = args[0];
	  // in case elem is window
	  // elem.offsetWidth === undefined
	  if (elem.offsetWidth !== 0) {
	    val = getWH.apply(undefined, args);
	  } else {
	    swap(elem, cssShow, function () {
	      val = getWH.apply(undefined, args);
	    });
	  }
	  return val;
	}
	
	each(['width', 'height'], function (name) {
	  var first = name.charAt(0).toUpperCase() + name.slice(1);
	  domUtils['outer' + first] = function (el, includeMargin) {
	    return el && getWHIgnoreDisplay(el, name, includeMargin ? MARGIN_INDEX : BORDER_INDEX);
	  };
	  var which = name === 'width' ? ['Left', 'Right'] : ['Top', 'Bottom'];
	
	  domUtils[name] = function (elem, v) {
	    var val = v;
	    if (val !== undefined) {
	      if (elem) {
	        var computedStyle = getComputedStyleX(elem);
	        var isBorderBox = isBorderBoxFn(elem);
	        if (isBorderBox) {
	          val += getPBMWidth(elem, ['padding', 'border'], which, computedStyle);
	        }
	        return css(elem, name, val);
	      }
	      return undefined;
	    }
	    return elem && getWHIgnoreDisplay(elem, name, CONTENT_INDEX);
	  };
	});
	
	function mix(to, from) {
	  for (var i in from) {
	    if (from.hasOwnProperty(i)) {
	      to[i] = from[i];
	    }
	  }
	  return to;
	}
	
	var utils = {
	  getWindow: function getWindow(node) {
	    if (node && node.document && node.setTimeout) {
	      return node;
	    }
	    var doc = node.ownerDocument || node;
	    return doc.defaultView || doc.parentWindow;
	  },
	  offset: function offset(el, value, option) {
	    if (typeof value !== 'undefined') {
	      setOffset(el, value, option || {});
	    } else {
	      return getOffset(el);
	    }
	  },
	
	  isWindow: isWindow,
	  each: each,
	  css: css,
	  clone: function clone(obj) {
	    var i = void 0;
	    var ret = {};
	    for (i in obj) {
	      if (obj.hasOwnProperty(i)) {
	        ret[i] = obj[i];
	      }
	    }
	    var overflow = obj.overflow;
	    if (overflow) {
	      for (i in obj) {
	        if (obj.hasOwnProperty(i)) {
	          ret.overflow[i] = obj.overflow[i];
	        }
	      }
	    }
	    return ret;
	  },
	
	  mix: mix,
	  getWindowScrollLeft: function getWindowScrollLeft(w) {
	    return getScrollLeft(w);
	  },
	  getWindowScrollTop: function getWindowScrollTop(w) {
	    return getScrollTop(w);
	  },
	  merge: function merge() {
	    var ret = {};
	
	    for (var _len2 = arguments.length, args = Array(_len2), _key3 = 0; _key3 < _len2; _key3++) {
	      args[_key3] = arguments[_key3];
	    }
	
	    for (var i = 0; i < args.length; i++) {
	      utils.mix(ret, args[i]);
	    }
	    return ret;
	  },
	
	  viewportWidth: 0,
	  viewportHeight: 0
	};
	
	mix(utils, domUtils);
	
	exports["default"] = utils;
	module.exports = exports['default'];

/***/ },
/* 582 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.getTransformName = getTransformName;
	exports.setTransitionProperty = setTransitionProperty;
	exports.getTransitionProperty = getTransitionProperty;
	exports.getTransformXY = getTransformXY;
	exports.setTransformXY = setTransformXY;
	var vendorPrefix = void 0;
	
	var jsCssMap = {
	  Webkit: '-webkit-',
	  Moz: '-moz-',
	  // IE did it wrong again ...
	  ms: '-ms-',
	  O: '-o-'
	};
	
	function getVendorPrefix() {
	  if (vendorPrefix !== undefined) {
	    return vendorPrefix;
	  }
	  vendorPrefix = '';
	  var style = document.createElement('p').style;
	  var testProp = 'Transform';
	  for (var key in jsCssMap) {
	    if (key + testProp in style) {
	      vendorPrefix = key;
	    }
	  }
	  return vendorPrefix;
	}
	
	function getTransitionName() {
	  return getVendorPrefix() ? getVendorPrefix() + 'TransitionProperty' : 'transitionProperty';
	}
	
	function getTransformName() {
	  return getVendorPrefix() ? getVendorPrefix() + 'Transform' : 'transform';
	}
	
	function setTransitionProperty(node, value) {
	  var name = getTransitionName();
	  if (name) {
	    node.style[name] = value;
	    if (name !== 'transitionProperty') {
	      node.style.transitionProperty = value;
	    }
	  }
	}
	
	function setTransform(node, value) {
	  var name = getTransformName();
	  if (name) {
	    node.style[name] = value;
	    if (name !== 'transform') {
	      node.style.transform = value;
	    }
	  }
	}
	
	function getTransitionProperty(node) {
	  return node.style.transitionProperty || node.style[getTransitionName()];
	}
	
	function getTransformXY(node) {
	  var style = window.getComputedStyle(node, null);
	  var transform = style.getPropertyValue('transform') || style.getPropertyValue(getTransformName());
	  if (transform && transform !== 'none') {
	    var matrix = transform.replace(/[^0-9\-.,]/g, '').split(',');
	    return { x: parseFloat(matrix[12] || matrix[4], 0), y: parseFloat(matrix[13] || matrix[5], 0) };
	  }
	  return {
	    x: 0,
	    y: 0
	  };
	}
	
	var matrix2d = /matrix\((.*)\)/;
	var matrix3d = /matrix3d\((.*)\)/;
	
	function setTransformXY(node, xy) {
	  var style = window.getComputedStyle(node, null);
	  var transform = style.getPropertyValue('transform') || style.getPropertyValue(getTransformName());
	  if (transform && transform !== 'none') {
	    var arr = void 0;
	    var match2d = transform.match(matrix2d);
	    if (match2d) {
	      match2d = match2d[1];
	      arr = match2d.split(',').map(function (item) {
	        return parseFloat(item, 10);
	      });
	      arr[4] = xy.x;
	      arr[5] = xy.y;
	      setTransform(node, 'matrix(' + arr.join(',') + ')');
	    } else {
	      var match3d = transform.match(matrix3d)[1];
	      arr = match3d.split(',').map(function (item) {
	        return parseFloat(item, 10);
	      });
	      arr[12] = xy.x;
	      arr[13] = xy.y;
	      setTransform(node, 'matrix3d(' + arr.join(',') + ')');
	    }
	  } else {
	    setTransform(node, 'translateX(' + xy.x + 'px) translateY(' + xy.y + 'px) translateZ(0)');
	  }
	}

/***/ },
/* 583 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _utils = __webpack_require__(581);
	
	var _utils2 = _interopRequireDefault(_utils);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
	
	/**
	 * 得到会导致元素显示不全的祖先元素
	 */
	
	function getOffsetParent(element) {
	  // ie 这个也不是完全可行
	  /*
	   <div style="width: 50px;height: 100px;overflow: hidden">
	   <div style="width: 50px;height: 100px;position: relative;" id="d6">
	   元素 6 高 100px 宽 50px<br/>
	   </div>
	   </div>
	   */
	  // element.offsetParent does the right thing in ie7 and below. Return parent with layout!
	  //  In other browsers it only includes elements with position absolute, relative or
	  // fixed, not elements with overflow set to auto or scroll.
	  //        if (UA.ie && ieMode < 8) {
	  //            return element.offsetParent;
	  //        }
	  // 统一的 offsetParent 方法
	  var doc = element.ownerDocument;
	  var body = doc.body;
	  var parent = void 0;
	  var positionStyle = _utils2["default"].css(element, 'position');
	  var skipStatic = positionStyle === 'fixed' || positionStyle === 'absolute';
	
	  if (!skipStatic) {
	    return element.nodeName.toLowerCase() === 'html' ? null : element.parentNode;
	  }
	
	  for (parent = element.parentNode; parent && parent !== body; parent = parent.parentNode) {
	    positionStyle = _utils2["default"].css(parent, 'position');
	    if (positionStyle !== 'static') {
	      return parent;
	    }
	  }
	  return null;
	}
	
	exports["default"] = getOffsetParent;
	module.exports = exports['default'];

/***/ },
/* 584 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _utils = __webpack_require__(581);
	
	var _utils2 = _interopRequireDefault(_utils);
	
	var _getOffsetParent = __webpack_require__(583);
	
	var _getOffsetParent2 = _interopRequireDefault(_getOffsetParent);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
	
	/**
	 * 获得元素的显示部分的区域
	 */
	function getVisibleRectForElement(element) {
	  var visibleRect = {
	    left: 0,
	    right: Infinity,
	    top: 0,
	    bottom: Infinity
	  };
	  var el = (0, _getOffsetParent2["default"])(element);
	  var scrollX = void 0;
	  var scrollY = void 0;
	  var winSize = void 0;
	  var doc = element.ownerDocument;
	  var win = doc.defaultView || doc.parentWindow;
	  var body = doc.body;
	  var documentElement = doc.documentElement;
	
	  // Determine the size of the visible rect by climbing the dom accounting for
	  // all scrollable containers.
	  while (el) {
	    // clientWidth is zero for inline block elements in ie.
	    if ((navigator.userAgent.indexOf('MSIE') === -1 || el.clientWidth !== 0) &&
	    // body may have overflow set on it, yet we still get the entire
	    // viewport. In some browsers, el.offsetParent may be
	    // document.documentElement, so check for that too.
	    el !== body && el !== documentElement && _utils2["default"].css(el, 'overflow') !== 'visible') {
	      var pos = _utils2["default"].offset(el);
	      // add border
	      pos.left += el.clientLeft;
	      pos.top += el.clientTop;
	      visibleRect.top = Math.max(visibleRect.top, pos.top);
	      visibleRect.right = Math.min(visibleRect.right,
	      // consider area without scrollBar
	      pos.left + el.clientWidth);
	      visibleRect.bottom = Math.min(visibleRect.bottom, pos.top + el.clientHeight);
	      visibleRect.left = Math.max(visibleRect.left, pos.left);
	    } else if (el === body || el === documentElement) {
	      break;
	    }
	    el = (0, _getOffsetParent2["default"])(el);
	  }
	
	  // Clip by window's viewport.
	  scrollX = _utils2["default"].getWindowScrollLeft(win);
	  scrollY = _utils2["default"].getWindowScrollTop(win);
	  visibleRect.left = Math.max(visibleRect.left, scrollX);
	  visibleRect.top = Math.max(visibleRect.top, scrollY);
	  winSize = {
	    width: _utils2["default"].viewportWidth(win),
	    height: _utils2["default"].viewportHeight(win)
	  };
	  visibleRect.right = Math.min(visibleRect.right, scrollX + winSize.width);
	  visibleRect.bottom = Math.min(visibleRect.bottom, scrollY + winSize.height);
	  return visibleRect.top >= 0 && visibleRect.left >= 0 && visibleRect.bottom > visibleRect.top && visibleRect.right > visibleRect.left ? visibleRect : null;
	}
	
	exports["default"] = getVisibleRectForElement;
	module.exports = exports['default'];

/***/ },
/* 585 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _utils = __webpack_require__(581);
	
	var _utils2 = _interopRequireDefault(_utils);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
	
	function adjustForViewport(elFuturePos, elRegion, visibleRect, overflow) {
	  var pos = _utils2["default"].clone(elFuturePos);
	  var size = {
	    width: elRegion.width,
	    height: elRegion.height
	  };
	
	  if (overflow.adjustX && pos.left < visibleRect.left) {
	    pos.left = visibleRect.left;
	  }
	
	  // Left edge inside and right edge outside viewport, try to resize it.
	  if (overflow.resizeWidth && pos.left >= visibleRect.left && pos.left + size.width > visibleRect.right) {
	    size.width -= pos.left + size.width - visibleRect.right;
	  }
	
	  // Right edge outside viewport, try to move it.
	  if (overflow.adjustX && pos.left + size.width > visibleRect.right) {
	    // 保证左边界和可视区域左边界对齐
	    pos.left = Math.max(visibleRect.right - size.width, visibleRect.left);
	  }
	
	  // Top edge outside viewport, try to move it.
	  if (overflow.adjustY && pos.top < visibleRect.top) {
	    pos.top = visibleRect.top;
	  }
	
	  // Top edge inside and bottom edge outside viewport, try to resize it.
	  if (overflow.resizeHeight && pos.top >= visibleRect.top && pos.top + size.height > visibleRect.bottom) {
	    size.height -= pos.top + size.height - visibleRect.bottom;
	  }
	
	  // Bottom edge outside viewport, try to move it.
	  if (overflow.adjustY && pos.top + size.height > visibleRect.bottom) {
	    // 保证上边界和可视区域上边界对齐
	    pos.top = Math.max(visibleRect.bottom - size.height, visibleRect.top);
	  }
	
	  return _utils2["default"].mix(pos, size);
	}
	
	exports["default"] = adjustForViewport;
	module.exports = exports['default'];

/***/ },
/* 586 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _utils = __webpack_require__(581);
	
	var _utils2 = _interopRequireDefault(_utils);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
	
	function getRegion(node) {
	  var offset = void 0;
	  var w = void 0;
	  var h = void 0;
	  if (!_utils2["default"].isWindow(node) && node.nodeType !== 9) {
	    offset = _utils2["default"].offset(node);
	    w = _utils2["default"].outerWidth(node);
	    h = _utils2["default"].outerHeight(node);
	  } else {
	    var win = _utils2["default"].getWindow(node);
	    offset = {
	      left: _utils2["default"].getWindowScrollLeft(win),
	      top: _utils2["default"].getWindowScrollTop(win)
	    };
	    w = _utils2["default"].viewportWidth(win);
	    h = _utils2["default"].viewportHeight(win);
	  }
	  offset.width = w;
	  offset.height = h;
	  return offset;
	}
	
	exports["default"] = getRegion;
	module.exports = exports['default'];

/***/ },
/* 587 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _getAlignOffset = __webpack_require__(588);
	
	var _getAlignOffset2 = _interopRequireDefault(_getAlignOffset);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
	
	function getElFuturePos(elRegion, refNodeRegion, points, offset, targetOffset) {
	  var xy = void 0;
	  var diff = void 0;
	  var p1 = void 0;
	  var p2 = void 0;
	
	  xy = {
	    left: elRegion.left,
	    top: elRegion.top
	  };
	
	  p1 = (0, _getAlignOffset2["default"])(refNodeRegion, points[1]);
	  p2 = (0, _getAlignOffset2["default"])(elRegion, points[0]);
	
	  diff = [p2.left - p1.left, p2.top - p1.top];
	
	  return {
	    left: xy.left - diff[0] + offset[0] - targetOffset[0],
	    top: xy.top - diff[1] + offset[1] - targetOffset[1]
	  };
	}
	
	exports["default"] = getElFuturePos;
	module.exports = exports['default'];

/***/ },
/* 588 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	/**
	 * 获取 node 上的 align 对齐点 相对于页面的坐标
	 */
	
	function getAlignOffset(region, align) {
	  var V = align.charAt(0);
	  var H = align.charAt(1);
	  var w = region.width;
	  var h = region.height;
	  var x = void 0;
	  var y = void 0;
	
	  x = region.left;
	  y = region.top;
	
	  if (V === 'c') {
	    y += h / 2;
	  } else if (V === 'b') {
	    y += h;
	  }
	
	  if (H === 'c') {
	    x += w / 2;
	  } else if (H === 'r') {
	    x += w;
	  }
	
	  return {
	    left: x,
	    top: y
	  };
	}
	
	exports["default"] = getAlignOffset;
	module.exports = exports['default'];

/***/ },
/* 589 */
/***/ function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = isWindow;
	function isWindow(obj) {
	  /* eslint no-eq-null: 0 */
	  /* eslint eqeqeq: 0 */
	  return obj != null && obj == obj.window;
	}
	module.exports = exports['default'];

/***/ },
/* 590 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	// export this package's api
	module.exports = __webpack_require__(591);

/***/ },
/* 591 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _ChildrenUtils = __webpack_require__(592);
	
	var _AnimateChild = __webpack_require__(593);
	
	var _AnimateChild2 = _interopRequireDefault(_AnimateChild);
	
	var _util = __webpack_require__(598);
	
	var _util2 = _interopRequireDefault(_util);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	var defaultKey = 'rc_animate_' + Date.now();
	
	
	function getChildrenFromProps(props) {
	  var children = props.children;
	  if (_react2["default"].isValidElement(children)) {
	    if (!children.key) {
	      return _react2["default"].cloneElement(children, {
	        key: defaultKey
	      });
	    }
	  }
	  return children;
	}
	
	function noop() {}
	
	var Animate = _react2["default"].createClass({
	  displayName: 'Animate',
	
	  propTypes: {
	    component: _react2["default"].PropTypes.any,
	    animation: _react2["default"].PropTypes.object,
	    transitionName: _react2["default"].PropTypes.oneOfType([_react2["default"].PropTypes.string, _react2["default"].PropTypes.object]),
	    transitionEnter: _react2["default"].PropTypes.bool,
	    transitionAppear: _react2["default"].PropTypes.bool,
	    exclusive: _react2["default"].PropTypes.bool,
	    transitionLeave: _react2["default"].PropTypes.bool,
	    onEnd: _react2["default"].PropTypes.func,
	    onEnter: _react2["default"].PropTypes.func,
	    onLeave: _react2["default"].PropTypes.func,
	    onAppear: _react2["default"].PropTypes.func,
	    showProp: _react2["default"].PropTypes.string
	  },
	
	  getDefaultProps: function getDefaultProps() {
	    return {
	      animation: {},
	      component: 'span',
	      transitionEnter: true,
	      transitionLeave: true,
	      transitionAppear: false,
	      onEnd: noop,
	      onEnter: noop,
	      onLeave: noop,
	      onAppear: noop
	    };
	  },
	  getInitialState: function getInitialState() {
	    this.currentlyAnimatingKeys = {};
	    this.keysToEnter = [];
	    this.keysToLeave = [];
	    return {
	      children: (0, _ChildrenUtils.toArrayChildren)(getChildrenFromProps(this.props))
	    };
	  },
	  componentDidMount: function componentDidMount() {
	    var _this = this;
	
	    var showProp = this.props.showProp;
	    var children = this.state.children;
	    if (showProp) {
	      children = children.filter(function (child) {
	        return !!child.props[showProp];
	      });
	    }
	    children.forEach(function (child) {
	      if (child) {
	        _this.performAppear(child.key);
	      }
	    });
	  },
	  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
	    var _this2 = this;
	
	    this.nextProps = nextProps;
	    var nextChildren = (0, _ChildrenUtils.toArrayChildren)(getChildrenFromProps(nextProps));
	    var props = this.props;
	    // exclusive needs immediate response
	    if (props.exclusive) {
	      Object.keys(this.currentlyAnimatingKeys).forEach(function (key) {
	        _this2.stop(key);
	      });
	    }
	    var showProp = props.showProp;
	    var currentlyAnimatingKeys = this.currentlyAnimatingKeys;
	    // last props children if exclusive
	    var currentChildren = props.exclusive ? (0, _ChildrenUtils.toArrayChildren)(getChildrenFromProps(props)) : this.state.children;
	    // in case destroy in showProp mode
	    var newChildren = [];
	    if (showProp) {
	      currentChildren.forEach(function (currentChild) {
	        var nextChild = currentChild && (0, _ChildrenUtils.findChildInChildrenByKey)(nextChildren, currentChild.key);
	        var newChild = void 0;
	        if ((!nextChild || !nextChild.props[showProp]) && currentChild.props[showProp]) {
	          newChild = _react2["default"].cloneElement(nextChild || currentChild, _defineProperty({}, showProp, true));
	        } else {
	          newChild = nextChild;
	        }
	        if (newChild) {
	          newChildren.push(newChild);
	        }
	      });
	      nextChildren.forEach(function (nextChild) {
	        if (!nextChild || !(0, _ChildrenUtils.findChildInChildrenByKey)(currentChildren, nextChild.key)) {
	          newChildren.push(nextChild);
	        }
	      });
	    } else {
	      newChildren = (0, _ChildrenUtils.mergeChildren)(currentChildren, nextChildren);
	    }
	
	    // need render to avoid update
	    this.setState({
	      children: newChildren
	    });
	
	    nextChildren.forEach(function (child) {
	      var key = child && child.key;
	      if (child && currentlyAnimatingKeys[key]) {
	        return;
	      }
	      var hasPrev = child && (0, _ChildrenUtils.findChildInChildrenByKey)(currentChildren, key);
	      if (showProp) {
	        var showInNext = child.props[showProp];
	        if (hasPrev) {
	          var showInNow = (0, _ChildrenUtils.findShownChildInChildrenByKey)(currentChildren, key, showProp);
	          if (!showInNow && showInNext) {
	            _this2.keysToEnter.push(key);
	          }
	        } else if (showInNext) {
	          _this2.keysToEnter.push(key);
	        }
	      } else if (!hasPrev) {
	        _this2.keysToEnter.push(key);
	      }
	    });
	
	    currentChildren.forEach(function (child) {
	      var key = child && child.key;
	      if (child && currentlyAnimatingKeys[key]) {
	        return;
	      }
	      var hasNext = child && (0, _ChildrenUtils.findChildInChildrenByKey)(nextChildren, key);
	      if (showProp) {
	        var showInNow = child.props[showProp];
	        if (hasNext) {
	          var showInNext = (0, _ChildrenUtils.findShownChildInChildrenByKey)(nextChildren, key, showProp);
	          if (!showInNext && showInNow) {
	            _this2.keysToLeave.push(key);
	          }
	        } else if (showInNow) {
	          _this2.keysToLeave.push(key);
	        }
	      } else if (!hasNext) {
	        _this2.keysToLeave.push(key);
	      }
	    });
	  },
	  componentDidUpdate: function componentDidUpdate() {
	    var keysToEnter = this.keysToEnter;
	    this.keysToEnter = [];
	    keysToEnter.forEach(this.performEnter);
	    var keysToLeave = this.keysToLeave;
	    this.keysToLeave = [];
	    keysToLeave.forEach(this.performLeave);
	  },
	  performEnter: function performEnter(key) {
	    // may already remove by exclusive
	    if (this.refs[key]) {
	      this.currentlyAnimatingKeys[key] = true;
	      this.refs[key].componentWillEnter(this.handleDoneAdding.bind(this, key, 'enter'));
	    }
	  },
	  performAppear: function performAppear(key) {
	    if (this.refs[key]) {
	      this.currentlyAnimatingKeys[key] = true;
	      this.refs[key].componentWillAppear(this.handleDoneAdding.bind(this, key, 'appear'));
	    }
	  },
	  handleDoneAdding: function handleDoneAdding(key, type) {
	    var props = this.props;
	    delete this.currentlyAnimatingKeys[key];
	    // if update on exclusive mode, skip check
	    if (props.exclusive && props !== this.nextProps) {
	      return;
	    }
	    var currentChildren = (0, _ChildrenUtils.toArrayChildren)(getChildrenFromProps(props));
	    if (!this.isValidChildByKey(currentChildren, key)) {
	      // exclusive will not need this
	      this.performLeave(key);
	    } else {
	      if (type === 'appear') {
	        if (_util2["default"].allowAppearCallback(props)) {
	          props.onAppear(key);
	          props.onEnd(key, true);
	        }
	      } else {
	        if (_util2["default"].allowEnterCallback(props)) {
	          props.onEnter(key);
	          props.onEnd(key, true);
	        }
	      }
	    }
	  },
	  performLeave: function performLeave(key) {
	    // may already remove by exclusive
	    if (this.refs[key]) {
	      this.currentlyAnimatingKeys[key] = true;
	      this.refs[key].componentWillLeave(this.handleDoneLeaving.bind(this, key));
	    }
	  },
	  handleDoneLeaving: function handleDoneLeaving(key) {
	    var props = this.props;
	    delete this.currentlyAnimatingKeys[key];
	    // if update on exclusive mode, skip check
	    if (props.exclusive && props !== this.nextProps) {
	      return;
	    }
	    var currentChildren = (0, _ChildrenUtils.toArrayChildren)(getChildrenFromProps(props));
	    // in case state change is too fast
	    if (this.isValidChildByKey(currentChildren, key)) {
	      this.performEnter(key);
	    } else {
	      var end = function end() {
	        if (_util2["default"].allowLeaveCallback(props)) {
	          props.onLeave(key);
	          props.onEnd(key, false);
	        }
	      };
	      /* eslint react/no-is-mounted:0 */
	      if (this.isMounted() && !(0, _ChildrenUtils.isSameChildren)(this.state.children, currentChildren, props.showProp)) {
	        this.setState({
	          children: currentChildren
	        }, end);
	      } else {
	        end();
	      }
	    }
	  },
	  isValidChildByKey: function isValidChildByKey(currentChildren, key) {
	    var showProp = this.props.showProp;
	    if (showProp) {
	      return (0, _ChildrenUtils.findShownChildInChildrenByKey)(currentChildren, key, showProp);
	    }
	    return (0, _ChildrenUtils.findChildInChildrenByKey)(currentChildren, key);
	  },
	  stop: function stop(key) {
	    delete this.currentlyAnimatingKeys[key];
	    var component = this.refs[key];
	    if (component) {
	      component.stop();
	    }
	  },
	  render: function render() {
	    var props = this.props;
	    this.nextProps = props;
	    var stateChildren = this.state.children;
	    var children = null;
	    if (stateChildren) {
	      children = stateChildren.map(function (child) {
	        if (child === null || child === undefined) {
	          return child;
	        }
	        if (!child.key) {
	          throw new Error('must set key for <rc-animate> children');
	        }
	        return _react2["default"].createElement(
	          _AnimateChild2["default"],
	          {
	            key: child.key,
	            ref: child.key,
	            animation: props.animation,
	            transitionName: props.transitionName,
	            transitionEnter: props.transitionEnter,
	            transitionAppear: props.transitionAppear,
	            transitionLeave: props.transitionLeave
	          },
	          child
	        );
	      });
	    }
	    var Component = props.component;
	    if (Component) {
	      var passedProps = props;
	      if (typeof Component === 'string') {
	        passedProps = {
	          className: props.className,
	          style: props.style
	        };
	      }
	      return _react2["default"].createElement(
	        Component,
	        passedProps,
	        children
	      );
	    }
	    return children[0] || null;
	  }
	});
	
	exports["default"] = Animate;
	module.exports = exports['default'];

/***/ },
/* 592 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.toArrayChildren = toArrayChildren;
	exports.findChildInChildrenByKey = findChildInChildrenByKey;
	exports.findShownChildInChildrenByKey = findShownChildInChildrenByKey;
	exports.findHiddenChildInChildrenByKey = findHiddenChildInChildrenByKey;
	exports.isSameChildren = isSameChildren;
	exports.mergeChildren = mergeChildren;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
	
	function toArrayChildren(children) {
	  var ret = [];
	  _react2["default"].Children.forEach(children, function (child) {
	    ret.push(child);
	  });
	  return ret;
	}
	
	function findChildInChildrenByKey(children, key) {
	  var ret = null;
	  if (children) {
	    children.forEach(function (child) {
	      if (ret) {
	        return;
	      }
	      if (child && child.key === key) {
	        ret = child;
	      }
	    });
	  }
	  return ret;
	}
	
	function findShownChildInChildrenByKey(children, key, showProp) {
	  var ret = null;
	  if (children) {
	    children.forEach(function (child) {
	      if (child && child.key === key && child.props[showProp]) {
	        if (ret) {
	          throw new Error('two child with same key for <rc-animate> children');
	        }
	        ret = child;
	      }
	    });
	  }
	  return ret;
	}
	
	function findHiddenChildInChildrenByKey(children, key, showProp) {
	  var found = 0;
	  if (children) {
	    children.forEach(function (child) {
	      if (found) {
	        return;
	      }
	      found = child && child.key === key && !child.props[showProp];
	    });
	  }
	  return found;
	}
	
	function isSameChildren(c1, c2, showProp) {
	  var same = c1.length === c2.length;
	  if (same) {
	    c1.forEach(function (child, index) {
	      var child2 = c2[index];
	      if (child && child2) {
	        if (child && !child2 || !child && child2) {
	          same = false;
	        } else if (child.key !== child2.key) {
	          same = false;
	        } else if (showProp && child.props[showProp] !== child2.props[showProp]) {
	          same = false;
	        }
	      }
	    });
	  }
	  return same;
	}
	
	function mergeChildren(prev, next) {
	  var ret = [];
	
	  // For each key of `next`, the list of keys to insert before that key in
	  // the combined list
	  var nextChildrenPending = {};
	  var pendingChildren = [];
	  prev.forEach(function (child) {
	    if (child && findChildInChildrenByKey(next, child.key)) {
	      if (pendingChildren.length) {
	        nextChildrenPending[child.key] = pendingChildren;
	        pendingChildren = [];
	      }
	    } else {
	      pendingChildren.push(child);
	    }
	  });
	
	  next.forEach(function (child) {
	    if (child && nextChildrenPending.hasOwnProperty(child.key)) {
	      ret = ret.concat(nextChildrenPending[child.key]);
	    }
	    ret.push(child);
	  });
	
	  ret = ret.concat(pendingChildren);
	
	  return ret;
	}

/***/ },
/* 593 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactDom = __webpack_require__(32);
	
	var _reactDom2 = _interopRequireDefault(_reactDom);
	
	var _cssAnimation = __webpack_require__(594);
	
	var _cssAnimation2 = _interopRequireDefault(_cssAnimation);
	
	var _util = __webpack_require__(598);
	
	var _util2 = _interopRequireDefault(_util);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
	
	var transitionMap = {
	  enter: 'transitionEnter',
	  appear: 'transitionAppear',
	  leave: 'transitionLeave'
	};
	
	var AnimateChild = _react2["default"].createClass({
	  displayName: 'AnimateChild',
	
	  propTypes: {
	    children: _react2["default"].PropTypes.any
	  },
	
	  componentWillUnmount: function componentWillUnmount() {
	    this.stop();
	  },
	  componentWillEnter: function componentWillEnter(done) {
	    if (_util2["default"].isEnterSupported(this.props)) {
	      this.transition('enter', done);
	    } else {
	      done();
	    }
	  },
	  componentWillAppear: function componentWillAppear(done) {
	    if (_util2["default"].isAppearSupported(this.props)) {
	      this.transition('appear', done);
	    } else {
	      done();
	    }
	  },
	  componentWillLeave: function componentWillLeave(done) {
	    if (_util2["default"].isLeaveSupported(this.props)) {
	      this.transition('leave', done);
	    } else {
	      // always sync, do not interupt with react component life cycle
	      // update hidden -> animate hidden ->
	      // didUpdate -> animate leave -> unmount (if animate is none)
	      done();
	    }
	  },
	  transition: function transition(animationType, finishCallback) {
	    var _this = this;
	
	    var node = _reactDom2["default"].findDOMNode(this);
	    var props = this.props;
	    var transitionName = props.transitionName;
	    var nameIsObj = (typeof transitionName === 'undefined' ? 'undefined' : _typeof(transitionName)) === 'object';
	    this.stop();
	    var end = function end() {
	      _this.stopper = null;
	      finishCallback();
	    };
	    if ((_cssAnimation.isCssAnimationSupported || !props.animation[animationType]) && transitionName && props[transitionMap[animationType]]) {
	      var name = nameIsObj ? transitionName[animationType] : transitionName + '-' + animationType;
	      var activeName = name + '-active';
	      if (nameIsObj && transitionName[animationType + 'Active']) {
	        activeName = transitionName[animationType + 'Active'];
	      }
	      this.stopper = (0, _cssAnimation2["default"])(node, {
	        name: name,
	        active: activeName
	      }, end);
	    } else {
	      this.stopper = props.animation[animationType](node, end);
	    }
	  },
	  stop: function stop() {
	    var stopper = this.stopper;
	    if (stopper) {
	      this.stopper = null;
	      stopper.stop();
	    }
	  },
	  render: function render() {
	    return this.props.children;
	  }
	});
	
	exports["default"] = AnimateChild;
	module.exports = exports['default'];

/***/ },
/* 594 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var _Event = __webpack_require__(595);
	
	var _Event2 = _interopRequireDefault(_Event);
	
	var _componentClasses = __webpack_require__(596);
	
	var _componentClasses2 = _interopRequireDefault(_componentClasses);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
	
	var isCssAnimationSupported = _Event2["default"].endEvents.length !== 0;
	
	
	var capitalPrefixes = ['Webkit', 'Moz', 'O',
	// ms is special .... !
	'ms'];
	var prefixes = ['-webkit-', '-moz-', '-o-', 'ms-', ''];
	
	function getStyleProperty(node, name) {
	  // old ff need null, https://developer.mozilla.org/en-US/docs/Web/API/Window/getComputedStyle
	  var style = window.getComputedStyle(node, null);
	  var ret = '';
	  for (var i = 0; i < prefixes.length; i++) {
	    ret = style.getPropertyValue(prefixes[i] + name);
	    if (ret) {
	      break;
	    }
	  }
	  return ret;
	}
	
	function fixBrowserByTimeout(node) {
	  if (isCssAnimationSupported) {
	    var transitionDelay = parseFloat(getStyleProperty(node, 'transition-delay')) || 0;
	    var transitionDuration = parseFloat(getStyleProperty(node, 'transition-duration')) || 0;
	    var animationDelay = parseFloat(getStyleProperty(node, 'animation-delay')) || 0;
	    var animationDuration = parseFloat(getStyleProperty(node, 'animation-duration')) || 0;
	    var time = Math.max(transitionDuration + transitionDelay, animationDuration + animationDelay);
	    // sometimes, browser bug
	    node.rcEndAnimTimeout = setTimeout(function () {
	      node.rcEndAnimTimeout = null;
	      if (node.rcEndListener) {
	        node.rcEndListener();
	      }
	    }, time * 1000 + 200);
	  }
	}
	
	function clearBrowserBugTimeout(node) {
	  if (node.rcEndAnimTimeout) {
	    clearTimeout(node.rcEndAnimTimeout);
	    node.rcEndAnimTimeout = null;
	  }
	}
	
	var cssAnimation = function cssAnimation(node, transitionName, endCallback) {
	  var nameIsObj = (typeof transitionName === 'undefined' ? 'undefined' : _typeof(transitionName)) === 'object';
	  var className = nameIsObj ? transitionName.name : transitionName;
	  var activeClassName = nameIsObj ? transitionName.active : transitionName + '-active';
	  var end = endCallback;
	  var start = void 0;
	  var active = void 0;
	  var nodeClasses = (0, _componentClasses2["default"])(node);
	
	  if (endCallback && Object.prototype.toString.call(endCallback) === '[object Object]') {
	    end = endCallback.end;
	    start = endCallback.start;
	    active = endCallback.active;
	  }
	
	  if (node.rcEndListener) {
	    node.rcEndListener();
	  }
	
	  node.rcEndListener = function (e) {
	    if (e && e.target !== node) {
	      return;
	    }
	
	    if (node.rcAnimTimeout) {
	      clearTimeout(node.rcAnimTimeout);
	      node.rcAnimTimeout = null;
	    }
	
	    clearBrowserBugTimeout(node);
	
	    nodeClasses.remove(className);
	    nodeClasses.remove(activeClassName);
	
	    _Event2["default"].removeEndEventListener(node, node.rcEndListener);
	    node.rcEndListener = null;
	
	    // Usually this optional end is used for informing an owner of
	    // a leave animation and telling it to remove the child.
	    if (end) {
	      end();
	    }
	  };
	
	  _Event2["default"].addEndEventListener(node, node.rcEndListener);
	
	  if (start) {
	    start();
	  }
	  nodeClasses.add(className);
	
	  node.rcAnimTimeout = setTimeout(function () {
	    node.rcAnimTimeout = null;
	    nodeClasses.add(activeClassName);
	    if (active) {
	      setTimeout(active, 0);
	    }
	    fixBrowserByTimeout(node);
	    // 30ms for firefox
	  }, 30);
	
	  return {
	    stop: function stop() {
	      if (node.rcEndListener) {
	        node.rcEndListener();
	      }
	    }
	  };
	};
	
	cssAnimation.style = function (node, style, callback) {
	  if (node.rcEndListener) {
	    node.rcEndListener();
	  }
	
	  node.rcEndListener = function (e) {
	    if (e && e.target !== node) {
	      return;
	    }
	
	    if (node.rcAnimTimeout) {
	      clearTimeout(node.rcAnimTimeout);
	      node.rcAnimTimeout = null;
	    }
	
	    clearBrowserBugTimeout(node);
	
	    _Event2["default"].removeEndEventListener(node, node.rcEndListener);
	    node.rcEndListener = null;
	
	    // Usually this optional callback is used for informing an owner of
	    // a leave animation and telling it to remove the child.
	    if (callback) {
	      callback();
	    }
	  };
	
	  _Event2["default"].addEndEventListener(node, node.rcEndListener);
	
	  node.rcAnimTimeout = setTimeout(function () {
	    for (var s in style) {
	      if (style.hasOwnProperty(s)) {
	        node.style[s] = style[s];
	      }
	    }
	    node.rcAnimTimeout = null;
	    fixBrowserByTimeout(node);
	  }, 0);
	};
	
	cssAnimation.setTransition = function (node, p, value) {
	  var property = p;
	  var v = value;
	  if (value === undefined) {
	    v = property;
	    property = '';
	  }
	  property = property || '';
	  capitalPrefixes.forEach(function (prefix) {
	    node.style[prefix + 'Transition' + property] = v;
	  });
	};
	
	cssAnimation.isCssAnimationSupported = isCssAnimationSupported;
	
	exports["default"] = cssAnimation;
	module.exports = exports['default'];

/***/ },
/* 595 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var EVENT_NAME_MAP = {
	  transitionend: {
	    transition: 'transitionend',
	    WebkitTransition: 'webkitTransitionEnd',
	    MozTransition: 'mozTransitionEnd',
	    OTransition: 'oTransitionEnd',
	    msTransition: 'MSTransitionEnd'
	  },
	
	  animationend: {
	    animation: 'animationend',
	    WebkitAnimation: 'webkitAnimationEnd',
	    MozAnimation: 'mozAnimationEnd',
	    OAnimation: 'oAnimationEnd',
	    msAnimation: 'MSAnimationEnd'
	  }
	};
	
	var endEvents = [];
	
	function detectEvents() {
	  var testEl = document.createElement('div');
	  var style = testEl.style;
	
	  if (!('AnimationEvent' in window)) {
	    delete EVENT_NAME_MAP.animationend.animation;
	  }
	
	  if (!('TransitionEvent' in window)) {
	    delete EVENT_NAME_MAP.transitionend.transition;
	  }
	
	  for (var baseEventName in EVENT_NAME_MAP) {
	    if (EVENT_NAME_MAP.hasOwnProperty(baseEventName)) {
	      var baseEvents = EVENT_NAME_MAP[baseEventName];
	      for (var styleName in baseEvents) {
	        if (styleName in style) {
	          endEvents.push(baseEvents[styleName]);
	          break;
	        }
	      }
	    }
	  }
	}
	
	if (typeof window !== 'undefined' && typeof document !== 'undefined') {
	  detectEvents();
	}
	
	function addEventListener(node, eventName, eventListener) {
	  node.addEventListener(eventName, eventListener, false);
	}
	
	function removeEventListener(node, eventName, eventListener) {
	  node.removeEventListener(eventName, eventListener, false);
	}
	
	var TransitionEvents = {
	  addEndEventListener: function addEndEventListener(node, eventListener) {
	    if (endEvents.length === 0) {
	      window.setTimeout(eventListener, 0);
	      return;
	    }
	    endEvents.forEach(function (endEvent) {
	      addEventListener(node, endEvent, eventListener);
	    });
	  },
	
	
	  endEvents: endEvents,
	
	  removeEndEventListener: function removeEndEventListener(node, eventListener) {
	    if (endEvents.length === 0) {
	      return;
	    }
	    endEvents.forEach(function (endEvent) {
	      removeEventListener(node, endEvent, eventListener);
	    });
	  }
	};
	
	exports["default"] = TransitionEvents;
	module.exports = exports['default'];

/***/ },
/* 596 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Module dependencies.
	 */
	
	try {
	  var index = __webpack_require__(597);
	} catch (err) {
	  var index = __webpack_require__(597);
	}
	
	/**
	 * Whitespace regexp.
	 */
	
	var re = /\s+/;
	
	/**
	 * toString reference.
	 */
	
	var toString = Object.prototype.toString;
	
	/**
	 * Wrap `el` in a `ClassList`.
	 *
	 * @param {Element} el
	 * @return {ClassList}
	 * @api public
	 */
	
	module.exports = function(el){
	  return new ClassList(el);
	};
	
	/**
	 * Initialize a new ClassList for `el`.
	 *
	 * @param {Element} el
	 * @api private
	 */
	
	function ClassList(el) {
	  if (!el || !el.nodeType) {
	    throw new Error('A DOM element reference is required');
	  }
	  this.el = el;
	  this.list = el.classList;
	}
	
	/**
	 * Add class `name` if not already present.
	 *
	 * @param {String} name
	 * @return {ClassList}
	 * @api public
	 */
	
	ClassList.prototype.add = function(name){
	  // classList
	  if (this.list) {
	    this.list.add(name);
	    return this;
	  }
	
	  // fallback
	  var arr = this.array();
	  var i = index(arr, name);
	  if (!~i) arr.push(name);
	  this.el.className = arr.join(' ');
	  return this;
	};
	
	/**
	 * Remove class `name` when present, or
	 * pass a regular expression to remove
	 * any which match.
	 *
	 * @param {String|RegExp} name
	 * @return {ClassList}
	 * @api public
	 */
	
	ClassList.prototype.remove = function(name){
	  if ('[object RegExp]' == toString.call(name)) {
	    return this.removeMatching(name);
	  }
	
	  // classList
	  if (this.list) {
	    this.list.remove(name);
	    return this;
	  }
	
	  // fallback
	  var arr = this.array();
	  var i = index(arr, name);
	  if (~i) arr.splice(i, 1);
	  this.el.className = arr.join(' ');
	  return this;
	};
	
	/**
	 * Remove all classes matching `re`.
	 *
	 * @param {RegExp} re
	 * @return {ClassList}
	 * @api private
	 */
	
	ClassList.prototype.removeMatching = function(re){
	  var arr = this.array();
	  for (var i = 0; i < arr.length; i++) {
	    if (re.test(arr[i])) {
	      this.remove(arr[i]);
	    }
	  }
	  return this;
	};
	
	/**
	 * Toggle class `name`, can force state via `force`.
	 *
	 * For browsers that support classList, but do not support `force` yet,
	 * the mistake will be detected and corrected.
	 *
	 * @param {String} name
	 * @param {Boolean} force
	 * @return {ClassList}
	 * @api public
	 */
	
	ClassList.prototype.toggle = function(name, force){
	  // classList
	  if (this.list) {
	    if ("undefined" !== typeof force) {
	      if (force !== this.list.toggle(name, force)) {
	        this.list.toggle(name); // toggle again to correct
	      }
	    } else {
	      this.list.toggle(name);
	    }
	    return this;
	  }
	
	  // fallback
	  if ("undefined" !== typeof force) {
	    if (!force) {
	      this.remove(name);
	    } else {
	      this.add(name);
	    }
	  } else {
	    if (this.has(name)) {
	      this.remove(name);
	    } else {
	      this.add(name);
	    }
	  }
	
	  return this;
	};
	
	/**
	 * Return an array of classes.
	 *
	 * @return {Array}
	 * @api public
	 */
	
	ClassList.prototype.array = function(){
	  var className = this.el.getAttribute('class') || '';
	  var str = className.replace(/^\s+|\s+$/g, '');
	  var arr = str.split(re);
	  if ('' === arr[0]) arr.shift();
	  return arr;
	};
	
	/**
	 * Check if class `name` is present.
	 *
	 * @param {String} name
	 * @return {ClassList}
	 * @api public
	 */
	
	ClassList.prototype.has =
	ClassList.prototype.contains = function(name){
	  return this.list
	    ? this.list.contains(name)
	    : !! ~index(this.array(), name);
	};


/***/ },
/* 597 */
/***/ function(module, exports) {

	module.exports = function(arr, obj){
	  if (arr.indexOf) return arr.indexOf(obj);
	  for (var i = 0; i < arr.length; ++i) {
	    if (arr[i] === obj) return i;
	  }
	  return -1;
	};

/***/ },
/* 598 */
/***/ function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var util = {
	  isAppearSupported: function isAppearSupported(props) {
	    return props.transitionName && props.transitionAppear || props.animation.appear;
	  },
	  isEnterSupported: function isEnterSupported(props) {
	    return props.transitionName && props.transitionEnter || props.animation.enter;
	  },
	  isLeaveSupported: function isLeaveSupported(props) {
	    return props.transitionName && props.transitionLeave || props.animation.leave;
	  },
	  allowAppearCallback: function allowAppearCallback(props) {
	    return props.transitionAppear || props.animation.appear;
	  },
	  allowEnterCallback: function allowEnterCallback(props) {
	    return props.transitionEnter || props.animation.enter;
	  },
	  allowLeaveCallback: function allowLeaveCallback(props) {
	    return props.transitionLeave || props.animation.leave;
	  }
	};
	exports["default"] = util;
	module.exports = exports['default'];

/***/ },
/* 599 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _LazyRenderBox = __webpack_require__(600);
	
	var _LazyRenderBox2 = _interopRequireDefault(_LazyRenderBox);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
	
	var PopupInner = _react2["default"].createClass({
	  displayName: 'PopupInner',
	
	  propTypes: {
	    hiddenClassName: _react.PropTypes.string,
	    className: _react.PropTypes.string,
	    prefixCls: _react.PropTypes.string,
	    onMouseEnter: _react.PropTypes.func,
	    onMouseLeave: _react.PropTypes.func,
	    children: _react.PropTypes.any
	  },
	  render: function render() {
	    var props = this.props;
	    var className = props.className;
	    if (!props.visible) {
	      className += ' ' + props.hiddenClassName;
	    }
	    return _react2["default"].createElement(
	      'div',
	      {
	        className: className,
	        onMouseEnter: props.onMouseEnter,
	        onMouseLeave: props.onMouseLeave,
	        style: props.style
	      },
	      _react2["default"].createElement(
	        _LazyRenderBox2["default"],
	        { className: props.prefixCls + '-content', visible: props.visible },
	        props.children
	      )
	    );
	  }
	});
	
	exports["default"] = PopupInner;
	module.exports = exports['default'];

/***/ },
/* 600 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _objectWithoutProperties2 = __webpack_require__(601);
	
	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
	
	var LazyRenderBox = _react2["default"].createClass({
	  displayName: 'LazyRenderBox',
	
	  propTypes: {
	    children: _react.PropTypes.any,
	    className: _react.PropTypes.string,
	    visible: _react.PropTypes.bool,
	    hiddenClassName: _react.PropTypes.string
	  },
	  shouldComponentUpdate: function shouldComponentUpdate(nextProps) {
	    return nextProps.hiddenClassName || nextProps.visible;
	  },
	  render: function render() {
	    var _props = this.props,
	        hiddenClassName = _props.hiddenClassName,
	        visible = _props.visible,
	        props = (0, _objectWithoutProperties3["default"])(_props, ['hiddenClassName', 'visible']);
	
	
	    if (hiddenClassName || _react2["default"].Children.count(props.children) > 1) {
	      if (!visible && hiddenClassName) {
	        props.className += ' ' + hiddenClassName;
	      }
	      return _react2["default"].createElement('div', props);
	    }
	
	    return _react2["default"].Children.only(props.children);
	  }
	});
	
	exports["default"] = LazyRenderBox;
	module.exports = exports['default'];

/***/ },
/* 601 */
/***/ function(module, exports) {

	"use strict";
	
	exports.__esModule = true;
	
	exports.default = function (obj, keys) {
	  var target = {};
	
	  for (var i in obj) {
	    if (keys.indexOf(i) >= 0) continue;
	    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
	    target[i] = obj[i];
	  }
	
	  return target;
	};

/***/ },
/* 602 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends2 = __webpack_require__(526);
	
	var _extends3 = _interopRequireDefault(_extends2);
	
	exports.getAlignFromPlacement = getAlignFromPlacement;
	exports.getPopupClassNameFromAlign = getPopupClassNameFromAlign;
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
	
	function isPointsEq(a1, a2) {
	  return a1[0] === a2[0] && a1[1] === a2[1];
	}
	
	function getAlignFromPlacement(builtinPlacements, placementStr, align) {
	  var baseAlign = builtinPlacements[placementStr] || {};
	  return (0, _extends3["default"])({}, baseAlign, align);
	}
	
	function getPopupClassNameFromAlign(builtinPlacements, prefixCls, align) {
	  var points = align.points;
	  for (var placement in builtinPlacements) {
	    if (builtinPlacements.hasOwnProperty(placement)) {
	      if (isPointsEq(builtinPlacements[placement].points, points)) {
	        return prefixCls + '-placement-' + placement;
	      }
	    }
	  }
	  return '';
	}

/***/ },
/* 603 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	exports["default"] = getContainerRenderMixin;
	
	var _reactDom = __webpack_require__(32);
	
	var _reactDom2 = _interopRequireDefault(_reactDom);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
	
	function defaultGetContainer() {
	  var container = document.createElement('div');
	  document.body.appendChild(container);
	  return container;
	}
	
	function getContainerRenderMixin(config) {
	  var _config$autoMount = config.autoMount,
	      autoMount = _config$autoMount === undefined ? true : _config$autoMount,
	      _config$autoDestroy = config.autoDestroy,
	      autoDestroy = _config$autoDestroy === undefined ? true : _config$autoDestroy,
	      isVisible = config.isVisible,
	      getComponent = config.getComponent,
	      _config$getContainer = config.getContainer,
	      getContainer = _config$getContainer === undefined ? defaultGetContainer : _config$getContainer;
	
	
	  var mixin = void 0;
	
	  function _renderComponent(instance, componentArg, ready) {
	    if (!isVisible || instance._component || isVisible(instance)) {
	      if (!instance._container) {
	        instance._container = getContainer(instance);
	      }
	      var component = void 0;
	      if (instance.getComponent) {
	        component = instance.getComponent(componentArg);
	      } else {
	        component = getComponent(instance, componentArg);
	      }
	      _reactDom2["default"].unstable_renderSubtreeIntoContainer(instance, component, instance._container, function callback() {
	        instance._component = this;
	        if (ready) {
	          ready.call(this);
	        }
	      });
	    }
	  }
	
	  if (autoMount) {
	    mixin = _extends({}, mixin, {
	      componentDidMount: function componentDidMount() {
	        _renderComponent(this);
	      },
	      componentDidUpdate: function componentDidUpdate() {
	        _renderComponent(this);
	      }
	    });
	  }
	
	  if (!autoMount || !autoDestroy) {
	    mixin = _extends({}, mixin, {
	      renderComponent: function renderComponent(componentArg, ready) {
	        _renderComponent(this, componentArg, ready);
	      }
	    });
	  }
	
	  function _removeContainer(instance) {
	    if (instance._container) {
	      var container = instance._container;
	      _reactDom2["default"].unmountComponentAtNode(container);
	      container.parentNode.removeChild(container);
	      instance._container = null;
	    }
	  }
	
	  if (autoDestroy) {
	    mixin = _extends({}, mixin, {
	      componentWillUnmount: function componentWillUnmount() {
	        _removeContainer(this);
	      }
	    });
	  } else {
	    mixin = _extends({}, mixin, {
	      removeContainer: function removeContainer() {
	        _removeContainer(this);
	      }
	    });
	  }
	
	  return mixin;
	}
	module.exports = exports['default'];

/***/ },
/* 604 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _defineProperty2 = __webpack_require__(468);
	
	var _defineProperty3 = _interopRequireDefault(_defineProperty2);
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(404);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _warning = __webpack_require__(333);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
	
	var calcPoints = function calcPoints(vertical, marks, dots, step, min, max) {
	  (0, _warning2["default"])(dots ? step > 0 : true, '`Slider[step]` should be a positive number in order to make Slider[dots] work.');
	  var points = Object.keys(marks).map(parseFloat);
	  if (dots) {
	    for (var i = min; i <= max; i = i + step) {
	      if (points.indexOf(i) >= 0) continue;
	      points.push(i);
	    }
	  }
	  return points;
	};
	
	var Steps = function Steps(_ref) {
	  var prefixCls = _ref.prefixCls,
	      vertical = _ref.vertical,
	      marks = _ref.marks,
	      dots = _ref.dots,
	      step = _ref.step,
	      included = _ref.included,
	      lowerBound = _ref.lowerBound,
	      upperBound = _ref.upperBound,
	      max = _ref.max,
	      min = _ref.min;
	
	  var range = max - min;
	  var elements = calcPoints(vertical, marks, dots, step, min, max).map(function (point) {
	    var _classNames;
	
	    var offset = Math.abs(point - min) / range * 100 + '%';
	    var style = vertical ? { bottom: offset } : { left: offset };
	
	    var isActived = !included && point === upperBound || included && point <= upperBound && point >= lowerBound;
	    var pointClassName = (0, _classnames2["default"])((_classNames = {}, (0, _defineProperty3["default"])(_classNames, prefixCls + '-dot', true), (0, _defineProperty3["default"])(_classNames, prefixCls + '-dot-active', isActived), _classNames));
	
	    return _react2["default"].createElement('span', { className: pointClassName, style: style, key: point });
	  });
	
	  return _react2["default"].createElement(
	    'div',
	    { className: prefixCls + '-step' },
	    elements
	  );
	};
	
	exports["default"] = Steps;
	module.exports = exports['default'];

/***/ },
/* 605 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends2 = __webpack_require__(526);
	
	var _extends3 = _interopRequireDefault(_extends2);
	
	var _typeof2 = __webpack_require__(535);
	
	var _typeof3 = _interopRequireDefault(_typeof2);
	
	var _defineProperty2 = __webpack_require__(468);
	
	var _defineProperty3 = _interopRequireDefault(_defineProperty2);
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(404);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
	
	var Marks = function Marks(_ref) {
	  var className = _ref.className,
	      vertical = _ref.vertical,
	      marks = _ref.marks,
	      included = _ref.included,
	      upperBound = _ref.upperBound,
	      lowerBound = _ref.lowerBound,
	      max = _ref.max,
	      min = _ref.min;
	
	  var marksKeys = Object.keys(marks);
	  var marksCount = marksKeys.length;
	  var unit = 100 / (marksCount - 1);
	  var markWidth = unit * 0.9;
	
	  var range = max - min;
	  var elements = marksKeys.map(parseFloat).sort(function (a, b) {
	    return a - b;
	  }).map(function (point) {
	    var _classNames;
	
	    var isActive = !included && point === upperBound || included && point <= upperBound && point >= lowerBound;
	    var markClassName = (0, _classnames2["default"])((_classNames = {}, (0, _defineProperty3["default"])(_classNames, className + '-text', true), (0, _defineProperty3["default"])(_classNames, className + '-text-active', isActive), _classNames));
	
	    var bottomStyle = {
	      // height: markWidth + '%',
	      marginBottom: '-50%',
	      bottom: (point - min) / range * 100 + '%'
	    };
	
	    var leftStyle = {
	      width: markWidth + '%',
	      marginLeft: -markWidth / 2 + '%',
	      left: (point - min) / range * 100 + '%'
	    };
	
	    var style = vertical ? bottomStyle : leftStyle;
	
	    var markPoint = marks[point];
	    var markPointIsObject = (typeof markPoint === 'undefined' ? 'undefined' : (0, _typeof3["default"])(markPoint)) === 'object' && !_react2["default"].isValidElement(markPoint);
	    var markLabel = markPointIsObject ? markPoint.label : markPoint;
	    var markStyle = markPointIsObject ? (0, _extends3["default"])({}, style, markPoint.style) : style;
	    return _react2["default"].createElement(
	      'span',
	      { className: markClassName, style: markStyle, key: point },
	      markLabel
	    );
	  });
	
	  return _react2["default"].createElement(
	    'div',
	    { className: className },
	    elements
	  );
	};
	
	exports["default"] = Marks;
	module.exports = exports['default'];

/***/ },
/* 606 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _reactRedux = __webpack_require__(309);
	
	var _listing_show = __webpack_require__(607);
	
	var _listing_show2 = _interopRequireDefault(_listing_show);
	
	var _listing_actions = __webpack_require__(295);
	
	var _error_actions = __webpack_require__(204);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var mapStateToProps = function mapStateToProps(state) {
	  return {
	    listing: state.listing,
	    errors: state.errors.all
	  };
	};
	
	var mapDispatchToProps = function mapDispatchToProps(dispatch) {
	  return {
	    fetchListing: function fetchListing(id) {
	      return dispatch((0, _listing_actions.fetchListing)(id));
	    },
	    bookListing: function bookListing(rental) {
	      return dispatch((0, _listing_actions.bookListing)(rental));
	    },
	    clearSessionErrors: function clearSessionErrors() {
	      return dispatch((0, _error_actions.clearSessionErrors)());
	    }
	  };
	};
	
	exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(_listing_show2.default);

/***/ },
/* 607 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactRouter = __webpack_require__(326);
	
	var _belle = __webpack_require__(415);
	
	var _reactFontawesome = __webpack_require__(382);
	
	var _reactFontawesome2 = _interopRequireDefault(_reactFontawesome);
	
	var _reactAddonsCssTransitionGroup = __webpack_require__(608);
	
	var _reactAddonsCssTransitionGroup2 = _interopRequireDefault(_reactAddonsCssTransitionGroup);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var ListingShow = function (_React$Component) {
	  _inherits(ListingShow, _React$Component);
	
	  function ListingShow(props) {
	    _classCallCheck(this, ListingShow);
	
	    var _this = _possibleConstructorReturn(this, (ListingShow.__proto__ || Object.getPrototypeOf(ListingShow)).call(this, props));
	
	    _this.logDate = _this.logDate.bind(_this);
	    _this.toggleDropDown = _this.toggleDropDown.bind(_this);
	    _this.handleSubmit = _this.handleSubmit.bind(_this);
	    _this.updateThumbnail = _this.updateThumbnail.bind(_this);
	    _this.userReviews = _this.userReviews.bind(_this);
	    _this.state = {
	      pickUp: true,
	      dropOff: true,
	      start_date: "mm/dd/yy",
	      end_date: "mm/dd/yy",
	      success: false
	    };
	    return _this;
	  }
	
	  _createClass(ListingShow, [{
	    key: 'firstMainImage',
	    value: function firstMainImage(data) {
	      var photoData = data.listing.photos;
	      if (photoData.length === 0) {
	        this.setState({ mainListingImage: "http://res.cloudinary.com/dkympkwdz/image/upload/ar_3:2,c_crop/v1484546397/pexels-photo-26738_q9eaqc.jpg" });
	      } else {
	        this.setState({ mainListingImage: photoData[0].image_url });
	      }
	    }
	  }, {
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      var _this2 = this;
	
	      this.props.fetchListing(this.props.routeParams.listingId).then(function (data) {
	        return _this2.firstMainImage(data);
	      });
	      this.setState({ id: this.props.routeParams.listingId });
	    }
	  }, {
	    key: 'componentWillUnmount',
	    value: function componentWillUnmount() {
	      this.props.clearSessionErrors();
	    }
	  }, {
	    key: 'logDate',
	    value: function logDate(field) {
	      var _this3 = this;
	
	      var that = this;
	      return function (date) {
	        _this3.setState({ pickUp: true, dropOff: true });
	        _this3.setState(_defineProperty({}, field, date.value));
	      };
	    }
	  }, {
	    key: 'toggleDropDown',
	    value: function toggleDropDown(field) {
	      this.setState(_defineProperty({}, field, !this.state[field]));
	    }
	  }, {
	    key: 'redirect',
	    value: function redirect(route) {
	      this.props.router.replace(route);
	      this.props.clearSessionErrors();
	    }
	  }, {
	    key: 'setSuccess',
	    value: function setSuccess() {
	      this.setState({ success: true });
	    }
	  }, {
	    key: 'handleSubmit',
	    value: function handleSubmit() {
	      var _this4 = this;
	
	      var rental = {
	        start_date: this.state.start_date,
	        end_date: this.state.end_date,
	        id: this.state.id
	      };
	      this.props.bookListing({ rental: rental }).then(function () {
	        return _this4.setSuccess();
	      }).then(function () {
	        return _this4.props.fetchListing(_this4.props.routeParams.listingId);
	      });
	    }
	  }, {
	    key: 'renderErrors',
	    value: function renderErrors() {
	      if (this.props.errors.length > 0) {
	        return _react2.default.createElement(
	          'div',
	          { className: 'listing-errors' },
	          _react2.default.createElement(
	            'ul',
	            { className: 'listing-errors' },
	            this.props.errors.map(function (error, i) {
	              return _react2.default.createElement(
	                'li',
	                { key: 'error-' + i },
	                error
	              );
	            })
	          )
	        );
	      } else {
	        return null;
	      }
	    }
	  }, {
	    key: 'updateThumbnail',
	    value: function updateThumbnail(e) {
	      this.setState({ mainListingImage: e.target.src });
	    }
	  }, {
	    key: 'renderPhotos',
	    value: function renderPhotos() {
	      var _this5 = this;
	
	      var photos = this.props.listing.photos;
	      var thumbnails = photos.map(function (photo) {
	        return _react2.default.createElement('img', { className: 'listing-thumbnail', onClick: _this5.updateThumbnail, key: photo["photo_id"], src: photo["image_url"] });
	      });
	      return _react2.default.createElement(
	        'div',
	        { className: 'listing-thumbnails' },
	        thumbnails
	      );
	    }
	  }, {
	    key: 'userReviews',
	    value: function userReviews() {
	      var reviews = this.props.listing.reviews;
	      if (reviews) {
	        reviews = reviews.map(function (review) {
	          return _react2.default.createElement(
	            'div',
	            { className: 'user-review', key: review.id },
	            _react2.default.createElement(_belle.Rating, { defaultValue: review.rating,
	              className: 'listing-star-rating user-review-rating',
	              disabled: true }),
	            _react2.default.createElement('br', null),
	            _react2.default.createElement(
	              'div',
	              { className: 'review-sub-header' },
	              review.date,
	              ' ago ',
	              review.lessee,
	              ' said...'
	            ),
	            _react2.default.createElement(
	              'div',
	              { className: 'review-text-container' },
	              review.review_text
	            )
	          );
	        });
	      }
	      return reviews;
	    }
	  }, {
	    key: 'rentalDates',
	    value: function rentalDates() {
	      var rentals = this.props.listing.rentals;
	      if (rentals) {
	        rentals = rentals.map(function (rental) {
	          return _react2.default.createElement(
	            'div',
	            { className: 'rental-date', key: rental.id },
	            rental.start_date,
	            ' - ',
	            rental.end_date
	          );
	        });
	      }
	      return rentals;
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _this6 = this;
	
	      var main = void 0;
	      var pickUpDate = void 0;
	      var dropOffDate = void 0;
	
	      var listing = this.props.listing;
	      if (listing === null) {
	        main = _react2.default.createElement(
	          'div',
	          { className: 'main' },
	          _react2.default.createElement(
	            'div',
	            null,
	            'Loading ',
	            _react2.default.createElement(_belle.Spinner, { characterStyle: { fontSize: 20 } }),
	            ' '
	          )
	        );
	      } else {
	        main = _react2.default.createElement(
	          'div',
	          { className: 'main' },
	          _react2.default.createElement(
	            'div',
	            { className: 'aside-2' },
	            _react2.default.createElement(
	              'h1',
	              { className: 'listing-title' },
	              listing.listing_title
	            ),
	            _react2.default.createElement(
	              'div',
	              { className: 'listing-image' },
	              _react2.default.createElement('img', { className: 'main-listing-image', src: this.state.mainListingImage })
	            ),
	            this.renderPhotos(),
	            _react2.default.createElement('br', null),
	            _react2.default.createElement(
	              'table',
	              null,
	              _react2.default.createElement(
	                'tbody',
	                null,
	                _react2.default.createElement(
	                  'tr',
	                  null,
	                  _react2.default.createElement(
	                    'td',
	                    null,
	                    _react2.default.createElement(
	                      'b',
	                      { className: 'listing-sub-header' },
	                      'Brand:'
	                    )
	                  ),
	                  _react2.default.createElement(
	                    'td',
	                    null,
	                    ' ',
	                    listing.brand
	                  )
	                ),
	                _react2.default.createElement(
	                  'tr',
	                  null,
	                  _react2.default.createElement(
	                    'td',
	                    null,
	                    _react2.default.createElement(
	                      'b',
	                      { className: 'listing-sub-header' },
	                      'Category:'
	                    )
	                  ),
	                  _react2.default.createElement(
	                    'td',
	                    null,
	                    ' ',
	                    listing.category
	                  )
	                ),
	                _react2.default.createElement(
	                  'tr',
	                  null,
	                  _react2.default.createElement(
	                    'td',
	                    null,
	                    _react2.default.createElement(
	                      'b',
	                      { className: 'listing-sub-header' },
	                      'Location:'
	                    )
	                  ),
	                  _react2.default.createElement(
	                    'td',
	                    null,
	                    ' ',
	                    listing.location
	                  )
	                ),
	                _react2.default.createElement(
	                  'tr',
	                  null,
	                  _react2.default.createElement(
	                    'td',
	                    null,
	                    _react2.default.createElement(
	                      'b',
	                      { className: 'listing-sub-header' },
	                      'Replacement Value:'
	                    )
	                  ),
	                  _react2.default.createElement(
	                    'td',
	                    null,
	                    ' $',
	                    listing.replacement_value
	                  )
	                ),
	                _react2.default.createElement(
	                  'tr',
	                  null,
	                  _react2.default.createElement(
	                    'td',
	                    null,
	                    _react2.default.createElement(
	                      'b',
	                      { className: 'listing-sub-header' },
	                      'Serial:'
	                    )
	                  ),
	                  _react2.default.createElement(
	                    'td',
	                    null,
	                    ' ',
	                    listing.serial
	                  )
	                )
	              )
	            ),
	            _react2.default.createElement('br', null),
	            _react2.default.createElement(
	              'p',
	              null,
	              _react2.default.createElement(
	                'b',
	                { className: 'listing-sub-header' },
	                'Equipment Description'
	              )
	            ),
	            _react2.default.createElement('br', null),
	            _react2.default.createElement(
	              'p',
	              null,
	              listing.detail_desc
	            ),
	            _react2.default.createElement('br', null),
	            _react2.default.createElement(
	              'div',
	              { className: 'user-reviews' },
	              _react2.default.createElement(
	                'b',
	                { className: 'listing-sub-header' },
	                'This is what our community had to say:'
	              ),
	              this.userReviews()
	            )
	          ),
	          _react2.default.createElement(
	            'div',
	            { className: 'aside-3' },
	            _react2.default.createElement(
	              'h1',
	              { className: 'listing-title' },
	              'Book this rental today!'
	            ),
	            _react2.default.createElement('br', null),
	            _react2.default.createElement('br', null),
	            _react2.default.createElement('br', null),
	            _react2.default.createElement(
	              'h1',
	              { className: 'listing-title' },
	              listing.lessor,
	              ' (',
	              listing.review_count,
	              ')'
	            ),
	            _react2.default.createElement(_belle.Rating, { defaultValue: Math.round(listing.rating_average),
	              className: 'listing-star-rating',
	              disabled: true }),
	            _react2.default.createElement(
	              'table',
	              { className: 'selection-menu' },
	              _react2.default.createElement(
	                'tbody',
	                null,
	                _react2.default.createElement(
	                  'tr',
	                  null,
	                  _react2.default.createElement(
	                    'td',
	                    null,
	                    _react2.default.createElement(
	                      'b',
	                      { className: 'listing-sub-header' },
	                      'Pick Up On:'
	                    )
	                  ),
	                  _react2.default.createElement(
	                    'td',
	                    null,
	                    _react2.default.createElement(_reactFontawesome2.default, { onClick: function onClick() {
	                        return _this6.toggleDropDown("pickUp");
	                      }, className: 'fa-calendar fa-listing pointer', name: 'calendar', style: { textShadow: '0 1px 0 rgba(0, 0, 0, 0.3)' } }),
	                    _react2.default.createElement(_belle.DatePicker, { className: this.state.pickUp ? "calendar hidden" : "calendar pointer", onUpdate: this.logDate("start_date") }),
	                    _react2.default.createElement(
	                      'b',
	                      { className: 'pointer', onClick: function onClick() {
	                          return _this6.toggleDropDown("pickUp");
	                        } },
	                      _typeof(this.state.start_date) === 'object' ? this.state.start_date.toDateString() : this.state.start_date
	                    )
	                  )
	                ),
	                _react2.default.createElement(
	                  'tr',
	                  null,
	                  _react2.default.createElement(
	                    'td',
	                    null,
	                    _react2.default.createElement(
	                      'b',
	                      { className: 'listing-sub-header' },
	                      'Drop Off On:'
	                    )
	                  ),
	                  _react2.default.createElement(
	                    'td',
	                    null,
	                    _react2.default.createElement(_reactFontawesome2.default, { onClick: function onClick() {
	                        return _this6.toggleDropDown("dropOff");
	                      }, className: 'fa-calendar fa-listing pointer', name: 'calendar', style: { textShadow: '0 1px 0 rgba(0, 0, 0, 0.3)' } }),
	                    _react2.default.createElement(_belle.DatePicker, { className: this.state.dropOff ? "calendar hidden" : "calendar pointer", onUpdate: this.logDate("end_date") }),
	                    _react2.default.createElement(
	                      'b',
	                      { className: 'pointer', onClick: function onClick() {
	                          return _this6.toggleDropDown("dropOff");
	                        } },
	                      _typeof(this.state.end_date) === 'object' ? this.state.end_date.toDateString() : this.state.end_date
	                    )
	                  )
	                ),
	                _react2.default.createElement(
	                  'tr',
	                  null,
	                  _react2.default.createElement(
	                    'td',
	                    null,
	                    _react2.default.createElement(
	                      'b',
	                      { className: 'listing-sub-header' },
	                      'Daily Rate:'
	                    )
	                  ),
	                  _react2.default.createElement(
	                    'td',
	                    null,
	                    '$',
	                    listing.day_rate
	                  )
	                ),
	                _react2.default.createElement(
	                  'tr',
	                  null,
	                  _react2.default.createElement(
	                    'td',
	                    null,
	                    _react2.default.createElement(
	                      'b',
	                      { className: 'listing-sub-header' },
	                      'Total:'
	                    )
	                  ),
	                  _react2.default.createElement(
	                    'td',
	                    { className: 'total' },
	                    _typeof(this.state.start_date) === 'object' && _typeof(this.state.end_date) === 'object' && this.state.end_date > this.state.start_date ? '$' + listing.day_rate * Math.round((this.state.end_date - this.state.start_date) / (1000 * 60 * 60 * 24)) : ""
	                  )
	                )
	              )
	            ),
	            _react2.default.createElement(
	              _reactRouter.Link,
	              { className: this.state.success ? "book disabled" : "book", onClick: this.handleSubmit },
	              this.state.success ? "Booked!" : "Book!"
	            ),
	            _react2.default.createElement('br', null),
	            _react2.default.createElement('br', null),
	            _react2.default.createElement('br', null),
	            _react2.default.createElement('br', null),
	            this.renderErrors(),
	            this.state.success ? _react2.default.createElement(
	              _reactRouter.Link,
	              { to: 'rentals', className: 'success-booking' },
	              'Thank you! Booking successfull!',
	              _react2.default.createElement('br', null),
	              _react2.default.createElement('br', null),
	              'Click here to review!'
	            ) : "",
	            _react2.default.createElement('br', null),
	            _react2.default.createElement('br', null),
	            _react2.default.createElement(
	              'b',
	              { className: 'listing-sub-header' },
	              'These dates have been taken:'
	            ),
	            _react2.default.createElement(
	              _reactAddonsCssTransitionGroup2.default,
	              {
	                transitionName: 'example',
	                transitionAppear: true,
	                transitionAppearTimeout: 1000,
	                transitionEnterTimeout: 1000,
	                transitionLeaveTimeout: 600 },
	              this.rentalDates()
	            )
	          )
	        );
	      }
	      return main;
	    }
	  }]);
	
	  return ListingShow;
	}(_react2.default.Component);
	
	exports.default = ListingShow;

/***/ },
/* 608 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(609);

/***/ },
/* 609 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(4);
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var React = __webpack_require__(2);
	
	var ReactTransitionGroup = __webpack_require__(610);
	var ReactCSSTransitionGroupChild = __webpack_require__(613);
	
	function createTransitionTimeoutPropValidator(transitionType) {
	  var timeoutPropName = 'transition' + transitionType + 'Timeout';
	  var enabledPropName = 'transition' + transitionType;
	
	  return function (props) {
	    // If the transition is enabled
	    if (props[enabledPropName]) {
	      // If no timeout duration is provided
	      if (props[timeoutPropName] == null) {
	        return new Error(timeoutPropName + ' wasn\'t supplied to ReactCSSTransitionGroup: ' + 'this can cause unreliable animations and won\'t be supported in ' + 'a future version of React. See ' + 'https://fb.me/react-animation-transition-group-timeout for more ' + 'information.');
	
	        // If the duration isn't a number
	      } else if (typeof props[timeoutPropName] !== 'number') {
	        return new Error(timeoutPropName + ' must be a number (in milliseconds)');
	      }
	    }
	  };
	}
	
	/**
	 * An easy way to perform CSS transitions and animations when a React component
	 * enters or leaves the DOM.
	 * See https://facebook.github.io/react/docs/animation.html#high-level-api-reactcsstransitiongroup
	 */
	
	var ReactCSSTransitionGroup = function (_React$Component) {
	  _inherits(ReactCSSTransitionGroup, _React$Component);
	
	  function ReactCSSTransitionGroup() {
	    var _temp, _this, _ret;
	
	    _classCallCheck(this, ReactCSSTransitionGroup);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this._wrapChild = function (child) {
	      // We need to provide this childFactory so that
	      // ReactCSSTransitionGroupChild can receive updates to name, enter, and
	      // leave while it is leaving.
	      return React.createElement(ReactCSSTransitionGroupChild, {
	        name: _this.props.transitionName,
	        appear: _this.props.transitionAppear,
	        enter: _this.props.transitionEnter,
	        leave: _this.props.transitionLeave,
	        appearTimeout: _this.props.transitionAppearTimeout,
	        enterTimeout: _this.props.transitionEnterTimeout,
	        leaveTimeout: _this.props.transitionLeaveTimeout
	      }, child);
	    }, _temp), _possibleConstructorReturn(_this, _ret);
	  }
	
	  ReactCSSTransitionGroup.prototype.render = function render() {
	    return React.createElement(ReactTransitionGroup, _assign({}, this.props, { childFactory: this._wrapChild }));
	  };
	
	  return ReactCSSTransitionGroup;
	}(React.Component);
	
	ReactCSSTransitionGroup.displayName = 'ReactCSSTransitionGroup';
	ReactCSSTransitionGroup.propTypes = {
	  transitionName: ReactCSSTransitionGroupChild.propTypes.name,
	
	  transitionAppear: React.PropTypes.bool,
	  transitionEnter: React.PropTypes.bool,
	  transitionLeave: React.PropTypes.bool,
	  transitionAppearTimeout: createTransitionTimeoutPropValidator('Appear'),
	  transitionEnterTimeout: createTransitionTimeoutPropValidator('Enter'),
	  transitionLeaveTimeout: createTransitionTimeoutPropValidator('Leave')
	};
	ReactCSSTransitionGroup.defaultProps = {
	  transitionAppear: false,
	  transitionEnter: true,
	  transitionLeave: true
	};
	
	
	module.exports = ReactCSSTransitionGroup;

/***/ },
/* 610 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(4);
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var React = __webpack_require__(2);
	var ReactTransitionChildMapping = __webpack_require__(611);
	
	var emptyFunction = __webpack_require__(12);
	
	/**
	 * A basis for animations. When children are declaratively added or removed,
	 * special lifecycle hooks are called.
	 * See https://facebook.github.io/react/docs/animation.html#low-level-api-reacttransitiongroup
	 */
	
	var ReactTransitionGroup = function (_React$Component) {
	  _inherits(ReactTransitionGroup, _React$Component);
	
	  function ReactTransitionGroup() {
	    var _temp, _this, _ret;
	
	    _classCallCheck(this, ReactTransitionGroup);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.state = {
	      // TODO: can we get useful debug information to show at this point?
	      children: ReactTransitionChildMapping.getChildMapping(_this.props.children)
	    }, _this.performAppear = function (key) {
	      _this.currentlyTransitioningKeys[key] = true;
	
	      var component = _this.refs[key];
	
	      if (component.componentWillAppear) {
	        component.componentWillAppear(_this._handleDoneAppearing.bind(_this, key));
	      } else {
	        _this._handleDoneAppearing(key);
	      }
	    }, _this._handleDoneAppearing = function (key) {
	      var component = _this.refs[key];
	      if (component.componentDidAppear) {
	        component.componentDidAppear();
	      }
	
	      delete _this.currentlyTransitioningKeys[key];
	
	      var currentChildMapping = ReactTransitionChildMapping.getChildMapping(_this.props.children);
	
	      if (!currentChildMapping || !currentChildMapping.hasOwnProperty(key)) {
	        // This was removed before it had fully appeared. Remove it.
	        _this.performLeave(key);
	      }
	    }, _this.performEnter = function (key) {
	      _this.currentlyTransitioningKeys[key] = true;
	
	      var component = _this.refs[key];
	
	      if (component.componentWillEnter) {
	        component.componentWillEnter(_this._handleDoneEntering.bind(_this, key));
	      } else {
	        _this._handleDoneEntering(key);
	      }
	    }, _this._handleDoneEntering = function (key) {
	      var component = _this.refs[key];
	      if (component.componentDidEnter) {
	        component.componentDidEnter();
	      }
	
	      delete _this.currentlyTransitioningKeys[key];
	
	      var currentChildMapping = ReactTransitionChildMapping.getChildMapping(_this.props.children);
	
	      if (!currentChildMapping || !currentChildMapping.hasOwnProperty(key)) {
	        // This was removed before it had fully entered. Remove it.
	        _this.performLeave(key);
	      }
	    }, _this.performLeave = function (key) {
	      _this.currentlyTransitioningKeys[key] = true;
	
	      var component = _this.refs[key];
	      if (component.componentWillLeave) {
	        component.componentWillLeave(_this._handleDoneLeaving.bind(_this, key));
	      } else {
	        // Note that this is somewhat dangerous b/c it calls setState()
	        // again, effectively mutating the component before all the work
	        // is done.
	        _this._handleDoneLeaving(key);
	      }
	    }, _this._handleDoneLeaving = function (key) {
	      var component = _this.refs[key];
	
	      if (component.componentDidLeave) {
	        component.componentDidLeave();
	      }
	
	      delete _this.currentlyTransitioningKeys[key];
	
	      var currentChildMapping = ReactTransitionChildMapping.getChildMapping(_this.props.children);
	
	      if (currentChildMapping && currentChildMapping.hasOwnProperty(key)) {
	        // This entered again before it fully left. Add it again.
	        _this.performEnter(key);
	      } else {
	        _this.setState(function (state) {
	          var newChildren = _assign({}, state.children);
	          delete newChildren[key];
	          return { children: newChildren };
	        });
	      }
	    }, _temp), _possibleConstructorReturn(_this, _ret);
	  }
	
	  ReactTransitionGroup.prototype.componentWillMount = function componentWillMount() {
	    this.currentlyTransitioningKeys = {};
	    this.keysToEnter = [];
	    this.keysToLeave = [];
	  };
	
	  ReactTransitionGroup.prototype.componentDidMount = function componentDidMount() {
	    var initialChildMapping = this.state.children;
	    for (var key in initialChildMapping) {
	      if (initialChildMapping[key]) {
	        this.performAppear(key);
	      }
	    }
	  };
	
	  ReactTransitionGroup.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
	    var nextChildMapping = ReactTransitionChildMapping.getChildMapping(nextProps.children);
	    var prevChildMapping = this.state.children;
	
	    this.setState({
	      children: ReactTransitionChildMapping.mergeChildMappings(prevChildMapping, nextChildMapping)
	    });
	
	    var key;
	
	    for (key in nextChildMapping) {
	      var hasPrev = prevChildMapping && prevChildMapping.hasOwnProperty(key);
	      if (nextChildMapping[key] && !hasPrev && !this.currentlyTransitioningKeys[key]) {
	        this.keysToEnter.push(key);
	      }
	    }
	
	    for (key in prevChildMapping) {
	      var hasNext = nextChildMapping && nextChildMapping.hasOwnProperty(key);
	      if (prevChildMapping[key] && !hasNext && !this.currentlyTransitioningKeys[key]) {
	        this.keysToLeave.push(key);
	      }
	    }
	
	    // If we want to someday check for reordering, we could do it here.
	  };
	
	  ReactTransitionGroup.prototype.componentDidUpdate = function componentDidUpdate() {
	    var keysToEnter = this.keysToEnter;
	    this.keysToEnter = [];
	    keysToEnter.forEach(this.performEnter);
	
	    var keysToLeave = this.keysToLeave;
	    this.keysToLeave = [];
	    keysToLeave.forEach(this.performLeave);
	  };
	
	  ReactTransitionGroup.prototype.render = function render() {
	    // TODO: we could get rid of the need for the wrapper node
	    // by cloning a single child
	    var childrenToRender = [];
	    for (var key in this.state.children) {
	      var child = this.state.children[key];
	      if (child) {
	        // You may need to apply reactive updates to a child as it is leaving.
	        // The normal React way to do it won't work since the child will have
	        // already been removed. In case you need this behavior you can provide
	        // a childFactory function to wrap every child, even the ones that are
	        // leaving.
	        childrenToRender.push(React.cloneElement(this.props.childFactory(child), { ref: key, key: key }));
	      }
	    }
	
	    // Do not forward ReactTransitionGroup props to primitive DOM nodes
	    var props = _assign({}, this.props);
	    delete props.transitionLeave;
	    delete props.transitionName;
	    delete props.transitionAppear;
	    delete props.transitionEnter;
	    delete props.childFactory;
	    delete props.transitionLeaveTimeout;
	    delete props.transitionEnterTimeout;
	    delete props.transitionAppearTimeout;
	    delete props.component;
	
	    return React.createElement(this.props.component, props, childrenToRender);
	  };
	
	  return ReactTransitionGroup;
	}(React.Component);
	
	ReactTransitionGroup.displayName = 'ReactTransitionGroup';
	ReactTransitionGroup.propTypes = {
	  component: React.PropTypes.any,
	  childFactory: React.PropTypes.func
	};
	ReactTransitionGroup.defaultProps = {
	  component: 'span',
	  childFactory: emptyFunction.thatReturnsArgument
	};
	
	
	module.exports = ReactTransitionGroup;

/***/ },
/* 611 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var flattenChildren = __webpack_require__(612);
	
	var ReactTransitionChildMapping = {
	  /**
	   * Given `this.props.children`, return an object mapping key to child. Just
	   * simple syntactic sugar around flattenChildren().
	   *
	   * @param {*} children `this.props.children`
	   * @param {number=} selfDebugID Optional debugID of the current internal instance.
	   * @return {object} Mapping of key to child
	   */
	  getChildMapping: function (children, selfDebugID) {
	    if (!children) {
	      return children;
	    }
	
	    if (process.env.NODE_ENV !== 'production') {
	      return flattenChildren(children, selfDebugID);
	    }
	
	    return flattenChildren(children);
	  },
	
	  /**
	   * When you're adding or removing children some may be added or removed in the
	   * same render pass. We want to show *both* since we want to simultaneously
	   * animate elements in and out. This function takes a previous set of keys
	   * and a new set of keys and merges them with its best guess of the correct
	   * ordering. In the future we may expose some of the utilities in
	   * ReactMultiChild to make this easy, but for now React itself does not
	   * directly have this concept of the union of prevChildren and nextChildren
	   * so we implement it here.
	   *
	   * @param {object} prev prev children as returned from
	   * `ReactTransitionChildMapping.getChildMapping()`.
	   * @param {object} next next children as returned from
	   * `ReactTransitionChildMapping.getChildMapping()`.
	   * @return {object} a key set that contains all keys in `prev` and all keys
	   * in `next` in a reasonable order.
	   */
	  mergeChildMappings: function (prev, next) {
	    prev = prev || {};
	    next = next || {};
	
	    function getValueForKey(key) {
	      if (next.hasOwnProperty(key)) {
	        return next[key];
	      } else {
	        return prev[key];
	      }
	    }
	
	    // For each key of `next`, the list of keys to insert before that key in
	    // the combined list
	    var nextKeysPending = {};
	
	    var pendingKeys = [];
	    for (var prevKey in prev) {
	      if (next.hasOwnProperty(prevKey)) {
	        if (pendingKeys.length) {
	          nextKeysPending[prevKey] = pendingKeys;
	          pendingKeys = [];
	        }
	      } else {
	        pendingKeys.push(prevKey);
	      }
	    }
	
	    var i;
	    var childMapping = {};
	    for (var nextKey in next) {
	      if (nextKeysPending.hasOwnProperty(nextKey)) {
	        for (i = 0; i < nextKeysPending[nextKey].length; i++) {
	          var pendingNextKey = nextKeysPending[nextKey][i];
	          childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);
	        }
	      }
	      childMapping[nextKey] = getValueForKey(nextKey);
	    }
	
	    // Finally, add the keys which didn't appear before any key in `next`
	    for (i = 0; i < pendingKeys.length; i++) {
	      childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);
	    }
	
	    return childMapping;
	  }
	};
	
	module.exports = ReactTransitionChildMapping;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 612 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var KeyEscapeUtils = __webpack_require__(17);
	var traverseAllChildren = __webpack_require__(15);
	var warning = __webpack_require__(11);
	
	var ReactComponentTreeHook;
	
	if (typeof process !== 'undefined' && process.env && process.env.NODE_ENV === 'test') {
	  // Temporary hack.
	  // Inline requires don't work well with Jest:
	  // https://github.com/facebook/react/issues/7240
	  // Remove the inline requires when we don't need them anymore:
	  // https://github.com/facebook/react/pull/7178
	  ReactComponentTreeHook = __webpack_require__(26);
	}
	
	/**
	 * @param {function} traverseContext Context passed through traversal.
	 * @param {?ReactComponent} child React child component.
	 * @param {!string} name String name of key path to child.
	 * @param {number=} selfDebugID Optional debugID of the current internal instance.
	 */
	function flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID) {
	  // We found a component instance.
	  if (traverseContext && typeof traverseContext === 'object') {
	    var result = traverseContext;
	    var keyUnique = result[name] === undefined;
	    if (process.env.NODE_ENV !== 'production') {
	      if (!ReactComponentTreeHook) {
	        ReactComponentTreeHook = __webpack_require__(26);
	      }
	      if (!keyUnique) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.%s', KeyEscapeUtils.unescape(name), ReactComponentTreeHook.getStackAddendumByID(selfDebugID)) : void 0;
	      }
	    }
	    if (keyUnique && child != null) {
	      result[name] = child;
	    }
	  }
	}
	
	/**
	 * Flattens children that are typically specified as `props.children`. Any null
	 * children will not be included in the resulting object.
	 * @return {!object} flattened children keyed by name.
	 */
	function flattenChildren(children, selfDebugID) {
	  if (children == null) {
	    return children;
	  }
	  var result = {};
	
	  if (process.env.NODE_ENV !== 'production') {
	    traverseAllChildren(children, function (traverseContext, child, name) {
	      return flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID);
	    }, result);
	  } else {
	    traverseAllChildren(children, flattenSingleChildIntoContext, result);
	  }
	  return result;
	}
	
	module.exports = flattenChildren;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 613 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var React = __webpack_require__(2);
	var ReactAddonsDOMDependencies = __webpack_require__(614);
	
	var CSSCore = __webpack_require__(619);
	var ReactTransitionEvents = __webpack_require__(620);
	
	var onlyChild = __webpack_require__(31);
	
	var TICK = 17;
	
	var ReactCSSTransitionGroupChild = React.createClass({
	  displayName: 'ReactCSSTransitionGroupChild',
	
	  propTypes: {
	    name: React.PropTypes.oneOfType([React.PropTypes.string, React.PropTypes.shape({
	      enter: React.PropTypes.string,
	      leave: React.PropTypes.string,
	      active: React.PropTypes.string
	    }), React.PropTypes.shape({
	      enter: React.PropTypes.string,
	      enterActive: React.PropTypes.string,
	      leave: React.PropTypes.string,
	      leaveActive: React.PropTypes.string,
	      appear: React.PropTypes.string,
	      appearActive: React.PropTypes.string
	    })]).isRequired,
	
	    // Once we require timeouts to be specified, we can remove the
	    // boolean flags (appear etc.) and just accept a number
	    // or a bool for the timeout flags (appearTimeout etc.)
	    appear: React.PropTypes.bool,
	    enter: React.PropTypes.bool,
	    leave: React.PropTypes.bool,
	    appearTimeout: React.PropTypes.number,
	    enterTimeout: React.PropTypes.number,
	    leaveTimeout: React.PropTypes.number
	  },
	
	  transition: function (animationType, finishCallback, userSpecifiedDelay) {
	    var node = ReactAddonsDOMDependencies.getReactDOM().findDOMNode(this);
	
	    if (!node) {
	      if (finishCallback) {
	        finishCallback();
	      }
	      return;
	    }
	
	    var className = this.props.name[animationType] || this.props.name + '-' + animationType;
	    var activeClassName = this.props.name[animationType + 'Active'] || className + '-active';
	    var timeout = null;
	
	    var endListener = function (e) {
	      if (e && e.target !== node) {
	        return;
	      }
	
	      clearTimeout(timeout);
	
	      CSSCore.removeClass(node, className);
	      CSSCore.removeClass(node, activeClassName);
	
	      ReactTransitionEvents.removeEndEventListener(node, endListener);
	
	      // Usually this optional callback is used for informing an owner of
	      // a leave animation and telling it to remove the child.
	      if (finishCallback) {
	        finishCallback();
	      }
	    };
	
	    CSSCore.addClass(node, className);
	
	    // Need to do this to actually trigger a transition.
	    this.queueClassAndNode(activeClassName, node);
	
	    // If the user specified a timeout delay.
	    if (userSpecifiedDelay) {
	      // Clean-up the animation after the specified delay
	      timeout = setTimeout(endListener, userSpecifiedDelay);
	      this.transitionTimeouts.push(timeout);
	    } else {
	      // DEPRECATED: this listener will be removed in a future version of react
	      ReactTransitionEvents.addEndEventListener(node, endListener);
	    }
	  },
	
	  queueClassAndNode: function (className, node) {
	    this.classNameAndNodeQueue.push({
	      className: className,
	      node: node
	    });
	
	    if (!this.timeout) {
	      this.timeout = setTimeout(this.flushClassNameAndNodeQueue, TICK);
	    }
	  },
	
	  flushClassNameAndNodeQueue: function () {
	    if (this.isMounted()) {
	      this.classNameAndNodeQueue.forEach(function (obj) {
	        CSSCore.addClass(obj.node, obj.className);
	      });
	    }
	    this.classNameAndNodeQueue.length = 0;
	    this.timeout = null;
	  },
	
	  componentWillMount: function () {
	    this.classNameAndNodeQueue = [];
	    this.transitionTimeouts = [];
	  },
	
	  componentWillUnmount: function () {
	    if (this.timeout) {
	      clearTimeout(this.timeout);
	    }
	    this.transitionTimeouts.forEach(function (timeout) {
	      clearTimeout(timeout);
	    });
	
	    this.classNameAndNodeQueue.length = 0;
	  },
	
	  componentWillAppear: function (done) {
	    if (this.props.appear) {
	      this.transition('appear', done, this.props.appearTimeout);
	    } else {
	      done();
	    }
	  },
	
	  componentWillEnter: function (done) {
	    if (this.props.enter) {
	      this.transition('enter', done, this.props.enterTimeout);
	    } else {
	      done();
	    }
	  },
	
	  componentWillLeave: function (done) {
	    if (this.props.leave) {
	      this.transition('leave', done, this.props.leaveTimeout);
	    } else {
	      done();
	    }
	  },
	
	  render: function () {
	    return onlyChild(this.props.children);
	  }
	});
	
	module.exports = ReactCSSTransitionGroupChild;

/***/ },
/* 614 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var ReactDOM = __webpack_require__(33);
	
	exports.getReactDOM = function () {
	  return ReactDOM;
	};
	
	if (process.env.NODE_ENV !== 'production') {
	  var ReactPerf;
	  var ReactTestUtils;
	
	  exports.getReactPerf = function () {
	    if (!ReactPerf) {
	      ReactPerf = __webpack_require__(615);
	    }
	    return ReactPerf;
	  };
	
	  exports.getReactTestUtils = function () {
	    if (!ReactTestUtils) {
	      ReactTestUtils = __webpack_require__(616);
	    }
	    return ReactTestUtils;
	  };
	}
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 615 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2016-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(4);
	
	var _extends = _assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var ReactDebugTool = __webpack_require__(63);
	var warning = __webpack_require__(11);
	var alreadyWarned = false;
	
	function roundFloat(val) {
	  var base = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;
	
	  var n = Math.pow(10, base);
	  return Math.floor(val * n) / n;
	}
	
	// Flow type definition of console.table is too strict right now, see
	// https://github.com/facebook/flow/pull/2353 for updates
	function consoleTable(table) {
	  console.table(table);
	}
	
	function warnInProduction() {
	  if (alreadyWarned) {
	    return;
	  }
	  alreadyWarned = true;
	  if (typeof console !== 'undefined') {
	    console.error('ReactPerf is not supported in the production builds of React. ' + 'To collect measurements, please use the development build of React instead.');
	  }
	}
	
	function getLastMeasurements() {
	  if (!(process.env.NODE_ENV !== 'production')) {
	    warnInProduction();
	    return [];
	  }
	
	  return ReactDebugTool.getFlushHistory();
	}
	
	function getExclusive() {
	  var flushHistory = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getLastMeasurements();
	
	  if (!(process.env.NODE_ENV !== 'production')) {
	    warnInProduction();
	    return [];
	  }
	
	  var aggregatedStats = {};
	  var affectedIDs = {};
	
	  function updateAggregatedStats(treeSnapshot, instanceID, timerType, applyUpdate) {
	    var displayName = treeSnapshot[instanceID].displayName;
	
	    var key = displayName;
	    var stats = aggregatedStats[key];
	    if (!stats) {
	      affectedIDs[key] = {};
	      stats = aggregatedStats[key] = {
	        key: key,
	        instanceCount: 0,
	        counts: {},
	        durations: {},
	        totalDuration: 0
	      };
	    }
	    if (!stats.durations[timerType]) {
	      stats.durations[timerType] = 0;
	    }
	    if (!stats.counts[timerType]) {
	      stats.counts[timerType] = 0;
	    }
	    affectedIDs[key][instanceID] = true;
	    applyUpdate(stats);
	  }
	
	  flushHistory.forEach(function (flush) {
	    var measurements = flush.measurements,
	        treeSnapshot = flush.treeSnapshot;
	
	    measurements.forEach(function (measurement) {
	      var duration = measurement.duration,
	          instanceID = measurement.instanceID,
	          timerType = measurement.timerType;
	
	      updateAggregatedStats(treeSnapshot, instanceID, timerType, function (stats) {
	        stats.totalDuration += duration;
	        stats.durations[timerType] += duration;
	        stats.counts[timerType]++;
	      });
	    });
	  });
	
	  return Object.keys(aggregatedStats).map(function (key) {
	    return _extends({}, aggregatedStats[key], {
	      instanceCount: Object.keys(affectedIDs[key]).length
	    });
	  }).sort(function (a, b) {
	    return b.totalDuration - a.totalDuration;
	  });
	}
	
	function getInclusive() {
	  var flushHistory = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getLastMeasurements();
	
	  if (!(process.env.NODE_ENV !== 'production')) {
	    warnInProduction();
	    return [];
	  }
	
	  var aggregatedStats = {};
	  var affectedIDs = {};
	
	  function updateAggregatedStats(treeSnapshot, instanceID, applyUpdate) {
	    var _treeSnapshot$instanc = treeSnapshot[instanceID],
	        displayName = _treeSnapshot$instanc.displayName,
	        ownerID = _treeSnapshot$instanc.ownerID;
	
	    var owner = treeSnapshot[ownerID];
	    var key = (owner ? owner.displayName + ' > ' : '') + displayName;
	    var stats = aggregatedStats[key];
	    if (!stats) {
	      affectedIDs[key] = {};
	      stats = aggregatedStats[key] = {
	        key: key,
	        instanceCount: 0,
	        inclusiveRenderDuration: 0,
	        renderCount: 0
	      };
	    }
	    affectedIDs[key][instanceID] = true;
	    applyUpdate(stats);
	  }
	
	  var isCompositeByID = {};
	  flushHistory.forEach(function (flush) {
	    var measurements = flush.measurements;
	
	    measurements.forEach(function (measurement) {
	      var instanceID = measurement.instanceID,
	          timerType = measurement.timerType;
	
	      if (timerType !== 'render') {
	        return;
	      }
	      isCompositeByID[instanceID] = true;
	    });
	  });
	
	  flushHistory.forEach(function (flush) {
	    var measurements = flush.measurements,
	        treeSnapshot = flush.treeSnapshot;
	
	    measurements.forEach(function (measurement) {
	      var duration = measurement.duration,
	          instanceID = measurement.instanceID,
	          timerType = measurement.timerType;
	
	      if (timerType !== 'render') {
	        return;
	      }
	      updateAggregatedStats(treeSnapshot, instanceID, function (stats) {
	        stats.renderCount++;
	      });
	      var nextParentID = instanceID;
	      while (nextParentID) {
	        // As we traverse parents, only count inclusive time towards composites.
	        // We know something is a composite if its render() was called.
	        if (isCompositeByID[nextParentID]) {
	          updateAggregatedStats(treeSnapshot, nextParentID, function (stats) {
	            stats.inclusiveRenderDuration += duration;
	          });
	        }
	        nextParentID = treeSnapshot[nextParentID].parentID;
	      }
	    });
	  });
	
	  return Object.keys(aggregatedStats).map(function (key) {
	    return _extends({}, aggregatedStats[key], {
	      instanceCount: Object.keys(affectedIDs[key]).length
	    });
	  }).sort(function (a, b) {
	    return b.inclusiveRenderDuration - a.inclusiveRenderDuration;
	  });
	}
	
	function getWasted() {
	  var flushHistory = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getLastMeasurements();
	
	  if (!(process.env.NODE_ENV !== 'production')) {
	    warnInProduction();
	    return [];
	  }
	
	  var aggregatedStats = {};
	  var affectedIDs = {};
	
	  function updateAggregatedStats(treeSnapshot, instanceID, applyUpdate) {
	    var _treeSnapshot$instanc2 = treeSnapshot[instanceID],
	        displayName = _treeSnapshot$instanc2.displayName,
	        ownerID = _treeSnapshot$instanc2.ownerID;
	
	    var owner = treeSnapshot[ownerID];
	    var key = (owner ? owner.displayName + ' > ' : '') + displayName;
	    var stats = aggregatedStats[key];
	    if (!stats) {
	      affectedIDs[key] = {};
	      stats = aggregatedStats[key] = {
	        key: key,
	        instanceCount: 0,
	        inclusiveRenderDuration: 0,
	        renderCount: 0
	      };
	    }
	    affectedIDs[key][instanceID] = true;
	    applyUpdate(stats);
	  }
	
	  flushHistory.forEach(function (flush) {
	    var measurements = flush.measurements,
	        treeSnapshot = flush.treeSnapshot,
	        operations = flush.operations;
	
	    var isDefinitelyNotWastedByID = {};
	
	    // Find host components associated with an operation in this batch.
	    // Mark all components in their parent tree as definitely not wasted.
	    operations.forEach(function (operation) {
	      var instanceID = operation.instanceID;
	
	      var nextParentID = instanceID;
	      while (nextParentID) {
	        isDefinitelyNotWastedByID[nextParentID] = true;
	        nextParentID = treeSnapshot[nextParentID].parentID;
	      }
	    });
	
	    // Find composite components that rendered in this batch.
	    // These are potential candidates for being wasted renders.
	    var renderedCompositeIDs = {};
	    measurements.forEach(function (measurement) {
	      var instanceID = measurement.instanceID,
	          timerType = measurement.timerType;
	
	      if (timerType !== 'render') {
	        return;
	      }
	      renderedCompositeIDs[instanceID] = true;
	    });
	
	    measurements.forEach(function (measurement) {
	      var duration = measurement.duration,
	          instanceID = measurement.instanceID,
	          timerType = measurement.timerType;
	
	      if (timerType !== 'render') {
	        return;
	      }
	
	      // If there was a DOM update below this component, or it has just been
	      // mounted, its render() is not considered wasted.
	      var updateCount = treeSnapshot[instanceID].updateCount;
	
	      if (isDefinitelyNotWastedByID[instanceID] || updateCount === 0) {
	        return;
	      }
	
	      // We consider this render() wasted.
	      updateAggregatedStats(treeSnapshot, instanceID, function (stats) {
	        stats.renderCount++;
	      });
	
	      var nextParentID = instanceID;
	      while (nextParentID) {
	        // Any parents rendered during this batch are considered wasted
	        // unless we previously marked them as dirty.
	        var isWasted = renderedCompositeIDs[nextParentID] && !isDefinitelyNotWastedByID[nextParentID];
	        if (isWasted) {
	          updateAggregatedStats(treeSnapshot, nextParentID, function (stats) {
	            stats.inclusiveRenderDuration += duration;
	          });
	        }
	        nextParentID = treeSnapshot[nextParentID].parentID;
	      }
	    });
	  });
	
	  return Object.keys(aggregatedStats).map(function (key) {
	    return _extends({}, aggregatedStats[key], {
	      instanceCount: Object.keys(affectedIDs[key]).length
	    });
	  }).sort(function (a, b) {
	    return b.inclusiveRenderDuration - a.inclusiveRenderDuration;
	  });
	}
	
	function getOperations() {
	  var flushHistory = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getLastMeasurements();
	
	  if (!(process.env.NODE_ENV !== 'production')) {
	    warnInProduction();
	    return [];
	  }
	
	  var stats = [];
	  flushHistory.forEach(function (flush, flushIndex) {
	    var operations = flush.operations,
	        treeSnapshot = flush.treeSnapshot;
	
	    operations.forEach(function (operation) {
	      var instanceID = operation.instanceID,
	          type = operation.type,
	          payload = operation.payload;
	      var _treeSnapshot$instanc3 = treeSnapshot[instanceID],
	          displayName = _treeSnapshot$instanc3.displayName,
	          ownerID = _treeSnapshot$instanc3.ownerID;
	
	      var owner = treeSnapshot[ownerID];
	      var key = (owner ? owner.displayName + ' > ' : '') + displayName;
	
	      stats.push({
	        flushIndex: flushIndex,
	        instanceID: instanceID,
	        key: key,
	        type: type,
	        ownerID: ownerID,
	        payload: payload
	      });
	    });
	  });
	  return stats;
	}
	
	function printExclusive(flushHistory) {
	  if (!(process.env.NODE_ENV !== 'production')) {
	    warnInProduction();
	    return;
	  }
	
	  var stats = getExclusive(flushHistory);
	  var table = stats.map(function (item) {
	    var key = item.key,
	        instanceCount = item.instanceCount,
	        totalDuration = item.totalDuration;
	
	    var renderCount = item.counts.render || 0;
	    var renderDuration = item.durations.render || 0;
	    return {
	      'Component': key,
	      'Total time (ms)': roundFloat(totalDuration),
	      'Instance count': instanceCount,
	      'Total render time (ms)': roundFloat(renderDuration),
	      'Average render time (ms)': renderCount ? roundFloat(renderDuration / renderCount) : undefined,
	      'Render count': renderCount,
	      'Total lifecycle time (ms)': roundFloat(totalDuration - renderDuration)
	    };
	  });
	  consoleTable(table);
	}
	
	function printInclusive(flushHistory) {
	  if (!(process.env.NODE_ENV !== 'production')) {
	    warnInProduction();
	    return;
	  }
	
	  var stats = getInclusive(flushHistory);
	  var table = stats.map(function (item) {
	    var key = item.key,
	        instanceCount = item.instanceCount,
	        inclusiveRenderDuration = item.inclusiveRenderDuration,
	        renderCount = item.renderCount;
	
	    return {
	      'Owner > Component': key,
	      'Inclusive render time (ms)': roundFloat(inclusiveRenderDuration),
	      'Instance count': instanceCount,
	      'Render count': renderCount
	    };
	  });
	  consoleTable(table);
	}
	
	function printWasted(flushHistory) {
	  if (!(process.env.NODE_ENV !== 'production')) {
	    warnInProduction();
	    return;
	  }
	
	  var stats = getWasted(flushHistory);
	  var table = stats.map(function (item) {
	    var key = item.key,
	        instanceCount = item.instanceCount,
	        inclusiveRenderDuration = item.inclusiveRenderDuration,
	        renderCount = item.renderCount;
	
	    return {
	      'Owner > Component': key,
	      'Inclusive wasted time (ms)': roundFloat(inclusiveRenderDuration),
	      'Instance count': instanceCount,
	      'Render count': renderCount
	    };
	  });
	  consoleTable(table);
	}
	
	function printOperations(flushHistory) {
	  if (!(process.env.NODE_ENV !== 'production')) {
	    warnInProduction();
	    return;
	  }
	
	  var stats = getOperations(flushHistory);
	  var table = stats.map(function (stat) {
	    return {
	      'Owner > Node': stat.key,
	      'Operation': stat.type,
	      'Payload': typeof stat.payload === 'object' ? JSON.stringify(stat.payload) : stat.payload,
	      'Flush index': stat.flushIndex,
	      'Owner Component ID': stat.ownerID,
	      'DOM Component ID': stat.instanceID
	    };
	  });
	  consoleTable(table);
	}
	
	var warnedAboutPrintDOM = false;
	function printDOM(measurements) {
	  process.env.NODE_ENV !== 'production' ? warning(warnedAboutPrintDOM, '`ReactPerf.printDOM(...)` is deprecated. Use ' + '`ReactPerf.printOperations(...)` instead.') : void 0;
	  warnedAboutPrintDOM = true;
	  return printOperations(measurements);
	}
	
	var warnedAboutGetMeasurementsSummaryMap = false;
	function getMeasurementsSummaryMap(measurements) {
	  process.env.NODE_ENV !== 'production' ? warning(warnedAboutGetMeasurementsSummaryMap, '`ReactPerf.getMeasurementsSummaryMap(...)` is deprecated. Use ' + '`ReactPerf.getWasted(...)` instead.') : void 0;
	  warnedAboutGetMeasurementsSummaryMap = true;
	  return getWasted(measurements);
	}
	
	function start() {
	  if (!(process.env.NODE_ENV !== 'production')) {
	    warnInProduction();
	    return;
	  }
	
	  ReactDebugTool.beginProfiling();
	}
	
	function stop() {
	  if (!(process.env.NODE_ENV !== 'production')) {
	    warnInProduction();
	    return;
	  }
	
	  ReactDebugTool.endProfiling();
	}
	
	function isRunning() {
	  if (!(process.env.NODE_ENV !== 'production')) {
	    warnInProduction();
	    return false;
	  }
	
	  return ReactDebugTool.isProfiling();
	}
	
	var ReactPerfAnalysis = {
	  getLastMeasurements: getLastMeasurements,
	  getExclusive: getExclusive,
	  getInclusive: getInclusive,
	  getWasted: getWasted,
	  getOperations: getOperations,
	  printExclusive: printExclusive,
	  printInclusive: printInclusive,
	  printWasted: printWasted,
	  printOperations: printOperations,
	  start: start,
	  stop: stop,
	  isRunning: isRunning,
	  // Deprecated:
	  printDOM: printDOM,
	  getMeasurementsSummaryMap: getMeasurementsSummaryMap
	};
	
	module.exports = ReactPerfAnalysis;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 616 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(35),
	    _assign = __webpack_require__(4);
	
	var EventConstants = __webpack_require__(617);
	var EventPluginHub = __webpack_require__(42);
	var EventPluginRegistry = __webpack_require__(43);
	var EventPropagators = __webpack_require__(41);
	var React = __webpack_require__(2);
	var ReactDOM = __webpack_require__(33);
	var ReactDOMComponentTree = __webpack_require__(34);
	var ReactBrowserEventEmitter = __webpack_require__(105);
	var ReactInstanceMap = __webpack_require__(116);
	var ReactUpdates = __webpack_require__(56);
	var SyntheticEvent = __webpack_require__(53);
	var ReactShallowRenderer = __webpack_require__(618);
	
	var findDOMNode = __webpack_require__(172);
	var invariant = __webpack_require__(8);
	
	var topLevelTypes = EventConstants.topLevelTypes;
	
	function Event(suffix) {}
	
	/**
	 * @class ReactTestUtils
	 */
	
	function findAllInRenderedTreeInternal(inst, test) {
	  if (!inst || !inst.getPublicInstance) {
	    return [];
	  }
	  var publicInst = inst.getPublicInstance();
	  var ret = test(publicInst) ? [publicInst] : [];
	  var currentElement = inst._currentElement;
	  if (ReactTestUtils.isDOMComponent(publicInst)) {
	    var renderedChildren = inst._renderedChildren;
	    var key;
	    for (key in renderedChildren) {
	      if (!renderedChildren.hasOwnProperty(key)) {
	        continue;
	      }
	      ret = ret.concat(findAllInRenderedTreeInternal(renderedChildren[key], test));
	    }
	  } else if (React.isValidElement(currentElement) && typeof currentElement.type === 'function') {
	    ret = ret.concat(findAllInRenderedTreeInternal(inst._renderedComponent, test));
	  }
	  return ret;
	}
	
	/**
	 * Utilities for making it easy to test React components.
	 *
	 * See https://facebook.github.io/react/docs/test-utils.html
	 *
	 * Todo: Support the entire DOM.scry query syntax. For now, these simple
	 * utilities will suffice for testing purposes.
	 * @lends ReactTestUtils
	 */
	var ReactTestUtils = {
	  renderIntoDocument: function (element) {
	    var div = document.createElement('div');
	    // None of our tests actually require attaching the container to the
	    // DOM, and doing so creates a mess that we rely on test isolation to
	    // clean up, so we're going to stop honoring the name of this method
	    // (and probably rename it eventually) if no problems arise.
	    // document.documentElement.appendChild(div);
	    return ReactDOM.render(element, div);
	  },
	
	  isElement: function (element) {
	    return React.isValidElement(element);
	  },
	
	  isElementOfType: function (inst, convenienceConstructor) {
	    return React.isValidElement(inst) && inst.type === convenienceConstructor;
	  },
	
	  isDOMComponent: function (inst) {
	    return !!(inst && inst.nodeType === 1 && inst.tagName);
	  },
	
	  isDOMComponentElement: function (inst) {
	    return !!(inst && React.isValidElement(inst) && !!inst.tagName);
	  },
	
	  isCompositeComponent: function (inst) {
	    if (ReactTestUtils.isDOMComponent(inst)) {
	      // Accessing inst.setState warns; just return false as that'll be what
	      // this returns when we have DOM nodes as refs directly
	      return false;
	    }
	    return inst != null && typeof inst.render === 'function' && typeof inst.setState === 'function';
	  },
	
	  isCompositeComponentWithType: function (inst, type) {
	    if (!ReactTestUtils.isCompositeComponent(inst)) {
	      return false;
	    }
	    var internalInstance = ReactInstanceMap.get(inst);
	    var constructor = internalInstance._currentElement.type;
	
	    return constructor === type;
	  },
	
	  isCompositeComponentElement: function (inst) {
	    if (!React.isValidElement(inst)) {
	      return false;
	    }
	    // We check the prototype of the type that will get mounted, not the
	    // instance itself. This is a future proof way of duck typing.
	    var prototype = inst.type.prototype;
	    return typeof prototype.render === 'function' && typeof prototype.setState === 'function';
	  },
	
	  isCompositeComponentElementWithType: function (inst, type) {
	    var internalInstance = ReactInstanceMap.get(inst);
	    var constructor = internalInstance._currentElement.type;
	
	    return !!(ReactTestUtils.isCompositeComponentElement(inst) && constructor === type);
	  },
	
	  getRenderedChildOfCompositeComponent: function (inst) {
	    if (!ReactTestUtils.isCompositeComponent(inst)) {
	      return null;
	    }
	    var internalInstance = ReactInstanceMap.get(inst);
	    return internalInstance._renderedComponent.getPublicInstance();
	  },
	
	  findAllInRenderedTree: function (inst, test) {
	    if (!inst) {
	      return [];
	    }
	    !ReactTestUtils.isCompositeComponent(inst) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'findAllInRenderedTree(...): instance must be a composite component') : _prodInvariant('10') : void 0;
	    return findAllInRenderedTreeInternal(ReactInstanceMap.get(inst), test);
	  },
	
	  /**
	   * Finds all instance of components in the rendered tree that are DOM
	   * components with the class name matching `className`.
	   * @return {array} an array of all the matches.
	   */
	  scryRenderedDOMComponentsWithClass: function (root, classNames) {
	    return ReactTestUtils.findAllInRenderedTree(root, function (inst) {
	      if (ReactTestUtils.isDOMComponent(inst)) {
	        var className = inst.className;
	        if (typeof className !== 'string') {
	          // SVG, probably.
	          className = inst.getAttribute('class') || '';
	        }
	        var classList = className.split(/\s+/);
	
	        if (!Array.isArray(classNames)) {
	          !(classNames !== undefined) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'TestUtils.scryRenderedDOMComponentsWithClass expects a className as a second argument.') : _prodInvariant('11') : void 0;
	          classNames = classNames.split(/\s+/);
	        }
	        return classNames.every(function (name) {
	          return classList.indexOf(name) !== -1;
	        });
	      }
	      return false;
	    });
	  },
	
	  /**
	   * Like scryRenderedDOMComponentsWithClass but expects there to be one result,
	   * and returns that one result, or throws exception if there is any other
	   * number of matches besides one.
	   * @return {!ReactDOMComponent} The one match.
	   */
	  findRenderedDOMComponentWithClass: function (root, className) {
	    var all = ReactTestUtils.scryRenderedDOMComponentsWithClass(root, className);
	    if (all.length !== 1) {
	      throw new Error('Did not find exactly one match (found: ' + all.length + ') ' + 'for class:' + className);
	    }
	    return all[0];
	  },
	
	  /**
	   * Finds all instance of components in the rendered tree that are DOM
	   * components with the tag name matching `tagName`.
	   * @return {array} an array of all the matches.
	   */
	  scryRenderedDOMComponentsWithTag: function (root, tagName) {
	    return ReactTestUtils.findAllInRenderedTree(root, function (inst) {
	      return ReactTestUtils.isDOMComponent(inst) && inst.tagName.toUpperCase() === tagName.toUpperCase();
	    });
	  },
	
	  /**
	   * Like scryRenderedDOMComponentsWithTag but expects there to be one result,
	   * and returns that one result, or throws exception if there is any other
	   * number of matches besides one.
	   * @return {!ReactDOMComponent} The one match.
	   */
	  findRenderedDOMComponentWithTag: function (root, tagName) {
	    var all = ReactTestUtils.scryRenderedDOMComponentsWithTag(root, tagName);
	    if (all.length !== 1) {
	      throw new Error('Did not find exactly one match (found: ' + all.length + ') ' + 'for tag:' + tagName);
	    }
	    return all[0];
	  },
	
	  /**
	   * Finds all instances of components with type equal to `componentType`.
	   * @return {array} an array of all the matches.
	   */
	  scryRenderedComponentsWithType: function (root, componentType) {
	    return ReactTestUtils.findAllInRenderedTree(root, function (inst) {
	      return ReactTestUtils.isCompositeComponentWithType(inst, componentType);
	    });
	  },
	
	  /**
	   * Same as `scryRenderedComponentsWithType` but expects there to be one result
	   * and returns that one result, or throws exception if there is any other
	   * number of matches besides one.
	   * @return {!ReactComponent} The one match.
	   */
	  findRenderedComponentWithType: function (root, componentType) {
	    var all = ReactTestUtils.scryRenderedComponentsWithType(root, componentType);
	    if (all.length !== 1) {
	      throw new Error('Did not find exactly one match (found: ' + all.length + ') ' + 'for componentType:' + componentType);
	    }
	    return all[0];
	  },
	
	  /**
	   * Pass a mocked component module to this method to augment it with
	   * useful methods that allow it to be used as a dummy React component.
	   * Instead of rendering as usual, the component will become a simple
	   * <div> containing any provided children.
	   *
	   * @param {object} module the mock function object exported from a
	   *                        module that defines the component to be mocked
	   * @param {?string} mockTagName optional dummy root tag name to return
	   *                              from render method (overrides
	   *                              module.mockTagName if provided)
	   * @return {object} the ReactTestUtils object (for chaining)
	   */
	  mockComponent: function (module, mockTagName) {
	    mockTagName = mockTagName || module.mockTagName || 'div';
	
	    module.prototype.render.mockImplementation(function () {
	      return React.createElement(mockTagName, null, this.props.children);
	    });
	
	    return this;
	  },
	
	  /**
	   * Simulates a top level event being dispatched from a raw event that occurred
	   * on an `Element` node.
	   * @param {Object} topLevelType A type from `EventConstants.topLevelTypes`
	   * @param {!Element} node The dom to simulate an event occurring on.
	   * @param {?Event} fakeNativeEvent Fake native event to use in SyntheticEvent.
	   */
	  simulateNativeEventOnNode: function (topLevelType, node, fakeNativeEvent) {
	    fakeNativeEvent.target = node;
	    ReactBrowserEventEmitter.ReactEventListener.dispatchEvent(topLevelType, fakeNativeEvent);
	  },
	
	  /**
	   * Simulates a top level event being dispatched from a raw event that occurred
	   * on the `ReactDOMComponent` `comp`.
	   * @param {Object} topLevelType A type from `EventConstants.topLevelTypes`.
	   * @param {!ReactDOMComponent} comp
	   * @param {?Event} fakeNativeEvent Fake native event to use in SyntheticEvent.
	   */
	  simulateNativeEventOnDOMComponent: function (topLevelType, comp, fakeNativeEvent) {
	    ReactTestUtils.simulateNativeEventOnNode(topLevelType, findDOMNode(comp), fakeNativeEvent);
	  },
	
	  nativeTouchData: function (x, y) {
	    return {
	      touches: [{ pageX: x, pageY: y }]
	    };
	  },
	
	  createRenderer: function () {
	    return new ReactShallowRenderer();
	  },
	
	  Simulate: null,
	  SimulateNative: {}
	};
	
	/**
	 * Exports:
	 *
	 * - `ReactTestUtils.Simulate.click(Element/ReactDOMComponent)`
	 * - `ReactTestUtils.Simulate.mouseMove(Element/ReactDOMComponent)`
	 * - `ReactTestUtils.Simulate.change(Element/ReactDOMComponent)`
	 * - ... (All keys from event plugin `eventTypes` objects)
	 */
	function makeSimulator(eventType) {
	  return function (domComponentOrNode, eventData) {
	    var node;
	    !!React.isValidElement(domComponentOrNode) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'TestUtils.Simulate expects a component instance and not a ReactElement.TestUtils.Simulate will not work if you are using shallow rendering.') : _prodInvariant('14') : void 0;
	    if (ReactTestUtils.isDOMComponent(domComponentOrNode)) {
	      node = findDOMNode(domComponentOrNode);
	    } else if (domComponentOrNode.tagName) {
	      node = domComponentOrNode;
	    }
	
	    var dispatchConfig = EventPluginRegistry.eventNameDispatchConfigs[eventType];
	
	    var fakeNativeEvent = new Event();
	    fakeNativeEvent.target = node;
	    fakeNativeEvent.type = eventType.toLowerCase();
	
	    // We don't use SyntheticEvent.getPooled in order to not have to worry about
	    // properly destroying any properties assigned from `eventData` upon release
	    var event = new SyntheticEvent(dispatchConfig, ReactDOMComponentTree.getInstanceFromNode(node), fakeNativeEvent, node);
	    // Since we aren't using pooling, always persist the event. This will make
	    // sure it's marked and won't warn when setting additional properties.
	    event.persist();
	    _assign(event, eventData);
	
	    if (dispatchConfig.phasedRegistrationNames) {
	      EventPropagators.accumulateTwoPhaseDispatches(event);
	    } else {
	      EventPropagators.accumulateDirectDispatches(event);
	    }
	
	    ReactUpdates.batchedUpdates(function () {
	      EventPluginHub.enqueueEvents(event);
	      EventPluginHub.processEventQueue(true);
	    });
	  };
	}
	
	function buildSimulators() {
	  ReactTestUtils.Simulate = {};
	
	  var eventType;
	  for (eventType in EventPluginRegistry.eventNameDispatchConfigs) {
	    /**
	     * @param {!Element|ReactDOMComponent} domComponentOrNode
	     * @param {?object} eventData Fake event data to use in SyntheticEvent.
	     */
	    ReactTestUtils.Simulate[eventType] = makeSimulator(eventType);
	  }
	}
	
	// Rebuild ReactTestUtils.Simulate whenever event plugins are injected
	var oldInjectEventPluginOrder = EventPluginHub.injection.injectEventPluginOrder;
	EventPluginHub.injection.injectEventPluginOrder = function () {
	  oldInjectEventPluginOrder.apply(this, arguments);
	  buildSimulators();
	};
	var oldInjectEventPlugins = EventPluginHub.injection.injectEventPluginsByName;
	EventPluginHub.injection.injectEventPluginsByName = function () {
	  oldInjectEventPlugins.apply(this, arguments);
	  buildSimulators();
	};
	
	buildSimulators();
	
	/**
	 * Exports:
	 *
	 * - `ReactTestUtils.SimulateNative.click(Element/ReactDOMComponent)`
	 * - `ReactTestUtils.SimulateNative.mouseMove(Element/ReactDOMComponent)`
	 * - `ReactTestUtils.SimulateNative.mouseIn/ReactDOMComponent)`
	 * - `ReactTestUtils.SimulateNative.mouseOut(Element/ReactDOMComponent)`
	 * - ... (All keys from `EventConstants.topLevelTypes`)
	 *
	 * Note: Top level event types are a subset of the entire set of handler types
	 * (which include a broader set of "synthetic" events). For example, onDragDone
	 * is a synthetic event. Except when testing an event plugin or React's event
	 * handling code specifically, you probably want to use ReactTestUtils.Simulate
	 * to dispatch synthetic events.
	 */
	
	function makeNativeSimulator(eventType) {
	  return function (domComponentOrNode, nativeEventData) {
	    var fakeNativeEvent = new Event(eventType);
	    _assign(fakeNativeEvent, nativeEventData);
	    if (ReactTestUtils.isDOMComponent(domComponentOrNode)) {
	      ReactTestUtils.simulateNativeEventOnDOMComponent(eventType, domComponentOrNode, fakeNativeEvent);
	    } else if (domComponentOrNode.tagName) {
	      // Will allow on actual dom nodes.
	      ReactTestUtils.simulateNativeEventOnNode(eventType, domComponentOrNode, fakeNativeEvent);
	    }
	  };
	}
	
	Object.keys(topLevelTypes).forEach(function (eventType) {
	  // Event type is stored as 'topClick' - we transform that to 'click'
	  var convenienceName = eventType.indexOf('top') === 0 ? eventType.charAt(3).toLowerCase() + eventType.substr(4) : eventType;
	  /**
	   * @param {!Element|ReactDOMComponent} domComponentOrNode
	   * @param {?Event} nativeEventData Fake native event to use in SyntheticEvent.
	   */
	  ReactTestUtils.SimulateNative[convenienceName] = makeNativeSimulator(eventType);
	});
	
	module.exports = ReactTestUtils;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 617 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	/**
	 * Types of raw signals from the browser caught at the top level.
	 */
	var topLevelTypes = {
	  topAbort: null,
	  topAnimationEnd: null,
	  topAnimationIteration: null,
	  topAnimationStart: null,
	  topBlur: null,
	  topCanPlay: null,
	  topCanPlayThrough: null,
	  topChange: null,
	  topClick: null,
	  topCompositionEnd: null,
	  topCompositionStart: null,
	  topCompositionUpdate: null,
	  topContextMenu: null,
	  topCopy: null,
	  topCut: null,
	  topDoubleClick: null,
	  topDrag: null,
	  topDragEnd: null,
	  topDragEnter: null,
	  topDragExit: null,
	  topDragLeave: null,
	  topDragOver: null,
	  topDragStart: null,
	  topDrop: null,
	  topDurationChange: null,
	  topEmptied: null,
	  topEncrypted: null,
	  topEnded: null,
	  topError: null,
	  topFocus: null,
	  topInput: null,
	  topInvalid: null,
	  topKeyDown: null,
	  topKeyPress: null,
	  topKeyUp: null,
	  topLoad: null,
	  topLoadedData: null,
	  topLoadedMetadata: null,
	  topLoadStart: null,
	  topMouseDown: null,
	  topMouseMove: null,
	  topMouseOut: null,
	  topMouseOver: null,
	  topMouseUp: null,
	  topPaste: null,
	  topPause: null,
	  topPlay: null,
	  topPlaying: null,
	  topProgress: null,
	  topRateChange: null,
	  topReset: null,
	  topScroll: null,
	  topSeeked: null,
	  topSeeking: null,
	  topSelectionChange: null,
	  topStalled: null,
	  topSubmit: null,
	  topSuspend: null,
	  topTextInput: null,
	  topTimeUpdate: null,
	  topTouchCancel: null,
	  topTouchEnd: null,
	  topTouchMove: null,
	  topTouchStart: null,
	  topTransitionEnd: null,
	  topVolumeChange: null,
	  topWaiting: null,
	  topWheel: null
	};
	
	var EventConstants = {
	  topLevelTypes: topLevelTypes
	};
	
	module.exports = EventConstants;

/***/ },
/* 618 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(35),
	    _assign = __webpack_require__(4);
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var React = __webpack_require__(2);
	var ReactDefaultInjection = __webpack_require__(38);
	var ReactCompositeComponent = __webpack_require__(119);
	var ReactReconciler = __webpack_require__(59);
	var ReactUpdates = __webpack_require__(56);
	
	var emptyObject = __webpack_require__(20);
	var getNextDebugID = __webpack_require__(127);
	var invariant = __webpack_require__(8);
	
	var NoopInternalComponent = function () {
	  function NoopInternalComponent(element) {
	    _classCallCheck(this, NoopInternalComponent);
	
	    this._renderedOutput = element;
	    this._currentElement = element;
	
	    if (process.env.NODE_ENV !== 'production') {
	      this._debugID = getNextDebugID();
	    }
	  }
	
	  NoopInternalComponent.prototype.mountComponent = function mountComponent() {};
	
	  NoopInternalComponent.prototype.receiveComponent = function receiveComponent(element) {
	    this._renderedOutput = element;
	    this._currentElement = element;
	  };
	
	  NoopInternalComponent.prototype.unmountComponent = function unmountComponent() {};
	
	  NoopInternalComponent.prototype.getHostNode = function getHostNode() {
	    return undefined;
	  };
	
	  NoopInternalComponent.prototype.getPublicInstance = function getPublicInstance() {
	    return null;
	  };
	
	  return NoopInternalComponent;
	}();
	
	var ShallowComponentWrapper = function (element) {
	  // TODO: Consolidate with instantiateReactComponent
	  if (process.env.NODE_ENV !== 'production') {
	    this._debugID = getNextDebugID();
	  }
	
	  this.construct(element);
	};
	_assign(ShallowComponentWrapper.prototype, ReactCompositeComponent, {
	  _constructComponent: ReactCompositeComponent._constructComponentWithoutOwner,
	  _instantiateReactComponent: function (element) {
	    return new NoopInternalComponent(element);
	  },
	  _replaceNodeWithMarkup: function () {},
	  _renderValidatedComponent: ReactCompositeComponent._renderValidatedComponentWithoutOwnerOrContext
	});
	
	function _batchedRender(renderer, element, context) {
	  var transaction = ReactUpdates.ReactReconcileTransaction.getPooled(true);
	  renderer._render(element, transaction, context);
	  ReactUpdates.ReactReconcileTransaction.release(transaction);
	}
	
	var ReactShallowRenderer = function () {
	  function ReactShallowRenderer() {
	    _classCallCheck(this, ReactShallowRenderer);
	
	    this._instance = null;
	  }
	
	  ReactShallowRenderer.prototype.getMountedInstance = function getMountedInstance() {
	    return this._instance ? this._instance._instance : null;
	  };
	
	  ReactShallowRenderer.prototype.render = function render(element, context) {
	    // Ensure we've done the default injections. This might not be true in the
	    // case of a simple test that only requires React and the TestUtils in
	    // conjunction with an inline-requires transform.
	    ReactDefaultInjection.inject();
	
	    !React.isValidElement(element) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactShallowRenderer render(): Invalid component element.%s', typeof element === 'function' ? ' Instead of passing a component class, make sure to instantiate ' + 'it by passing it to React.createElement.' : '') : _prodInvariant('12', typeof element === 'function' ? ' Instead of passing a component class, make sure to instantiate ' + 'it by passing it to React.createElement.' : '') : void 0;
	    !(typeof element.type !== 'string') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactShallowRenderer render(): Shallow rendering works only with custom components, not primitives (%s). Instead of calling `.render(el)` and inspecting the rendered output, look at `el.props` directly instead.', element.type) : _prodInvariant('13', element.type) : void 0;
	
	    if (!context) {
	      context = emptyObject;
	    }
	    ReactUpdates.batchedUpdates(_batchedRender, this, element, context);
	
	    return this.getRenderOutput();
	  };
	
	  ReactShallowRenderer.prototype.getRenderOutput = function getRenderOutput() {
	    return this._instance && this._instance._renderedComponent && this._instance._renderedComponent._renderedOutput || null;
	  };
	
	  ReactShallowRenderer.prototype.unmount = function unmount() {
	    if (this._instance) {
	      ReactReconciler.unmountComponent(this._instance, false);
	    }
	  };
	
	  ReactShallowRenderer.prototype._render = function _render(element, transaction, context) {
	    if (this._instance) {
	      ReactReconciler.receiveComponent(this._instance, element, transaction, context);
	    } else {
	      var instance = new ShallowComponentWrapper(element);
	      ReactReconciler.mountComponent(instance, transaction, null, null, context, 0);
	      this._instance = instance;
	    }
	  };
	
	  return ReactShallowRenderer;
	}();
	
	module.exports = ReactShallowRenderer;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 619 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */
	
	var invariant = __webpack_require__(8);
	
	/**
	 * The CSSCore module specifies the API (and implements most of the methods)
	 * that should be used when dealing with the display of elements (via their
	 * CSS classes and visibility on screen. It is an API focused on mutating the
	 * display and not reading it as no logical state should be encoded in the
	 * display of elements.
	 */
	
	/* Slow implementation for browsers that don't natively support .matches() */
	function matchesSelector_SLOW(element, selector) {
	  var root = element;
	  while (root.parentNode) {
	    root = root.parentNode;
	  }
	
	  var all = root.querySelectorAll(selector);
	  return Array.prototype.indexOf.call(all, element) !== -1;
	}
	
	var CSSCore = {
	
	  /**
	   * Adds the class passed in to the element if it doesn't already have it.
	   *
	   * @param {DOMElement} element the element to set the class on
	   * @param {string} className the CSS className
	   * @return {DOMElement} the element passed in
	   */
	  addClass: function addClass(element, className) {
	    !!/\s/.test(className) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'CSSCore.addClass takes only a single class name. "%s" contains ' + 'multiple classes.', className) : invariant(false) : void 0;
	
	    if (className) {
	      if (element.classList) {
	        element.classList.add(className);
	      } else if (!CSSCore.hasClass(element, className)) {
	        element.className = element.className + ' ' + className;
	      }
	    }
	    return element;
	  },
	
	  /**
	   * Removes the class passed in from the element
	   *
	   * @param {DOMElement} element the element to set the class on
	   * @param {string} className the CSS className
	   * @return {DOMElement} the element passed in
	   */
	  removeClass: function removeClass(element, className) {
	    !!/\s/.test(className) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'CSSCore.removeClass takes only a single class name. "%s" contains ' + 'multiple classes.', className) : invariant(false) : void 0;
	
	    if (className) {
	      if (element.classList) {
	        element.classList.remove(className);
	      } else if (CSSCore.hasClass(element, className)) {
	        element.className = element.className.replace(new RegExp('(^|\\s)' + className + '(?:\\s|$)', 'g'), '$1').replace(/\s+/g, ' ') // multiple spaces to one
	        .replace(/^\s*|\s*$/g, ''); // trim the ends
	      }
	    }
	    return element;
	  },
	
	  /**
	   * Helper to add or remove a class from an element based on a condition.
	   *
	   * @param {DOMElement} element the element to set the class on
	   * @param {string} className the CSS className
	   * @param {*} bool condition to whether to add or remove the class
	   * @return {DOMElement} the element passed in
	   */
	  conditionClass: function conditionClass(element, className, bool) {
	    return (bool ? CSSCore.addClass : CSSCore.removeClass)(element, className);
	  },
	
	  /**
	   * Tests whether the element has the class specified.
	   *
	   * @param {DOMNode|DOMWindow} element the element to check the class on
	   * @param {string} className the CSS className
	   * @return {boolean} true if the element has the class, false if not
	   */
	  hasClass: function hasClass(element, className) {
	    !!/\s/.test(className) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'CSS.hasClass takes only a single class name.') : invariant(false) : void 0;
	    if (element.classList) {
	      return !!className && element.classList.contains(className);
	    }
	    return (' ' + element.className + ' ').indexOf(' ' + className + ' ') > -1;
	  },
	
	  /**
	   * Tests whether the element matches the selector specified
	   *
	   * @param {DOMNode|DOMWindow} element the element that we are querying
	   * @param {string} selector the CSS selector
	   * @return {boolean} true if the element matches the selector, false if not
	   */
	  matchesSelector: function matchesSelector(element, selector) {
	    var matchesImpl = element.matches || element.webkitMatchesSelector || element.mozMatchesSelector || element.msMatchesSelector || function (s) {
	      return matchesSelector_SLOW(element, s);
	    };
	    return matchesImpl.call(element, selector);
	  }
	
	};
	
	module.exports = CSSCore;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 620 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(48);
	
	var getVendorPrefixedEventName = __webpack_require__(107);
	
	var endEvents = [];
	
	function detectEvents() {
	  var animEnd = getVendorPrefixedEventName('animationend');
	  var transEnd = getVendorPrefixedEventName('transitionend');
	
	  if (animEnd) {
	    endEvents.push(animEnd);
	  }
	
	  if (transEnd) {
	    endEvents.push(transEnd);
	  }
	}
	
	if (ExecutionEnvironment.canUseDOM) {
	  detectEvents();
	}
	
	// We use the raw {add|remove}EventListener() call because EventListener
	// does not know how to remove event listeners and we really should
	// clean up. Also, these events are not triggered in older browsers
	// so we should be A-OK here.
	
	function addEventListener(node, eventName, eventListener) {
	  node.addEventListener(eventName, eventListener, false);
	}
	
	function removeEventListener(node, eventName, eventListener) {
	  node.removeEventListener(eventName, eventListener, false);
	}
	
	var ReactTransitionEvents = {
	  addEndEventListener: function (node, eventListener) {
	    if (endEvents.length === 0) {
	      // If CSS transitions are not supported, trigger an "end animation"
	      // event immediately.
	      window.setTimeout(eventListener, 0);
	      return;
	    }
	    endEvents.forEach(function (endEvent) {
	      addEventListener(node, endEvent, eventListener);
	    });
	  },
	
	  removeEndEventListener: function (node, eventListener) {
	    if (endEvents.length === 0) {
	      return;
	    }
	    endEvents.forEach(function (endEvent) {
	      removeEventListener(node, endEvent, eventListener);
	    });
	  }
	};
	
	module.exports = ReactTransitionEvents;

/***/ },
/* 621 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _reactRedux = __webpack_require__(309);
	
	var _user_listing = __webpack_require__(622);
	
	var _user_listing2 = _interopRequireDefault(_user_listing);
	
	var _current_user_actions = __webpack_require__(302);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var mapStateToProps = function mapStateToProps(state) {
	  return {
	    currentUserListings: state.currentUserListings
	  };
	};
	
	var mapDispatchToProps = function mapDispatchToProps(dispatch) {
	  return {
	    toggleListingActivity: function toggleListingActivity(id) {
	      return dispatch((0, _current_user_actions.toggleListingActivity)(id));
	    },
	    fetchUserListings: function fetchUserListings() {
	      return dispatch((0, _current_user_actions.fetchUserListings)());
	    }
	  };
	};
	
	exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(_user_listing2.default);

/***/ },
/* 622 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactRouter = __webpack_require__(326);
	
	var _belle = __webpack_require__(415);
	
	var _reactFontawesome = __webpack_require__(382);
	
	var _reactFontawesome2 = _interopRequireDefault(_reactFontawesome);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var UserListing = function (_React$Component) {
	  _inherits(UserListing, _React$Component);
	
	  function UserListing(props) {
	    _classCallCheck(this, UserListing);
	
	    return _possibleConstructorReturn(this, (UserListing.__proto__ || Object.getPrototypeOf(UserListing)).call(this, props));
	  }
	
	  _createClass(UserListing, [{
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      this.props.fetchUserListings();
	    }
	  }, {
	    key: 'componentWillUnmount',
	    value: function componentWillUnmount() {}
	  }, {
	    key: 'toggleActiveStatus',
	    value: function toggleActiveStatus(field) {
	      return null;
	    }
	  }, {
	    key: 'redirect',
	    value: function redirect(route) {
	      this.props.router.replace(route);
	    }
	  }, {
	    key: 'handleSubmit',
	    value: function handleSubmit() {
	      return null;
	    }
	  }, {
	    key: 'renderListings',
	    value: function renderListings() {
	      var listings = this.props.currentUserListings;
	      if (listings) {
	        listings = Object.keys(listings).map(function (key) {
	          var rentals = listings[key].map(function (rental) {
	            return _react2.default.createElement(
	              'div',
	              { className: 'sub-rental', key: rental.id },
	              'Lessee: \xA0\xA0\xA0\xA0\xA0\xA0\xA0\xA0\xA0\xA0\xA0\xA0\xA0\xA0',
	              _react2.default.createElement(
	                'b',
	                { className: 'listing-sub-header ' },
	                rental.lessee
	              ),
	              _react2.default.createElement('br', null),
	              'Start Date: \xA0\xA0\xA0\xA0\xA0\xA0\xA0\xA0',
	              _react2.default.createElement(
	                'b',
	                { className: 'listing-sub-header ' },
	                rental.start_date
	              ),
	              _react2.default.createElement('br', null),
	              'End Date: \xA0\xA0\xA0\xA0\xA0\xA0\xA0\xA0\xA0\xA0',
	              _react2.default.createElement(
	                'b',
	                { className: 'listing-sub-header ' },
	                rental.end_date
	              ),
	              _react2.default.createElement('br', null),
	              'Total Revenue: \xA0',
	              _react2.default.createElement(
	                'b',
	                { className: 'listing-sub-header ' },
	                '$',
	                rental.total
	              )
	            );
	          });
	          return _react2.default.createElement(
	            'div',
	            { className: 'userListing', key: key },
	            _react2.default.createElement(
	              'b',
	              { className: 'user-listing-sub-header ' },
	              _react2.default.createElement(
	                _reactRouter.Link,
	                { className: 'listing-sub-header', to: 'listings/' + key },
	                'These are your rentals for Listing ID#',
	                key
	              )
	            ),
	            _react2.default.createElement(
	              'div',
	              { className: 'sub-rentals' },
	              rentals
	            )
	          );
	        });
	      } else {
	        listings = _react2.default.createElement(
	          'div',
	          { className: 'userListing' },
	          _react2.default.createElement(
	            'div',
	            { className: 'sub-rentals' },
	            _react2.default.createElement(
	              'div',
	              { className: 'fjalla' },
	              'Loading ',
	              _react2.default.createElement(_belle.Spinner, null)
	            )
	          )
	        );
	      }
	
	      return _react2.default.createElement(
	        'div',
	        { className: 'aside-current-user-listings' },
	        listings
	      );
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      return _react2.default.createElement(
	        'div',
	        { className: 'main' },
	        this.renderListings()
	      );
	    }
	  }]);
	
	  return UserListing;
	}(_react2.default.Component);
	
	exports.default = UserListing;

/***/ },
/* 623 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _reactRedux = __webpack_require__(309);
	
	var _user_rental = __webpack_require__(624);
	
	var _user_rental2 = _interopRequireDefault(_user_rental);
	
	var _current_user_actions = __webpack_require__(302);
	
	var _error_actions = __webpack_require__(204);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var mapStateToProps = function mapStateToProps(state) {
	  return {
	    currentUserRentals: state.currentUserRentals
	  };
	};
	
	var mapDispatchToProps = function mapDispatchToProps(dispatch) {
	  return {
	    fetchUserRentals: function fetchUserRentals() {
	      return dispatch((0, _current_user_actions.fetchUserRentals)());
	    },
	    submitReview: function submitReview(review) {
	      return dispatch((0, _current_user_actions.submitReview)(review));
	    }
	  };
	};
	
	exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(_user_rental2.default);

/***/ },
/* 624 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactRouter = __webpack_require__(326);
	
	var _belle = __webpack_require__(415);
	
	var _reactFontawesome = __webpack_require__(382);
	
	var _reactFontawesome2 = _interopRequireDefault(_reactFontawesome);
	
	var _rating_form = __webpack_require__(625);
	
	var _rating_form2 = _interopRequireDefault(_rating_form);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var UserRental = function (_React$Component) {
	  _inherits(UserRental, _React$Component);
	
	  function UserRental(props) {
	    _classCallCheck(this, UserRental);
	
	    return _possibleConstructorReturn(this, (UserRental.__proto__ || Object.getPrototypeOf(UserRental)).call(this, props));
	  }
	
	  _createClass(UserRental, [{
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      this.props.fetchUserRentals();
	    }
	  }, {
	    key: 'componentWillUnmount',
	    value: function componentWillUnmount() {}
	  }, {
	    key: 'redirect',
	    value: function redirect(route) {
	      this.props.router.replace(route);
	    }
	  }, {
	    key: 'renderRentals',
	    value: function renderRentals() {
	      var _this2 = this;
	
	      var rentals = void 0;
	      if (this.props.currentUserRentals) {
	        rentals = this.props.currentUserRentals.current_user.map(function (rental) {
	          var review = void 0;
	          if (rental.rating) {
	            review = _react2.default.createElement(
	              'div',
	              null,
	              _react2.default.createElement(
	                'li',
	                null,
	                'Rating: \xA0\xA0\xA0\xA0\xA0\xA0\xA0\xA0',
	                _react2.default.createElement(
	                  'b',
	                  { className: 'user-rental-sub-header' },
	                  rental.rating
	                )
	              ),
	              _react2.default.createElement(
	                'li',
	                null,
	                _react2.default.createElement('br', null),
	                'Review:',
	                _react2.default.createElement('br', null),
	                _react2.default.createElement(
	                  'b',
	                  { className: 'user-rental-sub-header' },
	                  rental.review
	                )
	              )
	            );
	          } else {
	            review = _react2.default.createElement(
	              'div',
	              null,
	              _react2.default.createElement(_rating_form2.default, { id: rental.id, submitReview: _this2.props.submitReview })
	            );
	          }
	          return _react2.default.createElement(
	            'div',
	            { className: 'current-user-rental', key: rental.id },
	            _react2.default.createElement(
	              'ul',
	              null,
	              _react2.default.createElement(
	                'li',
	                { className: 'user-rental-sub-header' },
	                'Rental ID# ',
	                rental.id,
	                ' from ',
	                _react2.default.createElement(
	                  _reactRouter.Link,
	                  { className: 'user-rental-sub-header', to: 'listings/' + rental.listing_id },
	                  'Listing #',
	                  rental.listing_id
	                )
	              ),
	              _react2.default.createElement(
	                'li',
	                null,
	                'Lessor: \xA0\xA0\xA0\xA0\xA0\xA0\xA0\xA0',
	                _react2.default.createElement(
	                  'b',
	                  { className: 'user-rental-sub-header' },
	                  rental.lessor
	                )
	              ),
	              _react2.default.createElement(
	                'li',
	                null,
	                'Start Date: \xA0\xA0',
	                _react2.default.createElement(
	                  'b',
	                  { className: 'user-rental-sub-header' },
	                  rental.start_date
	                )
	              ),
	              _react2.default.createElement(
	                'li',
	                null,
	                'End Date: \xA0\xA0\xA0\xA0',
	                _react2.default.createElement(
	                  'b',
	                  { className: 'user-rental-sub-header' },
	                  rental.end_date
	                )
	              ),
	              _react2.default.createElement(
	                'li',
	                null,
	                'Total: \xA0\xA0\xA0\xA0\xA0\xA0\xA0\xA0\xA0\xA0\xA0',
	                _react2.default.createElement(
	                  'b',
	                  { className: 'user-rental-sub-header' },
	                  rental.total
	                )
	              ),
	              review
	            )
	          );
	        });
	      } else {
	        rentals = _react2.default.createElement(
	          'div',
	          { className: 'fjalla' },
	          _react2.default.createElement('br', null),
	          'Loading ',
	          _react2.default.createElement(_belle.Spinner, null)
	        );
	      }
	      return rentals;
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      return _react2.default.createElement(
	        'div',
	        { className: 'main' },
	        _react2.default.createElement(
	          'div',
	          { className: 'current-user-rentals' },
	          this.renderRentals()
	        )
	      );
	    }
	  }]);
	
	  return UserRental;
	}(_react2.default.Component);
	
	exports.default = UserRental;

/***/ },
/* 625 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactRouter = __webpack_require__(326);
	
	var _belle = __webpack_require__(415);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var RatingForm = function (_React$Component) {
	  _inherits(RatingForm, _React$Component);
	
	  function RatingForm(props) {
	    _classCallCheck(this, RatingForm);
	
	    var _this = _possibleConstructorReturn(this, (RatingForm.__proto__ || Object.getPrototypeOf(RatingForm)).call(this, props));
	
	    _this.handleSubmit = _this.handleSubmit.bind(_this);
	    _this.logRating = _this.logRating.bind(_this);
	    _this.logReview = _this.logReview.bind(_this);
	    _this.state = { rental_id: _this.props.id, errors: [] };
	    return _this;
	  }
	
	  _createClass(RatingForm, [{
	    key: 'logRating',
	    value: function logRating(rating) {
	      this.setState({ "review": rating.value });
	    }
	  }, {
	    key: 'logReview',
	    value: function logReview(review) {
	      this.setState({ "review_text": review.target.value });
	    }
	  }, {
	    key: 'componentWillUnmount',
	    value: function componentWillUnmount() {
	      this.setState({ errors: [] });
	    }
	  }, {
	    key: 'renderErrors',
	    value: function renderErrors() {
	      if (this.state.errors.length > 0) {
	        return _react2.default.createElement(
	          'div',
	          { className: 'listing-errors' },
	          _react2.default.createElement(
	            'ul',
	            { className: 'listing-errors' },
	            this.state.errors.map(function (error, i) {
	              return _react2.default.createElement(
	                'li',
	                { key: 'error-' + i },
	                error
	              );
	            })
	          )
	        );
	      } else {
	        return null;
	      }
	    }
	  }, {
	    key: 'handleSubmit',
	    value: function handleSubmit() {
	      var _this2 = this;
	
	      this.props.submitReview({ review: this.state }).fail(function (errors) {
	        return _this2.setState({ errors: errors.responseJSON });
	      });
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      return _react2.default.createElement(
	        'div',
	        null,
	        _react2.default.createElement(
	          'b',
	          { className: 'grey' },
	          'Enter star rating below here...'
	        ),
	        _react2.default.createElement(_belle.Rating, { defaultValue: null,
	          className: 'rating-filter',
	          onUpdate: this.logRating }),
	        _react2.default.createElement(_belle.TextInput, { style: { minHeight: 80, "overflow-y": "auto", "border": "1px solid #a9a9ac", "padding": "10px", "padding-top": "0" }, onChange: this.logReview, placeholder: 'Enter review in here...', allowNewLine: true }),
	        _react2.default.createElement(
	          'button',
	          { className: 'review', onClick: this.handleSubmit },
	          'Submit Review!'
	        ),
	        this.renderErrors()
	      );
	    }
	  }]);
	
	  return RatingForm;
	}(_react2.default.Component);
	
	exports.default = RatingForm;

/***/ },
/* 626 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _reactRedux = __webpack_require__(309);
	
	var _user_rating = __webpack_require__(627);
	
	var _user_rating2 = _interopRequireDefault(_user_rating);
	
	var _current_user_actions = __webpack_require__(302);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var mapStateToProps = function mapStateToProps(state) {
	  return {
	    userProfile: state.userProfile
	  };
	};
	
	var mapDispatchToProps = function mapDispatchToProps(dispatch) {
	  return {
	    fetchUserProfile: function fetchUserProfile() {
	      return dispatch((0, _current_user_actions.fetchUserProfile)());
	    }
	  };
	};
	
	exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(_user_rating2.default);

/***/ },
/* 627 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactRouter = __webpack_require__(326);
	
	var _belle = __webpack_require__(415);
	
	var _reactFontawesome = __webpack_require__(382);
	
	var _reactFontawesome2 = _interopRequireDefault(_reactFontawesome);
	
	var _recharts = __webpack_require__(628);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var UserRating = function (_React$Component) {
	  _inherits(UserRating, _React$Component);
	
	  function UserRating(props) {
	    _classCallCheck(this, UserRating);
	
	    var _this = _possibleConstructorReturn(this, (UserRating.__proto__ || Object.getPrototypeOf(UserRating)).call(this, props));
	
	    _this.props.fetchUserProfile();
	    return _this;
	  }
	
	  _createClass(UserRating, [{
	    key: 'componentDidMount',
	    value: function componentDidMount() {}
	  }, {
	    key: 'redirect',
	    value: function redirect(route) {
	      this.props.router.replace(route);
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var data = [{ name: 'Five Star', value: this.props.userProfile.five_stars }, { name: 'Four Star', value: this.props.userProfile.four_stars }, { name: 'Three Star', value: this.props.userProfile.three_stars }, { name: 'Two Star', value: this.props.userProfile.two_stars }, { name: 'One Star', value: this.props.userProfile.one_stars }];
	      var COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#FF0000'];
	
	      var RADIAN = Math.PI / 180;
	      return _react2.default.createElement(
	        'div',
	        { className: 'main' },
	        _react2.default.createElement(
	          'div',
	          { className: 'aside' },
	          _react2.default.createElement(
	            'div',
	            { className: 'pie-total' },
	            this.props.userProfile.total_count,
	            ' Reviews',
	            _react2.default.createElement('br', null),
	            this.props.userProfile.average_rating,
	            ' Average'
	          ),
	          _react2.default.createElement(
	            _recharts.PieChart,
	            { width: 500, height: 500, onMouseEnter: this.onPieEnter },
	            _react2.default.createElement(
	              _recharts.Pie,
	              {
	                data: data,
	                cx: 250,
	                cy: 250,
	                innerRadius: 120,
	                outerRadius: 160,
	                fill: '#8884d8',
	                paddingAngle: 5 },
	              data.map(function (entry, index) {
	                return _react2.default.createElement(_recharts.Cell, { key: index, fill: COLORS[index % COLORS.length] });
	              })
	            )
	          )
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'aside' },
	          _react2.default.createElement(
	            'h1',
	            { className: 'rating-title' },
	            'Hello ',
	            this.props.userProfile.username,
	            '!'
	          ),
	          _react2.default.createElement('br', null),
	          _react2.default.createElement('br', null),
	          _react2.default.createElement('br', null),
	          _react2.default.createElement(
	            'h1',
	            { className: 'rating-title' },
	            'These are your stats:'
	          ),
	          _react2.default.createElement(
	            'table',
	            { className: 'rating-table' },
	            _react2.default.createElement(
	              'tbody',
	              null,
	              _react2.default.createElement(
	                'tr',
	                null,
	                _react2.default.createElement(
	                  'td',
	                  null,
	                  _react2.default.createElement(
	                    'b',
	                    { className: 'listing-sub-header' },
	                    'Number of Five Star Ratings:'
	                  )
	                ),
	                _react2.default.createElement(
	                  'td',
	                  null,
	                  _react2.default.createElement(
	                    'div',
	                    { className: 'blue color' },
	                    this.props.userProfile.five_stars
	                  )
	                )
	              ),
	              _react2.default.createElement(
	                'tr',
	                null,
	                _react2.default.createElement(
	                  'td',
	                  null,
	                  _react2.default.createElement(
	                    'b',
	                    { className: 'listing-sub-header' },
	                    'Number of Four Star Ratings:'
	                  )
	                ),
	                _react2.default.createElement(
	                  'td',
	                  null,
	                  _react2.default.createElement(
	                    'div',
	                    { className: 'green color' },
	                    this.props.userProfile.four_stars
	                  )
	                )
	              ),
	              _react2.default.createElement(
	                'tr',
	                null,
	                _react2.default.createElement(
	                  'td',
	                  null,
	                  _react2.default.createElement(
	                    'b',
	                    { className: 'listing-sub-header' },
	                    'Number of Three Star Ratings:'
	                  )
	                ),
	                _react2.default.createElement(
	                  'td',
	                  null,
	                  _react2.default.createElement(
	                    'div',
	                    { className: 'yellow color' },
	                    this.props.userProfile.three_stars
	                  )
	                )
	              ),
	              _react2.default.createElement(
	                'tr',
	                null,
	                _react2.default.createElement(
	                  'td',
	                  null,
	                  _react2.default.createElement(
	                    'b',
	                    { className: 'listing-sub-header' },
	                    'Number of Two Star Ratings:'
	                  )
	                ),
	                _react2.default.createElement(
	                  'td',
	                  null,
	                  _react2.default.createElement(
	                    'div',
	                    { className: 'orange color' },
	                    this.props.userProfile.two_stars
	                  )
	                )
	              ),
	              _react2.default.createElement(
	                'tr',
	                null,
	                _react2.default.createElement(
	                  'td',
	                  null,
	                  _react2.default.createElement(
	                    'b',
	                    { className: 'listing-sub-header' },
	                    'Number of One Star Ratings:'
	                  )
	                ),
	                _react2.default.createElement(
	                  'td',
	                  null,
	                  _react2.default.createElement(
	                    'div',
	                    { className: 'red color' },
	                    this.props.userProfile.one_stars
	                  )
	                )
	              )
	            )
	          )
	        )
	      );
	    }
	  }]);
	
	  return UserRating;
	}(_react2.default.Component);
	
	exports.default = UserRating;

/***/ },
/* 628 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.ComposedChart = exports.RadialBarChart = exports.AreaChart = exports.ScatterChart = exports.RadarChart = exports.Sankey = exports.Treemap = exports.PieChart = exports.BarChart = exports.LineChart = exports.ErrorBar = exports.ZAxis = exports.YAxis = exports.XAxis = exports.Scatter = exports.Bar = exports.Area = exports.Line = exports.CartesianGrid = exports.CartesianAxis = exports.ReferenceArea = exports.ReferenceDot = exports.ReferenceLine = exports.Brush = exports.RadialBar = exports.Radar = exports.Pie = exports.PolarAngleAxis = exports.PolarRadiusAxis = exports.PolarGrid = exports.Symbols = exports.Cross = exports.Dot = exports.Polygon = exports.Rectangle = exports.Curve = exports.Sector = exports.Text = exports.Cell = exports.ResponsiveContainer = exports.Tooltip = exports.Legend = exports.Layer = exports.Surface = undefined;
	
	__webpack_require__(629);
	
	var _Surface2 = __webpack_require__(669);
	
	var _Surface3 = _interopRequireDefault(_Surface2);
	
	var _Layer2 = __webpack_require__(747);
	
	var _Layer3 = _interopRequireDefault(_Layer2);
	
	var _Legend2 = __webpack_require__(748);
	
	var _Legend3 = _interopRequireDefault(_Legend2);
	
	var _Tooltip2 = __webpack_require__(753);
	
	var _Tooltip3 = _interopRequireDefault(_Tooltip2);
	
	var _ResponsiveContainer2 = __webpack_require__(780);
	
	var _ResponsiveContainer3 = _interopRequireDefault(_ResponsiveContainer2);
	
	var _Cell2 = __webpack_require__(788);
	
	var _Cell3 = _interopRequireDefault(_Cell2);
	
	var _Text2 = __webpack_require__(789);
	
	var _Text3 = _interopRequireDefault(_Text2);
	
	var _Sector2 = __webpack_require__(799);
	
	var _Sector3 = _interopRequireDefault(_Sector2);
	
	var _Curve2 = __webpack_require__(801);
	
	var _Curve3 = _interopRequireDefault(_Curve2);
	
	var _Rectangle2 = __webpack_require__(802);
	
	var _Rectangle3 = _interopRequireDefault(_Rectangle2);
	
	var _Polygon2 = __webpack_require__(803);
	
	var _Polygon3 = _interopRequireDefault(_Polygon2);
	
	var _Dot2 = __webpack_require__(804);
	
	var _Dot3 = _interopRequireDefault(_Dot2);
	
	var _Cross2 = __webpack_require__(805);
	
	var _Cross3 = _interopRequireDefault(_Cross2);
	
	var _Symbols2 = __webpack_require__(750);
	
	var _Symbols3 = _interopRequireDefault(_Symbols2);
	
	var _PolarGrid2 = __webpack_require__(806);
	
	var _PolarGrid3 = _interopRequireDefault(_PolarGrid2);
	
	var _PolarRadiusAxis2 = __webpack_require__(807);
	
	var _PolarRadiusAxis3 = _interopRequireDefault(_PolarRadiusAxis2);
	
	var _PolarAngleAxis2 = __webpack_require__(811);
	
	var _PolarAngleAxis3 = _interopRequireDefault(_PolarAngleAxis2);
	
	var _Pie2 = __webpack_require__(812);
	
	var _Pie3 = _interopRequireDefault(_Pie2);
	
	var _Radar2 = __webpack_require__(815);
	
	var _Radar3 = _interopRequireDefault(_Radar2);
	
	var _RadialBar2 = __webpack_require__(816);
	
	var _RadialBar3 = _interopRequireDefault(_RadialBar2);
	
	var _Brush2 = __webpack_require__(817);
	
	var _Brush3 = _interopRequireDefault(_Brush2);
	
	var _ReferenceLine2 = __webpack_require__(822);
	
	var _ReferenceLine3 = _interopRequireDefault(_ReferenceLine2);
	
	var _ReferenceDot2 = __webpack_require__(823);
	
	var _ReferenceDot3 = _interopRequireDefault(_ReferenceDot2);
	
	var _ReferenceArea2 = __webpack_require__(824);
	
	var _ReferenceArea3 = _interopRequireDefault(_ReferenceArea2);
	
	var _CartesianAxis2 = __webpack_require__(825);
	
	var _CartesianAxis3 = _interopRequireDefault(_CartesianAxis2);
	
	var _CartesianGrid2 = __webpack_require__(826);
	
	var _CartesianGrid3 = _interopRequireDefault(_CartesianGrid2);
	
	var _Line2 = __webpack_require__(827);
	
	var _Line3 = _interopRequireDefault(_Line2);
	
	var _Area2 = __webpack_require__(829);
	
	var _Area3 = _interopRequireDefault(_Area2);
	
	var _Bar2 = __webpack_require__(830);
	
	var _Bar3 = _interopRequireDefault(_Bar2);
	
	var _Scatter2 = __webpack_require__(831);
	
	var _Scatter3 = _interopRequireDefault(_Scatter2);
	
	var _XAxis2 = __webpack_require__(832);
	
	var _XAxis3 = _interopRequireDefault(_XAxis2);
	
	var _YAxis2 = __webpack_require__(833);
	
	var _YAxis3 = _interopRequireDefault(_YAxis2);
	
	var _ZAxis2 = __webpack_require__(834);
	
	var _ZAxis3 = _interopRequireDefault(_ZAxis2);
	
	var _ErrorBar2 = __webpack_require__(828);
	
	var _ErrorBar3 = _interopRequireDefault(_ErrorBar2);
	
	var _LineChart2 = __webpack_require__(835);
	
	var _LineChart3 = _interopRequireDefault(_LineChart2);
	
	var _BarChart2 = __webpack_require__(846);
	
	var _BarChart3 = _interopRequireDefault(_BarChart2);
	
	var _PieChart2 = __webpack_require__(847);
	
	var _PieChart3 = _interopRequireDefault(_PieChart2);
	
	var _Treemap2 = __webpack_require__(848);
	
	var _Treemap3 = _interopRequireDefault(_Treemap2);
	
	var _Sankey2 = __webpack_require__(849);
	
	var _Sankey3 = _interopRequireDefault(_Sankey2);
	
	var _RadarChart2 = __webpack_require__(854);
	
	var _RadarChart3 = _interopRequireDefault(_RadarChart2);
	
	var _ScatterChart2 = __webpack_require__(855);
	
	var _ScatterChart3 = _interopRequireDefault(_ScatterChart2);
	
	var _AreaChart2 = __webpack_require__(856);
	
	var _AreaChart3 = _interopRequireDefault(_AreaChart2);
	
	var _RadialBarChart2 = __webpack_require__(857);
	
	var _RadialBarChart3 = _interopRequireDefault(_RadialBarChart2);
	
	var _ComposedChart2 = __webpack_require__(858);
	
	var _ComposedChart3 = _interopRequireDefault(_ComposedChart2);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.Surface = _Surface3.default;
	exports.Layer = _Layer3.default;
	exports.Legend = _Legend3.default;
	exports.Tooltip = _Tooltip3.default;
	exports.ResponsiveContainer = _ResponsiveContainer3.default;
	exports.Cell = _Cell3.default;
	exports.Text = _Text3.default;
	exports.Sector = _Sector3.default;
	exports.Curve = _Curve3.default;
	exports.Rectangle = _Rectangle3.default;
	exports.Polygon = _Polygon3.default;
	exports.Dot = _Dot3.default;
	exports.Cross = _Cross3.default;
	exports.Symbols = _Symbols3.default;
	exports.PolarGrid = _PolarGrid3.default;
	exports.PolarRadiusAxis = _PolarRadiusAxis3.default;
	exports.PolarAngleAxis = _PolarAngleAxis3.default;
	exports.Pie = _Pie3.default;
	exports.Radar = _Radar3.default;
	exports.RadialBar = _RadialBar3.default;
	exports.Brush = _Brush3.default;
	exports.ReferenceLine = _ReferenceLine3.default;
	exports.ReferenceDot = _ReferenceDot3.default;
	exports.ReferenceArea = _ReferenceArea3.default;
	exports.CartesianAxis = _CartesianAxis3.default;
	exports.CartesianGrid = _CartesianGrid3.default;
	exports.Line = _Line3.default;
	exports.Area = _Area3.default;
	exports.Bar = _Bar3.default;
	exports.Scatter = _Scatter3.default;
	exports.XAxis = _XAxis3.default;
	exports.YAxis = _YAxis3.default;
	exports.ZAxis = _ZAxis3.default;
	exports.ErrorBar = _ErrorBar3.default;
	exports.LineChart = _LineChart3.default;
	exports.BarChart = _BarChart3.default;
	exports.PieChart = _PieChart3.default;
	exports.Treemap = _Treemap3.default;
	exports.Sankey = _Sankey3.default;
	exports.RadarChart = _RadarChart3.default;
	exports.ScatterChart = _ScatterChart3.default;
	exports.AreaChart = _AreaChart3.default;
	exports.RadialBarChart = _RadialBarChart3.default;
	exports.ComposedChart = _ComposedChart3.default;

/***/ },
/* 629 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	__webpack_require__(630);
	
	/* eslint no-proto: 0 */
	var testObject = {};
	
	if (!(Object.setPrototypeOf || testObject.__proto__)) {
	  (function () {
	    var nativeGetPrototypeOf = Object.getPrototypeOf;
	
	    Object.getPrototypeOf = function (object) {
	      if (object.__proto__) {
	        return object.__proto__;
	      }
	
	      return nativeGetPrototypeOf.call(Object, object);
	    };
	  })();
	}

/***/ },
/* 630 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(631);
	__webpack_require__(651);
	__webpack_require__(652);
	__webpack_require__(653);
	__webpack_require__(655);
	__webpack_require__(656);
	__webpack_require__(657);
	__webpack_require__(659);
	__webpack_require__(660);
	__webpack_require__(661);
	__webpack_require__(662);
	__webpack_require__(663);
	__webpack_require__(664);
	__webpack_require__(665);
	__webpack_require__(666);
	__webpack_require__(667);
	__webpack_require__(668);
	module.exports = __webpack_require__(634).Math;

/***/ },
/* 631 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.3 Math.acosh(x)
	var $export = __webpack_require__(632)
	  , log1p   = __webpack_require__(650)
	  , sqrt    = Math.sqrt
	  , $acosh  = Math.acosh;
	
	$export($export.S + $export.F * !($acosh
	  // V8 bug: https://code.google.com/p/v8/issues/detail?id=3509
	  && Math.floor($acosh(Number.MAX_VALUE)) == 710
	  // Tor Browser bug: Math.acosh(Infinity) -> NaN 
	  && $acosh(Infinity) == Infinity
	), 'Math', {
	  acosh: function acosh(x){
	    return (x = +x) < 1 ? NaN : x > 94906265.62425156
	      ? Math.log(x) + Math.LN2
	      : log1p(x - 1 + sqrt(x - 1) * sqrt(x + 1));
	  }
	});

/***/ },
/* 632 */
/***/ function(module, exports, __webpack_require__) {

	var global    = __webpack_require__(633)
	  , core      = __webpack_require__(634)
	  , hide      = __webpack_require__(635)
	  , redefine  = __webpack_require__(645)
	  , ctx       = __webpack_require__(648)
	  , PROTOTYPE = 'prototype';
	
	var $export = function(type, name, source){
	  var IS_FORCED = type & $export.F
	    , IS_GLOBAL = type & $export.G
	    , IS_STATIC = type & $export.S
	    , IS_PROTO  = type & $export.P
	    , IS_BIND   = type & $export.B
	    , target    = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE]
	    , exports   = IS_GLOBAL ? core : core[name] || (core[name] = {})
	    , expProto  = exports[PROTOTYPE] || (exports[PROTOTYPE] = {})
	    , key, own, out, exp;
	  if(IS_GLOBAL)source = name;
	  for(key in source){
	    // contains in native
	    own = !IS_FORCED && target && target[key] !== undefined;
	    // export native or passed
	    out = (own ? target : source)[key];
	    // bind timers to global for call from export context
	    exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
	    // extend global
	    if(target)redefine(target, key, out, type & $export.U);
	    // export
	    if(exports[key] != out)hide(exports, key, exp);
	    if(IS_PROTO && expProto[key] != out)expProto[key] = out;
	  }
	};
	global.core = core;
	// type bitmap
	$export.F = 1;   // forced
	$export.G = 2;   // global
	$export.S = 4;   // static
	$export.P = 8;   // proto
	$export.B = 16;  // bind
	$export.W = 32;  // wrap
	$export.U = 64;  // safe
	$export.R = 128; // real proto method for `library` 
	module.exports = $export;

/***/ },
/* 633 */
/***/ function(module, exports) {

	// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
	var global = module.exports = typeof window != 'undefined' && window.Math == Math
	  ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();
	if(typeof __g == 'number')__g = global; // eslint-disable-line no-undef

/***/ },
/* 634 */
/***/ function(module, exports) {

	var core = module.exports = {version: '2.4.0'};
	if(typeof __e == 'number')__e = core; // eslint-disable-line no-undef

/***/ },
/* 635 */
/***/ function(module, exports, __webpack_require__) {

	var dP         = __webpack_require__(636)
	  , createDesc = __webpack_require__(644);
	module.exports = __webpack_require__(640) ? function(object, key, value){
	  return dP.f(object, key, createDesc(1, value));
	} : function(object, key, value){
	  object[key] = value;
	  return object;
	};

/***/ },
/* 636 */
/***/ function(module, exports, __webpack_require__) {

	var anObject       = __webpack_require__(637)
	  , IE8_DOM_DEFINE = __webpack_require__(639)
	  , toPrimitive    = __webpack_require__(643)
	  , dP             = Object.defineProperty;
	
	exports.f = __webpack_require__(640) ? Object.defineProperty : function defineProperty(O, P, Attributes){
	  anObject(O);
	  P = toPrimitive(P, true);
	  anObject(Attributes);
	  if(IE8_DOM_DEFINE)try {
	    return dP(O, P, Attributes);
	  } catch(e){ /* empty */ }
	  if('get' in Attributes || 'set' in Attributes)throw TypeError('Accessors not supported!');
	  if('value' in Attributes)O[P] = Attributes.value;
	  return O;
	};

/***/ },
/* 637 */
/***/ function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(638);
	module.exports = function(it){
	  if(!isObject(it))throw TypeError(it + ' is not an object!');
	  return it;
	};

/***/ },
/* 638 */
/***/ function(module, exports) {

	module.exports = function(it){
	  return typeof it === 'object' ? it !== null : typeof it === 'function';
	};

/***/ },
/* 639 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = !__webpack_require__(640) && !__webpack_require__(641)(function(){
	  return Object.defineProperty(__webpack_require__(642)('div'), 'a', {get: function(){ return 7; }}).a != 7;
	});

/***/ },
/* 640 */
/***/ function(module, exports, __webpack_require__) {

	// Thank's IE8 for his funny defineProperty
	module.exports = !__webpack_require__(641)(function(){
	  return Object.defineProperty({}, 'a', {get: function(){ return 7; }}).a != 7;
	});

/***/ },
/* 641 */
/***/ function(module, exports) {

	module.exports = function(exec){
	  try {
	    return !!exec();
	  } catch(e){
	    return true;
	  }
	};

/***/ },
/* 642 */
/***/ function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(638)
	  , document = __webpack_require__(633).document
	  // in old IE typeof document.createElement is 'object'
	  , is = isObject(document) && isObject(document.createElement);
	module.exports = function(it){
	  return is ? document.createElement(it) : {};
	};

/***/ },
/* 643 */
/***/ function(module, exports, __webpack_require__) {

	// 7.1.1 ToPrimitive(input [, PreferredType])
	var isObject = __webpack_require__(638);
	// instead of the ES6 spec version, we didn't implement @@toPrimitive case
	// and the second argument - flag - preferred type is a string
	module.exports = function(it, S){
	  if(!isObject(it))return it;
	  var fn, val;
	  if(S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;
	  if(typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it)))return val;
	  if(!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;
	  throw TypeError("Can't convert object to primitive value");
	};

/***/ },
/* 644 */
/***/ function(module, exports) {

	module.exports = function(bitmap, value){
	  return {
	    enumerable  : !(bitmap & 1),
	    configurable: !(bitmap & 2),
	    writable    : !(bitmap & 4),
	    value       : value
	  };
	};

/***/ },
/* 645 */
/***/ function(module, exports, __webpack_require__) {

	var global    = __webpack_require__(633)
	  , hide      = __webpack_require__(635)
	  , has       = __webpack_require__(646)
	  , SRC       = __webpack_require__(647)('src')
	  , TO_STRING = 'toString'
	  , $toString = Function[TO_STRING]
	  , TPL       = ('' + $toString).split(TO_STRING);
	
	__webpack_require__(634).inspectSource = function(it){
	  return $toString.call(it);
	};
	
	(module.exports = function(O, key, val, safe){
	  var isFunction = typeof val == 'function';
	  if(isFunction)has(val, 'name') || hide(val, 'name', key);
	  if(O[key] === val)return;
	  if(isFunction)has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));
	  if(O === global){
	    O[key] = val;
	  } else {
	    if(!safe){
	      delete O[key];
	      hide(O, key, val);
	    } else {
	      if(O[key])O[key] = val;
	      else hide(O, key, val);
	    }
	  }
	// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative
	})(Function.prototype, TO_STRING, function toString(){
	  return typeof this == 'function' && this[SRC] || $toString.call(this);
	});

/***/ },
/* 646 */
/***/ function(module, exports) {

	var hasOwnProperty = {}.hasOwnProperty;
	module.exports = function(it, key){
	  return hasOwnProperty.call(it, key);
	};

/***/ },
/* 647 */
/***/ function(module, exports) {

	var id = 0
	  , px = Math.random();
	module.exports = function(key){
	  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
	};

/***/ },
/* 648 */
/***/ function(module, exports, __webpack_require__) {

	// optional / simple context binding
	var aFunction = __webpack_require__(649);
	module.exports = function(fn, that, length){
	  aFunction(fn);
	  if(that === undefined)return fn;
	  switch(length){
	    case 1: return function(a){
	      return fn.call(that, a);
	    };
	    case 2: return function(a, b){
	      return fn.call(that, a, b);
	    };
	    case 3: return function(a, b, c){
	      return fn.call(that, a, b, c);
	    };
	  }
	  return function(/* ...args */){
	    return fn.apply(that, arguments);
	  };
	};

/***/ },
/* 649 */
/***/ function(module, exports) {

	module.exports = function(it){
	  if(typeof it != 'function')throw TypeError(it + ' is not a function!');
	  return it;
	};

/***/ },
/* 650 */
/***/ function(module, exports) {

	// 20.2.2.20 Math.log1p(x)
	module.exports = Math.log1p || function log1p(x){
	  return (x = +x) > -1e-8 && x < 1e-8 ? x - x * x / 2 : Math.log(1 + x);
	};

/***/ },
/* 651 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.5 Math.asinh(x)
	var $export = __webpack_require__(632)
	  , $asinh  = Math.asinh;
	
	function asinh(x){
	  return !isFinite(x = +x) || x == 0 ? x : x < 0 ? -asinh(-x) : Math.log(x + Math.sqrt(x * x + 1));
	}
	
	// Tor Browser bug: Math.asinh(0) -> -0 
	$export($export.S + $export.F * !($asinh && 1 / $asinh(0) > 0), 'Math', {asinh: asinh});

/***/ },
/* 652 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.7 Math.atanh(x)
	var $export = __webpack_require__(632)
	  , $atanh  = Math.atanh;
	
	// Tor Browser bug: Math.atanh(-0) -> 0 
	$export($export.S + $export.F * !($atanh && 1 / $atanh(-0) < 0), 'Math', {
	  atanh: function atanh(x){
	    return (x = +x) == 0 ? x : Math.log((1 + x) / (1 - x)) / 2;
	  }
	});

/***/ },
/* 653 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.9 Math.cbrt(x)
	var $export = __webpack_require__(632)
	  , sign    = __webpack_require__(654);
	
	$export($export.S, 'Math', {
	  cbrt: function cbrt(x){
	    return sign(x = +x) * Math.pow(Math.abs(x), 1 / 3);
	  }
	});

/***/ },
/* 654 */
/***/ function(module, exports) {

	// 20.2.2.28 Math.sign(x)
	module.exports = Math.sign || function sign(x){
	  return (x = +x) == 0 || x != x ? x : x < 0 ? -1 : 1;
	};

/***/ },
/* 655 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.11 Math.clz32(x)
	var $export = __webpack_require__(632);
	
	$export($export.S, 'Math', {
	  clz32: function clz32(x){
	    return (x >>>= 0) ? 31 - Math.floor(Math.log(x + 0.5) * Math.LOG2E) : 32;
	  }
	});

/***/ },
/* 656 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.12 Math.cosh(x)
	var $export = __webpack_require__(632)
	  , exp     = Math.exp;
	
	$export($export.S, 'Math', {
	  cosh: function cosh(x){
	    return (exp(x = +x) + exp(-x)) / 2;
	  }
	});

/***/ },
/* 657 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.14 Math.expm1(x)
	var $export = __webpack_require__(632)
	  , $expm1  = __webpack_require__(658);
	
	$export($export.S + $export.F * ($expm1 != Math.expm1), 'Math', {expm1: $expm1});

/***/ },
/* 658 */
/***/ function(module, exports) {

	// 20.2.2.14 Math.expm1(x)
	var $expm1 = Math.expm1;
	module.exports = (!$expm1
	  // Old FF bug
	  || $expm1(10) > 22025.465794806719 || $expm1(10) < 22025.4657948067165168
	  // Tor Browser bug
	  || $expm1(-2e-17) != -2e-17
	) ? function expm1(x){
	  return (x = +x) == 0 ? x : x > -1e-6 && x < 1e-6 ? x + x * x / 2 : Math.exp(x) - 1;
	} : $expm1;

/***/ },
/* 659 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.16 Math.fround(x)
	var $export   = __webpack_require__(632)
	  , sign      = __webpack_require__(654)
	  , pow       = Math.pow
	  , EPSILON   = pow(2, -52)
	  , EPSILON32 = pow(2, -23)
	  , MAX32     = pow(2, 127) * (2 - EPSILON32)
	  , MIN32     = pow(2, -126);
	
	var roundTiesToEven = function(n){
	  return n + 1 / EPSILON - 1 / EPSILON;
	};
	
	
	$export($export.S, 'Math', {
	  fround: function fround(x){
	    var $abs  = Math.abs(x)
	      , $sign = sign(x)
	      , a, result;
	    if($abs < MIN32)return $sign * roundTiesToEven($abs / MIN32 / EPSILON32) * MIN32 * EPSILON32;
	    a = (1 + EPSILON32 / EPSILON) * $abs;
	    result = a - (a - $abs);
	    if(result > MAX32 || result != result)return $sign * Infinity;
	    return $sign * result;
	  }
	});

/***/ },
/* 660 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.17 Math.hypot([value1[, value2[, … ]]])
	var $export = __webpack_require__(632)
	  , abs     = Math.abs;
	
	$export($export.S, 'Math', {
	  hypot: function hypot(value1, value2){ // eslint-disable-line no-unused-vars
	    var sum  = 0
	      , i    = 0
	      , aLen = arguments.length
	      , larg = 0
	      , arg, div;
	    while(i < aLen){
	      arg = abs(arguments[i++]);
	      if(larg < arg){
	        div  = larg / arg;
	        sum  = sum * div * div + 1;
	        larg = arg;
	      } else if(arg > 0){
	        div  = arg / larg;
	        sum += div * div;
	      } else sum += arg;
	    }
	    return larg === Infinity ? Infinity : larg * Math.sqrt(sum);
	  }
	});

/***/ },
/* 661 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.18 Math.imul(x, y)
	var $export = __webpack_require__(632)
	  , $imul   = Math.imul;
	
	// some WebKit versions fails with big numbers, some has wrong arity
	$export($export.S + $export.F * __webpack_require__(641)(function(){
	  return $imul(0xffffffff, 5) != -5 || $imul.length != 2;
	}), 'Math', {
	  imul: function imul(x, y){
	    var UINT16 = 0xffff
	      , xn = +x
	      , yn = +y
	      , xl = UINT16 & xn
	      , yl = UINT16 & yn;
	    return 0 | xl * yl + ((UINT16 & xn >>> 16) * yl + xl * (UINT16 & yn >>> 16) << 16 >>> 0);
	  }
	});

/***/ },
/* 662 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.21 Math.log10(x)
	var $export = __webpack_require__(632);
	
	$export($export.S, 'Math', {
	  log10: function log10(x){
	    return Math.log(x) / Math.LN10;
	  }
	});

/***/ },
/* 663 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.20 Math.log1p(x)
	var $export = __webpack_require__(632);
	
	$export($export.S, 'Math', {log1p: __webpack_require__(650)});

/***/ },
/* 664 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.22 Math.log2(x)
	var $export = __webpack_require__(632);
	
	$export($export.S, 'Math', {
	  log2: function log2(x){
	    return Math.log(x) / Math.LN2;
	  }
	});

/***/ },
/* 665 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.28 Math.sign(x)
	var $export = __webpack_require__(632);
	
	$export($export.S, 'Math', {sign: __webpack_require__(654)});

/***/ },
/* 666 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.30 Math.sinh(x)
	var $export = __webpack_require__(632)
	  , expm1   = __webpack_require__(658)
	  , exp     = Math.exp;
	
	// V8 near Chromium 38 has a problem with very small numbers
	$export($export.S + $export.F * __webpack_require__(641)(function(){
	  return !Math.sinh(-2e-17) != -2e-17;
	}), 'Math', {
	  sinh: function sinh(x){
	    return Math.abs(x = +x) < 1
	      ? (expm1(x) - expm1(-x)) / 2
	      : (exp(x - 1) - exp(-x - 1)) * (Math.E / 2);
	  }
	});

/***/ },
/* 667 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.33 Math.tanh(x)
	var $export = __webpack_require__(632)
	  , expm1   = __webpack_require__(658)
	  , exp     = Math.exp;
	
	$export($export.S, 'Math', {
	  tanh: function tanh(x){
	    var a = expm1(x = +x)
	      , b = expm1(-x);
	    return a == Infinity ? 1 : b == Infinity ? -1 : (a - b) / (exp(x) + exp(-x));
	  }
	});

/***/ },
/* 668 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.34 Math.trunc(x)
	var $export = __webpack_require__(632);
	
	$export($export.S, 'Math', {
	  trunc: function trunc(it){
	    return (it > 0 ? Math.floor : Math.ceil)(it);
	  }
	});

/***/ },
/* 669 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(404);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _ReactUtils = __webpack_require__(670);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; } /**
	                                                                                                                                                                                                                              * @fileOverview Surface
	                                                                                                                                                                                                                              */
	
	
	var propTypes = {
	  width: _react.PropTypes.number.isRequired,
	  height: _react.PropTypes.number.isRequired,
	  viewBox: _react.PropTypes.shape({
	    x: _react.PropTypes.number,
	    y: _react.PropTypes.number,
	    width: _react.PropTypes.number,
	    height: _react.PropTypes.number
	  }),
	  className: _react.PropTypes.string,
	  style: _react.PropTypes.object,
	  children: _react.PropTypes.oneOfType([_react.PropTypes.arrayOf(_react.PropTypes.node), _react.PropTypes.node])
	};
	function Surface(props) {
	  var children = props.children,
	      width = props.width,
	      height = props.height,
	      viewBox = props.viewBox,
	      className = props.className,
	      style = props.style,
	      others = _objectWithoutProperties(props, ['children', 'width', 'height', 'viewBox', 'className', 'style']);
	
	  var svgView = viewBox || { width: width, height: height, x: 0, y: 0 };
	  var layerClass = (0, _classnames2.default)('recharts-surface', className);
	  var attrs = (0, _ReactUtils.getPresentationAttributes)(others);
	
	  return _react2.default.createElement(
	    'svg',
	    _extends({}, attrs, {
	      className: layerClass,
	      width: width,
	      height: height,
	      style: style,
	      viewBox: svgView.x + ' ' + svgView.y + ' ' + svgView.width + ' ' + svgView.height,
	      version: '1.1'
	    }),
	    children
	  );
	}
	
	Surface.propTypes = propTypes;
	
	exports.default = Surface;

/***/ },
/* 670 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.isChildrenEqual = exports.isSingleChildEqual = exports.filterSvgElements = exports.isSsr = exports.validateWidthHeight = exports.filterEventsOfChild = exports.filterEventAttributes = exports.getPresentationAttributes = exports.withoutType = exports.findChildByType = exports.findAllByType = exports.getDisplayName = exports.EVENT_ATTRIBUTES = exports.PRESENTATION_ATTRIBUTES = undefined;
	
	var _isNil2 = __webpack_require__(671);
	
	var _isNil3 = _interopRequireDefault(_isNil2);
	
	var _isString2 = __webpack_require__(672);
	
	var _isString3 = _interopRequireDefault(_isString2);
	
	var _isObject2 = __webpack_require__(225);
	
	var _isObject3 = _interopRequireDefault(_isObject2);
	
	var _isFunction2 = __webpack_require__(224);
	
	var _isFunction3 = _interopRequireDefault(_isFunction2);
	
	var _isArray2 = __webpack_require__(261);
	
	var _isArray3 = _interopRequireDefault(_isArray2);
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _DataUtils = __webpack_require__(673);
	
	var _PureRender = __webpack_require__(746);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var PRESENTATION_ATTRIBUTES = exports.PRESENTATION_ATTRIBUTES = {
	  alignmentBaseline: _react.PropTypes.string,
	  angle: _react.PropTypes.number,
	  baselineShift: _react.PropTypes.string,
	  clip: _react.PropTypes.string,
	  clipPath: _react.PropTypes.string,
	  clipRule: _react.PropTypes.string,
	  color: _react.PropTypes.string,
	  colorInterpolation: _react.PropTypes.string,
	  colorInterpolationFilters: _react.PropTypes.string,
	  colorProfile: _react.PropTypes.string,
	  colorRendering: _react.PropTypes.string,
	  cursor: _react.PropTypes.string,
	  direction: _react.PropTypes.oneOf(['ltr', 'rtl', 'inherit']),
	  display: _react.PropTypes.string,
	  dominantBaseline: _react.PropTypes.string,
	  enableBackground: _react.PropTypes.string,
	  fill: _react.PropTypes.string,
	  fillOpacity: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.number]),
	  fillRule: _react.PropTypes.oneOf(['nonzero', 'evenodd', 'inherit']),
	  filter: _react.PropTypes.string,
	  floodColor: _react.PropTypes.string,
	  floodOpacity: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.number]),
	  font: _react.PropTypes.string,
	  fontFamily: _react.PropTypes.string,
	  fontSize: _react.PropTypes.number,
	  fontSizeAdjust: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.string]),
	  fontStretch: _react.PropTypes.oneOf(['normal', 'wider', 'narrower', 'ultra-condensed', 'extra-condensed', 'condensed', 'semi-condensed', 'semi-expanded', 'expanded', 'extra-expanded', 'ultra-expanded', 'inherit']),
	  fontStyle: _react.PropTypes.oneOf(['normal', 'italic', 'oblique', 'inherit']),
	  fontVariant: _react.PropTypes.oneOf(['normal', 'small-caps', 'inherit']),
	  fontWeight: _react.PropTypes.oneOf(['normal', 'bold', 'bolder', 'lighter', 100, 200, 300, 400, 500, 600, 700, 800, 900, 'inherit']),
	  glyphOrientationHorizontal: _react.PropTypes.string,
	  glyphOrientationVertical: _react.PropTypes.string,
	  imageRendering: _react.PropTypes.oneOf(['auto', 'optimizeSpeed', 'optimizeQuality', 'inherit']),
	  kerning: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.string]),
	  letterSpacing: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.string]),
	  lightingColor: _react.PropTypes.string,
	  markerEnd: _react.PropTypes.string,
	  markerMid: _react.PropTypes.string,
	  markerStart: _react.PropTypes.string,
	  mask: _react.PropTypes.string,
	  opacity: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.string]),
	  overflow: _react.PropTypes.oneOf(['visible', 'hidden', 'scroll', 'auto', 'inherit']),
	  pointerEvents: _react.PropTypes.oneOf(['visiblePainted', 'visibleFill', 'visibleStroke', 'visible', 'painted', 'fill', 'stroke', 'all', 'none', 'inherit']),
	  shapeRendering: _react.PropTypes.oneOf(['auto', 'optimizeSpeed', 'crispEdges', 'geometricPrecision', 'inherit']),
	  stopColor: _react.PropTypes.string,
	  stopOpacity: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.string]),
	  stroke: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.string]),
	  strokeDasharray: _react.PropTypes.string,
	  strokeDashoffset: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.string]),
	  strokeLinecap: _react.PropTypes.oneOf(['butt', 'round', 'square', 'inherit']),
	  strokeLinejoin: _react.PropTypes.oneOf(['miter', 'round', 'bevel', 'inherit']),
	  strokeMiterlimit: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.string]),
	  strokeOpacity: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.string]),
	  strokeWidth: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.string]),
	  textAnchor: _react.PropTypes.oneOf(['start', 'middle', 'end', 'inherit']),
	  textDecoration: _react.PropTypes.oneOf(['none', 'underline', 'overline', 'line-through', 'blink', 'inherit']),
	  textRendering: _react.PropTypes.oneOf(['auto', 'optimizeSpeed', 'optimizeLegibility', 'geometricPrecision', 'inherit']),
	  unicodeBidi: _react.PropTypes.oneOf(['normal', 'embed', 'bidi-override', 'inherit']),
	  visibility: _react.PropTypes.oneOf(['visible', 'hidden', 'collapse', 'inherit']),
	  wordSpacing: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.string]),
	  writingMode: _react.PropTypes.oneOf(['lr-tb', 'rl-tb', 'tb-rl', 'lr', 'rl', 'tb', 'inherit']),
	  transform: _react.PropTypes.string,
	  style: _react.PropTypes.object,
	
	  width: _react.PropTypes.number,
	  height: _react.PropTypes.number,
	  dx: _react.PropTypes.number,
	  dy: _react.PropTypes.number,
	  x: _react.PropTypes.number,
	  y: _react.PropTypes.number,
	  r: _react.PropTypes.number
	};
	
	var EVENT_ATTRIBUTES = exports.EVENT_ATTRIBUTES = {
	  onClick: _react.PropTypes.func,
	  onMouseDown: _react.PropTypes.func,
	  onMouseUp: _react.PropTypes.func,
	  onMouseOver: _react.PropTypes.func,
	  onMouseMove: _react.PropTypes.func,
	  onMouseOut: _react.PropTypes.func,
	  onMouseEnter: _react.PropTypes.func,
	  onMouseLeave: _react.PropTypes.func
	};
	/**
	 * Get the display name of a component
	 * @param  {Object} Comp Specified Component
	 * @return {String}      Display name of Component
	 */
	var getDisplayName = exports.getDisplayName = function getDisplayName(Comp) {
	  if (!Comp) {
	    return '';
	  }
	  if (typeof Comp === 'string') {
	    return Comp;
	  }
	  return Comp.displayName || Comp.name || 'Component';
	};
	
	/*
	 * Find and return all matched children by type. `type` can be a React element class or
	 * string
	 */
	var findAllByType = exports.findAllByType = function findAllByType(children, type) {
	  var result = [];
	  var types = [];
	
	  if ((0, _isArray3.default)(type)) {
	    types = type.map(function (t) {
	      return getDisplayName(t);
	    });
	  } else {
	    types = [getDisplayName(type)];
	  }
	
	  _react2.default.Children.forEach(children, function (child) {
	    var childType = child && child.type && (child.type.displayName || child.type.name);
	    if (types.indexOf(childType) !== -1) {
	      result.push(child);
	    }
	  });
	
	  return result;
	};
	/*
	 * Return the first matched child by type, return null otherwise.
	 * `type` can be a React element class or string.
	 */
	var findChildByType = exports.findChildByType = function findChildByType(children, type) {
	  var result = findAllByType(children, type);
	
	  return result && result[0];
	};
	
	/*
	 * Create a new array of children excluding the ones matched the type
	 */
	var withoutType = exports.withoutType = function withoutType(children, type) {
	  var newChildren = [];
	  var types = void 0;
	
	  if ((0, _isArray3.default)(type)) {
	    types = type.map(function (t) {
	      return getDisplayName(t);
	    });
	  } else {
	    types = [getDisplayName(type)];
	  }
	
	  _react2.default.Children.forEach(children, function (child) {
	    if (child && child.type && child.type.displayName && types.indexOf(child.type.displayName) !== -1) {
	      return;
	    }
	    newChildren.push(child);
	  });
	
	  return newChildren;
	};
	
	/**
	 * get all the presentation attribute of svg element
	 * @param  {Object} el A react element or the props of a react element
	 * @return {Object}    attributes or null
	 */
	var getPresentationAttributes = exports.getPresentationAttributes = function getPresentationAttributes(el) {
	  if (!el || (0, _isFunction3.default)(el)) {
	    return null;
	  }
	
	  var props = _react2.default.isValidElement(el) ? el.props : el;
	
	  if (!(0, _isObject3.default)(props)) {
	    return null;
	  }
	
	  var out = null;
	  // eslint-disable-next-line no-restricted-syntax
	  for (var i in props) {
	    if ({}.hasOwnProperty.call(props, i) && PRESENTATION_ATTRIBUTES[i]) {
	      if (!out) out = {};
	      out[i] = props[i];
	    }
	  }
	  return out;
	};
	
	/**
	 * get all the event attribute of svg element
	 * @param  {Object} el A react element or the props of a react element
	 * @return {Object}    attributes or null
	 */
	var filterEventAttributes = exports.filterEventAttributes = function filterEventAttributes(el) {
	  if (!el || (0, _isFunction3.default)(el)) {
	    return null;
	  }
	
	  var props = _react2.default.isValidElement(el) ? el.props : el;
	
	  if (!(0, _isObject3.default)(props)) {
	    return null;
	  }
	
	  var out = null;
	  // eslint-disable-next-line no-restricted-syntax
	  for (var i in props) {
	    if ({}.hasOwnProperty.call(props, i) && EVENT_ATTRIBUTES[i]) {
	      if (!out) out = {};
	      out[i] = props[i];
	    }
	  }
	  return out;
	};
	
	var getEventHandler = function getEventHandler(originalHandler, data, index) {
	  return function (e) {
	    originalHandler(data, index, e);
	
	    return null;
	  };
	};
	
	var filterEventsOfChild = exports.filterEventsOfChild = function filterEventsOfChild(props, data, index) {
	  if (!(0, _isObject3.default)(props)) {
	    return null;
	  }
	
	  var out = null;
	  // eslint-disable-next-line no-restricted-syntax
	  for (var i in props) {
	    if ({}.hasOwnProperty.call(props, i) && EVENT_ATTRIBUTES[i] && (0, _isFunction3.default)(props[i])) {
	      if (!out) out = {};
	      out[i] = getEventHandler(props[i], data, index);
	    }
	  }
	  return out;
	};
	
	/**
	 * validate the width and height props of a chart element
	 * @param  {Object} el A chart element
	 * @return {Boolean}   true If the props width and height are number, and greater than 0
	 */
	var validateWidthHeight = exports.validateWidthHeight = function validateWidthHeight(el) {
	  if (!el || !el.props) {
	    return false;
	  }
	  var _el$props = el.props,
	      width = _el$props.width,
	      height = _el$props.height;
	
	
	  if (!(0, _DataUtils.isNumber)(width) || width <= 0 || !(0, _DataUtils.isNumber)(height) || height <= 0) {
	    return false;
	  }
	
	  return true;
	};
	
	var isSsr = exports.isSsr = function isSsr() {
	  return !(typeof window !== 'undefined' && window.document && window.document.createElement && window.setTimeout);
	};
	
	var SVG_TAGS = ['a', 'altGlyph', 'altGlyphDef', 'altGlyphItem', 'animate', 'animateColor', 'animateMotion', 'animateTransform', 'circle', 'clipPath', 'color-profile', 'cursor', 'defs', 'desc', 'ellipse', 'feBlend', 'feColormatrix', 'feComponentTransfer', 'feComposite', 'feConvolveMatrix', 'feDiffuseLighting', 'feDisplacementMap', 'feDistantLight', 'feFlood', 'feFuncA', 'feFuncB', 'feFuncG', 'feFuncR', 'feGaussianBlur', 'feImage', 'feMerge', 'feMergeNode', 'feMorphology', 'feOffset', 'fePointLight', 'feSpecularLighting', 'feSpotLight', 'feTile', 'feTurbulence', 'filter', 'font', 'font-face', 'font-face-format', 'font-face-name', 'font-face-url', 'foreignObject', 'g', 'glyph', 'glyphRef', 'hkern', 'image', 'line', 'lineGradient', 'marker', 'mask', 'metadata', 'missing-glyph', 'mpath', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'script', 'set', 'stop', 'style', 'svg', 'switch', 'symbol', 'text', 'textPath', 'title', 'tref', 'tspan', 'use', 'view', 'vkern'];
	/**
	 * Filter all the svg elements of children
	 * @param  {Array} children The children of a react element
	 * @return {Array}          All the svg elements
	 */
	var filterSvgElements = exports.filterSvgElements = function filterSvgElements(children) {
	  var svgElements = [];
	
	  _react2.default.Children.forEach(children, function (entry) {
	    if (entry && entry.type && (0, _isString3.default)(entry.type) && SVG_TAGS.indexOf(entry.type) >= 0) {
	      svgElements.push(entry);
	    }
	  });
	
	  return svgElements;
	};
	
	var isSingleChildEqual = exports.isSingleChildEqual = function isSingleChildEqual(nextChild, prevChild) {
	  if ((0, _isNil3.default)(nextChild) && (0, _isNil3.default)(prevChild)) {
	    return true;
	  } else if (!(0, _isNil3.default)(nextChild) && !(0, _isNil3.default)(prevChild)) {
	    return (0, _PureRender.shallowEqual)(nextChild.props, prevChild.props);
	  }
	
	  return false;
	};
	/**
	 * Wether props of children changed
	 * @param  {Object} nextChildren The latest children
	 * @param  {Object} prevChildren The prev children
	 * @return {Boolean}             equal or not
	 */
	var isChildrenEqual = exports.isChildrenEqual = function isChildrenEqual(nextChildren, prevChildren) {
	  if (nextChildren === prevChildren) {
	    return true;
	  }
	
	  if (_react.Children.count(nextChildren) !== _react.Children.count(prevChildren)) {
	    return false;
	  }
	
	  var count = _react.Children.count(nextChildren);
	
	  if (count === 0) {
	    return true;
	  }
	  if (count === 1) {
	    return isSingleChildEqual(nextChildren, prevChildren);
	  }
	
	  for (var i = 0; i < count; i++) {
	    var nextChild = nextChildren[i];
	    var prevChild = prevChildren[i];
	
	    if (!isSingleChildEqual(nextChild, prevChild)) {
	      return false;
	    }
	  }
	
	  return true;
	};

/***/ },
/* 671 */
/***/ function(module, exports) {

	/**
	 * Checks if `value` is `null` or `undefined`.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is nullish, else `false`.
	 * @example
	 *
	 * _.isNil(null);
	 * // => true
	 *
	 * _.isNil(void 0);
	 * // => true
	 *
	 * _.isNil(NaN);
	 * // => false
	 */
	function isNil(value) {
	  return value == null;
	}
	
	module.exports = isNil;


/***/ },
/* 672 */
/***/ function(module, exports, __webpack_require__) {

	var baseGetTag = __webpack_require__(182),
	    isArray = __webpack_require__(261),
	    isObjectLike = __webpack_require__(190);
	
	/** `Object#toString` result references. */
	var stringTag = '[object String]';
	
	/**
	 * Checks if `value` is classified as a `String` primitive or object.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a string, else `false`.
	 * @example
	 *
	 * _.isString('abc');
	 * // => true
	 *
	 * _.isString(1);
	 * // => false
	 */
	function isString(value) {
	  return typeof value == 'string' ||
	    (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);
	}
	
	module.exports = isString;


/***/ },
/* 673 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.findPositionOfBar = exports.getValueByDataKey = exports.parseScale = exports.combineEventHandlers = exports.hasDuplicate = exports.getAnyElementOfObject = exports.getBandSizeOfAxis = exports.validateCoordinateInRange = exports.parseSpecifiedDomain = exports.getPercentValue = exports.isNumOrStr = exports.isNumber = exports.isPercent = undefined;
	
	var _get2 = __webpack_require__(674);
	
	var _get3 = _interopRequireDefault(_get2);
	
	var _isNil2 = __webpack_require__(671);
	
	var _isNil3 = _interopRequireDefault(_isNil2);
	
	var _isFunction2 = __webpack_require__(224);
	
	var _isFunction3 = _interopRequireDefault(_isFunction2);
	
	var _sortBy2 = __webpack_require__(686);
	
	var _sortBy3 = _interopRequireDefault(_sortBy2);
	
	var _isArray2 = __webpack_require__(261);
	
	var _isArray3 = _interopRequireDefault(_isArray2);
	
	var _isNaN2 = __webpack_require__(736);
	
	var _isNaN3 = _interopRequireDefault(_isNaN2);
	
	var _isNumber2 = __webpack_require__(737);
	
	var _isNumber3 = _interopRequireDefault(_isNumber2);
	
	var _isString2 = __webpack_require__(672);
	
	var _isString3 = _interopRequireDefault(_isString2);
	
	var _d3Scale = __webpack_require__(738);
	
	var d3Scales = _interopRequireWildcard(_d3Scale);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var isPercent = exports.isPercent = function isPercent(value) {
	  return (0, _isString3.default)(value) && value.indexOf('%') === value.length - 1;
	};
	
	var isNumber = exports.isNumber = function isNumber(value) {
	  return (0, _isNumber3.default)(value) && !(0, _isNaN3.default)(value);
	};
	
	var isNumOrStr = exports.isNumOrStr = function isNumOrStr(value) {
	  return isNumber(value) || (0, _isString3.default)(value);
	};
	/**
	 * Get percent value of a total value
	 * @param {Number|String} percent A percent
	 * @param {Number} totalValue     Total value
	 * @param {NUmber} defaultValue   The value returned when percent is undefined or invalid
	 * @param {Boolean} validate      If set to be true, the result will be validated
	 * @return {Number} value
	 */
	var getPercentValue = exports.getPercentValue = function getPercentValue(percent, totalValue) {
	  var defaultValue = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
	  var validate = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
	
	  if (!isNumber(percent) && !(0, _isString3.default)(percent)) {
	    return defaultValue;
	  }
	
	  var value = void 0;
	
	  if (isPercent(percent)) {
	    var index = percent.indexOf('%');
	    value = totalValue * parseFloat(percent.slice(0, index)) / 100;
	  } else {
	    value = +percent;
	  }
	
	  if (isNaN(value)) {
	    value = defaultValue;
	  }
	
	  if (validate && value > totalValue) {
	    value = totalValue;
	  }
	
	  return value;
	};
	
	var MIN_VALUE_REG = /^dataMin[\s]*-[\s]*([\d]+)$/;
	var MAX_VALUE_REG = /^dataMax[\s]*\+[\s]*([\d]+)$/;
	
	var parseSpecifiedDomain = exports.parseSpecifiedDomain = function parseSpecifiedDomain(specifiedDomain, dataDomain, allowDataOverflow) {
	  if (!(0, _isArray3.default)(specifiedDomain)) {
	    return dataDomain;
	  }
	
	  var domain = [];
	
	  if (isNumber(specifiedDomain[0])) {
	    domain[0] = allowDataOverflow ? specifiedDomain[0] : Math.min(specifiedDomain[0], dataDomain[0]);
	  } else if (MIN_VALUE_REG.test(specifiedDomain[0])) {
	    var value = +MIN_VALUE_REG.exec(specifiedDomain[0])[1];
	
	    domain[0] = dataDomain[0] - value;
	  } else {
	    domain[0] = dataDomain[0];
	  }
	
	  if (isNumber(specifiedDomain[1])) {
	    domain[1] = allowDataOverflow ? specifiedDomain[1] : Math.max(specifiedDomain[1], dataDomain[1]);
	  } else if (MAX_VALUE_REG.test(specifiedDomain[1])) {
	    var _value = +MAX_VALUE_REG.exec(specifiedDomain[1])[1];
	
	    domain[1] = dataDomain[1] + _value;
	  } else {
	    domain[1] = dataDomain[1];
	  }
	
	  return domain;
	};
	
	var validateCoordinateInRange = exports.validateCoordinateInRange = function validateCoordinateInRange(coordinate, scale) {
	  if (!scale) {
	    return false;
	  }
	
	  var range = scale.range();
	  var first = range[0];
	  var last = range[range.length - 1];
	  var isValidate = first <= last ? coordinate >= first && coordinate <= last : coordinate >= last && coordinate <= first;
	
	  return isValidate;
	};
	
	/**
	 * Calculate the size between two category
	 * @param  {Object} axis  The options of axis
	 * @param  {Array}  ticks The ticks of axis
	 * @return {Number} Size
	 */
	var getBandSizeOfAxis = exports.getBandSizeOfAxis = function getBandSizeOfAxis(axis, ticks) {
	  if (axis && axis.type === 'category' && axis.scale && axis.scale.bandwidth) {
	    return axis.scale.bandwidth();
	  }
	
	  if (axis && axis.type === 'number' && ticks) {
	    var orderedTicks = (0, _sortBy3.default)(ticks, function (o) {
	      return o.coordinate;
	    });
	    var bandSize = Infinity;
	
	    for (var i = 1, len = orderedTicks.length; i < len; i++) {
	      var cur = orderedTicks[i];
	      var prev = orderedTicks[i - 1];
	
	      bandSize = Math.min((cur.coordinate || 0) - (prev.coordinate || 0), bandSize);
	    }
	
	    return bandSize === Infinity ? 0 : bandSize;
	  }
	
	  return 0;
	};
	
	var getAnyElementOfObject = exports.getAnyElementOfObject = function getAnyElementOfObject(obj) {
	  if (!obj) {
	    return null;
	  }
	
	  var keys = Object.keys(obj);
	
	  if (keys && keys.length) {
	    return obj[keys[0]];
	  }
	
	  return null;
	};
	
	var hasDuplicate = exports.hasDuplicate = function hasDuplicate(ary) {
	  if (!(0, _isArray3.default)(ary)) {
	    return false;
	  }
	
	  var len = ary.length;
	  var cache = {};
	
	  for (var i = 0; i < len; i++) {
	    if (!cache[ary[i]]) {
	      cache[ary[i]] = true;
	    } else {
	      return true;
	    }
	  }
	
	  return false;
	};
	/**
	 * combine the handlers
	 * @param  {Function} defaultHandler Internal private handler
	 * @param  {Function} parentHandler  Handler function specified in parent component
	 * @param  {Function} childHandler   Handler function specified in child component
	 * @return {Function}                The combined handler
	 */
	var combineEventHandlers = exports.combineEventHandlers = function combineEventHandlers(defaultHandler, parentHandler, childHandler) {
	  var customizedHandler = void 0;
	
	  if ((0, _isFunction3.default)(childHandler)) {
	    customizedHandler = childHandler;
	  } else if ((0, _isFunction3.default)(parentHandler)) {
	    customizedHandler = parentHandler;
	  }
	
	  if ((0, _isFunction3.default)(defaultHandler) || customizedHandler) {
	    return function (arg1, arg2, arg3, arg4) {
	      if ((0, _isFunction3.default)(defaultHandler)) {
	        defaultHandler(arg1, arg2, arg3, arg4);
	      }
	
	      if ((0, _isFunction3.default)(customizedHandler)) {
	        customizedHandler(arg1, arg2, arg3, arg4);
	      }
	    };
	  }
	
	  return null;
	};
	/**
	 * Parse the scale function of axis
	 * @param  {String}   options.scale The specified scale type
	 * @param  {String}   options.type  The type of axis
	 * @param  {String}   chartType     The displayName of chart
	 * @return {Function}               The scale funcion
	 */
	var parseScale = exports.parseScale = function parseScale(_ref, chartType) {
	  var scale = _ref.scale,
	      type = _ref.type;
	
	  if (scale === 'auto') {
	    if (type === 'category' && chartType && (chartType.indexOf('LineChart') >= 0 || chartType.indexOf('AreaChart') >= 0)) {
	      return d3Scales.scalePoint();
	    } else if (type === 'category') {
	      return d3Scales.scaleBand();
	    }
	
	    return d3Scales.scaleLinear();
	  } else if ((0, _isString3.default)(scale)) {
	    var name = 'scale' + scale.slice(0, 1).toUpperCase() + scale.slice(1);
	
	    return (d3Scales[name] || d3Scales.scalePoint)();
	  }
	
	  return (0, _isFunction3.default)(scale) ? scale : d3Scales.scalePoint();
	};
	
	var getValueByDataKey = exports.getValueByDataKey = function getValueByDataKey(obj, dataKey, defaultValue) {
	  if ((0, _isNil3.default)(obj) || (0, _isNil3.default)(dataKey)) {
	    return defaultValue;
	  }
	
	  if (isNumOrStr(dataKey)) {
	    return (0, _get3.default)(obj, dataKey, defaultValue);
	  }
	
	  if ((0, _isFunction3.default)(dataKey)) {
	    return dataKey(obj);
	  }
	
	  return defaultValue;
	};
	
	var findPositionOfBar = exports.findPositionOfBar = function findPositionOfBar(barPosition, child) {
	  if (!barPosition) {
	    return null;
	  }
	
	  for (var i = 0, len = barPosition.length; i < len; i++) {
	    if (barPosition[i].item === child) {
	      return barPosition[i].position;
	    }
	  }
	
	  return null;
	};

/***/ },
/* 674 */
/***/ function(module, exports, __webpack_require__) {

	var baseGet = __webpack_require__(675);
	
	/**
	 * Gets the value at `path` of `object`. If the resolved value is
	 * `undefined`, the `defaultValue` is returned in its place.
	 *
	 * @static
	 * @memberOf _
	 * @since 3.7.0
	 * @category Object
	 * @param {Object} object The object to query.
	 * @param {Array|string} path The path of the property to get.
	 * @param {*} [defaultValue] The value returned for `undefined` resolved values.
	 * @returns {*} Returns the resolved value.
	 * @example
	 *
	 * var object = { 'a': [{ 'b': { 'c': 3 } }] };
	 *
	 * _.get(object, 'a[0].b.c');
	 * // => 3
	 *
	 * _.get(object, ['a', '0', 'b', 'c']);
	 * // => 3
	 *
	 * _.get(object, 'a.b.c', 'default');
	 * // => 'default'
	 */
	function get(object, path, defaultValue) {
	  var result = object == null ? undefined : baseGet(object, path);
	  return result === undefined ? defaultValue : result;
	}
	
	module.exports = get;


/***/ },
/* 675 */
/***/ function(module, exports, __webpack_require__) {

	var castPath = __webpack_require__(676),
	    toKey = __webpack_require__(685);
	
	/**
	 * The base implementation of `_.get` without support for default values.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @param {Array|string} path The path of the property to get.
	 * @returns {*} Returns the resolved value.
	 */
	function baseGet(object, path) {
	  path = castPath(path, object);
	
	  var index = 0,
	      length = path.length;
	
	  while (object != null && index < length) {
	    object = object[toKey(path[index++])];
	  }
	  return (index && index == length) ? object : undefined;
	}
	
	module.exports = baseGet;


/***/ },
/* 676 */
/***/ function(module, exports, __webpack_require__) {

	var isArray = __webpack_require__(261),
	    isKey = __webpack_require__(677),
	    stringToPath = __webpack_require__(679),
	    toString = __webpack_require__(682);
	
	/**
	 * Casts `value` to a path array if it's not one.
	 *
	 * @private
	 * @param {*} value The value to inspect.
	 * @param {Object} [object] The object to query keys on.
	 * @returns {Array} Returns the cast property path array.
	 */
	function castPath(value, object) {
	  if (isArray(value)) {
	    return value;
	  }
	  return isKey(value, object) ? [value] : stringToPath(toString(value));
	}
	
	module.exports = castPath;


/***/ },
/* 677 */
/***/ function(module, exports, __webpack_require__) {

	var isArray = __webpack_require__(261),
	    isSymbol = __webpack_require__(678);
	
	/** Used to match property names within property paths. */
	var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
	    reIsPlainProp = /^\w*$/;
	
	/**
	 * Checks if `value` is a property name and not a property path.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @param {Object} [object] The object to query keys on.
	 * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
	 */
	function isKey(value, object) {
	  if (isArray(value)) {
	    return false;
	  }
	  var type = typeof value;
	  if (type == 'number' || type == 'symbol' || type == 'boolean' ||
	      value == null || isSymbol(value)) {
	    return true;
	  }
	  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||
	    (object != null && value in Object(object));
	}
	
	module.exports = isKey;


/***/ },
/* 678 */
/***/ function(module, exports, __webpack_require__) {

	var baseGetTag = __webpack_require__(182),
	    isObjectLike = __webpack_require__(190);
	
	/** `Object#toString` result references. */
	var symbolTag = '[object Symbol]';
	
	/**
	 * Checks if `value` is classified as a `Symbol` primitive or object.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
	 * @example
	 *
	 * _.isSymbol(Symbol.iterator);
	 * // => true
	 *
	 * _.isSymbol('abc');
	 * // => false
	 */
	function isSymbol(value) {
	  return typeof value == 'symbol' ||
	    (isObjectLike(value) && baseGetTag(value) == symbolTag);
	}
	
	module.exports = isSymbol;


/***/ },
/* 679 */
/***/ function(module, exports, __webpack_require__) {

	var memoizeCapped = __webpack_require__(680);
	
	/** Used to match property names within property paths. */
	var reLeadingDot = /^\./,
	    rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;
	
	/** Used to match backslashes in property paths. */
	var reEscapeChar = /\\(\\)?/g;
	
	/**
	 * Converts `string` to a property path array.
	 *
	 * @private
	 * @param {string} string The string to convert.
	 * @returns {Array} Returns the property path array.
	 */
	var stringToPath = memoizeCapped(function(string) {
	  var result = [];
	  if (reLeadingDot.test(string)) {
	    result.push('');
	  }
	  string.replace(rePropName, function(match, number, quote, string) {
	    result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));
	  });
	  return result;
	});
	
	module.exports = stringToPath;


/***/ },
/* 680 */
/***/ function(module, exports, __webpack_require__) {

	var memoize = __webpack_require__(681);
	
	/** Used as the maximum memoize cache size. */
	var MAX_MEMOIZE_SIZE = 500;
	
	/**
	 * A specialized version of `_.memoize` which clears the memoized function's
	 * cache when it exceeds `MAX_MEMOIZE_SIZE`.
	 *
	 * @private
	 * @param {Function} func The function to have its output memoized.
	 * @returns {Function} Returns the new memoized function.
	 */
	function memoizeCapped(func) {
	  var result = memoize(func, function(key) {
	    if (cache.size === MAX_MEMOIZE_SIZE) {
	      cache.clear();
	    }
	    return key;
	  });
	
	  var cache = result.cache;
	  return result;
	}
	
	module.exports = memoizeCapped;


/***/ },
/* 681 */
/***/ function(module, exports, __webpack_require__) {

	var MapCache = __webpack_require__(230);
	
	/** Error message constants. */
	var FUNC_ERROR_TEXT = 'Expected a function';
	
	/**
	 * Creates a function that memoizes the result of `func`. If `resolver` is
	 * provided, it determines the cache key for storing the result based on the
	 * arguments provided to the memoized function. By default, the first argument
	 * provided to the memoized function is used as the map cache key. The `func`
	 * is invoked with the `this` binding of the memoized function.
	 *
	 * **Note:** The cache is exposed as the `cache` property on the memoized
	 * function. Its creation may be customized by replacing the `_.memoize.Cache`
	 * constructor with one whose instances implement the
	 * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)
	 * method interface of `clear`, `delete`, `get`, `has`, and `set`.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Function
	 * @param {Function} func The function to have its output memoized.
	 * @param {Function} [resolver] The function to resolve the cache key.
	 * @returns {Function} Returns the new memoized function.
	 * @example
	 *
	 * var object = { 'a': 1, 'b': 2 };
	 * var other = { 'c': 3, 'd': 4 };
	 *
	 * var values = _.memoize(_.values);
	 * values(object);
	 * // => [1, 2]
	 *
	 * values(other);
	 * // => [3, 4]
	 *
	 * object.a = 2;
	 * values(object);
	 * // => [1, 2]
	 *
	 * // Modify the result cache.
	 * values.cache.set(object, ['a', 'b']);
	 * values(object);
	 * // => ['a', 'b']
	 *
	 * // Replace `_.memoize.Cache`.
	 * _.memoize.Cache = WeakMap;
	 */
	function memoize(func, resolver) {
	  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {
	    throw new TypeError(FUNC_ERROR_TEXT);
	  }
	  var memoized = function() {
	    var args = arguments,
	        key = resolver ? resolver.apply(this, args) : args[0],
	        cache = memoized.cache;
	
	    if (cache.has(key)) {
	      return cache.get(key);
	    }
	    var result = func.apply(this, args);
	    memoized.cache = cache.set(key, result) || cache;
	    return result;
	  };
	  memoized.cache = new (memoize.Cache || MapCache);
	  return memoized;
	}
	
	// Expose `MapCache`.
	memoize.Cache = MapCache;
	
	module.exports = memoize;


/***/ },
/* 682 */
/***/ function(module, exports, __webpack_require__) {

	var baseToString = __webpack_require__(683);
	
	/**
	 * Converts `value` to a string. An empty string is returned for `null`
	 * and `undefined` values. The sign of `-0` is preserved.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to convert.
	 * @returns {string} Returns the converted string.
	 * @example
	 *
	 * _.toString(null);
	 * // => ''
	 *
	 * _.toString(-0);
	 * // => '-0'
	 *
	 * _.toString([1, 2, 3]);
	 * // => '1,2,3'
	 */
	function toString(value) {
	  return value == null ? '' : baseToString(value);
	}
	
	module.exports = toString;


/***/ },
/* 683 */
/***/ function(module, exports, __webpack_require__) {

	var Symbol = __webpack_require__(183),
	    arrayMap = __webpack_require__(684),
	    isArray = __webpack_require__(261),
	    isSymbol = __webpack_require__(678);
	
	/** Used as references for various `Number` constants. */
	var INFINITY = 1 / 0;
	
	/** Used to convert symbols to primitives and strings. */
	var symbolProto = Symbol ? Symbol.prototype : undefined,
	    symbolToString = symbolProto ? symbolProto.toString : undefined;
	
	/**
	 * The base implementation of `_.toString` which doesn't convert nullish
	 * values to empty strings.
	 *
	 * @private
	 * @param {*} value The value to process.
	 * @returns {string} Returns the string.
	 */
	function baseToString(value) {
	  // Exit early for strings to avoid a performance hit in some environments.
	  if (typeof value == 'string') {
	    return value;
	  }
	  if (isArray(value)) {
	    // Recursively convert values (susceptible to call stack limits).
	    return arrayMap(value, baseToString) + '';
	  }
	  if (isSymbol(value)) {
	    return symbolToString ? symbolToString.call(value) : '';
	  }
	  var result = (value + '');
	  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
	}
	
	module.exports = baseToString;


/***/ },
/* 684 */
/***/ function(module, exports) {

	/**
	 * A specialized version of `_.map` for arrays without support for iteratee
	 * shorthands.
	 *
	 * @private
	 * @param {Array} [array] The array to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @returns {Array} Returns the new mapped array.
	 */
	function arrayMap(array, iteratee) {
	  var index = -1,
	      length = array == null ? 0 : array.length,
	      result = Array(length);
	
	  while (++index < length) {
	    result[index] = iteratee(array[index], index, array);
	  }
	  return result;
	}
	
	module.exports = arrayMap;


/***/ },
/* 685 */
/***/ function(module, exports, __webpack_require__) {

	var isSymbol = __webpack_require__(678);
	
	/** Used as references for various `Number` constants. */
	var INFINITY = 1 / 0;
	
	/**
	 * Converts `value` to a string key if it's not a string or symbol.
	 *
	 * @private
	 * @param {*} value The value to inspect.
	 * @returns {string|symbol} Returns the key.
	 */
	function toKey(value) {
	  if (typeof value == 'string' || isSymbol(value)) {
	    return value;
	  }
	  var result = (value + '');
	  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
	}
	
	module.exports = toKey;


/***/ },
/* 686 */
/***/ function(module, exports, __webpack_require__) {

	var baseFlatten = __webpack_require__(687),
	    baseOrderBy = __webpack_require__(690),
	    baseRest = __webpack_require__(281),
	    isIterateeCall = __webpack_require__(289);
	
	/**
	 * Creates an array of elements, sorted in ascending order by the results of
	 * running each element in a collection thru each iteratee. This method
	 * performs a stable sort, that is, it preserves the original sort order of
	 * equal elements. The iteratees are invoked with one argument: (value).
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Collection
	 * @param {Array|Object} collection The collection to iterate over.
	 * @param {...(Function|Function[])} [iteratees=[_.identity]]
	 *  The iteratees to sort by.
	 * @returns {Array} Returns the new sorted array.
	 * @example
	 *
	 * var users = [
	 *   { 'user': 'fred',   'age': 48 },
	 *   { 'user': 'barney', 'age': 36 },
	 *   { 'user': 'fred',   'age': 40 },
	 *   { 'user': 'barney', 'age': 34 }
	 * ];
	 *
	 * _.sortBy(users, [function(o) { return o.user; }]);
	 * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]
	 *
	 * _.sortBy(users, ['user', 'age']);
	 * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]
	 */
	var sortBy = baseRest(function(collection, iteratees) {
	  if (collection == null) {
	    return [];
	  }
	  var length = iteratees.length;
	  if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {
	    iteratees = [];
	  } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {
	    iteratees = [iteratees[0]];
	  }
	  return baseOrderBy(collection, baseFlatten(iteratees, 1), []);
	});
	
	module.exports = sortBy;


/***/ },
/* 687 */
/***/ function(module, exports, __webpack_require__) {

	var arrayPush = __webpack_require__(688),
	    isFlattenable = __webpack_require__(689);
	
	/**
	 * The base implementation of `_.flatten` with support for restricting flattening.
	 *
	 * @private
	 * @param {Array} array The array to flatten.
	 * @param {number} depth The maximum recursion depth.
	 * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.
	 * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.
	 * @param {Array} [result=[]] The initial result value.
	 * @returns {Array} Returns the new flattened array.
	 */
	function baseFlatten(array, depth, predicate, isStrict, result) {
	  var index = -1,
	      length = array.length;
	
	  predicate || (predicate = isFlattenable);
	  result || (result = []);
	
	  while (++index < length) {
	    var value = array[index];
	    if (depth > 0 && predicate(value)) {
	      if (depth > 1) {
	        // Recursively flatten arrays (susceptible to call stack limits).
	        baseFlatten(value, depth - 1, predicate, isStrict, result);
	      } else {
	        arrayPush(result, value);
	      }
	    } else if (!isStrict) {
	      result[result.length] = value;
	    }
	  }
	  return result;
	}
	
	module.exports = baseFlatten;


/***/ },
/* 688 */
/***/ function(module, exports) {

	/**
	 * Appends the elements of `values` to `array`.
	 *
	 * @private
	 * @param {Array} array The array to modify.
	 * @param {Array} values The values to append.
	 * @returns {Array} Returns `array`.
	 */
	function arrayPush(array, values) {
	  var index = -1,
	      length = values.length,
	      offset = array.length;
	
	  while (++index < length) {
	    array[offset + index] = values[index];
	  }
	  return array;
	}
	
	module.exports = arrayPush;


/***/ },
/* 689 */
/***/ function(module, exports, __webpack_require__) {

	var Symbol = __webpack_require__(183),
	    isArguments = __webpack_require__(259),
	    isArray = __webpack_require__(261);
	
	/** Built-in value references. */
	var spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;
	
	/**
	 * Checks if `value` is a flattenable `arguments` object or array.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.
	 */
	function isFlattenable(value) {
	  return isArray(value) || isArguments(value) ||
	    !!(spreadableSymbol && value && value[spreadableSymbol]);
	}
	
	module.exports = isFlattenable;


/***/ },
/* 690 */
/***/ function(module, exports, __webpack_require__) {

	var arrayMap = __webpack_require__(684),
	    baseIteratee = __webpack_require__(691),
	    baseMap = __webpack_require__(729),
	    baseSortBy = __webpack_require__(733),
	    baseUnary = __webpack_require__(269),
	    compareMultiple = __webpack_require__(734),
	    identity = __webpack_require__(282);
	
	/**
	 * The base implementation of `_.orderBy` without param guards.
	 *
	 * @private
	 * @param {Array|Object} collection The collection to iterate over.
	 * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.
	 * @param {string[]} orders The sort orders of `iteratees`.
	 * @returns {Array} Returns the new sorted array.
	 */
	function baseOrderBy(collection, iteratees, orders) {
	  var index = -1;
	  iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(baseIteratee));
	
	  var result = baseMap(collection, function(value, key, collection) {
	    var criteria = arrayMap(iteratees, function(iteratee) {
	      return iteratee(value);
	    });
	    return { 'criteria': criteria, 'index': ++index, 'value': value };
	  });
	
	  return baseSortBy(result, function(object, other) {
	    return compareMultiple(object, other, orders);
	  });
	}
	
	module.exports = baseOrderBy;


/***/ },
/* 691 */
/***/ function(module, exports, __webpack_require__) {

	var baseMatches = __webpack_require__(692),
	    baseMatchesProperty = __webpack_require__(722),
	    identity = __webpack_require__(282),
	    isArray = __webpack_require__(261),
	    property = __webpack_require__(726);
	
	/**
	 * The base implementation of `_.iteratee`.
	 *
	 * @private
	 * @param {*} [value=_.identity] The value to convert to an iteratee.
	 * @returns {Function} Returns the iteratee.
	 */
	function baseIteratee(value) {
	  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.
	  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.
	  if (typeof value == 'function') {
	    return value;
	  }
	  if (value == null) {
	    return identity;
	  }
	  if (typeof value == 'object') {
	    return isArray(value)
	      ? baseMatchesProperty(value[0], value[1])
	      : baseMatches(value);
	  }
	  return property(value);
	}
	
	module.exports = baseIteratee;


/***/ },
/* 692 */
/***/ function(module, exports, __webpack_require__) {

	var baseIsMatch = __webpack_require__(693),
	    getMatchData = __webpack_require__(719),
	    matchesStrictComparable = __webpack_require__(721);
	
	/**
	 * The base implementation of `_.matches` which doesn't clone `source`.
	 *
	 * @private
	 * @param {Object} source The object of property values to match.
	 * @returns {Function} Returns the new spec function.
	 */
	function baseMatches(source) {
	  var matchData = getMatchData(source);
	  if (matchData.length == 1 && matchData[0][2]) {
	    return matchesStrictComparable(matchData[0][0], matchData[0][1]);
	  }
	  return function(object) {
	    return object === source || baseIsMatch(object, source, matchData);
	  };
	}
	
	module.exports = baseMatches;


/***/ },
/* 693 */
/***/ function(module, exports, __webpack_require__) {

	var Stack = __webpack_require__(207),
	    baseIsEqual = __webpack_require__(694);
	
	/** Used to compose bitmasks for value comparisons. */
	var COMPARE_PARTIAL_FLAG = 1,
	    COMPARE_UNORDERED_FLAG = 2;
	
	/**
	 * The base implementation of `_.isMatch` without support for iteratee shorthands.
	 *
	 * @private
	 * @param {Object} object The object to inspect.
	 * @param {Object} source The object of property values to match.
	 * @param {Array} matchData The property names, values, and compare flags to match.
	 * @param {Function} [customizer] The function to customize comparisons.
	 * @returns {boolean} Returns `true` if `object` is a match, else `false`.
	 */
	function baseIsMatch(object, source, matchData, customizer) {
	  var index = matchData.length,
	      length = index,
	      noCustomizer = !customizer;
	
	  if (object == null) {
	    return !length;
	  }
	  object = Object(object);
	  while (index--) {
	    var data = matchData[index];
	    if ((noCustomizer && data[2])
	          ? data[1] !== object[data[0]]
	          : !(data[0] in object)
	        ) {
	      return false;
	    }
	  }
	  while (++index < length) {
	    data = matchData[index];
	    var key = data[0],
	        objValue = object[key],
	        srcValue = data[1];
	
	    if (noCustomizer && data[2]) {
	      if (objValue === undefined && !(key in object)) {
	        return false;
	      }
	    } else {
	      var stack = new Stack;
	      if (customizer) {
	        var result = customizer(objValue, srcValue, key, object, source, stack);
	      }
	      if (!(result === undefined
	            ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)
	            : result
	          )) {
	        return false;
	      }
	    }
	  }
	  return true;
	}
	
	module.exports = baseIsMatch;


/***/ },
/* 694 */
/***/ function(module, exports, __webpack_require__) {

	var baseIsEqualDeep = __webpack_require__(695),
	    isObjectLike = __webpack_require__(190);
	
	/**
	 * The base implementation of `_.isEqual` which supports partial comparisons
	 * and tracks traversed objects.
	 *
	 * @private
	 * @param {*} value The value to compare.
	 * @param {*} other The other value to compare.
	 * @param {boolean} bitmask The bitmask flags.
	 *  1 - Unordered comparison
	 *  2 - Partial comparison
	 * @param {Function} [customizer] The function to customize comparisons.
	 * @param {Object} [stack] Tracks traversed `value` and `other` objects.
	 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
	 */
	function baseIsEqual(value, other, bitmask, customizer, stack) {
	  if (value === other) {
	    return true;
	  }
	  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {
	    return value !== value && other !== other;
	  }
	  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
	}
	
	module.exports = baseIsEqual;


/***/ },
/* 695 */
/***/ function(module, exports, __webpack_require__) {

	var Stack = __webpack_require__(207),
	    equalArrays = __webpack_require__(696),
	    equalByTag = __webpack_require__(702),
	    equalObjects = __webpack_require__(705),
	    getTag = __webpack_require__(714),
	    isArray = __webpack_require__(261),
	    isBuffer = __webpack_require__(265),
	    isTypedArray = __webpack_require__(267);
	
	/** Used to compose bitmasks for value comparisons. */
	var COMPARE_PARTIAL_FLAG = 1;
	
	/** `Object#toString` result references. */
	var argsTag = '[object Arguments]',
	    arrayTag = '[object Array]',
	    objectTag = '[object Object]';
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * A specialized version of `baseIsEqual` for arrays and objects which performs
	 * deep comparisons and tracks traversed objects enabling objects with circular
	 * references to be compared.
	 *
	 * @private
	 * @param {Object} object The object to compare.
	 * @param {Object} other The other object to compare.
	 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
	 * @param {Function} customizer The function to customize comparisons.
	 * @param {Function} equalFunc The function to determine equivalents of values.
	 * @param {Object} [stack] Tracks traversed `object` and `other` objects.
	 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
	 */
	function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
	  var objIsArr = isArray(object),
	      othIsArr = isArray(other),
	      objTag = objIsArr ? arrayTag : getTag(object),
	      othTag = othIsArr ? arrayTag : getTag(other);
	
	  objTag = objTag == argsTag ? objectTag : objTag;
	  othTag = othTag == argsTag ? objectTag : othTag;
	
	  var objIsObj = objTag == objectTag,
	      othIsObj = othTag == objectTag,
	      isSameTag = objTag == othTag;
	
	  if (isSameTag && isBuffer(object)) {
	    if (!isBuffer(other)) {
	      return false;
	    }
	    objIsArr = true;
	    objIsObj = false;
	  }
	  if (isSameTag && !objIsObj) {
	    stack || (stack = new Stack);
	    return (objIsArr || isTypedArray(object))
	      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)
	      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
	  }
	  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
	    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),
	        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');
	
	    if (objIsWrapped || othIsWrapped) {
	      var objUnwrapped = objIsWrapped ? object.value() : object,
	          othUnwrapped = othIsWrapped ? other.value() : other;
	
	      stack || (stack = new Stack);
	      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
	    }
	  }
	  if (!isSameTag) {
	    return false;
	  }
	  stack || (stack = new Stack);
	  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
	}
	
	module.exports = baseIsEqualDeep;


/***/ },
/* 696 */
/***/ function(module, exports, __webpack_require__) {

	var SetCache = __webpack_require__(697),
	    arraySome = __webpack_require__(700),
	    cacheHas = __webpack_require__(701);
	
	/** Used to compose bitmasks for value comparisons. */
	var COMPARE_PARTIAL_FLAG = 1,
	    COMPARE_UNORDERED_FLAG = 2;
	
	/**
	 * A specialized version of `baseIsEqualDeep` for arrays with support for
	 * partial deep comparisons.
	 *
	 * @private
	 * @param {Array} array The array to compare.
	 * @param {Array} other The other array to compare.
	 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
	 * @param {Function} customizer The function to customize comparisons.
	 * @param {Function} equalFunc The function to determine equivalents of values.
	 * @param {Object} stack Tracks traversed `array` and `other` objects.
	 * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
	 */
	function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
	  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
	      arrLength = array.length,
	      othLength = other.length;
	
	  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
	    return false;
	  }
	  // Assume cyclic values are equal.
	  var stacked = stack.get(array);
	  if (stacked && stack.get(other)) {
	    return stacked == other;
	  }
	  var index = -1,
	      result = true,
	      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;
	
	  stack.set(array, other);
	  stack.set(other, array);
	
	  // Ignore non-index properties.
	  while (++index < arrLength) {
	    var arrValue = array[index],
	        othValue = other[index];
	
	    if (customizer) {
	      var compared = isPartial
	        ? customizer(othValue, arrValue, index, other, array, stack)
	        : customizer(arrValue, othValue, index, array, other, stack);
	    }
	    if (compared !== undefined) {
	      if (compared) {
	        continue;
	      }
	      result = false;
	      break;
	    }
	    // Recursively compare arrays (susceptible to call stack limits).
	    if (seen) {
	      if (!arraySome(other, function(othValue, othIndex) {
	            if (!cacheHas(seen, othIndex) &&
	                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
	              return seen.push(othIndex);
	            }
	          })) {
	        result = false;
	        break;
	      }
	    } else if (!(
	          arrValue === othValue ||
	            equalFunc(arrValue, othValue, bitmask, customizer, stack)
	        )) {
	      result = false;
	      break;
	    }
	  }
	  stack['delete'](array);
	  stack['delete'](other);
	  return result;
	}
	
	module.exports = equalArrays;


/***/ },
/* 697 */
/***/ function(module, exports, __webpack_require__) {

	var MapCache = __webpack_require__(230),
	    setCacheAdd = __webpack_require__(698),
	    setCacheHas = __webpack_require__(699);
	
	/**
	 *
	 * Creates an array cache object to store unique values.
	 *
	 * @private
	 * @constructor
	 * @param {Array} [values] The values to cache.
	 */
	function SetCache(values) {
	  var index = -1,
	      length = values == null ? 0 : values.length;
	
	  this.__data__ = new MapCache;
	  while (++index < length) {
	    this.add(values[index]);
	  }
	}
	
	// Add methods to `SetCache`.
	SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
	SetCache.prototype.has = setCacheHas;
	
	module.exports = SetCache;


/***/ },
/* 698 */
/***/ function(module, exports) {

	/** Used to stand-in for `undefined` hash values. */
	var HASH_UNDEFINED = '__lodash_hash_undefined__';
	
	/**
	 * Adds `value` to the array cache.
	 *
	 * @private
	 * @name add
	 * @memberOf SetCache
	 * @alias push
	 * @param {*} value The value to cache.
	 * @returns {Object} Returns the cache instance.
	 */
	function setCacheAdd(value) {
	  this.__data__.set(value, HASH_UNDEFINED);
	  return this;
	}
	
	module.exports = setCacheAdd;


/***/ },
/* 699 */
/***/ function(module, exports) {

	/**
	 * Checks if `value` is in the array cache.
	 *
	 * @private
	 * @name has
	 * @memberOf SetCache
	 * @param {*} value The value to search for.
	 * @returns {number} Returns `true` if `value` is found, else `false`.
	 */
	function setCacheHas(value) {
	  return this.__data__.has(value);
	}
	
	module.exports = setCacheHas;


/***/ },
/* 700 */
/***/ function(module, exports) {

	/**
	 * A specialized version of `_.some` for arrays without support for iteratee
	 * shorthands.
	 *
	 * @private
	 * @param {Array} [array] The array to iterate over.
	 * @param {Function} predicate The function invoked per iteration.
	 * @returns {boolean} Returns `true` if any element passes the predicate check,
	 *  else `false`.
	 */
	function arraySome(array, predicate) {
	  var index = -1,
	      length = array == null ? 0 : array.length;
	
	  while (++index < length) {
	    if (predicate(array[index], index, array)) {
	      return true;
	    }
	  }
	  return false;
	}
	
	module.exports = arraySome;


/***/ },
/* 701 */
/***/ function(module, exports) {

	/**
	 * Checks if a `cache` value for `key` exists.
	 *
	 * @private
	 * @param {Object} cache The cache to query.
	 * @param {string} key The key of the entry to check.
	 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	 */
	function cacheHas(cache, key) {
	  return cache.has(key);
	}
	
	module.exports = cacheHas;


/***/ },
/* 702 */
/***/ function(module, exports, __webpack_require__) {

	var Symbol = __webpack_require__(183),
	    Uint8Array = __webpack_require__(254),
	    eq = __webpack_require__(212),
	    equalArrays = __webpack_require__(696),
	    mapToArray = __webpack_require__(703),
	    setToArray = __webpack_require__(704);
	
	/** Used to compose bitmasks for value comparisons. */
	var COMPARE_PARTIAL_FLAG = 1,
	    COMPARE_UNORDERED_FLAG = 2;
	
	/** `Object#toString` result references. */
	var boolTag = '[object Boolean]',
	    dateTag = '[object Date]',
	    errorTag = '[object Error]',
	    mapTag = '[object Map]',
	    numberTag = '[object Number]',
	    regexpTag = '[object RegExp]',
	    setTag = '[object Set]',
	    stringTag = '[object String]',
	    symbolTag = '[object Symbol]';
	
	var arrayBufferTag = '[object ArrayBuffer]',
	    dataViewTag = '[object DataView]';
	
	/** Used to convert symbols to primitives and strings. */
	var symbolProto = Symbol ? Symbol.prototype : undefined,
	    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;
	
	/**
	 * A specialized version of `baseIsEqualDeep` for comparing objects of
	 * the same `toStringTag`.
	 *
	 * **Note:** This function only supports comparing values with tags of
	 * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
	 *
	 * @private
	 * @param {Object} object The object to compare.
	 * @param {Object} other The other object to compare.
	 * @param {string} tag The `toStringTag` of the objects to compare.
	 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
	 * @param {Function} customizer The function to customize comparisons.
	 * @param {Function} equalFunc The function to determine equivalents of values.
	 * @param {Object} stack Tracks traversed `object` and `other` objects.
	 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
	 */
	function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
	  switch (tag) {
	    case dataViewTag:
	      if ((object.byteLength != other.byteLength) ||
	          (object.byteOffset != other.byteOffset)) {
	        return false;
	      }
	      object = object.buffer;
	      other = other.buffer;
	
	    case arrayBufferTag:
	      if ((object.byteLength != other.byteLength) ||
	          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {
	        return false;
	      }
	      return true;
	
	    case boolTag:
	    case dateTag:
	    case numberTag:
	      // Coerce booleans to `1` or `0` and dates to milliseconds.
	      // Invalid dates are coerced to `NaN`.
	      return eq(+object, +other);
	
	    case errorTag:
	      return object.name == other.name && object.message == other.message;
	
	    case regexpTag:
	    case stringTag:
	      // Coerce regexes to strings and treat strings, primitives and objects,
	      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring
	      // for more details.
	      return object == (other + '');
	
	    case mapTag:
	      var convert = mapToArray;
	
	    case setTag:
	      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
	      convert || (convert = setToArray);
	
	      if (object.size != other.size && !isPartial) {
	        return false;
	      }
	      // Assume cyclic values are equal.
	      var stacked = stack.get(object);
	      if (stacked) {
	        return stacked == other;
	      }
	      bitmask |= COMPARE_UNORDERED_FLAG;
	
	      // Recursively compare objects (susceptible to call stack limits).
	      stack.set(object, other);
	      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
	      stack['delete'](object);
	      return result;
	
	    case symbolTag:
	      if (symbolValueOf) {
	        return symbolValueOf.call(object) == symbolValueOf.call(other);
	      }
	  }
	  return false;
	}
	
	module.exports = equalByTag;


/***/ },
/* 703 */
/***/ function(module, exports) {

	/**
	 * Converts `map` to its key-value pairs.
	 *
	 * @private
	 * @param {Object} map The map to convert.
	 * @returns {Array} Returns the key-value pairs.
	 */
	function mapToArray(map) {
	  var index = -1,
	      result = Array(map.size);
	
	  map.forEach(function(value, key) {
	    result[++index] = [key, value];
	  });
	  return result;
	}
	
	module.exports = mapToArray;


/***/ },
/* 704 */
/***/ function(module, exports) {

	/**
	 * Converts `set` to an array of its values.
	 *
	 * @private
	 * @param {Object} set The set to convert.
	 * @returns {Array} Returns the values.
	 */
	function setToArray(set) {
	  var index = -1,
	      result = Array(set.size);
	
	  set.forEach(function(value) {
	    result[++index] = value;
	  });
	  return result;
	}
	
	module.exports = setToArray;


/***/ },
/* 705 */
/***/ function(module, exports, __webpack_require__) {

	var getAllKeys = __webpack_require__(706);
	
	/** Used to compose bitmasks for value comparisons. */
	var COMPARE_PARTIAL_FLAG = 1;
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * A specialized version of `baseIsEqualDeep` for objects with support for
	 * partial deep comparisons.
	 *
	 * @private
	 * @param {Object} object The object to compare.
	 * @param {Object} other The other object to compare.
	 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
	 * @param {Function} customizer The function to customize comparisons.
	 * @param {Function} equalFunc The function to determine equivalents of values.
	 * @param {Object} stack Tracks traversed `object` and `other` objects.
	 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
	 */
	function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
	  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
	      objProps = getAllKeys(object),
	      objLength = objProps.length,
	      othProps = getAllKeys(other),
	      othLength = othProps.length;
	
	  if (objLength != othLength && !isPartial) {
	    return false;
	  }
	  var index = objLength;
	  while (index--) {
	    var key = objProps[index];
	    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
	      return false;
	    }
	  }
	  // Assume cyclic values are equal.
	  var stacked = stack.get(object);
	  if (stacked && stack.get(other)) {
	    return stacked == other;
	  }
	  var result = true;
	  stack.set(object, other);
	  stack.set(other, object);
	
	  var skipCtor = isPartial;
	  while (++index < objLength) {
	    key = objProps[index];
	    var objValue = object[key],
	        othValue = other[key];
	
	    if (customizer) {
	      var compared = isPartial
	        ? customizer(othValue, objValue, key, other, object, stack)
	        : customizer(objValue, othValue, key, object, other, stack);
	    }
	    // Recursively compare objects (susceptible to call stack limits).
	    if (!(compared === undefined
	          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))
	          : compared
	        )) {
	      result = false;
	      break;
	    }
	    skipCtor || (skipCtor = key == 'constructor');
	  }
	  if (result && !skipCtor) {
	    var objCtor = object.constructor,
	        othCtor = other.constructor;
	
	    // Non `Object` object instances with different constructors are not equal.
	    if (objCtor != othCtor &&
	        ('constructor' in object && 'constructor' in other) &&
	        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&
	          typeof othCtor == 'function' && othCtor instanceof othCtor)) {
	      result = false;
	    }
	  }
	  stack['delete'](object);
	  stack['delete'](other);
	  return result;
	}
	
	module.exports = equalObjects;


/***/ },
/* 706 */
/***/ function(module, exports, __webpack_require__) {

	var baseGetAllKeys = __webpack_require__(707),
	    getSymbols = __webpack_require__(708),
	    keys = __webpack_require__(711);
	
	/**
	 * Creates an array of own enumerable property names and symbols of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names and symbols.
	 */
	function getAllKeys(object) {
	  return baseGetAllKeys(object, keys, getSymbols);
	}
	
	module.exports = getAllKeys;


/***/ },
/* 707 */
/***/ function(module, exports, __webpack_require__) {

	var arrayPush = __webpack_require__(688),
	    isArray = __webpack_require__(261);
	
	/**
	 * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
	 * `keysFunc` and `symbolsFunc` to get the enumerable property names and
	 * symbols of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @param {Function} keysFunc The function to get the keys of `object`.
	 * @param {Function} symbolsFunc The function to get the symbols of `object`.
	 * @returns {Array} Returns the array of property names and symbols.
	 */
	function baseGetAllKeys(object, keysFunc, symbolsFunc) {
	  var result = keysFunc(object);
	  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
	}
	
	module.exports = baseGetAllKeys;


/***/ },
/* 708 */
/***/ function(module, exports, __webpack_require__) {

	var arrayFilter = __webpack_require__(709),
	    stubArray = __webpack_require__(710);
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Built-in value references. */
	var propertyIsEnumerable = objectProto.propertyIsEnumerable;
	
	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeGetSymbols = Object.getOwnPropertySymbols;
	
	/**
	 * Creates an array of the own enumerable symbols of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of symbols.
	 */
	var getSymbols = !nativeGetSymbols ? stubArray : function(object) {
	  if (object == null) {
	    return [];
	  }
	  object = Object(object);
	  return arrayFilter(nativeGetSymbols(object), function(symbol) {
	    return propertyIsEnumerable.call(object, symbol);
	  });
	};
	
	module.exports = getSymbols;


/***/ },
/* 709 */
/***/ function(module, exports) {

	/**
	 * A specialized version of `_.filter` for arrays without support for
	 * iteratee shorthands.
	 *
	 * @private
	 * @param {Array} [array] The array to iterate over.
	 * @param {Function} predicate The function invoked per iteration.
	 * @returns {Array} Returns the new filtered array.
	 */
	function arrayFilter(array, predicate) {
	  var index = -1,
	      length = array == null ? 0 : array.length,
	      resIndex = 0,
	      result = [];
	
	  while (++index < length) {
	    var value = array[index];
	    if (predicate(value, index, array)) {
	      result[resIndex++] = value;
	    }
	  }
	  return result;
	}
	
	module.exports = arrayFilter;


/***/ },
/* 710 */
/***/ function(module, exports) {

	/**
	 * This method returns a new empty array.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.13.0
	 * @category Util
	 * @returns {Array} Returns the new empty array.
	 * @example
	 *
	 * var arrays = _.times(2, _.stubArray);
	 *
	 * console.log(arrays);
	 * // => [[], []]
	 *
	 * console.log(arrays[0] === arrays[1]);
	 * // => false
	 */
	function stubArray() {
	  return [];
	}
	
	module.exports = stubArray;


/***/ },
/* 711 */
/***/ function(module, exports, __webpack_require__) {

	var arrayLikeKeys = __webpack_require__(275),
	    baseKeys = __webpack_require__(712),
	    isArrayLike = __webpack_require__(263);
	
	/**
	 * Creates an array of the own enumerable property names of `object`.
	 *
	 * **Note:** Non-object values are coerced to objects. See the
	 * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
	 * for more details.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Object
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names.
	 * @example
	 *
	 * function Foo() {
	 *   this.a = 1;
	 *   this.b = 2;
	 * }
	 *
	 * Foo.prototype.c = 3;
	 *
	 * _.keys(new Foo);
	 * // => ['a', 'b'] (iteration order is not guaranteed)
	 *
	 * _.keys('hi');
	 * // => ['0', '1']
	 */
	function keys(object) {
	  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
	}
	
	module.exports = keys;


/***/ },
/* 712 */
/***/ function(module, exports, __webpack_require__) {

	var isPrototype = __webpack_require__(258),
	    nativeKeys = __webpack_require__(713);
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names.
	 */
	function baseKeys(object) {
	  if (!isPrototype(object)) {
	    return nativeKeys(object);
	  }
	  var result = [];
	  for (var key in Object(object)) {
	    if (hasOwnProperty.call(object, key) && key != 'constructor') {
	      result.push(key);
	    }
	  }
	  return result;
	}
	
	module.exports = baseKeys;


/***/ },
/* 713 */
/***/ function(module, exports, __webpack_require__) {

	var overArg = __webpack_require__(189);
	
	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeKeys = overArg(Object.keys, Object);
	
	module.exports = nativeKeys;


/***/ },
/* 714 */
/***/ function(module, exports, __webpack_require__) {

	var DataView = __webpack_require__(715),
	    Map = __webpack_require__(221),
	    Promise = __webpack_require__(716),
	    Set = __webpack_require__(717),
	    WeakMap = __webpack_require__(718),
	    baseGetTag = __webpack_require__(182),
	    toSource = __webpack_require__(228);
	
	/** `Object#toString` result references. */
	var mapTag = '[object Map]',
	    objectTag = '[object Object]',
	    promiseTag = '[object Promise]',
	    setTag = '[object Set]',
	    weakMapTag = '[object WeakMap]';
	
	var dataViewTag = '[object DataView]';
	
	/** Used to detect maps, sets, and weakmaps. */
	var dataViewCtorString = toSource(DataView),
	    mapCtorString = toSource(Map),
	    promiseCtorString = toSource(Promise),
	    setCtorString = toSource(Set),
	    weakMapCtorString = toSource(WeakMap);
	
	/**
	 * Gets the `toStringTag` of `value`.
	 *
	 * @private
	 * @param {*} value The value to query.
	 * @returns {string} Returns the `toStringTag`.
	 */
	var getTag = baseGetTag;
	
	// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.
	if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||
	    (Map && getTag(new Map) != mapTag) ||
	    (Promise && getTag(Promise.resolve()) != promiseTag) ||
	    (Set && getTag(new Set) != setTag) ||
	    (WeakMap && getTag(new WeakMap) != weakMapTag)) {
	  getTag = function(value) {
	    var result = baseGetTag(value),
	        Ctor = result == objectTag ? value.constructor : undefined,
	        ctorString = Ctor ? toSource(Ctor) : '';
	
	    if (ctorString) {
	      switch (ctorString) {
	        case dataViewCtorString: return dataViewTag;
	        case mapCtorString: return mapTag;
	        case promiseCtorString: return promiseTag;
	        case setCtorString: return setTag;
	        case weakMapCtorString: return weakMapTag;
	      }
	    }
	    return result;
	  };
	}
	
	module.exports = getTag;


/***/ },
/* 715 */
/***/ function(module, exports, __webpack_require__) {

	var getNative = __webpack_require__(222),
	    root = __webpack_require__(184);
	
	/* Built-in method references that are verified to be native. */
	var DataView = getNative(root, 'DataView');
	
	module.exports = DataView;


/***/ },
/* 716 */
/***/ function(module, exports, __webpack_require__) {

	var getNative = __webpack_require__(222),
	    root = __webpack_require__(184);
	
	/* Built-in method references that are verified to be native. */
	var Promise = getNative(root, 'Promise');
	
	module.exports = Promise;


/***/ },
/* 717 */
/***/ function(module, exports, __webpack_require__) {

	var getNative = __webpack_require__(222),
	    root = __webpack_require__(184);
	
	/* Built-in method references that are verified to be native. */
	var Set = getNative(root, 'Set');
	
	module.exports = Set;


/***/ },
/* 718 */
/***/ function(module, exports, __webpack_require__) {

	var getNative = __webpack_require__(222),
	    root = __webpack_require__(184);
	
	/* Built-in method references that are verified to be native. */
	var WeakMap = getNative(root, 'WeakMap');
	
	module.exports = WeakMap;


/***/ },
/* 719 */
/***/ function(module, exports, __webpack_require__) {

	var isStrictComparable = __webpack_require__(720),
	    keys = __webpack_require__(711);
	
	/**
	 * Gets the property names, values, and compare flags of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the match data of `object`.
	 */
	function getMatchData(object) {
	  var result = keys(object),
	      length = result.length;
	
	  while (length--) {
	    var key = result[length],
	        value = object[key];
	
	    result[length] = [key, value, isStrictComparable(value)];
	  }
	  return result;
	}
	
	module.exports = getMatchData;


/***/ },
/* 720 */
/***/ function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(225);
	
	/**
	 * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` if suitable for strict
	 *  equality comparisons, else `false`.
	 */
	function isStrictComparable(value) {
	  return value === value && !isObject(value);
	}
	
	module.exports = isStrictComparable;


/***/ },
/* 721 */
/***/ function(module, exports) {

	/**
	 * A specialized version of `matchesProperty` for source values suitable
	 * for strict equality comparisons, i.e. `===`.
	 *
	 * @private
	 * @param {string} key The key of the property to get.
	 * @param {*} srcValue The value to match.
	 * @returns {Function} Returns the new spec function.
	 */
	function matchesStrictComparable(key, srcValue) {
	  return function(object) {
	    if (object == null) {
	      return false;
	    }
	    return object[key] === srcValue &&
	      (srcValue !== undefined || (key in Object(object)));
	  };
	}
	
	module.exports = matchesStrictComparable;


/***/ },
/* 722 */
/***/ function(module, exports, __webpack_require__) {

	var baseIsEqual = __webpack_require__(694),
	    get = __webpack_require__(674),
	    hasIn = __webpack_require__(723),
	    isKey = __webpack_require__(677),
	    isStrictComparable = __webpack_require__(720),
	    matchesStrictComparable = __webpack_require__(721),
	    toKey = __webpack_require__(685);
	
	/** Used to compose bitmasks for value comparisons. */
	var COMPARE_PARTIAL_FLAG = 1,
	    COMPARE_UNORDERED_FLAG = 2;
	
	/**
	 * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.
	 *
	 * @private
	 * @param {string} path The path of the property to get.
	 * @param {*} srcValue The value to match.
	 * @returns {Function} Returns the new spec function.
	 */
	function baseMatchesProperty(path, srcValue) {
	  if (isKey(path) && isStrictComparable(srcValue)) {
	    return matchesStrictComparable(toKey(path), srcValue);
	  }
	  return function(object) {
	    var objValue = get(object, path);
	    return (objValue === undefined && objValue === srcValue)
	      ? hasIn(object, path)
	      : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
	  };
	}
	
	module.exports = baseMatchesProperty;


/***/ },
/* 723 */
/***/ function(module, exports, __webpack_require__) {

	var baseHasIn = __webpack_require__(724),
	    hasPath = __webpack_require__(725);
	
	/**
	 * Checks if `path` is a direct or inherited property of `object`.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Object
	 * @param {Object} object The object to query.
	 * @param {Array|string} path The path to check.
	 * @returns {boolean} Returns `true` if `path` exists, else `false`.
	 * @example
	 *
	 * var object = _.create({ 'a': _.create({ 'b': 2 }) });
	 *
	 * _.hasIn(object, 'a');
	 * // => true
	 *
	 * _.hasIn(object, 'a.b');
	 * // => true
	 *
	 * _.hasIn(object, ['a', 'b']);
	 * // => true
	 *
	 * _.hasIn(object, 'b');
	 * // => false
	 */
	function hasIn(object, path) {
	  return object != null && hasPath(object, path, baseHasIn);
	}
	
	module.exports = hasIn;


/***/ },
/* 724 */
/***/ function(module, exports) {

	/**
	 * The base implementation of `_.hasIn` without support for deep paths.
	 *
	 * @private
	 * @param {Object} [object] The object to query.
	 * @param {Array|string} key The key to check.
	 * @returns {boolean} Returns `true` if `key` exists, else `false`.
	 */
	function baseHasIn(object, key) {
	  return object != null && key in Object(object);
	}
	
	module.exports = baseHasIn;


/***/ },
/* 725 */
/***/ function(module, exports, __webpack_require__) {

	var castPath = __webpack_require__(676),
	    isArguments = __webpack_require__(259),
	    isArray = __webpack_require__(261),
	    isIndex = __webpack_require__(277),
	    isLength = __webpack_require__(264),
	    toKey = __webpack_require__(685);
	
	/**
	 * Checks if `path` exists on `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @param {Array|string} path The path to check.
	 * @param {Function} hasFunc The function to check properties.
	 * @returns {boolean} Returns `true` if `path` exists, else `false`.
	 */
	function hasPath(object, path, hasFunc) {
	  path = castPath(path, object);
	
	  var index = -1,
	      length = path.length,
	      result = false;
	
	  while (++index < length) {
	    var key = toKey(path[index]);
	    if (!(result = object != null && hasFunc(object, key))) {
	      break;
	    }
	    object = object[key];
	  }
	  if (result || ++index != length) {
	    return result;
	  }
	  length = object == null ? 0 : object.length;
	  return !!length && isLength(length) && isIndex(key, length) &&
	    (isArray(object) || isArguments(object));
	}
	
	module.exports = hasPath;


/***/ },
/* 726 */
/***/ function(module, exports, __webpack_require__) {

	var baseProperty = __webpack_require__(727),
	    basePropertyDeep = __webpack_require__(728),
	    isKey = __webpack_require__(677),
	    toKey = __webpack_require__(685);
	
	/**
	 * Creates a function that returns the value at `path` of a given object.
	 *
	 * @static
	 * @memberOf _
	 * @since 2.4.0
	 * @category Util
	 * @param {Array|string} path The path of the property to get.
	 * @returns {Function} Returns the new accessor function.
	 * @example
	 *
	 * var objects = [
	 *   { 'a': { 'b': 2 } },
	 *   { 'a': { 'b': 1 } }
	 * ];
	 *
	 * _.map(objects, _.property('a.b'));
	 * // => [2, 1]
	 *
	 * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');
	 * // => [1, 2]
	 */
	function property(path) {
	  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
	}
	
	module.exports = property;


/***/ },
/* 727 */
/***/ function(module, exports) {

	/**
	 * The base implementation of `_.property` without support for deep paths.
	 *
	 * @private
	 * @param {string} key The key of the property to get.
	 * @returns {Function} Returns the new accessor function.
	 */
	function baseProperty(key) {
	  return function(object) {
	    return object == null ? undefined : object[key];
	  };
	}
	
	module.exports = baseProperty;


/***/ },
/* 728 */
/***/ function(module, exports, __webpack_require__) {

	var baseGet = __webpack_require__(675);
	
	/**
	 * A specialized version of `baseProperty` which supports deep paths.
	 *
	 * @private
	 * @param {Array|string} path The path of the property to get.
	 * @returns {Function} Returns the new accessor function.
	 */
	function basePropertyDeep(path) {
	  return function(object) {
	    return baseGet(object, path);
	  };
	}
	
	module.exports = basePropertyDeep;


/***/ },
/* 729 */
/***/ function(module, exports, __webpack_require__) {

	var baseEach = __webpack_require__(730),
	    isArrayLike = __webpack_require__(263);
	
	/**
	 * The base implementation of `_.map` without support for iteratee shorthands.
	 *
	 * @private
	 * @param {Array|Object} collection The collection to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @returns {Array} Returns the new mapped array.
	 */
	function baseMap(collection, iteratee) {
	  var index = -1,
	      result = isArrayLike(collection) ? Array(collection.length) : [];
	
	  baseEach(collection, function(value, key, collection) {
	    result[++index] = iteratee(value, key, collection);
	  });
	  return result;
	}
	
	module.exports = baseMap;


/***/ },
/* 730 */
/***/ function(module, exports, __webpack_require__) {

	var baseForOwn = __webpack_require__(731),
	    createBaseEach = __webpack_require__(732);
	
	/**
	 * The base implementation of `_.forEach` without support for iteratee shorthands.
	 *
	 * @private
	 * @param {Array|Object} collection The collection to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @returns {Array|Object} Returns `collection`.
	 */
	var baseEach = createBaseEach(baseForOwn);
	
	module.exports = baseEach;


/***/ },
/* 731 */
/***/ function(module, exports, __webpack_require__) {

	var baseFor = __webpack_require__(248),
	    keys = __webpack_require__(711);
	
	/**
	 * The base implementation of `_.forOwn` without support for iteratee shorthands.
	 *
	 * @private
	 * @param {Object} object The object to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @returns {Object} Returns `object`.
	 */
	function baseForOwn(object, iteratee) {
	  return object && baseFor(object, iteratee, keys);
	}
	
	module.exports = baseForOwn;


/***/ },
/* 732 */
/***/ function(module, exports, __webpack_require__) {

	var isArrayLike = __webpack_require__(263);
	
	/**
	 * Creates a `baseEach` or `baseEachRight` function.
	 *
	 * @private
	 * @param {Function} eachFunc The function to iterate over a collection.
	 * @param {boolean} [fromRight] Specify iterating from right to left.
	 * @returns {Function} Returns the new base function.
	 */
	function createBaseEach(eachFunc, fromRight) {
	  return function(collection, iteratee) {
	    if (collection == null) {
	      return collection;
	    }
	    if (!isArrayLike(collection)) {
	      return eachFunc(collection, iteratee);
	    }
	    var length = collection.length,
	        index = fromRight ? length : -1,
	        iterable = Object(collection);
	
	    while ((fromRight ? index-- : ++index < length)) {
	      if (iteratee(iterable[index], index, iterable) === false) {
	        break;
	      }
	    }
	    return collection;
	  };
	}
	
	module.exports = createBaseEach;


/***/ },
/* 733 */
/***/ function(module, exports) {

	/**
	 * The base implementation of `_.sortBy` which uses `comparer` to define the
	 * sort order of `array` and replaces criteria objects with their corresponding
	 * values.
	 *
	 * @private
	 * @param {Array} array The array to sort.
	 * @param {Function} comparer The function to define sort order.
	 * @returns {Array} Returns `array`.
	 */
	function baseSortBy(array, comparer) {
	  var length = array.length;
	
	  array.sort(comparer);
	  while (length--) {
	    array[length] = array[length].value;
	  }
	  return array;
	}
	
	module.exports = baseSortBy;


/***/ },
/* 734 */
/***/ function(module, exports, __webpack_require__) {

	var compareAscending = __webpack_require__(735);
	
	/**
	 * Used by `_.orderBy` to compare multiple properties of a value to another
	 * and stable sort them.
	 *
	 * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,
	 * specify an order of "desc" for descending or "asc" for ascending sort order
	 * of corresponding values.
	 *
	 * @private
	 * @param {Object} object The object to compare.
	 * @param {Object} other The other object to compare.
	 * @param {boolean[]|string[]} orders The order to sort by for each property.
	 * @returns {number} Returns the sort order indicator for `object`.
	 */
	function compareMultiple(object, other, orders) {
	  var index = -1,
	      objCriteria = object.criteria,
	      othCriteria = other.criteria,
	      length = objCriteria.length,
	      ordersLength = orders.length;
	
	  while (++index < length) {
	    var result = compareAscending(objCriteria[index], othCriteria[index]);
	    if (result) {
	      if (index >= ordersLength) {
	        return result;
	      }
	      var order = orders[index];
	      return result * (order == 'desc' ? -1 : 1);
	    }
	  }
	  // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications
	  // that causes it, under certain circumstances, to provide the same value for
	  // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247
	  // for more details.
	  //
	  // This also ensures a stable sort in V8 and other engines.
	  // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.
	  return object.index - other.index;
	}
	
	module.exports = compareMultiple;


/***/ },
/* 735 */
/***/ function(module, exports, __webpack_require__) {

	var isSymbol = __webpack_require__(678);
	
	/**
	 * Compares values to sort them in ascending order.
	 *
	 * @private
	 * @param {*} value The value to compare.
	 * @param {*} other The other value to compare.
	 * @returns {number} Returns the sort order indicator for `value`.
	 */
	function compareAscending(value, other) {
	  if (value !== other) {
	    var valIsDefined = value !== undefined,
	        valIsNull = value === null,
	        valIsReflexive = value === value,
	        valIsSymbol = isSymbol(value);
	
	    var othIsDefined = other !== undefined,
	        othIsNull = other === null,
	        othIsReflexive = other === other,
	        othIsSymbol = isSymbol(other);
	
	    if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||
	        (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||
	        (valIsNull && othIsDefined && othIsReflexive) ||
	        (!valIsDefined && othIsReflexive) ||
	        !valIsReflexive) {
	      return 1;
	    }
	    if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||
	        (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||
	        (othIsNull && valIsDefined && valIsReflexive) ||
	        (!othIsDefined && valIsReflexive) ||
	        !othIsReflexive) {
	      return -1;
	    }
	  }
	  return 0;
	}
	
	module.exports = compareAscending;


/***/ },
/* 736 */
/***/ function(module, exports, __webpack_require__) {

	var isNumber = __webpack_require__(737);
	
	/**
	 * Checks if `value` is `NaN`.
	 *
	 * **Note:** This method is based on
	 * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as
	 * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for
	 * `undefined` and other non-number values.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
	 * @example
	 *
	 * _.isNaN(NaN);
	 * // => true
	 *
	 * _.isNaN(new Number(NaN));
	 * // => true
	 *
	 * isNaN(undefined);
	 * // => true
	 *
	 * _.isNaN(undefined);
	 * // => false
	 */
	function isNaN(value) {
	  // An `NaN` primitive is the only value that is not equal to itself.
	  // Perform the `toStringTag` check first to avoid errors with some
	  // ActiveX objects in IE.
	  return isNumber(value) && value != +value;
	}
	
	module.exports = isNaN;


/***/ },
/* 737 */
/***/ function(module, exports, __webpack_require__) {

	var baseGetTag = __webpack_require__(182),
	    isObjectLike = __webpack_require__(190);
	
	/** `Object#toString` result references. */
	var numberTag = '[object Number]';
	
	/**
	 * Checks if `value` is classified as a `Number` primitive or object.
	 *
	 * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are
	 * classified as numbers, use the `_.isFinite` method.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a number, else `false`.
	 * @example
	 *
	 * _.isNumber(3);
	 * // => true
	 *
	 * _.isNumber(Number.MIN_VALUE);
	 * // => true
	 *
	 * _.isNumber(Infinity);
	 * // => true
	 *
	 * _.isNumber('3');
	 * // => false
	 */
	function isNumber(value) {
	  return typeof value == 'number' ||
	    (isObjectLike(value) && baseGetTag(value) == numberTag);
	}
	
	module.exports = isNumber;


/***/ },
/* 738 */
/***/ function(module, exports, __webpack_require__) {

	// https://d3js.org/d3-scale/ Version 1.0.4. Copyright 2016 Mike Bostock.
	(function (global, factory) {
	   true ? factory(exports, __webpack_require__(739), __webpack_require__(740), __webpack_require__(741), __webpack_require__(743), __webpack_require__(744), __webpack_require__(745), __webpack_require__(742)) :
	  typeof define === 'function' && define.amd ? define(['exports', 'd3-array', 'd3-collection', 'd3-interpolate', 'd3-format', 'd3-time', 'd3-time-format', 'd3-color'], factory) :
	  (factory((global.d3 = global.d3 || {}),global.d3,global.d3,global.d3,global.d3,global.d3,global.d3,global.d3));
	}(this, (function (exports,d3Array,d3Collection,d3Interpolate,d3Format,d3Time,d3TimeFormat,d3Color) { 'use strict';
	
	var array = Array.prototype;
	
	var map$1 = array.map;
	var slice = array.slice;
	
	var implicit = {name: "implicit"};
	
	function ordinal(range$$1) {
	  var index = d3Collection.map(),
	      domain = [],
	      unknown = implicit;
	
	  range$$1 = range$$1 == null ? [] : slice.call(range$$1);
	
	  function scale(d) {
	    var key = d + "", i = index.get(key);
	    if (!i) {
	      if (unknown !== implicit) return unknown;
	      index.set(key, i = domain.push(d));
	    }
	    return range$$1[(i - 1) % range$$1.length];
	  }
	
	  scale.domain = function(_) {
	    if (!arguments.length) return domain.slice();
	    domain = [], index = d3Collection.map();
	    var i = -1, n = _.length, d, key;
	    while (++i < n) if (!index.has(key = (d = _[i]) + "")) index.set(key, domain.push(d));
	    return scale;
	  };
	
	  scale.range = function(_) {
	    return arguments.length ? (range$$1 = slice.call(_), scale) : range$$1.slice();
	  };
	
	  scale.unknown = function(_) {
	    return arguments.length ? (unknown = _, scale) : unknown;
	  };
	
	  scale.copy = function() {
	    return ordinal()
	        .domain(domain)
	        .range(range$$1)
	        .unknown(unknown);
	  };
	
	  return scale;
	}
	
	function band() {
	  var scale = ordinal().unknown(undefined),
	      domain = scale.domain,
	      ordinalRange = scale.range,
	      range$$1 = [0, 1],
	      step,
	      bandwidth,
	      round = false,
	      paddingInner = 0,
	      paddingOuter = 0,
	      align = 0.5;
	
	  delete scale.unknown;
	
	  function rescale() {
	    var n = domain().length,
	        reverse = range$$1[1] < range$$1[0],
	        start = range$$1[reverse - 0],
	        stop = range$$1[1 - reverse];
	    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);
	    if (round) step = Math.floor(step);
	    start += (stop - start - step * (n - paddingInner)) * align;
	    bandwidth = step * (1 - paddingInner);
	    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);
	    var values = d3Array.range(n).map(function(i) { return start + step * i; });
	    return ordinalRange(reverse ? values.reverse() : values);
	  }
	
	  scale.domain = function(_) {
	    return arguments.length ? (domain(_), rescale()) : domain();
	  };
	
	  scale.range = function(_) {
	    return arguments.length ? (range$$1 = [+_[0], +_[1]], rescale()) : range$$1.slice();
	  };
	
	  scale.rangeRound = function(_) {
	    return range$$1 = [+_[0], +_[1]], round = true, rescale();
	  };
	
	  scale.bandwidth = function() {
	    return bandwidth;
	  };
	
	  scale.step = function() {
	    return step;
	  };
	
	  scale.round = function(_) {
	    return arguments.length ? (round = !!_, rescale()) : round;
	  };
	
	  scale.padding = function(_) {
	    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;
	  };
	
	  scale.paddingInner = function(_) {
	    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;
	  };
	
	  scale.paddingOuter = function(_) {
	    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;
	  };
	
	  scale.align = function(_) {
	    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;
	  };
	
	  scale.copy = function() {
	    return band()
	        .domain(domain())
	        .range(range$$1)
	        .round(round)
	        .paddingInner(paddingInner)
	        .paddingOuter(paddingOuter)
	        .align(align);
	  };
	
	  return rescale();
	}
	
	function pointish(scale) {
	  var copy = scale.copy;
	
	  scale.padding = scale.paddingOuter;
	  delete scale.paddingInner;
	  delete scale.paddingOuter;
	
	  scale.copy = function() {
	    return pointish(copy());
	  };
	
	  return scale;
	}
	
	function point() {
	  return pointish(band().paddingInner(1));
	}
	
	var constant = function(x) {
	  return function() {
	    return x;
	  };
	};
	
	var number = function(x) {
	  return +x;
	};
	
	var unit = [0, 1];
	
	function deinterpolateLinear(a, b) {
	  return (b -= (a = +a))
	      ? function(x) { return (x - a) / b; }
	      : constant(b);
	}
	
	function deinterpolateClamp(deinterpolate) {
	  return function(a, b) {
	    var d = deinterpolate(a = +a, b = +b);
	    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };
	  };
	}
	
	function reinterpolateClamp(reinterpolate) {
	  return function(a, b) {
	    var r = reinterpolate(a = +a, b = +b);
	    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };
	  };
	}
	
	function bimap(domain, range$$1, deinterpolate, reinterpolate) {
	  var d0 = domain[0], d1 = domain[1], r0 = range$$1[0], r1 = range$$1[1];
	  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);
	  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);
	  return function(x) { return r0(d0(x)); };
	}
	
	function polymap(domain, range$$1, deinterpolate, reinterpolate) {
	  var j = Math.min(domain.length, range$$1.length) - 1,
	      d = new Array(j),
	      r = new Array(j),
	      i = -1;
	
	  // Reverse descending domains.
	  if (domain[j] < domain[0]) {
	    domain = domain.slice().reverse();
	    range$$1 = range$$1.slice().reverse();
	  }
	
	  while (++i < j) {
	    d[i] = deinterpolate(domain[i], domain[i + 1]);
	    r[i] = reinterpolate(range$$1[i], range$$1[i + 1]);
	  }
	
	  return function(x) {
	    var i = d3Array.bisect(domain, x, 1, j) - 1;
	    return r[i](d[i](x));
	  };
	}
	
	function copy(source, target) {
	  return target
	      .domain(source.domain())
	      .range(source.range())
	      .interpolate(source.interpolate())
	      .clamp(source.clamp());
	}
	
	// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].
	// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].
	function continuous(deinterpolate, reinterpolate) {
	  var domain = unit,
	      range$$1 = unit,
	      interpolate$$1 = d3Interpolate.interpolate,
	      clamp = false,
	      piecewise,
	      output,
	      input;
	
	  function rescale() {
	    piecewise = Math.min(domain.length, range$$1.length) > 2 ? polymap : bimap;
	    output = input = null;
	    return scale;
	  }
	
	  function scale(x) {
	    return (output || (output = piecewise(domain, range$$1, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate$$1)))(+x);
	  }
	
	  scale.invert = function(y) {
	    return (input || (input = piecewise(range$$1, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);
	  };
	
	  scale.domain = function(_) {
	    return arguments.length ? (domain = map$1.call(_, number), rescale()) : domain.slice();
	  };
	
	  scale.range = function(_) {
	    return arguments.length ? (range$$1 = slice.call(_), rescale()) : range$$1.slice();
	  };
	
	  scale.rangeRound = function(_) {
	    return range$$1 = slice.call(_), interpolate$$1 = d3Interpolate.interpolateRound, rescale();
	  };
	
	  scale.clamp = function(_) {
	    return arguments.length ? (clamp = !!_, rescale()) : clamp;
	  };
	
	  scale.interpolate = function(_) {
	    return arguments.length ? (interpolate$$1 = _, rescale()) : interpolate$$1;
	  };
	
	  return rescale();
	}
	
	var tickFormat = function(domain, count, specifier) {
	  var start = domain[0],
	      stop = domain[domain.length - 1],
	      step = d3Array.tickStep(start, stop, count == null ? 10 : count),
	      precision;
	  specifier = d3Format.formatSpecifier(specifier == null ? ",f" : specifier);
	  switch (specifier.type) {
	    case "s": {
	      var value = Math.max(Math.abs(start), Math.abs(stop));
	      if (specifier.precision == null && !isNaN(precision = d3Format.precisionPrefix(step, value))) specifier.precision = precision;
	      return d3Format.formatPrefix(specifier, value);
	    }
	    case "":
	    case "e":
	    case "g":
	    case "p":
	    case "r": {
	      if (specifier.precision == null && !isNaN(precision = d3Format.precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === "e");
	      break;
	    }
	    case "f":
	    case "%": {
	      if (specifier.precision == null && !isNaN(precision = d3Format.precisionFixed(step))) specifier.precision = precision - (specifier.type === "%") * 2;
	      break;
	    }
	  }
	  return d3Format.format(specifier);
	};
	
	function linearish(scale) {
	  var domain = scale.domain;
	
	  scale.ticks = function(count) {
	    var d = domain();
	    return d3Array.ticks(d[0], d[d.length - 1], count == null ? 10 : count);
	  };
	
	  scale.tickFormat = function(count, specifier) {
	    return tickFormat(domain(), count, specifier);
	  };
	
	  scale.nice = function(count) {
	    var d = domain(),
	        i = d.length - 1,
	        n = count == null ? 10 : count,
	        start = d[0],
	        stop = d[i],
	        step = d3Array.tickStep(start, stop, n);
	
	    if (step) {
	      step = d3Array.tickStep(Math.floor(start / step) * step, Math.ceil(stop / step) * step, n);
	      d[0] = Math.floor(start / step) * step;
	      d[i] = Math.ceil(stop / step) * step;
	      domain(d);
	    }
	
	    return scale;
	  };
	
	  return scale;
	}
	
	function linear() {
	  var scale = continuous(deinterpolateLinear, d3Interpolate.interpolateNumber);
	
	  scale.copy = function() {
	    return copy(scale, linear());
	  };
	
	  return linearish(scale);
	}
	
	function identity() {
	  var domain = [0, 1];
	
	  function scale(x) {
	    return +x;
	  }
	
	  scale.invert = scale;
	
	  scale.domain = scale.range = function(_) {
	    return arguments.length ? (domain = map$1.call(_, number), scale) : domain.slice();
	  };
	
	  scale.copy = function() {
	    return identity().domain(domain);
	  };
	
	  return linearish(scale);
	}
	
	var nice = function(domain, interval) {
	  domain = domain.slice();
	
	  var i0 = 0,
	      i1 = domain.length - 1,
	      x0 = domain[i0],
	      x1 = domain[i1],
	      t;
	
	  if (x1 < x0) {
	    t = i0, i0 = i1, i1 = t;
	    t = x0, x0 = x1, x1 = t;
	  }
	
	  domain[i0] = interval.floor(x0);
	  domain[i1] = interval.ceil(x1);
	  return domain;
	};
	
	function deinterpolate(a, b) {
	  return (b = Math.log(b / a))
	      ? function(x) { return Math.log(x / a) / b; }
	      : constant(b);
	}
	
	function reinterpolate(a, b) {
	  return a < 0
	      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }
	      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };
	}
	
	function pow10(x) {
	  return isFinite(x) ? +("1e" + x) : x < 0 ? 0 : x;
	}
	
	function powp(base) {
	  return base === 10 ? pow10
	      : base === Math.E ? Math.exp
	      : function(x) { return Math.pow(base, x); };
	}
	
	function logp(base) {
	  return base === Math.E ? Math.log
	      : base === 10 && Math.log10
	      || base === 2 && Math.log2
	      || (base = Math.log(base), function(x) { return Math.log(x) / base; });
	}
	
	function reflect(f) {
	  return function(x) {
	    return -f(-x);
	  };
	}
	
	function log() {
	  var scale = continuous(deinterpolate, reinterpolate).domain([1, 10]),
	      domain = scale.domain,
	      base = 10,
	      logs = logp(10),
	      pows = powp(10);
	
	  function rescale() {
	    logs = logp(base), pows = powp(base);
	    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);
	    return scale;
	  }
	
	  scale.base = function(_) {
	    return arguments.length ? (base = +_, rescale()) : base;
	  };
	
	  scale.domain = function(_) {
	    return arguments.length ? (domain(_), rescale()) : domain();
	  };
	
	  scale.ticks = function(count) {
	    var d = domain(),
	        u = d[0],
	        v = d[d.length - 1],
	        r;
	
	    if (r = v < u) i = u, u = v, v = i;
	
	    var i = logs(u),
	        j = logs(v),
	        p,
	        k,
	        t,
	        n = count == null ? 10 : +count,
	        z = [];
	
	    if (!(base % 1) && j - i < n) {
	      i = Math.round(i) - 1, j = Math.round(j) + 1;
	      if (u > 0) for (; i < j; ++i) {
	        for (k = 1, p = pows(i); k < base; ++k) {
	          t = p * k;
	          if (t < u) continue;
	          if (t > v) break;
	          z.push(t);
	        }
	      } else for (; i < j; ++i) {
	        for (k = base - 1, p = pows(i); k >= 1; --k) {
	          t = p * k;
	          if (t < u) continue;
	          if (t > v) break;
	          z.push(t);
	        }
	      }
	    } else {
	      z = d3Array.ticks(i, j, Math.min(j - i, n)).map(pows);
	    }
	
	    return r ? z.reverse() : z;
	  };
	
	  scale.tickFormat = function(count, specifier) {
	    if (specifier == null) specifier = base === 10 ? ".0e" : ",";
	    if (typeof specifier !== "function") specifier = d3Format.format(specifier);
	    if (count === Infinity) return specifier;
	    if (count == null) count = 10;
	    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?
	    return function(d) {
	      var i = d / pows(Math.round(logs(d)));
	      if (i * base < base - 0.5) i *= base;
	      return i <= k ? specifier(d) : "";
	    };
	  };
	
	  scale.nice = function() {
	    return domain(nice(domain(), {
	      floor: function(x) { return pows(Math.floor(logs(x))); },
	      ceil: function(x) { return pows(Math.ceil(logs(x))); }
	    }));
	  };
	
	  scale.copy = function() {
	    return copy(scale, log().base(base));
	  };
	
	  return scale;
	}
	
	function raise(x, exponent) {
	  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);
	}
	
	function pow() {
	  var exponent = 1,
	      scale = continuous(deinterpolate, reinterpolate),
	      domain = scale.domain;
	
	  function deinterpolate(a, b) {
	    return (b = raise(b, exponent) - (a = raise(a, exponent)))
	        ? function(x) { return (raise(x, exponent) - a) / b; }
	        : constant(b);
	  }
	
	  function reinterpolate(a, b) {
	    b = raise(b, exponent) - (a = raise(a, exponent));
	    return function(t) { return raise(a + b * t, 1 / exponent); };
	  }
	
	  scale.exponent = function(_) {
	    return arguments.length ? (exponent = +_, domain(domain())) : exponent;
	  };
	
	  scale.copy = function() {
	    return copy(scale, pow().exponent(exponent));
	  };
	
	  return linearish(scale);
	}
	
	function sqrt() {
	  return pow().exponent(0.5);
	}
	
	function quantile$1() {
	  var domain = [],
	      range$$1 = [],
	      thresholds = [];
	
	  function rescale() {
	    var i = 0, n = Math.max(1, range$$1.length);
	    thresholds = new Array(n - 1);
	    while (++i < n) thresholds[i - 1] = d3Array.quantile(domain, i / n);
	    return scale;
	  }
	
	  function scale(x) {
	    if (!isNaN(x = +x)) return range$$1[d3Array.bisect(thresholds, x)];
	  }
	
	  scale.invertExtent = function(y) {
	    var i = range$$1.indexOf(y);
	    return i < 0 ? [NaN, NaN] : [
	      i > 0 ? thresholds[i - 1] : domain[0],
	      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]
	    ];
	  };
	
	  scale.domain = function(_) {
	    if (!arguments.length) return domain.slice();
	    domain = [];
	    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);
	    domain.sort(d3Array.ascending);
	    return rescale();
	  };
	
	  scale.range = function(_) {
	    return arguments.length ? (range$$1 = slice.call(_), rescale()) : range$$1.slice();
	  };
	
	  scale.quantiles = function() {
	    return thresholds.slice();
	  };
	
	  scale.copy = function() {
	    return quantile$1()
	        .domain(domain)
	        .range(range$$1);
	  };
	
	  return scale;
	}
	
	function quantize() {
	  var x0 = 0,
	      x1 = 1,
	      n = 1,
	      domain = [0.5],
	      range$$1 = [0, 1];
	
	  function scale(x) {
	    if (x <= x) return range$$1[d3Array.bisect(domain, x, 0, n)];
	  }
	
	  function rescale() {
	    var i = -1;
	    domain = new Array(n);
	    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);
	    return scale;
	  }
	
	  scale.domain = function(_) {
	    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];
	  };
	
	  scale.range = function(_) {
	    return arguments.length ? (n = (range$$1 = slice.call(_)).length - 1, rescale()) : range$$1.slice();
	  };
	
	  scale.invertExtent = function(y) {
	    var i = range$$1.indexOf(y);
	    return i < 0 ? [NaN, NaN]
	        : i < 1 ? [x0, domain[0]]
	        : i >= n ? [domain[n - 1], x1]
	        : [domain[i - 1], domain[i]];
	  };
	
	  scale.copy = function() {
	    return quantize()
	        .domain([x0, x1])
	        .range(range$$1);
	  };
	
	  return linearish(scale);
	}
	
	function threshold() {
	  var domain = [0.5],
	      range$$1 = [0, 1],
	      n = 1;
	
	  function scale(x) {
	    if (x <= x) return range$$1[d3Array.bisect(domain, x, 0, n)];
	  }
	
	  scale.domain = function(_) {
	    return arguments.length ? (domain = slice.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : domain.slice();
	  };
	
	  scale.range = function(_) {
	    return arguments.length ? (range$$1 = slice.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : range$$1.slice();
	  };
	
	  scale.invertExtent = function(y) {
	    var i = range$$1.indexOf(y);
	    return [domain[i - 1], domain[i]];
	  };
	
	  scale.copy = function() {
	    return threshold()
	        .domain(domain)
	        .range(range$$1);
	  };
	
	  return scale;
	}
	
	var durationSecond = 1000;
	var durationMinute = durationSecond * 60;
	var durationHour = durationMinute * 60;
	var durationDay = durationHour * 24;
	var durationWeek = durationDay * 7;
	var durationMonth = durationDay * 30;
	var durationYear = durationDay * 365;
	
	function date(t) {
	  return new Date(t);
	}
	
	function number$1(t) {
	  return t instanceof Date ? +t : +new Date(+t);
	}
	
	function calendar(year, month, week, day, hour, minute, second, millisecond, format$$1) {
	  var scale = continuous(deinterpolateLinear, d3Interpolate.interpolateNumber),
	      invert = scale.invert,
	      domain = scale.domain;
	
	  var formatMillisecond = format$$1(".%L"),
	      formatSecond = format$$1(":%S"),
	      formatMinute = format$$1("%I:%M"),
	      formatHour = format$$1("%I %p"),
	      formatDay = format$$1("%a %d"),
	      formatWeek = format$$1("%b %d"),
	      formatMonth = format$$1("%B"),
	      formatYear = format$$1("%Y");
	
	  var tickIntervals = [
	    [second,  1,      durationSecond],
	    [second,  5,  5 * durationSecond],
	    [second, 15, 15 * durationSecond],
	    [second, 30, 30 * durationSecond],
	    [minute,  1,      durationMinute],
	    [minute,  5,  5 * durationMinute],
	    [minute, 15, 15 * durationMinute],
	    [minute, 30, 30 * durationMinute],
	    [  hour,  1,      durationHour  ],
	    [  hour,  3,  3 * durationHour  ],
	    [  hour,  6,  6 * durationHour  ],
	    [  hour, 12, 12 * durationHour  ],
	    [   day,  1,      durationDay   ],
	    [   day,  2,  2 * durationDay   ],
	    [  week,  1,      durationWeek  ],
	    [ month,  1,      durationMonth ],
	    [ month,  3,  3 * durationMonth ],
	    [  year,  1,      durationYear  ]
	  ];
	
	  function tickFormat(date) {
	    return (second(date) < date ? formatMillisecond
	        : minute(date) < date ? formatSecond
	        : hour(date) < date ? formatMinute
	        : day(date) < date ? formatHour
	        : month(date) < date ? (week(date) < date ? formatDay : formatWeek)
	        : year(date) < date ? formatMonth
	        : formatYear)(date);
	  }
	
	  function tickInterval(interval, start, stop, step) {
	    if (interval == null) interval = 10;
	
	    // If a desired tick count is specified, pick a reasonable tick interval
	    // based on the extent of the domain and a rough estimate of tick size.
	    // Otherwise, assume interval is already a time interval and use it.
	    if (typeof interval === "number") {
	      var target = Math.abs(stop - start) / interval,
	          i = d3Array.bisector(function(i) { return i[2]; }).right(tickIntervals, target);
	      if (i === tickIntervals.length) {
	        step = d3Array.tickStep(start / durationYear, stop / durationYear, interval);
	        interval = year;
	      } else if (i) {
	        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];
	        step = i[1];
	        interval = i[0];
	      } else {
	        step = d3Array.tickStep(start, stop, interval);
	        interval = millisecond;
	      }
	    }
	
	    return step == null ? interval : interval.every(step);
	  }
	
	  scale.invert = function(y) {
	    return new Date(invert(y));
	  };
	
	  scale.domain = function(_) {
	    return arguments.length ? domain(map$1.call(_, number$1)) : domain().map(date);
	  };
	
	  scale.ticks = function(interval, step) {
	    var d = domain(),
	        t0 = d[0],
	        t1 = d[d.length - 1],
	        r = t1 < t0,
	        t;
	    if (r) t = t0, t0 = t1, t1 = t;
	    t = tickInterval(interval, t0, t1, step);
	    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop
	    return r ? t.reverse() : t;
	  };
	
	  scale.tickFormat = function(count, specifier) {
	    return specifier == null ? tickFormat : format$$1(specifier);
	  };
	
	  scale.nice = function(interval, step) {
	    var d = domain();
	    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))
	        ? domain(nice(d, interval))
	        : scale;
	  };
	
	  scale.copy = function() {
	    return copy(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format$$1));
	  };
	
	  return scale;
	}
	
	var time = function() {
	  return calendar(d3Time.timeYear, d3Time.timeMonth, d3Time.timeWeek, d3Time.timeDay, d3Time.timeHour, d3Time.timeMinute, d3Time.timeSecond, d3Time.timeMillisecond, d3TimeFormat.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);
	};
	
	var utcTime = function() {
	  return calendar(d3Time.utcYear, d3Time.utcMonth, d3Time.utcWeek, d3Time.utcDay, d3Time.utcHour, d3Time.utcMinute, d3Time.utcSecond, d3Time.utcMillisecond, d3TimeFormat.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);
	};
	
	var colors = function(s) {
	  return s.match(/.{6}/g).map(function(x) {
	    return "#" + x;
	  });
	};
	
	var category10 = colors("1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf");
	
	var category20b = colors("393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6");
	
	var category20c = colors("3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9");
	
	var category20 = colors("1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5");
	
	var cubehelix$1 = d3Interpolate.interpolateCubehelixLong(d3Color.cubehelix(300, 0.5, 0.0), d3Color.cubehelix(-240, 0.5, 1.0));
	
	var warm = d3Interpolate.interpolateCubehelixLong(d3Color.cubehelix(-100, 0.75, 0.35), d3Color.cubehelix(80, 1.50, 0.8));
	
	var cool = d3Interpolate.interpolateCubehelixLong(d3Color.cubehelix(260, 0.75, 0.35), d3Color.cubehelix(80, 1.50, 0.8));
	
	var rainbow = d3Color.cubehelix();
	
	var rainbow$1 = function(t) {
	  if (t < 0 || t > 1) t -= Math.floor(t);
	  var ts = Math.abs(t - 0.5);
	  rainbow.h = 360 * t - 100;
	  rainbow.s = 1.5 - 1.5 * ts;
	  rainbow.l = 0.8 - 0.9 * ts;
	  return rainbow + "";
	};
	
	function ramp(range$$1) {
	  var n = range$$1.length;
	  return function(t) {
	    return range$$1[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];
	  };
	}
	
	var viridis = ramp(colors("44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725"));
	
	var magma = ramp(colors("00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf"));
	
	var inferno = ramp(colors("00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4"));
	
	var plasma = ramp(colors("0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921"));
	
	function sequential(interpolator) {
	  var x0 = 0,
	      x1 = 1,
	      clamp = false;
	
	  function scale(x) {
	    var t = (x - x0) / (x1 - x0);
	    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);
	  }
	
	  scale.domain = function(_) {
	    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];
	  };
	
	  scale.clamp = function(_) {
	    return arguments.length ? (clamp = !!_, scale) : clamp;
	  };
	
	  scale.interpolator = function(_) {
	    return arguments.length ? (interpolator = _, scale) : interpolator;
	  };
	
	  scale.copy = function() {
	    return sequential(interpolator).domain([x0, x1]).clamp(clamp);
	  };
	
	  return linearish(scale);
	}
	
	exports.scaleBand = band;
	exports.scalePoint = point;
	exports.scaleIdentity = identity;
	exports.scaleLinear = linear;
	exports.scaleLog = log;
	exports.scaleOrdinal = ordinal;
	exports.scaleImplicit = implicit;
	exports.scalePow = pow;
	exports.scaleSqrt = sqrt;
	exports.scaleQuantile = quantile$1;
	exports.scaleQuantize = quantize;
	exports.scaleThreshold = threshold;
	exports.scaleTime = time;
	exports.scaleUtc = utcTime;
	exports.schemeCategory10 = category10;
	exports.schemeCategory20b = category20b;
	exports.schemeCategory20c = category20c;
	exports.schemeCategory20 = category20;
	exports.interpolateCubehelixDefault = cubehelix$1;
	exports.interpolateRainbow = rainbow$1;
	exports.interpolateWarm = warm;
	exports.interpolateCool = cool;
	exports.interpolateViridis = viridis;
	exports.interpolateMagma = magma;
	exports.interpolateInferno = inferno;
	exports.interpolatePlasma = plasma;
	exports.scaleSequential = sequential;
	
	Object.defineProperty(exports, '__esModule', { value: true });
	
	})));


/***/ },
/* 739 */
/***/ function(module, exports, __webpack_require__) {

	// https://d3js.org/d3-array/ Version 1.0.2. Copyright 2016 Mike Bostock.
	(function (global, factory) {
	   true ? factory(exports) :
	  typeof define === 'function' && define.amd ? define(['exports'], factory) :
	  (factory((global.d3 = global.d3 || {})));
	}(this, (function (exports) { 'use strict';
	
	var ascending = function(a, b) {
	  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;
	};
	
	var bisector = function(compare) {
	  if (compare.length === 1) compare = ascendingComparator(compare);
	  return {
	    left: function(a, x, lo, hi) {
	      if (lo == null) lo = 0;
	      if (hi == null) hi = a.length;
	      while (lo < hi) {
	        var mid = lo + hi >>> 1;
	        if (compare(a[mid], x) < 0) lo = mid + 1;
	        else hi = mid;
	      }
	      return lo;
	    },
	    right: function(a, x, lo, hi) {
	      if (lo == null) lo = 0;
	      if (hi == null) hi = a.length;
	      while (lo < hi) {
	        var mid = lo + hi >>> 1;
	        if (compare(a[mid], x) > 0) hi = mid;
	        else lo = mid + 1;
	      }
	      return lo;
	    }
	  };
	};
	
	function ascendingComparator(f) {
	  return function(d, x) {
	    return ascending(f(d), x);
	  };
	}
	
	var ascendingBisect = bisector(ascending);
	var bisectRight = ascendingBisect.right;
	var bisectLeft = ascendingBisect.left;
	
	var descending = function(a, b) {
	  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;
	};
	
	var number = function(x) {
	  return x === null ? NaN : +x;
	};
	
	var variance = function(array, f) {
	  var n = array.length,
	      m = 0,
	      a,
	      d,
	      s = 0,
	      i = -1,
	      j = 0;
	
	  if (f == null) {
	    while (++i < n) {
	      if (!isNaN(a = number(array[i]))) {
	        d = a - m;
	        m += d / ++j;
	        s += d * (a - m);
	      }
	    }
	  }
	
	  else {
	    while (++i < n) {
	      if (!isNaN(a = number(f(array[i], i, array)))) {
	        d = a - m;
	        m += d / ++j;
	        s += d * (a - m);
	      }
	    }
	  }
	
	  if (j > 1) return s / (j - 1);
	};
	
	var deviation = function(array, f) {
	  var v = variance(array, f);
	  return v ? Math.sqrt(v) : v;
	};
	
	var extent = function(array, f) {
	  var i = -1,
	      n = array.length,
	      a,
	      b,
	      c;
	
	  if (f == null) {
	    while (++i < n) if ((b = array[i]) != null && b >= b) { a = c = b; break; }
	    while (++i < n) if ((b = array[i]) != null) {
	      if (a > b) a = b;
	      if (c < b) c = b;
	    }
	  }
	
	  else {
	    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = c = b; break; }
	    while (++i < n) if ((b = f(array[i], i, array)) != null) {
	      if (a > b) a = b;
	      if (c < b) c = b;
	    }
	  }
	
	  return [a, c];
	};
	
	var array = Array.prototype;
	
	var slice = array.slice;
	var map = array.map;
	
	var constant = function(x) {
	  return function() {
	    return x;
	  };
	};
	
	var identity = function(x) {
	  return x;
	};
	
	var range = function(start, stop, step) {
	  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;
	
	  var i = -1,
	      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,
	      range = new Array(n);
	
	  while (++i < n) {
	    range[i] = start + i * step;
	  }
	
	  return range;
	};
	
	var e10 = Math.sqrt(50);
	var e5 = Math.sqrt(10);
	var e2 = Math.sqrt(2);
	
	var ticks = function(start, stop, count) {
	  var step = tickStep(start, stop, count);
	  return range(
	    Math.ceil(start / step) * step,
	    Math.floor(stop / step) * step + step / 2, // inclusive
	    step
	  );
	};
	
	function tickStep(start, stop, count) {
	  var step0 = Math.abs(stop - start) / Math.max(0, count),
	      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),
	      error = step0 / step1;
	  if (error >= e10) step1 *= 10;
	  else if (error >= e5) step1 *= 5;
	  else if (error >= e2) step1 *= 2;
	  return stop < start ? -step1 : step1;
	}
	
	var sturges = function(values) {
	  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;
	};
	
	var histogram = function() {
	  var value = identity,
	      domain = extent,
	      threshold = sturges;
	
	  function histogram(data) {
	    var i,
	        n = data.length,
	        x,
	        values = new Array(n);
	
	    for (i = 0; i < n; ++i) {
	      values[i] = value(data[i], i, data);
	    }
	
	    var xz = domain(values),
	        x0 = xz[0],
	        x1 = xz[1],
	        tz = threshold(values, x0, x1);
	
	    // Convert number of thresholds into uniform thresholds.
	    if (!Array.isArray(tz)) tz = ticks(x0, x1, tz);
	
	    // Remove any thresholds outside the domain.
	    var m = tz.length;
	    while (tz[0] <= x0) tz.shift(), --m;
	    while (tz[m - 1] >= x1) tz.pop(), --m;
	
	    var bins = new Array(m + 1),
	        bin;
	
	    // Initialize bins.
	    for (i = 0; i <= m; ++i) {
	      bin = bins[i] = [];
	      bin.x0 = i > 0 ? tz[i - 1] : x0;
	      bin.x1 = i < m ? tz[i] : x1;
	    }
	
	    // Assign data to bins by value, ignoring any outside the domain.
	    for (i = 0; i < n; ++i) {
	      x = values[i];
	      if (x0 <= x && x <= x1) {
	        bins[bisectRight(tz, x, 0, m)].push(data[i]);
	      }
	    }
	
	    return bins;
	  }
	
	  histogram.value = function(_) {
	    return arguments.length ? (value = typeof _ === "function" ? _ : constant(_), histogram) : value;
	  };
	
	  histogram.domain = function(_) {
	    return arguments.length ? (domain = typeof _ === "function" ? _ : constant([_[0], _[1]]), histogram) : domain;
	  };
	
	  histogram.thresholds = function(_) {
	    return arguments.length ? (threshold = typeof _ === "function" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;
	  };
	
	  return histogram;
	};
	
	var quantile = function(array, p, f) {
	  if (f == null) f = number;
	  if (!(n = array.length)) return;
	  if ((p = +p) <= 0 || n < 2) return +f(array[0], 0, array);
	  if (p >= 1) return +f(array[n - 1], n - 1, array);
	  var n,
	      h = (n - 1) * p,
	      i = Math.floor(h),
	      a = +f(array[i], i, array),
	      b = +f(array[i + 1], i + 1, array);
	  return a + (b - a) * (h - i);
	};
	
	var freedmanDiaconis = function(values, min, max) {
	  values = map.call(values, number).sort(ascending);
	  return Math.ceil((max - min) / (2 * (quantile(values, 0.75) - quantile(values, 0.25)) * Math.pow(values.length, -1 / 3)));
	};
	
	var scott = function(values, min, max) {
	  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));
	};
	
	var max = function(array, f) {
	  var i = -1,
	      n = array.length,
	      a,
	      b;
	
	  if (f == null) {
	    while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }
	    while (++i < n) if ((b = array[i]) != null && b > a) a = b;
	  }
	
	  else {
	    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }
	    while (++i < n) if ((b = f(array[i], i, array)) != null && b > a) a = b;
	  }
	
	  return a;
	};
	
	var mean = function(array, f) {
	  var s = 0,
	      n = array.length,
	      a,
	      i = -1,
	      j = n;
	
	  if (f == null) {
	    while (++i < n) if (!isNaN(a = number(array[i]))) s += a; else --j;
	  }
	
	  else {
	    while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) s += a; else --j;
	  }
	
	  if (j) return s / j;
	};
	
	var median = function(array, f) {
	  var numbers = [],
	      n = array.length,
	      a,
	      i = -1;
	
	  if (f == null) {
	    while (++i < n) if (!isNaN(a = number(array[i]))) numbers.push(a);
	  }
	
	  else {
	    while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) numbers.push(a);
	  }
	
	  return quantile(numbers.sort(ascending), 0.5);
	};
	
	var merge = function(arrays) {
	  var n = arrays.length,
	      m,
	      i = -1,
	      j = 0,
	      merged,
	      array;
	
	  while (++i < n) j += arrays[i].length;
	  merged = new Array(j);
	
	  while (--n >= 0) {
	    array = arrays[n];
	    m = array.length;
	    while (--m >= 0) {
	      merged[--j] = array[m];
	    }
	  }
	
	  return merged;
	};
	
	var min = function(array, f) {
	  var i = -1,
	      n = array.length,
	      a,
	      b;
	
	  if (f == null) {
	    while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }
	    while (++i < n) if ((b = array[i]) != null && a > b) a = b;
	  }
	
	  else {
	    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }
	    while (++i < n) if ((b = f(array[i], i, array)) != null && a > b) a = b;
	  }
	
	  return a;
	};
	
	var pairs = function(array) {
	  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);
	  while (i < n) pairs[i] = [p, p = array[++i]];
	  return pairs;
	};
	
	var permute = function(array, indexes) {
	  var i = indexes.length, permutes = new Array(i);
	  while (i--) permutes[i] = array[indexes[i]];
	  return permutes;
	};
	
	var scan = function(array, compare) {
	  if (!(n = array.length)) return;
	  var i = 0,
	      n,
	      j = 0,
	      xi,
	      xj = array[j];
	
	  if (!compare) compare = ascending;
	
	  while (++i < n) if (compare(xi = array[i], xj) < 0 || compare(xj, xj) !== 0) xj = xi, j = i;
	
	  if (compare(xj, xj) === 0) return j;
	};
	
	var shuffle = function(array, i0, i1) {
	  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),
	      t,
	      i;
	
	  while (m) {
	    i = Math.random() * m-- | 0;
	    t = array[m + i0];
	    array[m + i0] = array[i + i0];
	    array[i + i0] = t;
	  }
	
	  return array;
	};
	
	var sum = function(array, f) {
	  var s = 0,
	      n = array.length,
	      a,
	      i = -1;
	
	  if (f == null) {
	    while (++i < n) if (a = +array[i]) s += a; // Note: zero and null are equivalent.
	  }
	
	  else {
	    while (++i < n) if (a = +f(array[i], i, array)) s += a;
	  }
	
	  return s;
	};
	
	var transpose = function(matrix) {
	  if (!(n = matrix.length)) return [];
	  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {
	    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {
	      row[j] = matrix[j][i];
	    }
	  }
	  return transpose;
	};
	
	function length(d) {
	  return d.length;
	}
	
	var zip = function() {
	  return transpose(arguments);
	};
	
	exports.bisect = bisectRight;
	exports.bisectRight = bisectRight;
	exports.bisectLeft = bisectLeft;
	exports.ascending = ascending;
	exports.bisector = bisector;
	exports.descending = descending;
	exports.deviation = deviation;
	exports.extent = extent;
	exports.histogram = histogram;
	exports.thresholdFreedmanDiaconis = freedmanDiaconis;
	exports.thresholdScott = scott;
	exports.thresholdSturges = sturges;
	exports.max = max;
	exports.mean = mean;
	exports.median = median;
	exports.merge = merge;
	exports.min = min;
	exports.pairs = pairs;
	exports.permute = permute;
	exports.quantile = quantile;
	exports.range = range;
	exports.scan = scan;
	exports.shuffle = shuffle;
	exports.sum = sum;
	exports.ticks = ticks;
	exports.tickStep = tickStep;
	exports.transpose = transpose;
	exports.variance = variance;
	exports.zip = zip;
	
	Object.defineProperty(exports, '__esModule', { value: true });
	
	})));


/***/ },
/* 740 */
/***/ function(module, exports, __webpack_require__) {

	// https://d3js.org/d3-collection/ Version 1.0.2. Copyright 2016 Mike Bostock.
	(function (global, factory) {
	   true ? factory(exports) :
	  typeof define === 'function' && define.amd ? define(['exports'], factory) :
	  (factory((global.d3 = global.d3 || {})));
	}(this, (function (exports) { 'use strict';
	
	var prefix = "$";
	
	function Map() {}
	
	Map.prototype = map.prototype = {
	  constructor: Map,
	  has: function(key) {
	    return (prefix + key) in this;
	  },
	  get: function(key) {
	    return this[prefix + key];
	  },
	  set: function(key, value) {
	    this[prefix + key] = value;
	    return this;
	  },
	  remove: function(key) {
	    var property = prefix + key;
	    return property in this && delete this[property];
	  },
	  clear: function() {
	    for (var property in this) if (property[0] === prefix) delete this[property];
	  },
	  keys: function() {
	    var keys = [];
	    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));
	    return keys;
	  },
	  values: function() {
	    var values = [];
	    for (var property in this) if (property[0] === prefix) values.push(this[property]);
	    return values;
	  },
	  entries: function() {
	    var entries = [];
	    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});
	    return entries;
	  },
	  size: function() {
	    var size = 0;
	    for (var property in this) if (property[0] === prefix) ++size;
	    return size;
	  },
	  empty: function() {
	    for (var property in this) if (property[0] === prefix) return false;
	    return true;
	  },
	  each: function(f) {
	    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);
	  }
	};
	
	function map(object, f) {
	  var map = new Map;
	
	  // Copy constructor.
	  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });
	
	  // Index array by numeric index or specified key function.
	  else if (Array.isArray(object)) {
	    var i = -1,
	        n = object.length,
	        o;
	
	    if (f == null) while (++i < n) map.set(i, object[i]);
	    else while (++i < n) map.set(f(o = object[i], i, object), o);
	  }
	
	  // Convert object to map.
	  else if (object) for (var key in object) map.set(key, object[key]);
	
	  return map;
	}
	
	var nest = function() {
	  var keys = [],
	      sortKeys = [],
	      sortValues,
	      rollup,
	      nest;
	
	  function apply(array, depth, createResult, setResult) {
	    if (depth >= keys.length) return rollup != null
	        ? rollup(array) : (sortValues != null
	        ? array.sort(sortValues)
	        : array);
	
	    var i = -1,
	        n = array.length,
	        key = keys[depth++],
	        keyValue,
	        value,
	        valuesByKey = map(),
	        values,
	        result = createResult();
	
	    while (++i < n) {
	      if (values = valuesByKey.get(keyValue = key(value = array[i]) + "")) {
	        values.push(value);
	      } else {
	        valuesByKey.set(keyValue, [value]);
	      }
	    }
	
	    valuesByKey.each(function(values, key) {
	      setResult(result, key, apply(values, depth, createResult, setResult));
	    });
	
	    return result;
	  }
	
	  function entries(map$$1, depth) {
	    if (++depth > keys.length) return map$$1;
	    var array, sortKey = sortKeys[depth - 1];
	    if (rollup != null && depth >= keys.length) array = map$$1.entries();
	    else array = [], map$$1.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });
	    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;
	  }
	
	  return nest = {
	    object: function(array) { return apply(array, 0, createObject, setObject); },
	    map: function(array) { return apply(array, 0, createMap, setMap); },
	    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },
	    key: function(d) { keys.push(d); return nest; },
	    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },
	    sortValues: function(order) { sortValues = order; return nest; },
	    rollup: function(f) { rollup = f; return nest; }
	  };
	};
	
	function createObject() {
	  return {};
	}
	
	function setObject(object, key, value) {
	  object[key] = value;
	}
	
	function createMap() {
	  return map();
	}
	
	function setMap(map$$1, key, value) {
	  map$$1.set(key, value);
	}
	
	function Set() {}
	
	var proto = map.prototype;
	
	Set.prototype = set.prototype = {
	  constructor: Set,
	  has: proto.has,
	  add: function(value) {
	    value += "";
	    this[prefix + value] = value;
	    return this;
	  },
	  remove: proto.remove,
	  clear: proto.clear,
	  values: proto.keys,
	  size: proto.size,
	  empty: proto.empty,
	  each: proto.each
	};
	
	function set(object, f) {
	  var set = new Set;
	
	  // Copy constructor.
	  if (object instanceof Set) object.each(function(value) { set.add(value); });
	
	  // Otherwise, assume it’s an array.
	  else if (object) {
	    var i = -1, n = object.length;
	    if (f == null) while (++i < n) set.add(object[i]);
	    else while (++i < n) set.add(f(object[i], i, object));
	  }
	
	  return set;
	}
	
	var keys = function(map) {
	  var keys = [];
	  for (var key in map) keys.push(key);
	  return keys;
	};
	
	var values = function(map) {
	  var values = [];
	  for (var key in map) values.push(map[key]);
	  return values;
	};
	
	var entries = function(map) {
	  var entries = [];
	  for (var key in map) entries.push({key: key, value: map[key]});
	  return entries;
	};
	
	exports.nest = nest;
	exports.set = set;
	exports.map = map;
	exports.keys = keys;
	exports.values = values;
	exports.entries = entries;
	
	Object.defineProperty(exports, '__esModule', { value: true });
	
	})));


/***/ },
/* 741 */
/***/ function(module, exports, __webpack_require__) {

	// https://d3js.org/d3-interpolate/ Version 1.1.3. Copyright 2017 Mike Bostock.
	(function (global, factory) {
	   true ? factory(exports, __webpack_require__(742)) :
	  typeof define === 'function' && define.amd ? define(['exports', 'd3-color'], factory) :
	  (factory((global.d3 = global.d3 || {}),global.d3));
	}(this, (function (exports,d3Color) { 'use strict';
	
	function basis(t1, v0, v1, v2, v3) {
	  var t2 = t1 * t1, t3 = t2 * t1;
	  return ((1 - 3 * t1 + 3 * t2 - t3) * v0
	      + (4 - 6 * t2 + 3 * t3) * v1
	      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2
	      + t3 * v3) / 6;
	}
	
	var basis$1 = function(values) {
	  var n = values.length - 1;
	  return function(t) {
	    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),
	        v1 = values[i],
	        v2 = values[i + 1],
	        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,
	        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;
	    return basis((t - i / n) * n, v0, v1, v2, v3);
	  };
	};
	
	var basisClosed = function(values) {
	  var n = values.length;
	  return function(t) {
	    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),
	        v0 = values[(i + n - 1) % n],
	        v1 = values[i % n],
	        v2 = values[(i + 1) % n],
	        v3 = values[(i + 2) % n];
	    return basis((t - i / n) * n, v0, v1, v2, v3);
	  };
	};
	
	var constant = function(x) {
	  return function() {
	    return x;
	  };
	};
	
	function linear(a, d) {
	  return function(t) {
	    return a + t * d;
	  };
	}
	
	function exponential(a, b, y) {
	  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {
	    return Math.pow(a + t * b, y);
	  };
	}
	
	function hue(a, b) {
	  var d = b - a;
	  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);
	}
	
	function gamma(y) {
	  return (y = +y) === 1 ? nogamma : function(a, b) {
	    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);
	  };
	}
	
	function nogamma(a, b) {
	  var d = b - a;
	  return d ? linear(a, d) : constant(isNaN(a) ? b : a);
	}
	
	var rgb$1 = ((function rgbGamma(y) {
	  var color$$1 = gamma(y);
	
	  function rgb$$1(start, end) {
	    var r = color$$1((start = d3Color.rgb(start)).r, (end = d3Color.rgb(end)).r),
	        g = color$$1(start.g, end.g),
	        b = color$$1(start.b, end.b),
	        opacity = nogamma(start.opacity, end.opacity);
	    return function(t) {
	      start.r = r(t);
	      start.g = g(t);
	      start.b = b(t);
	      start.opacity = opacity(t);
	      return start + "";
	    };
	  }
	
	  rgb$$1.gamma = rgbGamma;
	
	  return rgb$$1;
	}))(1);
	
	function rgbSpline(spline) {
	  return function(colors) {
	    var n = colors.length,
	        r = new Array(n),
	        g = new Array(n),
	        b = new Array(n),
	        i, color$$1;
	    for (i = 0; i < n; ++i) {
	      color$$1 = d3Color.rgb(colors[i]);
	      r[i] = color$$1.r || 0;
	      g[i] = color$$1.g || 0;
	      b[i] = color$$1.b || 0;
	    }
	    r = spline(r);
	    g = spline(g);
	    b = spline(b);
	    color$$1.opacity = 1;
	    return function(t) {
	      color$$1.r = r(t);
	      color$$1.g = g(t);
	      color$$1.b = b(t);
	      return color$$1 + "";
	    };
	  };
	}
	
	var rgbBasis = rgbSpline(basis$1);
	var rgbBasisClosed = rgbSpline(basisClosed);
	
	var array = function(a, b) {
	  var nb = b ? b.length : 0,
	      na = a ? Math.min(nb, a.length) : 0,
	      x = new Array(nb),
	      c = new Array(nb),
	      i;
	
	  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);
	  for (; i < nb; ++i) c[i] = b[i];
	
	  return function(t) {
	    for (i = 0; i < na; ++i) c[i] = x[i](t);
	    return c;
	  };
	};
	
	var date = function(a, b) {
	  var d = new Date;
	  return a = +a, b -= a, function(t) {
	    return d.setTime(a + b * t), d;
	  };
	};
	
	var number = function(a, b) {
	  return a = +a, b -= a, function(t) {
	    return a + b * t;
	  };
	};
	
	var object = function(a, b) {
	  var i = {},
	      c = {},
	      k;
	
	  if (a === null || typeof a !== "object") a = {};
	  if (b === null || typeof b !== "object") b = {};
	
	  for (k in b) {
	    if (k in a) {
	      i[k] = value(a[k], b[k]);
	    } else {
	      c[k] = b[k];
	    }
	  }
	
	  return function(t) {
	    for (k in i) c[k] = i[k](t);
	    return c;
	  };
	};
	
	var reA = /[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g;
	var reB = new RegExp(reA.source, "g");
	
	function zero(b) {
	  return function() {
	    return b;
	  };
	}
	
	function one(b) {
	  return function(t) {
	    return b(t) + "";
	  };
	}
	
	var string = function(a, b) {
	  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b
	      am, // current match in a
	      bm, // current match in b
	      bs, // string preceding current number in b, if any
	      i = -1, // index in s
	      s = [], // string constants and placeholders
	      q = []; // number interpolators
	
	  // Coerce inputs to strings.
	  a = a + "", b = b + "";
	
	  // Interpolate pairs of numbers in a & b.
	  while ((am = reA.exec(a))
	      && (bm = reB.exec(b))) {
	    if ((bs = bm.index) > bi) { // a string precedes the next number in b
	      bs = b.slice(bi, bs);
	      if (s[i]) s[i] += bs; // coalesce with previous string
	      else s[++i] = bs;
	    }
	    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match
	      if (s[i]) s[i] += bm; // coalesce with previous string
	      else s[++i] = bm;
	    } else { // interpolate non-matching numbers
	      s[++i] = null;
	      q.push({i: i, x: number(am, bm)});
	    }
	    bi = reB.lastIndex;
	  }
	
	  // Add remains of b.
	  if (bi < b.length) {
	    bs = b.slice(bi);
	    if (s[i]) s[i] += bs; // coalesce with previous string
	    else s[++i] = bs;
	  }
	
	  // Special optimization for only a single match.
	  // Otherwise, interpolate each of the numbers and rejoin the string.
	  return s.length < 2 ? (q[0]
	      ? one(q[0].x)
	      : zero(b))
	      : (b = q.length, function(t) {
	          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);
	          return s.join("");
	        });
	};
	
	var value = function(a, b) {
	  var t = typeof b, c;
	  return b == null || t === "boolean" ? constant(b)
	      : (t === "number" ? number
	      : t === "string" ? ((c = d3Color.color(b)) ? (b = c, rgb$1) : string)
	      : b instanceof d3Color.color ? rgb$1
	      : b instanceof Date ? date
	      : Array.isArray(b) ? array
	      : isNaN(b) ? object
	      : number)(a, b);
	};
	
	var round = function(a, b) {
	  return a = +a, b -= a, function(t) {
	    return Math.round(a + b * t);
	  };
	};
	
	var degrees = 180 / Math.PI;
	
	var identity = {
	  translateX: 0,
	  translateY: 0,
	  rotate: 0,
	  skewX: 0,
	  scaleX: 1,
	  scaleY: 1
	};
	
	var decompose = function(a, b, c, d, e, f) {
	  var scaleX, scaleY, skewX;
	  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;
	  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;
	  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;
	  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;
	  return {
	    translateX: e,
	    translateY: f,
	    rotate: Math.atan2(b, a) * degrees,
	    skewX: Math.atan(skewX) * degrees,
	    scaleX: scaleX,
	    scaleY: scaleY
	  };
	};
	
	var cssNode;
	var cssRoot;
	var cssView;
	var svgNode;
	
	function parseCss(value) {
	  if (value === "none") return identity;
	  if (!cssNode) cssNode = document.createElement("DIV"), cssRoot = document.documentElement, cssView = document.defaultView;
	  cssNode.style.transform = value;
	  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue("transform");
	  cssRoot.removeChild(cssNode);
	  value = value.slice(7, -1).split(",");
	  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);
	}
	
	function parseSvg(value) {
	  if (value == null) return identity;
	  if (!svgNode) svgNode = document.createElementNS("http://www.w3.org/2000/svg", "g");
	  svgNode.setAttribute("transform", value);
	  if (!(value = svgNode.transform.baseVal.consolidate())) return identity;
	  value = value.matrix;
	  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);
	}
	
	function interpolateTransform(parse, pxComma, pxParen, degParen) {
	
	  function pop(s) {
	    return s.length ? s.pop() + " " : "";
	  }
	
	  function translate(xa, ya, xb, yb, s, q) {
	    if (xa !== xb || ya !== yb) {
	      var i = s.push("translate(", null, pxComma, null, pxParen);
	      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});
	    } else if (xb || yb) {
	      s.push("translate(" + xb + pxComma + yb + pxParen);
	    }
	  }
	
	  function rotate(a, b, s, q) {
	    if (a !== b) {
	      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path
	      q.push({i: s.push(pop(s) + "rotate(", null, degParen) - 2, x: number(a, b)});
	    } else if (b) {
	      s.push(pop(s) + "rotate(" + b + degParen);
	    }
	  }
	
	  function skewX(a, b, s, q) {
	    if (a !== b) {
	      q.push({i: s.push(pop(s) + "skewX(", null, degParen) - 2, x: number(a, b)});
	    } else if (b) {
	      s.push(pop(s) + "skewX(" + b + degParen);
	    }
	  }
	
	  function scale(xa, ya, xb, yb, s, q) {
	    if (xa !== xb || ya !== yb) {
	      var i = s.push(pop(s) + "scale(", null, ",", null, ")");
	      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});
	    } else if (xb !== 1 || yb !== 1) {
	      s.push(pop(s) + "scale(" + xb + "," + yb + ")");
	    }
	  }
	
	  return function(a, b) {
	    var s = [], // string constants and placeholders
	        q = []; // number interpolators
	    a = parse(a), b = parse(b);
	    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);
	    rotate(a.rotate, b.rotate, s, q);
	    skewX(a.skewX, b.skewX, s, q);
	    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);
	    a = b = null; // gc
	    return function(t) {
	      var i = -1, n = q.length, o;
	      while (++i < n) s[(o = q[i]).i] = o.x(t);
	      return s.join("");
	    };
	  };
	}
	
	var interpolateTransformCss = interpolateTransform(parseCss, "px, ", "px)", "deg)");
	var interpolateTransformSvg = interpolateTransform(parseSvg, ", ", ")", ")");
	
	var rho = Math.SQRT2;
	var rho2 = 2;
	var rho4 = 4;
	var epsilon2 = 1e-12;
	
	function cosh(x) {
	  return ((x = Math.exp(x)) + 1 / x) / 2;
	}
	
	function sinh(x) {
	  return ((x = Math.exp(x)) - 1 / x) / 2;
	}
	
	function tanh(x) {
	  return ((x = Math.exp(2 * x)) - 1) / (x + 1);
	}
	
	// p0 = [ux0, uy0, w0]
	// p1 = [ux1, uy1, w1]
	var zoom = function(p0, p1) {
	  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],
	      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],
	      dx = ux1 - ux0,
	      dy = uy1 - uy0,
	      d2 = dx * dx + dy * dy,
	      i,
	      S;
	
	  // Special case for u0 ≅ u1.
	  if (d2 < epsilon2) {
	    S = Math.log(w1 / w0) / rho;
	    i = function(t) {
	      return [
	        ux0 + t * dx,
	        uy0 + t * dy,
	        w0 * Math.exp(rho * t * S)
	      ];
	    };
	  }
	
	  // General case.
	  else {
	    var d1 = Math.sqrt(d2),
	        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),
	        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),
	        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),
	        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);
	    S = (r1 - r0) / rho;
	    i = function(t) {
	      var s = t * S,
	          coshr0 = cosh(r0),
	          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));
	      return [
	        ux0 + u * dx,
	        uy0 + u * dy,
	        w0 * coshr0 / cosh(rho * s + r0)
	      ];
	    };
	  }
	
	  i.duration = S * 1000;
	
	  return i;
	};
	
	function hsl$1(hue$$1) {
	  return function(start, end) {
	    var h = hue$$1((start = d3Color.hsl(start)).h, (end = d3Color.hsl(end)).h),
	        s = nogamma(start.s, end.s),
	        l = nogamma(start.l, end.l),
	        opacity = nogamma(start.opacity, end.opacity);
	    return function(t) {
	      start.h = h(t);
	      start.s = s(t);
	      start.l = l(t);
	      start.opacity = opacity(t);
	      return start + "";
	    };
	  }
	}
	
	var hsl$2 = hsl$1(hue);
	var hslLong = hsl$1(nogamma);
	
	function lab$1(start, end) {
	  var l = nogamma((start = d3Color.lab(start)).l, (end = d3Color.lab(end)).l),
	      a = nogamma(start.a, end.a),
	      b = nogamma(start.b, end.b),
	      opacity = nogamma(start.opacity, end.opacity);
	  return function(t) {
	    start.l = l(t);
	    start.a = a(t);
	    start.b = b(t);
	    start.opacity = opacity(t);
	    return start + "";
	  };
	}
	
	function hcl$1(hue$$1) {
	  return function(start, end) {
	    var h = hue$$1((start = d3Color.hcl(start)).h, (end = d3Color.hcl(end)).h),
	        c = nogamma(start.c, end.c),
	        l = nogamma(start.l, end.l),
	        opacity = nogamma(start.opacity, end.opacity);
	    return function(t) {
	      start.h = h(t);
	      start.c = c(t);
	      start.l = l(t);
	      start.opacity = opacity(t);
	      return start + "";
	    };
	  }
	}
	
	var hcl$2 = hcl$1(hue);
	var hclLong = hcl$1(nogamma);
	
	function cubehelix$1(hue$$1) {
	  return (function cubehelixGamma(y) {
	    y = +y;
	
	    function cubehelix$$1(start, end) {
	      var h = hue$$1((start = d3Color.cubehelix(start)).h, (end = d3Color.cubehelix(end)).h),
	          s = nogamma(start.s, end.s),
	          l = nogamma(start.l, end.l),
	          opacity = nogamma(start.opacity, end.opacity);
	      return function(t) {
	        start.h = h(t);
	        start.s = s(t);
	        start.l = l(Math.pow(t, y));
	        start.opacity = opacity(t);
	        return start + "";
	      };
	    }
	
	    cubehelix$$1.gamma = cubehelixGamma;
	
	    return cubehelix$$1;
	  })(1);
	}
	
	var cubehelix$2 = cubehelix$1(hue);
	var cubehelixLong = cubehelix$1(nogamma);
	
	var quantize = function(interpolator, n) {
	  var samples = new Array(n);
	  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));
	  return samples;
	};
	
	exports.interpolate = value;
	exports.interpolateArray = array;
	exports.interpolateBasis = basis$1;
	exports.interpolateBasisClosed = basisClosed;
	exports.interpolateDate = date;
	exports.interpolateNumber = number;
	exports.interpolateObject = object;
	exports.interpolateRound = round;
	exports.interpolateString = string;
	exports.interpolateTransformCss = interpolateTransformCss;
	exports.interpolateTransformSvg = interpolateTransformSvg;
	exports.interpolateZoom = zoom;
	exports.interpolateRgb = rgb$1;
	exports.interpolateRgbBasis = rgbBasis;
	exports.interpolateRgbBasisClosed = rgbBasisClosed;
	exports.interpolateHsl = hsl$2;
	exports.interpolateHslLong = hslLong;
	exports.interpolateLab = lab$1;
	exports.interpolateHcl = hcl$2;
	exports.interpolateHclLong = hclLong;
	exports.interpolateCubehelix = cubehelix$2;
	exports.interpolateCubehelixLong = cubehelixLong;
	exports.quantize = quantize;
	
	Object.defineProperty(exports, '__esModule', { value: true });
	
	})));


/***/ },
/* 742 */
/***/ function(module, exports, __webpack_require__) {

	// https://d3js.org/d3-color/ Version 1.0.2. Copyright 2016 Mike Bostock.
	(function (global, factory) {
	   true ? factory(exports) :
	  typeof define === 'function' && define.amd ? define(['exports'], factory) :
	  (factory((global.d3 = global.d3 || {})));
	}(this, (function (exports) { 'use strict';
	
	var define = function(constructor, factory, prototype) {
	  constructor.prototype = factory.prototype = prototype;
	  prototype.constructor = constructor;
	};
	
	function extend(parent, definition) {
	  var prototype = Object.create(parent.prototype);
	  for (var key in definition) prototype[key] = definition[key];
	  return prototype;
	}
	
	function Color() {}
	
	var darker = 0.7;
	var brighter = 1 / darker;
	
	var reI = "\\s*([+-]?\\d+)\\s*";
	var reN = "\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)\\s*";
	var reP = "\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)%\\s*";
	var reHex3 = /^#([0-9a-f]{3})$/;
	var reHex6 = /^#([0-9a-f]{6})$/;
	var reRgbInteger = new RegExp("^rgb\\(" + [reI, reI, reI] + "\\)$");
	var reRgbPercent = new RegExp("^rgb\\(" + [reP, reP, reP] + "\\)$");
	var reRgbaInteger = new RegExp("^rgba\\(" + [reI, reI, reI, reN] + "\\)$");
	var reRgbaPercent = new RegExp("^rgba\\(" + [reP, reP, reP, reN] + "\\)$");
	var reHslPercent = new RegExp("^hsl\\(" + [reN, reP, reP] + "\\)$");
	var reHslaPercent = new RegExp("^hsla\\(" + [reN, reP, reP, reN] + "\\)$");
	
	var named = {
	  aliceblue: 0xf0f8ff,
	  antiquewhite: 0xfaebd7,
	  aqua: 0x00ffff,
	  aquamarine: 0x7fffd4,
	  azure: 0xf0ffff,
	  beige: 0xf5f5dc,
	  bisque: 0xffe4c4,
	  black: 0x000000,
	  blanchedalmond: 0xffebcd,
	  blue: 0x0000ff,
	  blueviolet: 0x8a2be2,
	  brown: 0xa52a2a,
	  burlywood: 0xdeb887,
	  cadetblue: 0x5f9ea0,
	  chartreuse: 0x7fff00,
	  chocolate: 0xd2691e,
	  coral: 0xff7f50,
	  cornflowerblue: 0x6495ed,
	  cornsilk: 0xfff8dc,
	  crimson: 0xdc143c,
	  cyan: 0x00ffff,
	  darkblue: 0x00008b,
	  darkcyan: 0x008b8b,
	  darkgoldenrod: 0xb8860b,
	  darkgray: 0xa9a9a9,
	  darkgreen: 0x006400,
	  darkgrey: 0xa9a9a9,
	  darkkhaki: 0xbdb76b,
	  darkmagenta: 0x8b008b,
	  darkolivegreen: 0x556b2f,
	  darkorange: 0xff8c00,
	  darkorchid: 0x9932cc,
	  darkred: 0x8b0000,
	  darksalmon: 0xe9967a,
	  darkseagreen: 0x8fbc8f,
	  darkslateblue: 0x483d8b,
	  darkslategray: 0x2f4f4f,
	  darkslategrey: 0x2f4f4f,
	  darkturquoise: 0x00ced1,
	  darkviolet: 0x9400d3,
	  deeppink: 0xff1493,
	  deepskyblue: 0x00bfff,
	  dimgray: 0x696969,
	  dimgrey: 0x696969,
	  dodgerblue: 0x1e90ff,
	  firebrick: 0xb22222,
	  floralwhite: 0xfffaf0,
	  forestgreen: 0x228b22,
	  fuchsia: 0xff00ff,
	  gainsboro: 0xdcdcdc,
	  ghostwhite: 0xf8f8ff,
	  gold: 0xffd700,
	  goldenrod: 0xdaa520,
	  gray: 0x808080,
	  green: 0x008000,
	  greenyellow: 0xadff2f,
	  grey: 0x808080,
	  honeydew: 0xf0fff0,
	  hotpink: 0xff69b4,
	  indianred: 0xcd5c5c,
	  indigo: 0x4b0082,
	  ivory: 0xfffff0,
	  khaki: 0xf0e68c,
	  lavender: 0xe6e6fa,
	  lavenderblush: 0xfff0f5,
	  lawngreen: 0x7cfc00,
	  lemonchiffon: 0xfffacd,
	  lightblue: 0xadd8e6,
	  lightcoral: 0xf08080,
	  lightcyan: 0xe0ffff,
	  lightgoldenrodyellow: 0xfafad2,
	  lightgray: 0xd3d3d3,
	  lightgreen: 0x90ee90,
	  lightgrey: 0xd3d3d3,
	  lightpink: 0xffb6c1,
	  lightsalmon: 0xffa07a,
	  lightseagreen: 0x20b2aa,
	  lightskyblue: 0x87cefa,
	  lightslategray: 0x778899,
	  lightslategrey: 0x778899,
	  lightsteelblue: 0xb0c4de,
	  lightyellow: 0xffffe0,
	  lime: 0x00ff00,
	  limegreen: 0x32cd32,
	  linen: 0xfaf0e6,
	  magenta: 0xff00ff,
	  maroon: 0x800000,
	  mediumaquamarine: 0x66cdaa,
	  mediumblue: 0x0000cd,
	  mediumorchid: 0xba55d3,
	  mediumpurple: 0x9370db,
	  mediumseagreen: 0x3cb371,
	  mediumslateblue: 0x7b68ee,
	  mediumspringgreen: 0x00fa9a,
	  mediumturquoise: 0x48d1cc,
	  mediumvioletred: 0xc71585,
	  midnightblue: 0x191970,
	  mintcream: 0xf5fffa,
	  mistyrose: 0xffe4e1,
	  moccasin: 0xffe4b5,
	  navajowhite: 0xffdead,
	  navy: 0x000080,
	  oldlace: 0xfdf5e6,
	  olive: 0x808000,
	  olivedrab: 0x6b8e23,
	  orange: 0xffa500,
	  orangered: 0xff4500,
	  orchid: 0xda70d6,
	  palegoldenrod: 0xeee8aa,
	  palegreen: 0x98fb98,
	  paleturquoise: 0xafeeee,
	  palevioletred: 0xdb7093,
	  papayawhip: 0xffefd5,
	  peachpuff: 0xffdab9,
	  peru: 0xcd853f,
	  pink: 0xffc0cb,
	  plum: 0xdda0dd,
	  powderblue: 0xb0e0e6,
	  purple: 0x800080,
	  rebeccapurple: 0x663399,
	  red: 0xff0000,
	  rosybrown: 0xbc8f8f,
	  royalblue: 0x4169e1,
	  saddlebrown: 0x8b4513,
	  salmon: 0xfa8072,
	  sandybrown: 0xf4a460,
	  seagreen: 0x2e8b57,
	  seashell: 0xfff5ee,
	  sienna: 0xa0522d,
	  silver: 0xc0c0c0,
	  skyblue: 0x87ceeb,
	  slateblue: 0x6a5acd,
	  slategray: 0x708090,
	  slategrey: 0x708090,
	  snow: 0xfffafa,
	  springgreen: 0x00ff7f,
	  steelblue: 0x4682b4,
	  tan: 0xd2b48c,
	  teal: 0x008080,
	  thistle: 0xd8bfd8,
	  tomato: 0xff6347,
	  turquoise: 0x40e0d0,
	  violet: 0xee82ee,
	  wheat: 0xf5deb3,
	  white: 0xffffff,
	  whitesmoke: 0xf5f5f5,
	  yellow: 0xffff00,
	  yellowgreen: 0x9acd32
	};
	
	define(Color, color, {
	  displayable: function() {
	    return this.rgb().displayable();
	  },
	  toString: function() {
	    return this.rgb() + "";
	  }
	});
	
	function color(format) {
	  var m;
	  format = (format + "").trim().toLowerCase();
	  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00
	      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000
	      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)
	      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)
	      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)
	      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)
	      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)
	      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)
	      : named.hasOwnProperty(format) ? rgbn(named[format])
	      : format === "transparent" ? new Rgb(NaN, NaN, NaN, 0)
	      : null;
	}
	
	function rgbn(n) {
	  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);
	}
	
	function rgba(r, g, b, a) {
	  if (a <= 0) r = g = b = NaN;
	  return new Rgb(r, g, b, a);
	}
	
	function rgbConvert(o) {
	  if (!(o instanceof Color)) o = color(o);
	  if (!o) return new Rgb;
	  o = o.rgb();
	  return new Rgb(o.r, o.g, o.b, o.opacity);
	}
	
	function rgb(r, g, b, opacity) {
	  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);
	}
	
	function Rgb(r, g, b, opacity) {
	  this.r = +r;
	  this.g = +g;
	  this.b = +b;
	  this.opacity = +opacity;
	}
	
	define(Rgb, rgb, extend(Color, {
	  brighter: function(k) {
	    k = k == null ? brighter : Math.pow(brighter, k);
	    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);
	  },
	  darker: function(k) {
	    k = k == null ? darker : Math.pow(darker, k);
	    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);
	  },
	  rgb: function() {
	    return this;
	  },
	  displayable: function() {
	    return (0 <= this.r && this.r <= 255)
	        && (0 <= this.g && this.g <= 255)
	        && (0 <= this.b && this.b <= 255)
	        && (0 <= this.opacity && this.opacity <= 1);
	  },
	  toString: function() {
	    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));
	    return (a === 1 ? "rgb(" : "rgba(")
	        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + ", "
	        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + ", "
	        + Math.max(0, Math.min(255, Math.round(this.b) || 0))
	        + (a === 1 ? ")" : ", " + a + ")");
	  }
	}));
	
	function hsla(h, s, l, a) {
	  if (a <= 0) h = s = l = NaN;
	  else if (l <= 0 || l >= 1) h = s = NaN;
	  else if (s <= 0) h = NaN;
	  return new Hsl(h, s, l, a);
	}
	
	function hslConvert(o) {
	  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);
	  if (!(o instanceof Color)) o = color(o);
	  if (!o) return new Hsl;
	  if (o instanceof Hsl) return o;
	  o = o.rgb();
	  var r = o.r / 255,
	      g = o.g / 255,
	      b = o.b / 255,
	      min = Math.min(r, g, b),
	      max = Math.max(r, g, b),
	      h = NaN,
	      s = max - min,
	      l = (max + min) / 2;
	  if (s) {
	    if (r === max) h = (g - b) / s + (g < b) * 6;
	    else if (g === max) h = (b - r) / s + 2;
	    else h = (r - g) / s + 4;
	    s /= l < 0.5 ? max + min : 2 - max - min;
	    h *= 60;
	  } else {
	    s = l > 0 && l < 1 ? 0 : h;
	  }
	  return new Hsl(h, s, l, o.opacity);
	}
	
	function hsl(h, s, l, opacity) {
	  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);
	}
	
	function Hsl(h, s, l, opacity) {
	  this.h = +h;
	  this.s = +s;
	  this.l = +l;
	  this.opacity = +opacity;
	}
	
	define(Hsl, hsl, extend(Color, {
	  brighter: function(k) {
	    k = k == null ? brighter : Math.pow(brighter, k);
	    return new Hsl(this.h, this.s, this.l * k, this.opacity);
	  },
	  darker: function(k) {
	    k = k == null ? darker : Math.pow(darker, k);
	    return new Hsl(this.h, this.s, this.l * k, this.opacity);
	  },
	  rgb: function() {
	    var h = this.h % 360 + (this.h < 0) * 360,
	        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,
	        l = this.l,
	        m2 = l + (l < 0.5 ? l : 1 - l) * s,
	        m1 = 2 * l - m2;
	    return new Rgb(
	      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),
	      hsl2rgb(h, m1, m2),
	      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),
	      this.opacity
	    );
	  },
	  displayable: function() {
	    return (0 <= this.s && this.s <= 1 || isNaN(this.s))
	        && (0 <= this.l && this.l <= 1)
	        && (0 <= this.opacity && this.opacity <= 1);
	  }
	}));
	
	/* From FvD 13.37, CSS Color Module Level 3 */
	function hsl2rgb(h, m1, m2) {
	  return (h < 60 ? m1 + (m2 - m1) * h / 60
	      : h < 180 ? m2
	      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60
	      : m1) * 255;
	}
	
	var deg2rad = Math.PI / 180;
	var rad2deg = 180 / Math.PI;
	
	var Kn = 18;
	var Xn = 0.950470;
	var Yn = 1;
	var Zn = 1.088830;
	var t0 = 4 / 29;
	var t1 = 6 / 29;
	var t2 = 3 * t1 * t1;
	var t3 = t1 * t1 * t1;
	
	function labConvert(o) {
	  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);
	  if (o instanceof Hcl) {
	    var h = o.h * deg2rad;
	    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);
	  }
	  if (!(o instanceof Rgb)) o = rgbConvert(o);
	  var b = rgb2xyz(o.r),
	      a = rgb2xyz(o.g),
	      l = rgb2xyz(o.b),
	      x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),
	      y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),
	      z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);
	  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);
	}
	
	function lab(l, a, b, opacity) {
	  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);
	}
	
	function Lab(l, a, b, opacity) {
	  this.l = +l;
	  this.a = +a;
	  this.b = +b;
	  this.opacity = +opacity;
	}
	
	define(Lab, lab, extend(Color, {
	  brighter: function(k) {
	    return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);
	  },
	  darker: function(k) {
	    return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);
	  },
	  rgb: function() {
	    var y = (this.l + 16) / 116,
	        x = isNaN(this.a) ? y : y + this.a / 500,
	        z = isNaN(this.b) ? y : y - this.b / 200;
	    y = Yn * lab2xyz(y);
	    x = Xn * lab2xyz(x);
	    z = Zn * lab2xyz(z);
	    return new Rgb(
	      xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB
	      xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),
	      xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),
	      this.opacity
	    );
	  }
	}));
	
	function xyz2lab(t) {
	  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;
	}
	
	function lab2xyz(t) {
	  return t > t1 ? t * t * t : t2 * (t - t0);
	}
	
	function xyz2rgb(x) {
	  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);
	}
	
	function rgb2xyz(x) {
	  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);
	}
	
	function hclConvert(o) {
	  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);
	  if (!(o instanceof Lab)) o = labConvert(o);
	  var h = Math.atan2(o.b, o.a) * rad2deg;
	  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);
	}
	
	function hcl(h, c, l, opacity) {
	  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);
	}
	
	function Hcl(h, c, l, opacity) {
	  this.h = +h;
	  this.c = +c;
	  this.l = +l;
	  this.opacity = +opacity;
	}
	
	define(Hcl, hcl, extend(Color, {
	  brighter: function(k) {
	    return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);
	  },
	  darker: function(k) {
	    return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);
	  },
	  rgb: function() {
	    return labConvert(this).rgb();
	  }
	}));
	
	var A = -0.14861;
	var B = +1.78277;
	var C = -0.29227;
	var D = -0.90649;
	var E = +1.97294;
	var ED = E * D;
	var EB = E * B;
	var BC_DA = B * C - D * A;
	
	function cubehelixConvert(o) {
	  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);
	  if (!(o instanceof Rgb)) o = rgbConvert(o);
	  var r = o.r / 255,
	      g = o.g / 255,
	      b = o.b / 255,
	      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),
	      bl = b - l,
	      k = (E * (g - l) - C * bl) / D,
	      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1
	      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;
	  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);
	}
	
	function cubehelix(h, s, l, opacity) {
	  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);
	}
	
	function Cubehelix(h, s, l, opacity) {
	  this.h = +h;
	  this.s = +s;
	  this.l = +l;
	  this.opacity = +opacity;
	}
	
	define(Cubehelix, cubehelix, extend(Color, {
	  brighter: function(k) {
	    k = k == null ? brighter : Math.pow(brighter, k);
	    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);
	  },
	  darker: function(k) {
	    k = k == null ? darker : Math.pow(darker, k);
	    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);
	  },
	  rgb: function() {
	    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,
	        l = +this.l,
	        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),
	        cosh = Math.cos(h),
	        sinh = Math.sin(h);
	    return new Rgb(
	      255 * (l + a * (A * cosh + B * sinh)),
	      255 * (l + a * (C * cosh + D * sinh)),
	      255 * (l + a * (E * cosh)),
	      this.opacity
	    );
	  }
	}));
	
	exports.color = color;
	exports.rgb = rgb;
	exports.hsl = hsl;
	exports.lab = lab;
	exports.hcl = hcl;
	exports.cubehelix = cubehelix;
	
	Object.defineProperty(exports, '__esModule', { value: true });
	
	})));


/***/ },
/* 743 */
/***/ function(module, exports, __webpack_require__) {

	// https://d3js.org/d3-format/ Version 1.0.2. Copyright 2016 Mike Bostock.
	(function (global, factory) {
	   true ? factory(exports) :
	  typeof define === 'function' && define.amd ? define(['exports'], factory) :
	  (factory((global.d3 = global.d3 || {})));
	}(this, function (exports) { 'use strict';
	
	  // Computes the decimal coefficient and exponent of the specified number x with
	  // significant digits p, where x is positive and p is in [1, 21] or undefined.
	  // For example, formatDecimal(1.23) returns ["123", 0].
	  function formatDecimal(x, p) {
	    if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf("e")) < 0) return null; // NaN, ±Infinity
	    var i, coefficient = x.slice(0, i);
	
	    // The string returned by toExponential either has the form \d\.\d+e[-+]\d+
	    // (e.g., 1.2e+3) or the form \de[-+]\d+ (e.g., 1e+3).
	    return [
	      coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,
	      +x.slice(i + 1)
	    ];
	  }
	
	  function exponent(x) {
	    return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;
	  }
	
	  function formatGroup(grouping, thousands) {
	    return function(value, width) {
	      var i = value.length,
	          t = [],
	          j = 0,
	          g = grouping[0],
	          length = 0;
	
	      while (i > 0 && g > 0) {
	        if (length + g + 1 > width) g = Math.max(1, width - length);
	        t.push(value.substring(i -= g, i + g));
	        if ((length += g + 1) > width) break;
	        g = grouping[j = (j + 1) % grouping.length];
	      }
	
	      return t.reverse().join(thousands);
	    };
	  }
	
	  function formatDefault(x, p) {
	    x = x.toPrecision(p);
	
	    out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {
	      switch (x[i]) {
	        case ".": i0 = i1 = i; break;
	        case "0": if (i0 === 0) i0 = i; i1 = i; break;
	        case "e": break out;
	        default: if (i0 > 0) i0 = 0; break;
	      }
	    }
	
	    return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;
	  }
	
	  var prefixExponent;
	
	  function formatPrefixAuto(x, p) {
	    var d = formatDecimal(x, p);
	    if (!d) return x + "";
	    var coefficient = d[0],
	        exponent = d[1],
	        i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,
	        n = coefficient.length;
	    return i === n ? coefficient
	        : i > n ? coefficient + new Array(i - n + 1).join("0")
	        : i > 0 ? coefficient.slice(0, i) + "." + coefficient.slice(i)
	        : "0." + new Array(1 - i).join("0") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!
	  }
	
	  function formatRounded(x, p) {
	    var d = formatDecimal(x, p);
	    if (!d) return x + "";
	    var coefficient = d[0],
	        exponent = d[1];
	    return exponent < 0 ? "0." + new Array(-exponent).join("0") + coefficient
	        : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + "." + coefficient.slice(exponent + 1)
	        : coefficient + new Array(exponent - coefficient.length + 2).join("0");
	  }
	
	  var formatTypes = {
	    "": formatDefault,
	    "%": function(x, p) { return (x * 100).toFixed(p); },
	    "b": function(x) { return Math.round(x).toString(2); },
	    "c": function(x) { return x + ""; },
	    "d": function(x) { return Math.round(x).toString(10); },
	    "e": function(x, p) { return x.toExponential(p); },
	    "f": function(x, p) { return x.toFixed(p); },
	    "g": function(x, p) { return x.toPrecision(p); },
	    "o": function(x) { return Math.round(x).toString(8); },
	    "p": function(x, p) { return formatRounded(x * 100, p); },
	    "r": formatRounded,
	    "s": formatPrefixAuto,
	    "X": function(x) { return Math.round(x).toString(16).toUpperCase(); },
	    "x": function(x) { return Math.round(x).toString(16); }
	  };
	
	  // [[fill]align][sign][symbol][0][width][,][.precision][type]
	  var re = /^(?:(.)?([<>=^]))?([+\-\( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?([a-z%])?$/i;
	
	  function formatSpecifier(specifier) {
	    return new FormatSpecifier(specifier);
	  }
	
	  function FormatSpecifier(specifier) {
	    if (!(match = re.exec(specifier))) throw new Error("invalid format: " + specifier);
	
	    var match,
	        fill = match[1] || " ",
	        align = match[2] || ">",
	        sign = match[3] || "-",
	        symbol = match[4] || "",
	        zero = !!match[5],
	        width = match[6] && +match[6],
	        comma = !!match[7],
	        precision = match[8] && +match[8].slice(1),
	        type = match[9] || "";
	
	    // The "n" type is an alias for ",g".
	    if (type === "n") comma = true, type = "g";
	
	    // Map invalid types to the default format.
	    else if (!formatTypes[type]) type = "";
	
	    // If zero fill is specified, padding goes after sign and before digits.
	    if (zero || (fill === "0" && align === "=")) zero = true, fill = "0", align = "=";
	
	    this.fill = fill;
	    this.align = align;
	    this.sign = sign;
	    this.symbol = symbol;
	    this.zero = zero;
	    this.width = width;
	    this.comma = comma;
	    this.precision = precision;
	    this.type = type;
	  }
	
	  FormatSpecifier.prototype.toString = function() {
	    return this.fill
	        + this.align
	        + this.sign
	        + this.symbol
	        + (this.zero ? "0" : "")
	        + (this.width == null ? "" : Math.max(1, this.width | 0))
	        + (this.comma ? "," : "")
	        + (this.precision == null ? "" : "." + Math.max(0, this.precision | 0))
	        + this.type;
	  };
	
	  var prefixes = ["y","z","a","f","p","n","µ","m","","k","M","G","T","P","E","Z","Y"];
	
	  function identity(x) {
	    return x;
	  }
	
	  function formatLocale(locale) {
	    var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity,
	        currency = locale.currency,
	        decimal = locale.decimal;
	
	    function newFormat(specifier) {
	      specifier = formatSpecifier(specifier);
	
	      var fill = specifier.fill,
	          align = specifier.align,
	          sign = specifier.sign,
	          symbol = specifier.symbol,
	          zero = specifier.zero,
	          width = specifier.width,
	          comma = specifier.comma,
	          precision = specifier.precision,
	          type = specifier.type;
	
	      // Compute the prefix and suffix.
	      // For SI-prefix, the suffix is lazily computed.
	      var prefix = symbol === "$" ? currency[0] : symbol === "#" && /[boxX]/.test(type) ? "0" + type.toLowerCase() : "",
	          suffix = symbol === "$" ? currency[1] : /[%p]/.test(type) ? "%" : "";
	
	      // What format function should we use?
	      // Is this an integer type?
	      // Can this type generate exponential notation?
	      var formatType = formatTypes[type],
	          maybeSuffix = !type || /[defgprs%]/.test(type);
	
	      // Set the default precision if not specified,
	      // or clamp the specified precision to the supported range.
	      // For significant precision, it must be in [1, 21].
	      // For fixed precision, it must be in [0, 20].
	      precision = precision == null ? (type ? 6 : 12)
	          : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))
	          : Math.max(0, Math.min(20, precision));
	
	      function format(value) {
	        var valuePrefix = prefix,
	            valueSuffix = suffix,
	            i, n, c;
	
	        if (type === "c") {
	          valueSuffix = formatType(value) + valueSuffix;
	          value = "";
	        } else {
	          value = +value;
	
	          // Convert negative to positive, and compute the prefix.
	          // Note that -0 is not less than 0, but 1 / -0 is!
	          var valueNegative = (value < 0 || 1 / value < 0) && (value *= -1, true);
	
	          // Perform the initial formatting.
	          value = formatType(value, precision);
	
	          // If the original value was negative, it may be rounded to zero during
	          // formatting; treat this as (positive) zero.
	          if (valueNegative) {
	            i = -1, n = value.length;
	            valueNegative = false;
	            while (++i < n) {
	              if (c = value.charCodeAt(i), (48 < c && c < 58)
	                  || (type === "x" && 96 < c && c < 103)
	                  || (type === "X" && 64 < c && c < 71)) {
	                valueNegative = true;
	                break;
	              }
	            }
	          }
	
	          // Compute the prefix and suffix.
	          valuePrefix = (valueNegative ? (sign === "(" ? sign : "-") : sign === "-" || sign === "(" ? "" : sign) + valuePrefix;
	          valueSuffix = valueSuffix + (type === "s" ? prefixes[8 + prefixExponent / 3] : "") + (valueNegative && sign === "(" ? ")" : "");
	
	          // Break the formatted value into the integer “value” part that can be
	          // grouped, and fractional or exponential “suffix” part that is not.
	          if (maybeSuffix) {
	            i = -1, n = value.length;
	            while (++i < n) {
	              if (c = value.charCodeAt(i), 48 > c || c > 57) {
	                valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;
	                value = value.slice(0, i);
	                break;
	              }
	            }
	          }
	        }
	
	        // If the fill character is not "0", grouping is applied before padding.
	        if (comma && !zero) value = group(value, Infinity);
	
	        // Compute the padding.
	        var length = valuePrefix.length + value.length + valueSuffix.length,
	            padding = length < width ? new Array(width - length + 1).join(fill) : "";
	
	        // If the fill character is "0", grouping is applied after padding.
	        if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = "";
	
	        // Reconstruct the final output based on the desired alignment.
	        switch (align) {
	          case "<": return valuePrefix + value + valueSuffix + padding;
	          case "=": return valuePrefix + padding + value + valueSuffix;
	          case "^": return padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length);
	        }
	        return padding + valuePrefix + value + valueSuffix;
	      }
	
	      format.toString = function() {
	        return specifier + "";
	      };
	
	      return format;
	    }
	
	    function formatPrefix(specifier, value) {
	      var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = "f", specifier)),
	          e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,
	          k = Math.pow(10, -e),
	          prefix = prefixes[8 + e / 3];
	      return function(value) {
	        return f(k * value) + prefix;
	      };
	    }
	
	    return {
	      format: newFormat,
	      formatPrefix: formatPrefix
	    };
	  }
	
	  var locale;
	  defaultLocale({
	    decimal: ".",
	    thousands: ",",
	    grouping: [3],
	    currency: ["$", ""]
	  });
	
	  function defaultLocale(definition) {
	    locale = formatLocale(definition);
	    exports.format = locale.format;
	    exports.formatPrefix = locale.formatPrefix;
	    return locale;
	  }
	
	  function precisionFixed(step) {
	    return Math.max(0, -exponent(Math.abs(step)));
	  }
	
	  function precisionPrefix(step, value) {
	    return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));
	  }
	
	  function precisionRound(step, max) {
	    step = Math.abs(step), max = Math.abs(max) - step;
	    return Math.max(0, exponent(max) - exponent(step)) + 1;
	  }
	
	  exports.formatDefaultLocale = defaultLocale;
	  exports.formatLocale = formatLocale;
	  exports.formatSpecifier = formatSpecifier;
	  exports.precisionFixed = precisionFixed;
	  exports.precisionPrefix = precisionPrefix;
	  exports.precisionRound = precisionRound;
	
	  Object.defineProperty(exports, '__esModule', { value: true });
	
	}));

/***/ },
/* 744 */
/***/ function(module, exports, __webpack_require__) {

	// https://d3js.org/d3-time/ Version 1.0.4. Copyright 2016 Mike Bostock.
	(function (global, factory) {
	   true ? factory(exports) :
	  typeof define === 'function' && define.amd ? define(['exports'], factory) :
	  (factory((global.d3 = global.d3 || {})));
	}(this, (function (exports) { 'use strict';
	
	var t0 = new Date;
	var t1 = new Date;
	
	function newInterval(floori, offseti, count, field) {
	
	  function interval(date) {
	    return floori(date = new Date(+date)), date;
	  }
	
	  interval.floor = interval;
	
	  interval.ceil = function(date) {
	    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;
	  };
	
	  interval.round = function(date) {
	    var d0 = interval(date),
	        d1 = interval.ceil(date);
	    return date - d0 < d1 - date ? d0 : d1;
	  };
	
	  interval.offset = function(date, step) {
	    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;
	  };
	
	  interval.range = function(start, stop, step) {
	    var range = [];
	    start = interval.ceil(start);
	    step = step == null ? 1 : Math.floor(step);
	    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date
	    do range.push(new Date(+start)); while (offseti(start, step), floori(start), start < stop)
	    return range;
	  };
	
	  interval.filter = function(test) {
	    return newInterval(function(date) {
	      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);
	    }, function(date, step) {
	      if (date >= date) while (--step >= 0) while (offseti(date, 1), !test(date)) {} // eslint-disable-line no-empty
	    });
	  };
	
	  if (count) {
	    interval.count = function(start, end) {
	      t0.setTime(+start), t1.setTime(+end);
	      floori(t0), floori(t1);
	      return Math.floor(count(t0, t1));
	    };
	
	    interval.every = function(step) {
	      step = Math.floor(step);
	      return !isFinite(step) || !(step > 0) ? null
	          : !(step > 1) ? interval
	          : interval.filter(field
	              ? function(d) { return field(d) % step === 0; }
	              : function(d) { return interval.count(0, d) % step === 0; });
	    };
	  }
	
	  return interval;
	}
	
	var millisecond = newInterval(function() {
	  // noop
	}, function(date, step) {
	  date.setTime(+date + step);
	}, function(start, end) {
	  return end - start;
	});
	
	// An optimized implementation for this simple case.
	millisecond.every = function(k) {
	  k = Math.floor(k);
	  if (!isFinite(k) || !(k > 0)) return null;
	  if (!(k > 1)) return millisecond;
	  return newInterval(function(date) {
	    date.setTime(Math.floor(date / k) * k);
	  }, function(date, step) {
	    date.setTime(+date + step * k);
	  }, function(start, end) {
	    return (end - start) / k;
	  });
	};
	
	var milliseconds = millisecond.range;
	
	var durationSecond = 1e3;
	var durationMinute = 6e4;
	var durationHour = 36e5;
	var durationDay = 864e5;
	var durationWeek = 6048e5;
	
	var second = newInterval(function(date) {
	  date.setTime(Math.floor(date / durationSecond) * durationSecond);
	}, function(date, step) {
	  date.setTime(+date + step * durationSecond);
	}, function(start, end) {
	  return (end - start) / durationSecond;
	}, function(date) {
	  return date.getUTCSeconds();
	});
	
	var seconds = second.range;
	
	var minute = newInterval(function(date) {
	  date.setTime(Math.floor(date / durationMinute) * durationMinute);
	}, function(date, step) {
	  date.setTime(+date + step * durationMinute);
	}, function(start, end) {
	  return (end - start) / durationMinute;
	}, function(date) {
	  return date.getMinutes();
	});
	
	var minutes = minute.range;
	
	var hour = newInterval(function(date) {
	  var offset = date.getTimezoneOffset() * durationMinute % durationHour;
	  if (offset < 0) offset += durationHour;
	  date.setTime(Math.floor((+date - offset) / durationHour) * durationHour + offset);
	}, function(date, step) {
	  date.setTime(+date + step * durationHour);
	}, function(start, end) {
	  return (end - start) / durationHour;
	}, function(date) {
	  return date.getHours();
	});
	
	var hours = hour.range;
	
	var day = newInterval(function(date) {
	  date.setHours(0, 0, 0, 0);
	}, function(date, step) {
	  date.setDate(date.getDate() + step);
	}, function(start, end) {
	  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;
	}, function(date) {
	  return date.getDate() - 1;
	});
	
	var days = day.range;
	
	function weekday(i) {
	  return newInterval(function(date) {
	    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);
	    date.setHours(0, 0, 0, 0);
	  }, function(date, step) {
	    date.setDate(date.getDate() + step * 7);
	  }, function(start, end) {
	    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;
	  });
	}
	
	var sunday = weekday(0);
	var monday = weekday(1);
	var tuesday = weekday(2);
	var wednesday = weekday(3);
	var thursday = weekday(4);
	var friday = weekday(5);
	var saturday = weekday(6);
	
	var sundays = sunday.range;
	var mondays = monday.range;
	var tuesdays = tuesday.range;
	var wednesdays = wednesday.range;
	var thursdays = thursday.range;
	var fridays = friday.range;
	var saturdays = saturday.range;
	
	var month = newInterval(function(date) {
	  date.setDate(1);
	  date.setHours(0, 0, 0, 0);
	}, function(date, step) {
	  date.setMonth(date.getMonth() + step);
	}, function(start, end) {
	  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;
	}, function(date) {
	  return date.getMonth();
	});
	
	var months = month.range;
	
	var year = newInterval(function(date) {
	  date.setMonth(0, 1);
	  date.setHours(0, 0, 0, 0);
	}, function(date, step) {
	  date.setFullYear(date.getFullYear() + step);
	}, function(start, end) {
	  return end.getFullYear() - start.getFullYear();
	}, function(date) {
	  return date.getFullYear();
	});
	
	// An optimized implementation for this simple case.
	year.every = function(k) {
	  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {
	    date.setFullYear(Math.floor(date.getFullYear() / k) * k);
	    date.setMonth(0, 1);
	    date.setHours(0, 0, 0, 0);
	  }, function(date, step) {
	    date.setFullYear(date.getFullYear() + step * k);
	  });
	};
	
	var years = year.range;
	
	var utcMinute = newInterval(function(date) {
	  date.setUTCSeconds(0, 0);
	}, function(date, step) {
	  date.setTime(+date + step * durationMinute);
	}, function(start, end) {
	  return (end - start) / durationMinute;
	}, function(date) {
	  return date.getUTCMinutes();
	});
	
	var utcMinutes = utcMinute.range;
	
	var utcHour = newInterval(function(date) {
	  date.setUTCMinutes(0, 0, 0);
	}, function(date, step) {
	  date.setTime(+date + step * durationHour);
	}, function(start, end) {
	  return (end - start) / durationHour;
	}, function(date) {
	  return date.getUTCHours();
	});
	
	var utcHours = utcHour.range;
	
	var utcDay = newInterval(function(date) {
	  date.setUTCHours(0, 0, 0, 0);
	}, function(date, step) {
	  date.setUTCDate(date.getUTCDate() + step);
	}, function(start, end) {
	  return (end - start) / durationDay;
	}, function(date) {
	  return date.getUTCDate() - 1;
	});
	
	var utcDays = utcDay.range;
	
	function utcWeekday(i) {
	  return newInterval(function(date) {
	    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);
	    date.setUTCHours(0, 0, 0, 0);
	  }, function(date, step) {
	    date.setUTCDate(date.getUTCDate() + step * 7);
	  }, function(start, end) {
	    return (end - start) / durationWeek;
	  });
	}
	
	var utcSunday = utcWeekday(0);
	var utcMonday = utcWeekday(1);
	var utcTuesday = utcWeekday(2);
	var utcWednesday = utcWeekday(3);
	var utcThursday = utcWeekday(4);
	var utcFriday = utcWeekday(5);
	var utcSaturday = utcWeekday(6);
	
	var utcSundays = utcSunday.range;
	var utcMondays = utcMonday.range;
	var utcTuesdays = utcTuesday.range;
	var utcWednesdays = utcWednesday.range;
	var utcThursdays = utcThursday.range;
	var utcFridays = utcFriday.range;
	var utcSaturdays = utcSaturday.range;
	
	var utcMonth = newInterval(function(date) {
	  date.setUTCDate(1);
	  date.setUTCHours(0, 0, 0, 0);
	}, function(date, step) {
	  date.setUTCMonth(date.getUTCMonth() + step);
	}, function(start, end) {
	  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;
	}, function(date) {
	  return date.getUTCMonth();
	});
	
	var utcMonths = utcMonth.range;
	
	var utcYear = newInterval(function(date) {
	  date.setUTCMonth(0, 1);
	  date.setUTCHours(0, 0, 0, 0);
	}, function(date, step) {
	  date.setUTCFullYear(date.getUTCFullYear() + step);
	}, function(start, end) {
	  return end.getUTCFullYear() - start.getUTCFullYear();
	}, function(date) {
	  return date.getUTCFullYear();
	});
	
	// An optimized implementation for this simple case.
	utcYear.every = function(k) {
	  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {
	    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);
	    date.setUTCMonth(0, 1);
	    date.setUTCHours(0, 0, 0, 0);
	  }, function(date, step) {
	    date.setUTCFullYear(date.getUTCFullYear() + step * k);
	  });
	};
	
	var utcYears = utcYear.range;
	
	exports.timeInterval = newInterval;
	exports.timeMillisecond = millisecond;
	exports.timeMilliseconds = milliseconds;
	exports.utcMillisecond = millisecond;
	exports.utcMilliseconds = milliseconds;
	exports.timeSecond = second;
	exports.timeSeconds = seconds;
	exports.utcSecond = second;
	exports.utcSeconds = seconds;
	exports.timeMinute = minute;
	exports.timeMinutes = minutes;
	exports.timeHour = hour;
	exports.timeHours = hours;
	exports.timeDay = day;
	exports.timeDays = days;
	exports.timeWeek = sunday;
	exports.timeWeeks = sundays;
	exports.timeSunday = sunday;
	exports.timeSundays = sundays;
	exports.timeMonday = monday;
	exports.timeMondays = mondays;
	exports.timeTuesday = tuesday;
	exports.timeTuesdays = tuesdays;
	exports.timeWednesday = wednesday;
	exports.timeWednesdays = wednesdays;
	exports.timeThursday = thursday;
	exports.timeThursdays = thursdays;
	exports.timeFriday = friday;
	exports.timeFridays = fridays;
	exports.timeSaturday = saturday;
	exports.timeSaturdays = saturdays;
	exports.timeMonth = month;
	exports.timeMonths = months;
	exports.timeYear = year;
	exports.timeYears = years;
	exports.utcMinute = utcMinute;
	exports.utcMinutes = utcMinutes;
	exports.utcHour = utcHour;
	exports.utcHours = utcHours;
	exports.utcDay = utcDay;
	exports.utcDays = utcDays;
	exports.utcWeek = utcSunday;
	exports.utcWeeks = utcSundays;
	exports.utcSunday = utcSunday;
	exports.utcSundays = utcSundays;
	exports.utcMonday = utcMonday;
	exports.utcMondays = utcMondays;
	exports.utcTuesday = utcTuesday;
	exports.utcTuesdays = utcTuesdays;
	exports.utcWednesday = utcWednesday;
	exports.utcWednesdays = utcWednesdays;
	exports.utcThursday = utcThursday;
	exports.utcThursdays = utcThursdays;
	exports.utcFriday = utcFriday;
	exports.utcFridays = utcFridays;
	exports.utcSaturday = utcSaturday;
	exports.utcSaturdays = utcSaturdays;
	exports.utcMonth = utcMonth;
	exports.utcMonths = utcMonths;
	exports.utcYear = utcYear;
	exports.utcYears = utcYears;
	
	Object.defineProperty(exports, '__esModule', { value: true });
	
	})));


/***/ },
/* 745 */
/***/ function(module, exports, __webpack_require__) {

	// https://d3js.org/d3-time-format/ Version 2.0.3. Copyright 2016 Mike Bostock.
	(function (global, factory) {
	   true ? factory(exports, __webpack_require__(744)) :
	  typeof define === 'function' && define.amd ? define(['exports', 'd3-time'], factory) :
	  (factory((global.d3 = global.d3 || {}),global.d3));
	}(this, (function (exports,d3Time) { 'use strict';
	
	function localDate(d) {
	  if (0 <= d.y && d.y < 100) {
	    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);
	    date.setFullYear(d.y);
	    return date;
	  }
	  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);
	}
	
	function utcDate(d) {
	  if (0 <= d.y && d.y < 100) {
	    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));
	    date.setUTCFullYear(d.y);
	    return date;
	  }
	  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));
	}
	
	function newYear(y) {
	  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};
	}
	
	function formatLocale(locale) {
	  var locale_dateTime = locale.dateTime,
	      locale_date = locale.date,
	      locale_time = locale.time,
	      locale_periods = locale.periods,
	      locale_weekdays = locale.days,
	      locale_shortWeekdays = locale.shortDays,
	      locale_months = locale.months,
	      locale_shortMonths = locale.shortMonths;
	
	  var periodRe = formatRe(locale_periods),
	      periodLookup = formatLookup(locale_periods),
	      weekdayRe = formatRe(locale_weekdays),
	      weekdayLookup = formatLookup(locale_weekdays),
	      shortWeekdayRe = formatRe(locale_shortWeekdays),
	      shortWeekdayLookup = formatLookup(locale_shortWeekdays),
	      monthRe = formatRe(locale_months),
	      monthLookup = formatLookup(locale_months),
	      shortMonthRe = formatRe(locale_shortMonths),
	      shortMonthLookup = formatLookup(locale_shortMonths);
	
	  var formats = {
	    "a": formatShortWeekday,
	    "A": formatWeekday,
	    "b": formatShortMonth,
	    "B": formatMonth,
	    "c": null,
	    "d": formatDayOfMonth,
	    "e": formatDayOfMonth,
	    "H": formatHour24,
	    "I": formatHour12,
	    "j": formatDayOfYear,
	    "L": formatMilliseconds,
	    "m": formatMonthNumber,
	    "M": formatMinutes,
	    "p": formatPeriod,
	    "S": formatSeconds,
	    "U": formatWeekNumberSunday,
	    "w": formatWeekdayNumber,
	    "W": formatWeekNumberMonday,
	    "x": null,
	    "X": null,
	    "y": formatYear,
	    "Y": formatFullYear,
	    "Z": formatZone,
	    "%": formatLiteralPercent
	  };
	
	  var utcFormats = {
	    "a": formatUTCShortWeekday,
	    "A": formatUTCWeekday,
	    "b": formatUTCShortMonth,
	    "B": formatUTCMonth,
	    "c": null,
	    "d": formatUTCDayOfMonth,
	    "e": formatUTCDayOfMonth,
	    "H": formatUTCHour24,
	    "I": formatUTCHour12,
	    "j": formatUTCDayOfYear,
	    "L": formatUTCMilliseconds,
	    "m": formatUTCMonthNumber,
	    "M": formatUTCMinutes,
	    "p": formatUTCPeriod,
	    "S": formatUTCSeconds,
	    "U": formatUTCWeekNumberSunday,
	    "w": formatUTCWeekdayNumber,
	    "W": formatUTCWeekNumberMonday,
	    "x": null,
	    "X": null,
	    "y": formatUTCYear,
	    "Y": formatUTCFullYear,
	    "Z": formatUTCZone,
	    "%": formatLiteralPercent
	  };
	
	  var parses = {
	    "a": parseShortWeekday,
	    "A": parseWeekday,
	    "b": parseShortMonth,
	    "B": parseMonth,
	    "c": parseLocaleDateTime,
	    "d": parseDayOfMonth,
	    "e": parseDayOfMonth,
	    "H": parseHour24,
	    "I": parseHour24,
	    "j": parseDayOfYear,
	    "L": parseMilliseconds,
	    "m": parseMonthNumber,
	    "M": parseMinutes,
	    "p": parsePeriod,
	    "S": parseSeconds,
	    "U": parseWeekNumberSunday,
	    "w": parseWeekdayNumber,
	    "W": parseWeekNumberMonday,
	    "x": parseLocaleDate,
	    "X": parseLocaleTime,
	    "y": parseYear,
	    "Y": parseFullYear,
	    "Z": parseZone,
	    "%": parseLiteralPercent
	  };
	
	  // These recursive directive definitions must be deferred.
	  formats.x = newFormat(locale_date, formats);
	  formats.X = newFormat(locale_time, formats);
	  formats.c = newFormat(locale_dateTime, formats);
	  utcFormats.x = newFormat(locale_date, utcFormats);
	  utcFormats.X = newFormat(locale_time, utcFormats);
	  utcFormats.c = newFormat(locale_dateTime, utcFormats);
	
	  function newFormat(specifier, formats) {
	    return function(date) {
	      var string = [],
	          i = -1,
	          j = 0,
	          n = specifier.length,
	          c,
	          pad,
	          format;
	
	      if (!(date instanceof Date)) date = new Date(+date);
	
	      while (++i < n) {
	        if (specifier.charCodeAt(i) === 37) {
	          string.push(specifier.slice(j, i));
	          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);
	          else pad = c === "e" ? " " : "0";
	          if (format = formats[c]) c = format(date, pad);
	          string.push(c);
	          j = i + 1;
	        }
	      }
	
	      string.push(specifier.slice(j, i));
	      return string.join("");
	    };
	  }
	
	  function newParse(specifier, newDate) {
	    return function(string) {
	      var d = newYear(1900),
	          i = parseSpecifier(d, specifier, string += "", 0);
	      if (i != string.length) return null;
	
	      // The am-pm flag is 0 for AM, and 1 for PM.
	      if ("p" in d) d.H = d.H % 12 + d.p * 12;
	
	      // Convert day-of-week and week-of-year to day-of-year.
	      if ("W" in d || "U" in d) {
	        if (!("w" in d)) d.w = "W" in d ? 1 : 0;
	        var day = "Z" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();
	        d.m = 0;
	        d.d = "W" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;
	      }
	
	      // If a time zone is specified, all fields are interpreted as UTC and then
	      // offset according to the specified time zone.
	      if ("Z" in d) {
	        d.H += d.Z / 100 | 0;
	        d.M += d.Z % 100;
	        return utcDate(d);
	      }
	
	      // Otherwise, all fields are in local time.
	      return newDate(d);
	    };
	  }
	
	  function parseSpecifier(d, specifier, string, j) {
	    var i = 0,
	        n = specifier.length,
	        m = string.length,
	        c,
	        parse;
	
	    while (i < n) {
	      if (j >= m) return -1;
	      c = specifier.charCodeAt(i++);
	      if (c === 37) {
	        c = specifier.charAt(i++);
	        parse = parses[c in pads ? specifier.charAt(i++) : c];
	        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;
	      } else if (c != string.charCodeAt(j++)) {
	        return -1;
	      }
	    }
	
	    return j;
	  }
	
	  function parsePeriod(d, string, i) {
	    var n = periodRe.exec(string.slice(i));
	    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;
	  }
	
	  function parseShortWeekday(d, string, i) {
	    var n = shortWeekdayRe.exec(string.slice(i));
	    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;
	  }
	
	  function parseWeekday(d, string, i) {
	    var n = weekdayRe.exec(string.slice(i));
	    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;
	  }
	
	  function parseShortMonth(d, string, i) {
	    var n = shortMonthRe.exec(string.slice(i));
	    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;
	  }
	
	  function parseMonth(d, string, i) {
	    var n = monthRe.exec(string.slice(i));
	    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;
	  }
	
	  function parseLocaleDateTime(d, string, i) {
	    return parseSpecifier(d, locale_dateTime, string, i);
	  }
	
	  function parseLocaleDate(d, string, i) {
	    return parseSpecifier(d, locale_date, string, i);
	  }
	
	  function parseLocaleTime(d, string, i) {
	    return parseSpecifier(d, locale_time, string, i);
	  }
	
	  function formatShortWeekday(d) {
	    return locale_shortWeekdays[d.getDay()];
	  }
	
	  function formatWeekday(d) {
	    return locale_weekdays[d.getDay()];
	  }
	
	  function formatShortMonth(d) {
	    return locale_shortMonths[d.getMonth()];
	  }
	
	  function formatMonth(d) {
	    return locale_months[d.getMonth()];
	  }
	
	  function formatPeriod(d) {
	    return locale_periods[+(d.getHours() >= 12)];
	  }
	
	  function formatUTCShortWeekday(d) {
	    return locale_shortWeekdays[d.getUTCDay()];
	  }
	
	  function formatUTCWeekday(d) {
	    return locale_weekdays[d.getUTCDay()];
	  }
	
	  function formatUTCShortMonth(d) {
	    return locale_shortMonths[d.getUTCMonth()];
	  }
	
	  function formatUTCMonth(d) {
	    return locale_months[d.getUTCMonth()];
	  }
	
	  function formatUTCPeriod(d) {
	    return locale_periods[+(d.getUTCHours() >= 12)];
	  }
	
	  return {
	    format: function(specifier) {
	      var f = newFormat(specifier += "", formats);
	      f.toString = function() { return specifier; };
	      return f;
	    },
	    parse: function(specifier) {
	      var p = newParse(specifier += "", localDate);
	      p.toString = function() { return specifier; };
	      return p;
	    },
	    utcFormat: function(specifier) {
	      var f = newFormat(specifier += "", utcFormats);
	      f.toString = function() { return specifier; };
	      return f;
	    },
	    utcParse: function(specifier) {
	      var p = newParse(specifier, utcDate);
	      p.toString = function() { return specifier; };
	      return p;
	    }
	  };
	}
	
	var pads = {"-": "", "_": " ", "0": "0"};
	var numberRe = /^\s*\d+/;
	var percentRe = /^%/;
	var requoteRe = /[\\\^\$\*\+\?\|\[\]\(\)\.\{\}]/g;
	
	function pad(value, fill, width) {
	  var sign = value < 0 ? "-" : "",
	      string = (sign ? -value : value) + "",
	      length = string.length;
	  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);
	}
	
	function requote(s) {
	  return s.replace(requoteRe, "\\$&");
	}
	
	function formatRe(names) {
	  return new RegExp("^(?:" + names.map(requote).join("|") + ")", "i");
	}
	
	function formatLookup(names) {
	  var map = {}, i = -1, n = names.length;
	  while (++i < n) map[names[i].toLowerCase()] = i;
	  return map;
	}
	
	function parseWeekdayNumber(d, string, i) {
	  var n = numberRe.exec(string.slice(i, i + 1));
	  return n ? (d.w = +n[0], i + n[0].length) : -1;
	}
	
	function parseWeekNumberSunday(d, string, i) {
	  var n = numberRe.exec(string.slice(i));
	  return n ? (d.U = +n[0], i + n[0].length) : -1;
	}
	
	function parseWeekNumberMonday(d, string, i) {
	  var n = numberRe.exec(string.slice(i));
	  return n ? (d.W = +n[0], i + n[0].length) : -1;
	}
	
	function parseFullYear(d, string, i) {
	  var n = numberRe.exec(string.slice(i, i + 4));
	  return n ? (d.y = +n[0], i + n[0].length) : -1;
	}
	
	function parseYear(d, string, i) {
	  var n = numberRe.exec(string.slice(i, i + 2));
	  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;
	}
	
	function parseZone(d, string, i) {
	  var n = /^(Z)|([+-]\d\d)(?:\:?(\d\d))?/.exec(string.slice(i, i + 6));
	  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || "00")), i + n[0].length) : -1;
	}
	
	function parseMonthNumber(d, string, i) {
	  var n = numberRe.exec(string.slice(i, i + 2));
	  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;
	}
	
	function parseDayOfMonth(d, string, i) {
	  var n = numberRe.exec(string.slice(i, i + 2));
	  return n ? (d.d = +n[0], i + n[0].length) : -1;
	}
	
	function parseDayOfYear(d, string, i) {
	  var n = numberRe.exec(string.slice(i, i + 3));
	  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;
	}
	
	function parseHour24(d, string, i) {
	  var n = numberRe.exec(string.slice(i, i + 2));
	  return n ? (d.H = +n[0], i + n[0].length) : -1;
	}
	
	function parseMinutes(d, string, i) {
	  var n = numberRe.exec(string.slice(i, i + 2));
	  return n ? (d.M = +n[0], i + n[0].length) : -1;
	}
	
	function parseSeconds(d, string, i) {
	  var n = numberRe.exec(string.slice(i, i + 2));
	  return n ? (d.S = +n[0], i + n[0].length) : -1;
	}
	
	function parseMilliseconds(d, string, i) {
	  var n = numberRe.exec(string.slice(i, i + 3));
	  return n ? (d.L = +n[0], i + n[0].length) : -1;
	}
	
	function parseLiteralPercent(d, string, i) {
	  var n = percentRe.exec(string.slice(i, i + 1));
	  return n ? i + n[0].length : -1;
	}
	
	function formatDayOfMonth(d, p) {
	  return pad(d.getDate(), p, 2);
	}
	
	function formatHour24(d, p) {
	  return pad(d.getHours(), p, 2);
	}
	
	function formatHour12(d, p) {
	  return pad(d.getHours() % 12 || 12, p, 2);
	}
	
	function formatDayOfYear(d, p) {
	  return pad(1 + d3Time.timeDay.count(d3Time.timeYear(d), d), p, 3);
	}
	
	function formatMilliseconds(d, p) {
	  return pad(d.getMilliseconds(), p, 3);
	}
	
	function formatMonthNumber(d, p) {
	  return pad(d.getMonth() + 1, p, 2);
	}
	
	function formatMinutes(d, p) {
	  return pad(d.getMinutes(), p, 2);
	}
	
	function formatSeconds(d, p) {
	  return pad(d.getSeconds(), p, 2);
	}
	
	function formatWeekNumberSunday(d, p) {
	  return pad(d3Time.timeSunday.count(d3Time.timeYear(d), d), p, 2);
	}
	
	function formatWeekdayNumber(d) {
	  return d.getDay();
	}
	
	function formatWeekNumberMonday(d, p) {
	  return pad(d3Time.timeMonday.count(d3Time.timeYear(d), d), p, 2);
	}
	
	function formatYear(d, p) {
	  return pad(d.getFullYear() % 100, p, 2);
	}
	
	function formatFullYear(d, p) {
	  return pad(d.getFullYear() % 10000, p, 4);
	}
	
	function formatZone(d) {
	  var z = d.getTimezoneOffset();
	  return (z > 0 ? "-" : (z *= -1, "+"))
	      + pad(z / 60 | 0, "0", 2)
	      + pad(z % 60, "0", 2);
	}
	
	function formatUTCDayOfMonth(d, p) {
	  return pad(d.getUTCDate(), p, 2);
	}
	
	function formatUTCHour24(d, p) {
	  return pad(d.getUTCHours(), p, 2);
	}
	
	function formatUTCHour12(d, p) {
	  return pad(d.getUTCHours() % 12 || 12, p, 2);
	}
	
	function formatUTCDayOfYear(d, p) {
	  return pad(1 + d3Time.utcDay.count(d3Time.utcYear(d), d), p, 3);
	}
	
	function formatUTCMilliseconds(d, p) {
	  return pad(d.getUTCMilliseconds(), p, 3);
	}
	
	function formatUTCMonthNumber(d, p) {
	  return pad(d.getUTCMonth() + 1, p, 2);
	}
	
	function formatUTCMinutes(d, p) {
	  return pad(d.getUTCMinutes(), p, 2);
	}
	
	function formatUTCSeconds(d, p) {
	  return pad(d.getUTCSeconds(), p, 2);
	}
	
	function formatUTCWeekNumberSunday(d, p) {
	  return pad(d3Time.utcSunday.count(d3Time.utcYear(d), d), p, 2);
	}
	
	function formatUTCWeekdayNumber(d) {
	  return d.getUTCDay();
	}
	
	function formatUTCWeekNumberMonday(d, p) {
	  return pad(d3Time.utcMonday.count(d3Time.utcYear(d), d), p, 2);
	}
	
	function formatUTCYear(d, p) {
	  return pad(d.getUTCFullYear() % 100, p, 2);
	}
	
	function formatUTCFullYear(d, p) {
	  return pad(d.getUTCFullYear() % 10000, p, 4);
	}
	
	function formatUTCZone() {
	  return "+0000";
	}
	
	function formatLiteralPercent() {
	  return "%";
	}
	
	var locale$1;
	
	
	
	
	
	defaultLocale({
	  dateTime: "%x, %X",
	  date: "%-m/%-d/%Y",
	  time: "%-I:%M:%S %p",
	  periods: ["AM", "PM"],
	  days: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
	  shortDays: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
	  months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
	  shortMonths: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"]
	});
	
	function defaultLocale(definition) {
	  locale$1 = formatLocale(definition);
	  exports.timeFormat = locale$1.format;
	  exports.timeParse = locale$1.parse;
	  exports.utcFormat = locale$1.utcFormat;
	  exports.utcParse = locale$1.utcParse;
	  return locale$1;
	}
	
	var isoSpecifier = "%Y-%m-%dT%H:%M:%S.%LZ";
	
	function formatIsoNative(date) {
	  return date.toISOString();
	}
	
	var formatIso = Date.prototype.toISOString
	    ? formatIsoNative
	    : exports.utcFormat(isoSpecifier);
	
	function parseIsoNative(string) {
	  var date = new Date(string);
	  return isNaN(date) ? null : date;
	}
	
	var parseIso = +new Date("2000-01-01T00:00:00.000Z")
	    ? parseIsoNative
	    : exports.utcParse(isoSpecifier);
	
	exports.timeFormatDefaultLocale = defaultLocale;
	exports.timeFormatLocale = formatLocale;
	exports.isoFormat = formatIso;
	exports.isoParse = parseIso;
	
	Object.defineProperty(exports, '__esModule', { value: true });
	
	})));


/***/ },
/* 746 */
/***/ function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.shallowEqual = shallowEqual;
	exports.default = pureRenderDecorator;
	function shallowEqual(a, b) {
	  /* eslint-disable no-restricted-syntax */
	  for (var key in a) {
	    if ({}.hasOwnProperty.call(a, key) && (!{}.hasOwnProperty.call(b, key) || a[key] !== b[key])) {
	      return false;
	    }
	  }
	  for (var _key in b) {
	    if ({}.hasOwnProperty.call(b, _key) && !{}.hasOwnProperty.call(a, _key)) {
	      return false;
	    }
	  }
	  return true;
	}
	
	function shouldComponentUpdate(props, state) {
	  return !shallowEqual(props, this.props) || !shallowEqual(state, this.state);
	}
	
	function pureRenderDecorator(component) {
	  // eslint-disable-next-line no-param-reassign
	  component.prototype.shouldComponentUpdate = shouldComponentUpdate;
	}

/***/ },
/* 747 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(404);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; } /**
	                                                                                                                                                                                                                              * @fileOverview Layer
	                                                                                                                                                                                                                              */
	
	
	var propTypes = {
	  className: _react.PropTypes.string,
	  children: _react.PropTypes.oneOfType([_react.PropTypes.arrayOf(_react.PropTypes.node), _react.PropTypes.node])
	};
	
	function Layer(props) {
	  var children = props.children,
	      className = props.className,
	      others = _objectWithoutProperties(props, ['children', 'className']);
	
	  var layerClass = (0, _classnames2.default)('recharts-layer', className);
	
	  return _react2.default.createElement(
	    'g',
	    _extends({ className: layerClass }, others),
	    children
	  );
	}
	
	Layer.propTypes = propTypes;
	
	exports.default = Layer;

/***/ },
/* 748 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _isFunction2 = __webpack_require__(224);
	
	var _isFunction3 = _interopRequireDefault(_isFunction2);
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _class, _class2, _temp; /**
	                             * @fileOverview Legend
	                             */
	
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _PureRender = __webpack_require__(746);
	
	var _PureRender2 = _interopRequireDefault(_PureRender);
	
	var _DefaultLegendContent = __webpack_require__(749);
	
	var _DefaultLegendContent2 = _interopRequireDefault(_DefaultLegendContent);
	
	var _DataUtils = __webpack_require__(673);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var renderContent = function renderContent(content, props) {
	  if (_react2.default.isValidElement(content)) {
	    return _react2.default.cloneElement(content, props);
	  } else if ((0, _isFunction3.default)(content)) {
	    return content(props);
	  }
	
	  return _react2.default.createElement(_DefaultLegendContent2.default, props);
	};
	
	var Legend = (0, _PureRender2.default)(_class = (_temp = _class2 = function (_Component) {
	  _inherits(Legend, _Component);
	
	  function Legend() {
	    _classCallCheck(this, Legend);
	
	    return _possibleConstructorReturn(this, (Legend.__proto__ || Object.getPrototypeOf(Legend)).apply(this, arguments));
	  }
	
	  _createClass(Legend, [{
	    key: 'getBBox',
	    value: function getBBox() {
	      if (!this.wrapperNode) {
	        return null;
	      }
	
	      return this.wrapperNode.getBoundingClientRect ? this.wrapperNode.getBoundingClientRect() : null;
	    }
	  }, {
	    key: 'getDefaultPosition',
	    value: function getDefaultPosition(style) {
	      var _props = this.props,
	          layout = _props.layout,
	          align = _props.align,
	          verticalAlign = _props.verticalAlign,
	          margin = _props.margin,
	          chartWidth = _props.chartWidth,
	          chartHeight = _props.chartHeight;
	
	      var hPos = void 0,
	          vPos = void 0;
	
	      if (!style || (style.left === undefined || style.left === null) && (style.right === undefined || style.right === null)) {
	        if (align === 'center' && layout === 'vertical') {
	          var box = this.getBBox() || { width: 0 };
	          hPos = { left: ((chartWidth || 0) - box.width) / 2 };
	        } else {
	          hPos = align === 'right' ? { right: margin && margin.right || 0 } : { left: margin && margin.left || 0 };
	        }
	      }
	
	      if (!style || (style.top === undefined || style.top === null) && (style.bottom === undefined || style.bottom === null)) {
	        if (verticalAlign === 'middle') {
	          var _box = this.getBBox() || { height: 0 };
	          vPos = { top: ((chartHeight || 0) - _box.height) / 2 };
	        } else {
	          vPos = verticalAlign === 'bottom' ? { bottom: margin && margin.bottom || 0 } : { top: margin && margin.top || 0 };
	        }
	      }
	
	      return _extends({}, hPos, vPos);
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _this2 = this;
	
	      var _props2 = this.props,
	          content = _props2.content,
	          width = _props2.width,
	          height = _props2.height,
	          wrapperStyle = _props2.wrapperStyle;
	
	      var outerStyle = _extends({
	        position: 'absolute',
	        width: width || 'auto',
	        height: height || 'auto'
	      }, this.getDefaultPosition(wrapperStyle), wrapperStyle);
	
	      return _react2.default.createElement(
	        'div',
	        {
	          className: 'recharts-legend-wrapper',
	          style: outerStyle,
	          ref: function ref(node) {
	            _this2.wrapperNode = node;
	          }
	        },
	        renderContent(content, this.props)
	      );
	    }
	  }], [{
	    key: 'getWithHeight',
	    value: function getWithHeight(item, chartWidth) {
	      var layout = item.props.layout;
	
	
	      if (layout === 'vertical' && (0, _DataUtils.isNumber)(item.props.height)) {
	        return {
	          height: item.props.height
	        };
	      } else if (layout === 'horizontal') {
	        return {
	          width: item.props.width || chartWidth
	        };
	      }
	
	      return null;
	    }
	  }]);
	
	  return Legend;
	}(_react.Component), _class2.displayName = 'Legend', _class2.propTypes = {
	  content: _react.PropTypes.oneOfType([_react.PropTypes.element, _react.PropTypes.func]),
	  wrapperStyle: _react.PropTypes.object,
	  chartWidth: _react.PropTypes.number,
	  chartHeight: _react.PropTypes.number,
	  width: _react.PropTypes.number,
	  height: _react.PropTypes.number,
	  iconSize: _react.PropTypes.number,
	  layout: _react.PropTypes.oneOf(['horizontal', 'vertical']),
	  align: _react.PropTypes.oneOf(['center', 'left', 'right']),
	  verticalAlign: _react.PropTypes.oneOf(['top', 'bottom', 'middle']),
	  margin: _react.PropTypes.shape({
	    top: _react.PropTypes.number,
	    left: _react.PropTypes.number,
	    bottom: _react.PropTypes.number,
	    right: _react.PropTypes.number
	  }),
	  payload: _react.PropTypes.arrayOf(_react.PropTypes.shape({
	    value: _react.PropTypes.any,
	    id: _react.PropTypes.any,
	    type: _react.PropTypes.oneOf(['line', 'square', 'rect', 'circle', 'cross', 'diamond', 'star', 'triangle', 'wye'])
	  })),
	  onMouseEnter: _react.PropTypes.func,
	  onMouseLeave: _react.PropTypes.func,
	  onClick: _react.PropTypes.func
	}, _class2.defaultProps = {
	  iconSize: 14,
	  layout: 'horizontal',
	  align: 'center',
	  verticalAlign: 'bottom'
	}, _temp)) || _class;
	
	exports.default = Legend;

/***/ },
/* 749 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _class, _class2, _temp; /**
	                             * @fileOverview Default Legend Content
	                             */
	
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _PureRender = __webpack_require__(746);
	
	var _PureRender2 = _interopRequireDefault(_PureRender);
	
	var _Surface = __webpack_require__(669);
	
	var _Surface2 = _interopRequireDefault(_Surface);
	
	var _Symbols = __webpack_require__(750);
	
	var _Symbols2 = _interopRequireDefault(_Symbols);
	
	var _ReactUtils = __webpack_require__(670);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var SIZE = 32;
	
	var DefaultLegendContent = (0, _PureRender2.default)(_class = (_temp = _class2 = function (_Component) {
	  _inherits(DefaultLegendContent, _Component);
	
	  function DefaultLegendContent() {
	    _classCallCheck(this, DefaultLegendContent);
	
	    return _possibleConstructorReturn(this, (DefaultLegendContent.__proto__ || Object.getPrototypeOf(DefaultLegendContent)).apply(this, arguments));
	  }
	
	  _createClass(DefaultLegendContent, [{
	    key: 'renderIcon',
	
	
	    /**
	     * Render the path of icon
	     * @param {Object} data Data of each legend item
	     * @return {String} Path element
	     */
	    value: function renderIcon(data) {
	      var color = data.color;
	
	      var halfSize = SIZE / 2;
	      var sixthSize = SIZE / 6;
	      var thirdSize = SIZE / 3;
	
	      if (data.type === 'line') {
	        return _react2.default.createElement('path', {
	          strokeWidth: 4,
	          fill: 'none',
	          stroke: color,
	          d: 'M0,' + halfSize + 'h' + thirdSize + '\n            A' + sixthSize + ',' + sixthSize + ',0,1,1,' + 2 * thirdSize + ',' + halfSize + '\n            H' + SIZE + 'M' + 2 * thirdSize + ',' + halfSize + '\n            A' + sixthSize + ',' + sixthSize + ',0,1,1,' + thirdSize + ',' + halfSize,
	          className: 'recharts-legend-icon'
	        });
	      } else if (data.type === 'rect') {
	        return _react2.default.createElement('path', {
	          stroke: 'none',
	          fill: color,
	          d: 'M0,' + SIZE / 8 + 'h' + SIZE + 'v' + SIZE * 3 / 4 + 'h' + -SIZE + 'z',
	          className: 'recharts-legend-icon'
	        });
	      }
	
	      return _react2.default.createElement(_Symbols2.default, {
	        fill: color,
	        cx: halfSize,
	        cy: halfSize,
	        size: SIZE,
	        sizeType: 'diameter',
	        type: data.type
	      });
	    }
	
	    /**
	     * Draw items of legend
	     * @return {ReactElement} Items
	     */
	
	  }, {
	    key: 'renderItems',
	    value: function renderItems() {
	      var _this2 = this;
	
	      var _props = this.props,
	          payload = _props.payload,
	          iconSize = _props.iconSize,
	          layout = _props.layout;
	
	      var viewBox = { x: 0, y: 0, width: SIZE, height: SIZE };
	      var itemStyle = {
	        display: layout === 'horizontal' ? 'inline-block' : 'block',
	        marginRight: 10
	      };
	      var svgStyle = { display: 'inline-block', verticalAlign: 'middle', marginRight: 4 };
	
	      return payload.map(function (entry, i) {
	        return _react2.default.createElement(
	          'li',
	          _extends({
	            className: 'recharts-legend-item legend-item-' + i,
	            style: itemStyle,
	            key: 'legend-item-' + i
	          }, (0, _ReactUtils.filterEventsOfChild)(_this2.props, entry, i)),
	          _react2.default.createElement(
	            _Surface2.default,
	            { width: iconSize, height: iconSize, viewBox: viewBox, style: svgStyle },
	            _this2.renderIcon(entry, iconSize)
	          ),
	          _react2.default.createElement(
	            'span',
	            { className: 'recharts-legend-item-text' },
	            entry.value
	          )
	        );
	      });
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _props2 = this.props,
	          payload = _props2.payload,
	          layout = _props2.layout,
	          align = _props2.align;
	
	
	      if (!payload || !payload.length) {
	        return null;
	      }
	
	      var finalStyle = {
	        padding: 0,
	        margin: 0,
	        textAlign: layout === 'horizontal' ? align : 'left'
	      };
	
	      return _react2.default.createElement(
	        'ul',
	        { className: 'recharts-default-legend', style: finalStyle },
	        this.renderItems()
	      );
	    }
	  }]);
	
	  return DefaultLegendContent;
	}(_react.Component), _class2.displayName = 'Legend', _class2.propTypes = {
	  content: _react.PropTypes.element,
	  iconSize: _react.PropTypes.number,
	  layout: _react.PropTypes.oneOf(['horizontal', 'vertical']),
	  align: _react.PropTypes.oneOf(['center', 'left', 'right']),
	  verticalAlign: _react.PropTypes.oneOf(['top', 'bottom', 'middle']),
	  payload: _react.PropTypes.arrayOf(_react.PropTypes.shape({
	    value: _react.PropTypes.any,
	    id: _react.PropTypes.any,
	    type: _react.PropTypes.oneOf(['line', 'square', 'rect', 'circle', 'cross', 'diamond', 'square', 'star', 'triangle', 'wye'])
	  })),
	  onMouseEnter: _react.PropTypes.func,
	  onMouseLeave: _react.PropTypes.func,
	  onClick: _react.PropTypes.func
	}, _class2.defaultProps = {
	  iconSize: 14,
	  layout: 'horizontal',
	  align: 'center',
	  verticalAlign: 'middle'
	}, _temp)) || _class;
	
	exports.default = DefaultLegendContent;

/***/ },
/* 750 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _class, _class2, _temp; /**
	                             * @fileOverview Curve
	                             */
	
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _d3Shape = __webpack_require__(751);
	
	var _classnames = __webpack_require__(404);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _PureRender = __webpack_require__(746);
	
	var _PureRender2 = _interopRequireDefault(_PureRender);
	
	var _ReactUtils = __webpack_require__(670);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var SYMBOL_FACTORIES = {
	  symbolCircle: _d3Shape.symbolCircle, symbolCross: _d3Shape.symbolCross, symbolDiamond: _d3Shape.symbolDiamond,
	  symbolSquare: _d3Shape.symbolSquare, symbolStar: _d3Shape.symbolStar, symbolTriangle: _d3Shape.symbolTriangle, symbolWye: _d3Shape.symbolWye
	};
	var RADIAN = Math.PI / 180;
	
	var getSymbolFactory = function getSymbolFactory(type) {
	  var name = 'symbol' + type.slice(0, 1).toUpperCase() + type.slice(1);
	
	  return SYMBOL_FACTORIES[name] || _d3Shape.symbolCircle;
	};
	
	var calculateAreaSize = function calculateAreaSize(size, sizeType, type) {
	  if (sizeType === 'area') {
	    return size;
	  }
	
	  switch (type) {
	    case 'cross':
	      return 5 * size * size / 9;
	    case 'diamond':
	      return 0.5 * size * size / Math.sqrt(3);
	    case 'square':
	      return size * size;
	    case 'star':
	      {
	        var angle = 18 * RADIAN;
	
	        return 1.25 * size * size * (Math.tan(angle) - Math.tan(angle * 2) * Math.pow(Math.tan(angle), 2));
	      }
	    case 'triangle':
	      return Math.sqrt(3) * size * size / 4;
	    case 'wye':
	      return (21 - 10 * Math.sqrt(3)) * size * size / 8;
	    default:
	      return Math.PI * size * size / 4;
	  }
	};
	
	var Symbols = (0, _PureRender2.default)(_class = (_temp = _class2 = function (_Component) {
	  _inherits(Symbols, _Component);
	
	  function Symbols() {
	    _classCallCheck(this, Symbols);
	
	    return _possibleConstructorReturn(this, (Symbols.__proto__ || Object.getPrototypeOf(Symbols)).apply(this, arguments));
	  }
	
	  _createClass(Symbols, [{
	    key: 'getPath',
	
	
	    /**
	     * Calculate the path of curve
	     * @return {String} path
	     */
	    value: function getPath() {
	      var _props = this.props,
	          size = _props.size,
	          sizeType = _props.sizeType,
	          type = _props.type;
	
	      var symbolFactory = getSymbolFactory(type);
	      var symbol = (0, _d3Shape.symbol)().type(symbolFactory).size(calculateAreaSize(size, sizeType, type));
	
	      return symbol();
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _props2 = this.props,
	          className = _props2.className,
	          cx = _props2.cx,
	          cy = _props2.cy,
	          size = _props2.size;
	
	
	      if (cx === +cx && cy === +cy && size === +size) {
	
	        return _react2.default.createElement('path', _extends({}, (0, _ReactUtils.getPresentationAttributes)(this.props), (0, _ReactUtils.filterEventAttributes)(this.props), {
	          className: (0, _classnames2.default)('recharts-symbols', className),
	          transform: 'translate(' + cx + ', ' + cy + ')',
	          d: this.getPath()
	        }));
	      }
	
	      return null;
	    }
	  }]);
	
	  return Symbols;
	}(_react.Component), _class2.displayName = 'Symbols', _class2.propTypes = _extends({}, _ReactUtils.PRESENTATION_ATTRIBUTES, {
	  className: _react.PropTypes.string,
	  type: _react.PropTypes.oneOf(['circle', 'cross', 'diamond', 'square', 'star', 'triangle', 'wye']),
	  cx: _react.PropTypes.number,
	  cy: _react.PropTypes.number,
	  size: _react.PropTypes.number,
	  sizeType: _react.PropTypes.oneOf(['area', 'diameter'])
	}), _class2.defaultProps = {
	  type: 'circle',
	  size: 64,
	  sizeType: 'area'
	}, _temp)) || _class;
	
	exports.default = Symbols;

/***/ },
/* 751 */
/***/ function(module, exports, __webpack_require__) {

	// https://d3js.org/d3-shape/ Version 1.0.4. Copyright 2016 Mike Bostock.
	(function (global, factory) {
	   true ? factory(exports, __webpack_require__(752)) :
	  typeof define === 'function' && define.amd ? define(['exports', 'd3-path'], factory) :
	  (factory((global.d3 = global.d3 || {}),global.d3));
	}(this, (function (exports,d3Path) { 'use strict';
	
	var constant$1 = function(x) {
	  return function constant() {
	    return x;
	  };
	};
	
	var epsilon = 1e-12;
	var pi = Math.PI;
	var halfPi = pi / 2;
	var tau = 2 * pi;
	
	function arcInnerRadius(d) {
	  return d.innerRadius;
	}
	
	function arcOuterRadius(d) {
	  return d.outerRadius;
	}
	
	function arcStartAngle(d) {
	  return d.startAngle;
	}
	
	function arcEndAngle(d) {
	  return d.endAngle;
	}
	
	function arcPadAngle(d) {
	  return d && d.padAngle; // Note: optional!
	}
	
	function asin(x) {
	  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);
	}
	
	function intersect(x0, y0, x1, y1, x2, y2, x3, y3) {
	  var x10 = x1 - x0, y10 = y1 - y0,
	      x32 = x3 - x2, y32 = y3 - y2,
	      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);
	  return [x0 + t * x10, y0 + t * y10];
	}
	
	// Compute perpendicular offset line of length rc.
	// http://mathworld.wolfram.com/Circle-LineIntersection.html
	function cornerTangents(x0, y0, x1, y1, r1, rc, cw) {
	  var x01 = x0 - x1,
	      y01 = y0 - y1,
	      lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01),
	      ox = lo * y01,
	      oy = -lo * x01,
	      x11 = x0 + ox,
	      y11 = y0 + oy,
	      x10 = x1 + ox,
	      y10 = y1 + oy,
	      x00 = (x11 + x10) / 2,
	      y00 = (y11 + y10) / 2,
	      dx = x10 - x11,
	      dy = y10 - y11,
	      d2 = dx * dx + dy * dy,
	      r = r1 - rc,
	      D = x11 * y10 - x10 * y11,
	      d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)),
	      cx0 = (D * dy - dx * d) / d2,
	      cy0 = (-D * dx - dy * d) / d2,
	      cx1 = (D * dy + dx * d) / d2,
	      cy1 = (-D * dx + dy * d) / d2,
	      dx0 = cx0 - x00,
	      dy0 = cy0 - y00,
	      dx1 = cx1 - x00,
	      dy1 = cy1 - y00;
	
	  // Pick the closer of the two intersection points.
	  // TODO Is there a faster way to determine which intersection to use?
	  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;
	
	  return {
	    cx: cx0,
	    cy: cy0,
	    x01: -ox,
	    y01: -oy,
	    x11: cx0 * (r1 / r - 1),
	    y11: cy0 * (r1 / r - 1)
	  };
	}
	
	var arc = function() {
	  var innerRadius = arcInnerRadius,
	      outerRadius = arcOuterRadius,
	      cornerRadius = constant$1(0),
	      padRadius = null,
	      startAngle = arcStartAngle,
	      endAngle = arcEndAngle,
	      padAngle = arcPadAngle,
	      context = null;
	
	  function arc() {
	    var buffer,
	        r,
	        r0 = +innerRadius.apply(this, arguments),
	        r1 = +outerRadius.apply(this, arguments),
	        a0 = startAngle.apply(this, arguments) - halfPi,
	        a1 = endAngle.apply(this, arguments) - halfPi,
	        da = Math.abs(a1 - a0),
	        cw = a1 > a0;
	
	    if (!context) context = buffer = d3Path.path();
	
	    // Ensure that the outer radius is always larger than the inner radius.
	    if (r1 < r0) r = r1, r1 = r0, r0 = r;
	
	    // Is it a point?
	    if (!(r1 > epsilon)) context.moveTo(0, 0);
	
	    // Or is it a circle or annulus?
	    else if (da > tau - epsilon) {
	      context.moveTo(r1 * Math.cos(a0), r1 * Math.sin(a0));
	      context.arc(0, 0, r1, a0, a1, !cw);
	      if (r0 > epsilon) {
	        context.moveTo(r0 * Math.cos(a1), r0 * Math.sin(a1));
	        context.arc(0, 0, r0, a1, a0, cw);
	      }
	    }
	
	    // Or is it a circular or annular sector?
	    else {
	      var a01 = a0,
	          a11 = a1,
	          a00 = a0,
	          a10 = a1,
	          da0 = da,
	          da1 = da,
	          ap = padAngle.apply(this, arguments) / 2,
	          rp = (ap > epsilon) && (padRadius ? +padRadius.apply(this, arguments) : Math.sqrt(r0 * r0 + r1 * r1)),
	          rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),
	          rc0 = rc,
	          rc1 = rc,
	          t0,
	          t1;
	
	      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.
	      if (rp > epsilon) {
	        var p0 = asin(rp / r0 * Math.sin(ap)),
	            p1 = asin(rp / r1 * Math.sin(ap));
	        if ((da0 -= p0 * 2) > epsilon) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;
	        else da0 = 0, a00 = a10 = (a0 + a1) / 2;
	        if ((da1 -= p1 * 2) > epsilon) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;
	        else da1 = 0, a01 = a11 = (a0 + a1) / 2;
	      }
	
	      var x01 = r1 * Math.cos(a01),
	          y01 = r1 * Math.sin(a01),
	          x10 = r0 * Math.cos(a10),
	          y10 = r0 * Math.sin(a10);
	
	      // Apply rounded corners?
	      if (rc > epsilon) {
	        var x11 = r1 * Math.cos(a11),
	            y11 = r1 * Math.sin(a11),
	            x00 = r0 * Math.cos(a00),
	            y00 = r0 * Math.sin(a00);
	
	        // Restrict the corner radius according to the sector angle.
	        if (da < pi) {
	          var oc = da0 > epsilon ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],
	              ax = x01 - oc[0],
	              ay = y01 - oc[1],
	              bx = x11 - oc[0],
	              by = y11 - oc[1],
	              kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2),
	              lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);
	          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));
	          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));
	        }
	      }
	
	      // Is the sector collapsed to a line?
	      if (!(da1 > epsilon)) context.moveTo(x01, y01);
	
	      // Does the sector’s outer ring have rounded corners?
	      else if (rc1 > epsilon) {
	        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);
	        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);
	
	        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);
	
	        // Have the corners merged?
	        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, Math.atan2(t0.y01, t0.x01), Math.atan2(t1.y01, t1.x01), !cw);
	
	        // Otherwise, draw the two corners and the ring.
	        else {
	          context.arc(t0.cx, t0.cy, rc1, Math.atan2(t0.y01, t0.x01), Math.atan2(t0.y11, t0.x11), !cw);
	          context.arc(0, 0, r1, Math.atan2(t0.cy + t0.y11, t0.cx + t0.x11), Math.atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);
	          context.arc(t1.cx, t1.cy, rc1, Math.atan2(t1.y11, t1.x11), Math.atan2(t1.y01, t1.x01), !cw);
	        }
	      }
	
	      // Or is the outer ring just a circular arc?
	      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);
	
	      // Is there no inner ring, and it’s a circular sector?
	      // Or perhaps it’s an annular sector collapsed due to padding?
	      if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10);
	
	      // Does the sector’s inner ring (or point) have rounded corners?
	      else if (rc0 > epsilon) {
	        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);
	        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);
	
	        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);
	
	        // Have the corners merged?
	        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, Math.atan2(t0.y01, t0.x01), Math.atan2(t1.y01, t1.x01), !cw);
	
	        // Otherwise, draw the two corners and the ring.
	        else {
	          context.arc(t0.cx, t0.cy, rc0, Math.atan2(t0.y01, t0.x01), Math.atan2(t0.y11, t0.x11), !cw);
	          context.arc(0, 0, r0, Math.atan2(t0.cy + t0.y11, t0.cx + t0.x11), Math.atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);
	          context.arc(t1.cx, t1.cy, rc0, Math.atan2(t1.y11, t1.x11), Math.atan2(t1.y01, t1.x01), !cw);
	        }
	      }
	
	      // Or is the inner ring just a circular arc?
	      else context.arc(0, 0, r0, a10, a00, cw);
	    }
	
	    context.closePath();
	
	    if (buffer) return context = null, buffer + "" || null;
	  }
	
	  arc.centroid = function() {
	    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,
	        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;
	    return [Math.cos(a) * r, Math.sin(a) * r];
	  };
	
	  arc.innerRadius = function(_) {
	    return arguments.length ? (innerRadius = typeof _ === "function" ? _ : constant$1(+_), arc) : innerRadius;
	  };
	
	  arc.outerRadius = function(_) {
	    return arguments.length ? (outerRadius = typeof _ === "function" ? _ : constant$1(+_), arc) : outerRadius;
	  };
	
	  arc.cornerRadius = function(_) {
	    return arguments.length ? (cornerRadius = typeof _ === "function" ? _ : constant$1(+_), arc) : cornerRadius;
	  };
	
	  arc.padRadius = function(_) {
	    return arguments.length ? (padRadius = _ == null ? null : typeof _ === "function" ? _ : constant$1(+_), arc) : padRadius;
	  };
	
	  arc.startAngle = function(_) {
	    return arguments.length ? (startAngle = typeof _ === "function" ? _ : constant$1(+_), arc) : startAngle;
	  };
	
	  arc.endAngle = function(_) {
	    return arguments.length ? (endAngle = typeof _ === "function" ? _ : constant$1(+_), arc) : endAngle;
	  };
	
	  arc.padAngle = function(_) {
	    return arguments.length ? (padAngle = typeof _ === "function" ? _ : constant$1(+_), arc) : padAngle;
	  };
	
	  arc.context = function(_) {
	    return arguments.length ? ((context = _ == null ? null : _), arc) : context;
	  };
	
	  return arc;
	};
	
	function Linear(context) {
	  this._context = context;
	}
	
	Linear.prototype = {
	  areaStart: function() {
	    this._line = 0;
	  },
	  areaEnd: function() {
	    this._line = NaN;
	  },
	  lineStart: function() {
	    this._point = 0;
	  },
	  lineEnd: function() {
	    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();
	    this._line = 1 - this._line;
	  },
	  point: function(x, y) {
	    x = +x, y = +y;
	    switch (this._point) {
	      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;
	      case 1: this._point = 2; // proceed
	      default: this._context.lineTo(x, y); break;
	    }
	  }
	};
	
	var curveLinear = function(context) {
	  return new Linear(context);
	};
	
	function x(p) {
	  return p[0];
	}
	
	function y(p) {
	  return p[1];
	}
	
	var line = function() {
	  var x$$1 = x,
	      y$$1 = y,
	      defined = constant$1(true),
	      context = null,
	      curve = curveLinear,
	      output = null;
	
	  function line(data) {
	    var i,
	        n = data.length,
	        d,
	        defined0 = false,
	        buffer;
	
	    if (context == null) output = curve(buffer = d3Path.path());
	
	    for (i = 0; i <= n; ++i) {
	      if (!(i < n && defined(d = data[i], i, data)) === defined0) {
	        if (defined0 = !defined0) output.lineStart();
	        else output.lineEnd();
	      }
	      if (defined0) output.point(+x$$1(d, i, data), +y$$1(d, i, data));
	    }
	
	    if (buffer) return output = null, buffer + "" || null;
	  }
	
	  line.x = function(_) {
	    return arguments.length ? (x$$1 = typeof _ === "function" ? _ : constant$1(+_), line) : x$$1;
	  };
	
	  line.y = function(_) {
	    return arguments.length ? (y$$1 = typeof _ === "function" ? _ : constant$1(+_), line) : y$$1;
	  };
	
	  line.defined = function(_) {
	    return arguments.length ? (defined = typeof _ === "function" ? _ : constant$1(!!_), line) : defined;
	  };
	
	  line.curve = function(_) {
	    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;
	  };
	
	  line.context = function(_) {
	    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;
	  };
	
	  return line;
	};
	
	var area = function() {
	  var x0 = x,
	      x1 = null,
	      y0 = constant$1(0),
	      y1 = y,
	      defined = constant$1(true),
	      context = null,
	      curve = curveLinear,
	      output = null;
	
	  function area(data) {
	    var i,
	        j,
	        k,
	        n = data.length,
	        d,
	        defined0 = false,
	        buffer,
	        x0z = new Array(n),
	        y0z = new Array(n);
	
	    if (context == null) output = curve(buffer = d3Path.path());
	
	    for (i = 0; i <= n; ++i) {
	      if (!(i < n && defined(d = data[i], i, data)) === defined0) {
	        if (defined0 = !defined0) {
	          j = i;
	          output.areaStart();
	          output.lineStart();
	        } else {
	          output.lineEnd();
	          output.lineStart();
	          for (k = i - 1; k >= j; --k) {
	            output.point(x0z[k], y0z[k]);
	          }
	          output.lineEnd();
	          output.areaEnd();
	        }
	      }
	      if (defined0) {
	        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);
	        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);
	      }
	    }
	
	    if (buffer) return output = null, buffer + "" || null;
	  }
	
	  function arealine() {
	    return line().defined(defined).curve(curve).context(context);
	  }
	
	  area.x = function(_) {
	    return arguments.length ? (x0 = typeof _ === "function" ? _ : constant$1(+_), x1 = null, area) : x0;
	  };
	
	  area.x0 = function(_) {
	    return arguments.length ? (x0 = typeof _ === "function" ? _ : constant$1(+_), area) : x0;
	  };
	
	  area.x1 = function(_) {
	    return arguments.length ? (x1 = _ == null ? null : typeof _ === "function" ? _ : constant$1(+_), area) : x1;
	  };
	
	  area.y = function(_) {
	    return arguments.length ? (y0 = typeof _ === "function" ? _ : constant$1(+_), y1 = null, area) : y0;
	  };
	
	  area.y0 = function(_) {
	    return arguments.length ? (y0 = typeof _ === "function" ? _ : constant$1(+_), area) : y0;
	  };
	
	  area.y1 = function(_) {
	    return arguments.length ? (y1 = _ == null ? null : typeof _ === "function" ? _ : constant$1(+_), area) : y1;
	  };
	
	  area.lineX0 =
	  area.lineY0 = function() {
	    return arealine().x(x0).y(y0);
	  };
	
	  area.lineY1 = function() {
	    return arealine().x(x0).y(y1);
	  };
	
	  area.lineX1 = function() {
	    return arealine().x(x1).y(y0);
	  };
	
	  area.defined = function(_) {
	    return arguments.length ? (defined = typeof _ === "function" ? _ : constant$1(!!_), area) : defined;
	  };
	
	  area.curve = function(_) {
	    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;
	  };
	
	  area.context = function(_) {
	    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;
	  };
	
	  return area;
	};
	
	var descending = function(a, b) {
	  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;
	};
	
	var identity = function(d) {
	  return d;
	};
	
	var pie = function() {
	  var value = identity,
	      sortValues = descending,
	      sort = null,
	      startAngle = constant$1(0),
	      endAngle = constant$1(tau),
	      padAngle = constant$1(0);
	
	  function pie(data) {
	    var i,
	        n = data.length,
	        j,
	        k,
	        sum = 0,
	        index = new Array(n),
	        arcs = new Array(n),
	        a0 = +startAngle.apply(this, arguments),
	        da = Math.min(tau, Math.max(-tau, endAngle.apply(this, arguments) - a0)),
	        a1,
	        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),
	        pa = p * (da < 0 ? -1 : 1),
	        v;
	
	    for (i = 0; i < n; ++i) {
	      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {
	        sum += v;
	      }
	    }
	
	    // Optionally sort the arcs by previously-computed values or by data.
	    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });
	    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });
	
	    // Compute the arcs! They are stored in the original data's order.
	    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {
	      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {
	        data: data[j],
	        index: i,
	        value: v,
	        startAngle: a0,
	        endAngle: a1,
	        padAngle: p
	      };
	    }
	
	    return arcs;
	  }
	
	  pie.value = function(_) {
	    return arguments.length ? (value = typeof _ === "function" ? _ : constant$1(+_), pie) : value;
	  };
	
	  pie.sortValues = function(_) {
	    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;
	  };
	
	  pie.sort = function(_) {
	    return arguments.length ? (sort = _, sortValues = null, pie) : sort;
	  };
	
	  pie.startAngle = function(_) {
	    return arguments.length ? (startAngle = typeof _ === "function" ? _ : constant$1(+_), pie) : startAngle;
	  };
	
	  pie.endAngle = function(_) {
	    return arguments.length ? (endAngle = typeof _ === "function" ? _ : constant$1(+_), pie) : endAngle;
	  };
	
	  pie.padAngle = function(_) {
	    return arguments.length ? (padAngle = typeof _ === "function" ? _ : constant$1(+_), pie) : padAngle;
	  };
	
	  return pie;
	};
	
	var curveRadialLinear = curveRadial(curveLinear);
	
	function Radial(curve) {
	  this._curve = curve;
	}
	
	Radial.prototype = {
	  areaStart: function() {
	    this._curve.areaStart();
	  },
	  areaEnd: function() {
	    this._curve.areaEnd();
	  },
	  lineStart: function() {
	    this._curve.lineStart();
	  },
	  lineEnd: function() {
	    this._curve.lineEnd();
	  },
	  point: function(a, r) {
	    this._curve.point(r * Math.sin(a), r * -Math.cos(a));
	  }
	};
	
	function curveRadial(curve) {
	
	  function radial(context) {
	    return new Radial(curve(context));
	  }
	
	  radial._curve = curve;
	
	  return radial;
	}
	
	function radialLine(l) {
	  var c = l.curve;
	
	  l.angle = l.x, delete l.x;
	  l.radius = l.y, delete l.y;
	
	  l.curve = function(_) {
	    return arguments.length ? c(curveRadial(_)) : c()._curve;
	  };
	
	  return l;
	}
	
	var radialLine$1 = function() {
	  return radialLine(line().curve(curveRadialLinear));
	};
	
	var radialArea = function() {
	  var a = area().curve(curveRadialLinear),
	      c = a.curve,
	      x0 = a.lineX0,
	      x1 = a.lineX1,
	      y0 = a.lineY0,
	      y1 = a.lineY1;
	
	  a.angle = a.x, delete a.x;
	  a.startAngle = a.x0, delete a.x0;
	  a.endAngle = a.x1, delete a.x1;
	  a.radius = a.y, delete a.y;
	  a.innerRadius = a.y0, delete a.y0;
	  a.outerRadius = a.y1, delete a.y1;
	  a.lineStartAngle = function() { return radialLine(x0()); }, delete a.lineX0;
	  a.lineEndAngle = function() { return radialLine(x1()); }, delete a.lineX1;
	  a.lineInnerRadius = function() { return radialLine(y0()); }, delete a.lineY0;
	  a.lineOuterRadius = function() { return radialLine(y1()); }, delete a.lineY1;
	
	  a.curve = function(_) {
	    return arguments.length ? c(curveRadial(_)) : c()._curve;
	  };
	
	  return a;
	};
	
	var circle = {
	  draw: function(context, size) {
	    var r = Math.sqrt(size / pi);
	    context.moveTo(r, 0);
	    context.arc(0, 0, r, 0, tau);
	  }
	};
	
	var cross = {
	  draw: function(context, size) {
	    var r = Math.sqrt(size / 5) / 2;
	    context.moveTo(-3 * r, -r);
	    context.lineTo(-r, -r);
	    context.lineTo(-r, -3 * r);
	    context.lineTo(r, -3 * r);
	    context.lineTo(r, -r);
	    context.lineTo(3 * r, -r);
	    context.lineTo(3 * r, r);
	    context.lineTo(r, r);
	    context.lineTo(r, 3 * r);
	    context.lineTo(-r, 3 * r);
	    context.lineTo(-r, r);
	    context.lineTo(-3 * r, r);
	    context.closePath();
	  }
	};
	
	var tan30 = Math.sqrt(1 / 3);
	var tan30_2 = tan30 * 2;
	
	var diamond = {
	  draw: function(context, size) {
	    var y = Math.sqrt(size / tan30_2),
	        x = y * tan30;
	    context.moveTo(0, -y);
	    context.lineTo(x, 0);
	    context.lineTo(0, y);
	    context.lineTo(-x, 0);
	    context.closePath();
	  }
	};
	
	var ka = 0.89081309152928522810;
	var kr = Math.sin(pi / 10) / Math.sin(7 * pi / 10);
	var kx = Math.sin(tau / 10) * kr;
	var ky = -Math.cos(tau / 10) * kr;
	
	var star = {
	  draw: function(context, size) {
	    var r = Math.sqrt(size * ka),
	        x = kx * r,
	        y = ky * r;
	    context.moveTo(0, -r);
	    context.lineTo(x, y);
	    for (var i = 1; i < 5; ++i) {
	      var a = tau * i / 5,
	          c = Math.cos(a),
	          s = Math.sin(a);
	      context.lineTo(s * r, -c * r);
	      context.lineTo(c * x - s * y, s * x + c * y);
	    }
	    context.closePath();
	  }
	};
	
	var square = {
	  draw: function(context, size) {
	    var w = Math.sqrt(size),
	        x = -w / 2;
	    context.rect(x, x, w, w);
	  }
	};
	
	var sqrt3 = Math.sqrt(3);
	
	var triangle = {
	  draw: function(context, size) {
	    var y = -Math.sqrt(size / (sqrt3 * 3));
	    context.moveTo(0, y * 2);
	    context.lineTo(-sqrt3 * y, -y);
	    context.lineTo(sqrt3 * y, -y);
	    context.closePath();
	  }
	};
	
	var c = -0.5;
	var s = Math.sqrt(3) / 2;
	var k = 1 / Math.sqrt(12);
	var a = (k / 2 + 1) * 3;
	
	var wye = {
	  draw: function(context, size) {
	    var r = Math.sqrt(size / a),
	        x0 = r / 2,
	        y0 = r * k,
	        x1 = x0,
	        y1 = r * k + r,
	        x2 = -x1,
	        y2 = y1;
	    context.moveTo(x0, y0);
	    context.lineTo(x1, y1);
	    context.lineTo(x2, y2);
	    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);
	    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);
	    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);
	    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);
	    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);
	    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);
	    context.closePath();
	  }
	};
	
	var symbols = [
	  circle,
	  cross,
	  diamond,
	  square,
	  star,
	  triangle,
	  wye
	];
	
	var symbol = function() {
	  var type = constant$1(circle),
	      size = constant$1(64),
	      context = null;
	
	  function symbol() {
	    var buffer;
	    if (!context) context = buffer = d3Path.path();
	    type.apply(this, arguments).draw(context, +size.apply(this, arguments));
	    if (buffer) return context = null, buffer + "" || null;
	  }
	
	  symbol.type = function(_) {
	    return arguments.length ? (type = typeof _ === "function" ? _ : constant$1(_), symbol) : type;
	  };
	
	  symbol.size = function(_) {
	    return arguments.length ? (size = typeof _ === "function" ? _ : constant$1(+_), symbol) : size;
	  };
	
	  symbol.context = function(_) {
	    return arguments.length ? (context = _ == null ? null : _, symbol) : context;
	  };
	
	  return symbol;
	};
	
	var noop = function() {};
	
	function point(that, x, y) {
	  that._context.bezierCurveTo(
	    (2 * that._x0 + that._x1) / 3,
	    (2 * that._y0 + that._y1) / 3,
	    (that._x0 + 2 * that._x1) / 3,
	    (that._y0 + 2 * that._y1) / 3,
	    (that._x0 + 4 * that._x1 + x) / 6,
	    (that._y0 + 4 * that._y1 + y) / 6
	  );
	}
	
	function Basis(context) {
	  this._context = context;
	}
	
	Basis.prototype = {
	  areaStart: function() {
	    this._line = 0;
	  },
	  areaEnd: function() {
	    this._line = NaN;
	  },
	  lineStart: function() {
	    this._x0 = this._x1 =
	    this._y0 = this._y1 = NaN;
	    this._point = 0;
	  },
	  lineEnd: function() {
	    switch (this._point) {
	      case 3: point(this, this._x1, this._y1); // proceed
	      case 2: this._context.lineTo(this._x1, this._y1); break;
	    }
	    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();
	    this._line = 1 - this._line;
	  },
	  point: function(x, y) {
	    x = +x, y = +y;
	    switch (this._point) {
	      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;
	      case 1: this._point = 2; break;
	      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed
	      default: point(this, x, y); break;
	    }
	    this._x0 = this._x1, this._x1 = x;
	    this._y0 = this._y1, this._y1 = y;
	  }
	};
	
	var basis = function(context) {
	  return new Basis(context);
	};
	
	function BasisClosed(context) {
	  this._context = context;
	}
	
	BasisClosed.prototype = {
	  areaStart: noop,
	  areaEnd: noop,
	  lineStart: function() {
	    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =
	    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;
	    this._point = 0;
	  },
	  lineEnd: function() {
	    switch (this._point) {
	      case 1: {
	        this._context.moveTo(this._x2, this._y2);
	        this._context.closePath();
	        break;
	      }
	      case 2: {
	        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);
	        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);
	        this._context.closePath();
	        break;
	      }
	      case 3: {
	        this.point(this._x2, this._y2);
	        this.point(this._x3, this._y3);
	        this.point(this._x4, this._y4);
	        break;
	      }
	    }
	  },
	  point: function(x, y) {
	    x = +x, y = +y;
	    switch (this._point) {
	      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;
	      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;
	      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;
	      default: point(this, x, y); break;
	    }
	    this._x0 = this._x1, this._x1 = x;
	    this._y0 = this._y1, this._y1 = y;
	  }
	};
	
	var basisClosed = function(context) {
	  return new BasisClosed(context);
	};
	
	function BasisOpen(context) {
	  this._context = context;
	}
	
	BasisOpen.prototype = {
	  areaStart: function() {
	    this._line = 0;
	  },
	  areaEnd: function() {
	    this._line = NaN;
	  },
	  lineStart: function() {
	    this._x0 = this._x1 =
	    this._y0 = this._y1 = NaN;
	    this._point = 0;
	  },
	  lineEnd: function() {
	    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();
	    this._line = 1 - this._line;
	  },
	  point: function(x, y) {
	    x = +x, y = +y;
	    switch (this._point) {
	      case 0: this._point = 1; break;
	      case 1: this._point = 2; break;
	      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;
	      case 3: this._point = 4; // proceed
	      default: point(this, x, y); break;
	    }
	    this._x0 = this._x1, this._x1 = x;
	    this._y0 = this._y1, this._y1 = y;
	  }
	};
	
	var basisOpen = function(context) {
	  return new BasisOpen(context);
	};
	
	function Bundle(context, beta) {
	  this._basis = new Basis(context);
	  this._beta = beta;
	}
	
	Bundle.prototype = {
	  lineStart: function() {
	    this._x = [];
	    this._y = [];
	    this._basis.lineStart();
	  },
	  lineEnd: function() {
	    var x = this._x,
	        y = this._y,
	        j = x.length - 1;
	
	    if (j > 0) {
	      var x0 = x[0],
	          y0 = y[0],
	          dx = x[j] - x0,
	          dy = y[j] - y0,
	          i = -1,
	          t;
	
	      while (++i <= j) {
	        t = i / j;
	        this._basis.point(
	          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),
	          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)
	        );
	      }
	    }
	
	    this._x = this._y = null;
	    this._basis.lineEnd();
	  },
	  point: function(x, y) {
	    this._x.push(+x);
	    this._y.push(+y);
	  }
	};
	
	var bundle = (function custom(beta) {
	
	  function bundle(context) {
	    return beta === 1 ? new Basis(context) : new Bundle(context, beta);
	  }
	
	  bundle.beta = function(beta) {
	    return custom(+beta);
	  };
	
	  return bundle;
	})(0.85);
	
	function point$1(that, x, y) {
	  that._context.bezierCurveTo(
	    that._x1 + that._k * (that._x2 - that._x0),
	    that._y1 + that._k * (that._y2 - that._y0),
	    that._x2 + that._k * (that._x1 - x),
	    that._y2 + that._k * (that._y1 - y),
	    that._x2,
	    that._y2
	  );
	}
	
	function Cardinal(context, tension) {
	  this._context = context;
	  this._k = (1 - tension) / 6;
	}
	
	Cardinal.prototype = {
	  areaStart: function() {
	    this._line = 0;
	  },
	  areaEnd: function() {
	    this._line = NaN;
	  },
	  lineStart: function() {
	    this._x0 = this._x1 = this._x2 =
	    this._y0 = this._y1 = this._y2 = NaN;
	    this._point = 0;
	  },
	  lineEnd: function() {
	    switch (this._point) {
	      case 2: this._context.lineTo(this._x2, this._y2); break;
	      case 3: point$1(this, this._x1, this._y1); break;
	    }
	    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();
	    this._line = 1 - this._line;
	  },
	  point: function(x, y) {
	    x = +x, y = +y;
	    switch (this._point) {
	      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;
	      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;
	      case 2: this._point = 3; // proceed
	      default: point$1(this, x, y); break;
	    }
	    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
	    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
	  }
	};
	
	var cardinal = (function custom(tension) {
	
	  function cardinal(context) {
	    return new Cardinal(context, tension);
	  }
	
	  cardinal.tension = function(tension) {
	    return custom(+tension);
	  };
	
	  return cardinal;
	})(0);
	
	function CardinalClosed(context, tension) {
	  this._context = context;
	  this._k = (1 - tension) / 6;
	}
	
	CardinalClosed.prototype = {
	  areaStart: noop,
	  areaEnd: noop,
	  lineStart: function() {
	    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =
	    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;
	    this._point = 0;
	  },
	  lineEnd: function() {
	    switch (this._point) {
	      case 1: {
	        this._context.moveTo(this._x3, this._y3);
	        this._context.closePath();
	        break;
	      }
	      case 2: {
	        this._context.lineTo(this._x3, this._y3);
	        this._context.closePath();
	        break;
	      }
	      case 3: {
	        this.point(this._x3, this._y3);
	        this.point(this._x4, this._y4);
	        this.point(this._x5, this._y5);
	        break;
	      }
	    }
	  },
	  point: function(x, y) {
	    x = +x, y = +y;
	    switch (this._point) {
	      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;
	      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;
	      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;
	      default: point$1(this, x, y); break;
	    }
	    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
	    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
	  }
	};
	
	var cardinalClosed = (function custom(tension) {
	
	  function cardinal(context) {
	    return new CardinalClosed(context, tension);
	  }
	
	  cardinal.tension = function(tension) {
	    return custom(+tension);
	  };
	
	  return cardinal;
	})(0);
	
	function CardinalOpen(context, tension) {
	  this._context = context;
	  this._k = (1 - tension) / 6;
	}
	
	CardinalOpen.prototype = {
	  areaStart: function() {
	    this._line = 0;
	  },
	  areaEnd: function() {
	    this._line = NaN;
	  },
	  lineStart: function() {
	    this._x0 = this._x1 = this._x2 =
	    this._y0 = this._y1 = this._y2 = NaN;
	    this._point = 0;
	  },
	  lineEnd: function() {
	    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();
	    this._line = 1 - this._line;
	  },
	  point: function(x, y) {
	    x = +x, y = +y;
	    switch (this._point) {
	      case 0: this._point = 1; break;
	      case 1: this._point = 2; break;
	      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;
	      case 3: this._point = 4; // proceed
	      default: point$1(this, x, y); break;
	    }
	    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
	    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
	  }
	};
	
	var cardinalOpen = (function custom(tension) {
	
	  function cardinal(context) {
	    return new CardinalOpen(context, tension);
	  }
	
	  cardinal.tension = function(tension) {
	    return custom(+tension);
	  };
	
	  return cardinal;
	})(0);
	
	function point$2(that, x, y) {
	  var x1 = that._x1,
	      y1 = that._y1,
	      x2 = that._x2,
	      y2 = that._y2;
	
	  if (that._l01_a > epsilon) {
	    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,
	        n = 3 * that._l01_a * (that._l01_a + that._l12_a);
	    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;
	    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;
	  }
	
	  if (that._l23_a > epsilon) {
	    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,
	        m = 3 * that._l23_a * (that._l23_a + that._l12_a);
	    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;
	    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;
	  }
	
	  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);
	}
	
	function CatmullRom(context, alpha) {
	  this._context = context;
	  this._alpha = alpha;
	}
	
	CatmullRom.prototype = {
	  areaStart: function() {
	    this._line = 0;
	  },
	  areaEnd: function() {
	    this._line = NaN;
	  },
	  lineStart: function() {
	    this._x0 = this._x1 = this._x2 =
	    this._y0 = this._y1 = this._y2 = NaN;
	    this._l01_a = this._l12_a = this._l23_a =
	    this._l01_2a = this._l12_2a = this._l23_2a =
	    this._point = 0;
	  },
	  lineEnd: function() {
	    switch (this._point) {
	      case 2: this._context.lineTo(this._x2, this._y2); break;
	      case 3: this.point(this._x2, this._y2); break;
	    }
	    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();
	    this._line = 1 - this._line;
	  },
	  point: function(x, y) {
	    x = +x, y = +y;
	
	    if (this._point) {
	      var x23 = this._x2 - x,
	          y23 = this._y2 - y;
	      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));
	    }
	
	    switch (this._point) {
	      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;
	      case 1: this._point = 2; break;
	      case 2: this._point = 3; // proceed
	      default: point$2(this, x, y); break;
	    }
	
	    this._l01_a = this._l12_a, this._l12_a = this._l23_a;
	    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;
	    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
	    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
	  }
	};
	
	var catmullRom = (function custom(alpha) {
	
	  function catmullRom(context) {
	    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);
	  }
	
	  catmullRom.alpha = function(alpha) {
	    return custom(+alpha);
	  };
	
	  return catmullRom;
	})(0.5);
	
	function CatmullRomClosed(context, alpha) {
	  this._context = context;
	  this._alpha = alpha;
	}
	
	CatmullRomClosed.prototype = {
	  areaStart: noop,
	  areaEnd: noop,
	  lineStart: function() {
	    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =
	    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;
	    this._l01_a = this._l12_a = this._l23_a =
	    this._l01_2a = this._l12_2a = this._l23_2a =
	    this._point = 0;
	  },
	  lineEnd: function() {
	    switch (this._point) {
	      case 1: {
	        this._context.moveTo(this._x3, this._y3);
	        this._context.closePath();
	        break;
	      }
	      case 2: {
	        this._context.lineTo(this._x3, this._y3);
	        this._context.closePath();
	        break;
	      }
	      case 3: {
	        this.point(this._x3, this._y3);
	        this.point(this._x4, this._y4);
	        this.point(this._x5, this._y5);
	        break;
	      }
	    }
	  },
	  point: function(x, y) {
	    x = +x, y = +y;
	
	    if (this._point) {
	      var x23 = this._x2 - x,
	          y23 = this._y2 - y;
	      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));
	    }
	
	    switch (this._point) {
	      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;
	      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;
	      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;
	      default: point$2(this, x, y); break;
	    }
	
	    this._l01_a = this._l12_a, this._l12_a = this._l23_a;
	    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;
	    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
	    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
	  }
	};
	
	var catmullRomClosed = (function custom(alpha) {
	
	  function catmullRom(context) {
	    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);
	  }
	
	  catmullRom.alpha = function(alpha) {
	    return custom(+alpha);
	  };
	
	  return catmullRom;
	})(0.5);
	
	function CatmullRomOpen(context, alpha) {
	  this._context = context;
	  this._alpha = alpha;
	}
	
	CatmullRomOpen.prototype = {
	  areaStart: function() {
	    this._line = 0;
	  },
	  areaEnd: function() {
	    this._line = NaN;
	  },
	  lineStart: function() {
	    this._x0 = this._x1 = this._x2 =
	    this._y0 = this._y1 = this._y2 = NaN;
	    this._l01_a = this._l12_a = this._l23_a =
	    this._l01_2a = this._l12_2a = this._l23_2a =
	    this._point = 0;
	  },
	  lineEnd: function() {
	    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();
	    this._line = 1 - this._line;
	  },
	  point: function(x, y) {
	    x = +x, y = +y;
	
	    if (this._point) {
	      var x23 = this._x2 - x,
	          y23 = this._y2 - y;
	      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));
	    }
	
	    switch (this._point) {
	      case 0: this._point = 1; break;
	      case 1: this._point = 2; break;
	      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;
	      case 3: this._point = 4; // proceed
	      default: point$2(this, x, y); break;
	    }
	
	    this._l01_a = this._l12_a, this._l12_a = this._l23_a;
	    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;
	    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
	    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
	  }
	};
	
	var catmullRomOpen = (function custom(alpha) {
	
	  function catmullRom(context) {
	    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);
	  }
	
	  catmullRom.alpha = function(alpha) {
	    return custom(+alpha);
	  };
	
	  return catmullRom;
	})(0.5);
	
	function LinearClosed(context) {
	  this._context = context;
	}
	
	LinearClosed.prototype = {
	  areaStart: noop,
	  areaEnd: noop,
	  lineStart: function() {
	    this._point = 0;
	  },
	  lineEnd: function() {
	    if (this._point) this._context.closePath();
	  },
	  point: function(x, y) {
	    x = +x, y = +y;
	    if (this._point) this._context.lineTo(x, y);
	    else this._point = 1, this._context.moveTo(x, y);
	  }
	};
	
	var linearClosed = function(context) {
	  return new LinearClosed(context);
	};
	
	function sign(x) {
	  return x < 0 ? -1 : 1;
	}
	
	// Calculate the slopes of the tangents (Hermite-type interpolation) based on
	// the following paper: Steffen, M. 1990. A Simple Method for Monotonic
	// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.
	// NOV(II), P. 443, 1990.
	function slope3(that, x2, y2) {
	  var h0 = that._x1 - that._x0,
	      h1 = x2 - that._x1,
	      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),
	      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),
	      p = (s0 * h1 + s1 * h0) / (h0 + h1);
	  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;
	}
	
	// Calculate a one-sided slope.
	function slope2(that, t) {
	  var h = that._x1 - that._x0;
	  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;
	}
	
	// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations
	// "you can express cubic Hermite interpolation in terms of cubic Bézier curves
	// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1".
	function point$3(that, t0, t1) {
	  var x0 = that._x0,
	      y0 = that._y0,
	      x1 = that._x1,
	      y1 = that._y1,
	      dx = (x1 - x0) / 3;
	  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);
	}
	
	function MonotoneX(context) {
	  this._context = context;
	}
	
	MonotoneX.prototype = {
	  areaStart: function() {
	    this._line = 0;
	  },
	  areaEnd: function() {
	    this._line = NaN;
	  },
	  lineStart: function() {
	    this._x0 = this._x1 =
	    this._y0 = this._y1 =
	    this._t0 = NaN;
	    this._point = 0;
	  },
	  lineEnd: function() {
	    switch (this._point) {
	      case 2: this._context.lineTo(this._x1, this._y1); break;
	      case 3: point$3(this, this._t0, slope2(this, this._t0)); break;
	    }
	    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();
	    this._line = 1 - this._line;
	  },
	  point: function(x, y) {
	    var t1 = NaN;
	
	    x = +x, y = +y;
	    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.
	    switch (this._point) {
	      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;
	      case 1: this._point = 2; break;
	      case 2: this._point = 3; point$3(this, slope2(this, t1 = slope3(this, x, y)), t1); break;
	      default: point$3(this, this._t0, t1 = slope3(this, x, y)); break;
	    }
	
	    this._x0 = this._x1, this._x1 = x;
	    this._y0 = this._y1, this._y1 = y;
	    this._t0 = t1;
	  }
	};
	
	function MonotoneY(context) {
	  this._context = new ReflectContext(context);
	}
	
	(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {
	  MonotoneX.prototype.point.call(this, y, x);
	};
	
	function ReflectContext(context) {
	  this._context = context;
	}
	
	ReflectContext.prototype = {
	  moveTo: function(x, y) { this._context.moveTo(y, x); },
	  closePath: function() { this._context.closePath(); },
	  lineTo: function(x, y) { this._context.lineTo(y, x); },
	  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }
	};
	
	function monotoneX(context) {
	  return new MonotoneX(context);
	}
	
	function monotoneY(context) {
	  return new MonotoneY(context);
	}
	
	function Natural(context) {
	  this._context = context;
	}
	
	Natural.prototype = {
	  areaStart: function() {
	    this._line = 0;
	  },
	  areaEnd: function() {
	    this._line = NaN;
	  },
	  lineStart: function() {
	    this._x = [];
	    this._y = [];
	  },
	  lineEnd: function() {
	    var x = this._x,
	        y = this._y,
	        n = x.length;
	
	    if (n) {
	      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);
	      if (n === 2) {
	        this._context.lineTo(x[1], y[1]);
	      } else {
	        var px = controlPoints(x),
	            py = controlPoints(y);
	        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {
	          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);
	        }
	      }
	    }
	
	    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();
	    this._line = 1 - this._line;
	    this._x = this._y = null;
	  },
	  point: function(x, y) {
	    this._x.push(+x);
	    this._y.push(+y);
	  }
	};
	
	// See https://www.particleincell.com/2012/bezier-splines/ for derivation.
	function controlPoints(x) {
	  var i,
	      n = x.length - 1,
	      m,
	      a = new Array(n),
	      b = new Array(n),
	      r = new Array(n);
	  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];
	  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];
	  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];
	  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];
	  a[n - 1] = r[n - 1] / b[n - 1];
	  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];
	  b[n - 1] = (x[n] + a[n - 1]) / 2;
	  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];
	  return [a, b];
	}
	
	var natural = function(context) {
	  return new Natural(context);
	};
	
	function Step(context, t) {
	  this._context = context;
	  this._t = t;
	}
	
	Step.prototype = {
	  areaStart: function() {
	    this._line = 0;
	  },
	  areaEnd: function() {
	    this._line = NaN;
	  },
	  lineStart: function() {
	    this._x = this._y = NaN;
	    this._point = 0;
	  },
	  lineEnd: function() {
	    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);
	    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();
	    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;
	  },
	  point: function(x, y) {
	    x = +x, y = +y;
	    switch (this._point) {
	      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;
	      case 1: this._point = 2; // proceed
	      default: {
	        if (this._t <= 0) {
	          this._context.lineTo(this._x, y);
	          this._context.lineTo(x, y);
	        } else {
	          var x1 = this._x * (1 - this._t) + x * this._t;
	          this._context.lineTo(x1, this._y);
	          this._context.lineTo(x1, y);
	        }
	        break;
	      }
	    }
	    this._x = x, this._y = y;
	  }
	};
	
	var step = function(context) {
	  return new Step(context, 0.5);
	};
	
	function stepBefore(context) {
	  return new Step(context, 0);
	}
	
	function stepAfter(context) {
	  return new Step(context, 1);
	}
	
	var slice = Array.prototype.slice;
	
	var none = function(series, order) {
	  if (!((n = series.length) > 1)) return;
	  for (var i = 1, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {
	    s0 = s1, s1 = series[order[i]];
	    for (var j = 0; j < m; ++j) {
	      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];
	    }
	  }
	};
	
	var none$1 = function(series) {
	  var n = series.length, o = new Array(n);
	  while (--n >= 0) o[n] = n;
	  return o;
	};
	
	function stackValue(d, key) {
	  return d[key];
	}
	
	var stack = function() {
	  var keys = constant$1([]),
	      order = none$1,
	      offset = none,
	      value = stackValue;
	
	  function stack(data) {
	    var kz = keys.apply(this, arguments),
	        i,
	        m = data.length,
	        n = kz.length,
	        sz = new Array(n),
	        oz;
	
	    for (i = 0; i < n; ++i) {
	      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {
	        si[j] = sij = [0, +value(data[j], ki, j, data)];
	        sij.data = data[j];
	      }
	      si.key = ki;
	    }
	
	    for (i = 0, oz = order(sz); i < n; ++i) {
	      sz[oz[i]].index = i;
	    }
	
	    offset(sz, oz);
	    return sz;
	  }
	
	  stack.keys = function(_) {
	    return arguments.length ? (keys = typeof _ === "function" ? _ : constant$1(slice.call(_)), stack) : keys;
	  };
	
	  stack.value = function(_) {
	    return arguments.length ? (value = typeof _ === "function" ? _ : constant$1(+_), stack) : value;
	  };
	
	  stack.order = function(_) {
	    return arguments.length ? (order = _ == null ? none$1 : typeof _ === "function" ? _ : constant$1(slice.call(_)), stack) : order;
	  };
	
	  stack.offset = function(_) {
	    return arguments.length ? (offset = _ == null ? none : _, stack) : offset;
	  };
	
	  return stack;
	};
	
	var expand = function(series, order) {
	  if (!((n = series.length) > 0)) return;
	  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {
	    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;
	    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;
	  }
	  none(series, order);
	};
	
	var silhouette = function(series, order) {
	  if (!((n = series.length) > 0)) return;
	  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {
	    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;
	    s0[j][1] += s0[j][0] = -y / 2;
	  }
	  none(series, order);
	};
	
	var wiggle = function(series, order) {
	  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;
	  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {
	    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {
	      var si = series[order[i]],
	          sij0 = si[j][1] || 0,
	          sij1 = si[j - 1][1] || 0,
	          s3 = (sij0 - sij1) / 2;
	      for (var k = 0; k < i; ++k) {
	        var sk = series[order[k]],
	            skj0 = sk[j][1] || 0,
	            skj1 = sk[j - 1][1] || 0;
	        s3 += skj0 - skj1;
	      }
	      s1 += sij0, s2 += s3 * sij0;
	    }
	    s0[j - 1][1] += s0[j - 1][0] = y;
	    if (s1) y -= s2 / s1;
	  }
	  s0[j - 1][1] += s0[j - 1][0] = y;
	  none(series, order);
	};
	
	var ascending = function(series) {
	  var sums = series.map(sum);
	  return none$1(series).sort(function(a, b) { return sums[a] - sums[b]; });
	};
	
	function sum(series) {
	  var s = 0, i = -1, n = series.length, v;
	  while (++i < n) if (v = +series[i][1]) s += v;
	  return s;
	}
	
	var descending$1 = function(series) {
	  return ascending(series).reverse();
	};
	
	var insideOut = function(series) {
	  var n = series.length,
	      i,
	      j,
	      sums = series.map(sum),
	      order = none$1(series).sort(function(a, b) { return sums[b] - sums[a]; }),
	      top = 0,
	      bottom = 0,
	      tops = [],
	      bottoms = [];
	
	  for (i = 0; i < n; ++i) {
	    j = order[i];
	    if (top < bottom) {
	      top += sums[j];
	      tops.push(j);
	    } else {
	      bottom += sums[j];
	      bottoms.push(j);
	    }
	  }
	
	  return bottoms.reverse().concat(tops);
	};
	
	var reverse = function(series) {
	  return none$1(series).reverse();
	};
	
	exports.arc = arc;
	exports.area = area;
	exports.line = line;
	exports.pie = pie;
	exports.radialArea = radialArea;
	exports.radialLine = radialLine$1;
	exports.symbol = symbol;
	exports.symbols = symbols;
	exports.symbolCircle = circle;
	exports.symbolCross = cross;
	exports.symbolDiamond = diamond;
	exports.symbolSquare = square;
	exports.symbolStar = star;
	exports.symbolTriangle = triangle;
	exports.symbolWye = wye;
	exports.curveBasisClosed = basisClosed;
	exports.curveBasisOpen = basisOpen;
	exports.curveBasis = basis;
	exports.curveBundle = bundle;
	exports.curveCardinalClosed = cardinalClosed;
	exports.curveCardinalOpen = cardinalOpen;
	exports.curveCardinal = cardinal;
	exports.curveCatmullRomClosed = catmullRomClosed;
	exports.curveCatmullRomOpen = catmullRomOpen;
	exports.curveCatmullRom = catmullRom;
	exports.curveLinearClosed = linearClosed;
	exports.curveLinear = curveLinear;
	exports.curveMonotoneX = monotoneX;
	exports.curveMonotoneY = monotoneY;
	exports.curveNatural = natural;
	exports.curveStep = step;
	exports.curveStepAfter = stepAfter;
	exports.curveStepBefore = stepBefore;
	exports.stack = stack;
	exports.stackOffsetExpand = expand;
	exports.stackOffsetNone = none;
	exports.stackOffsetSilhouette = silhouette;
	exports.stackOffsetWiggle = wiggle;
	exports.stackOrderAscending = ascending;
	exports.stackOrderDescending = descending$1;
	exports.stackOrderInsideOut = insideOut;
	exports.stackOrderNone = none$1;
	exports.stackOrderReverse = reverse;
	
	Object.defineProperty(exports, '__esModule', { value: true });
	
	})));


/***/ },
/* 752 */
/***/ function(module, exports, __webpack_require__) {

	// https://d3js.org/d3-path/ Version 1.0.3. Copyright 2016 Mike Bostock.
	(function (global, factory) {
	   true ? factory(exports) :
	  typeof define === 'function' && define.amd ? define(['exports'], factory) :
	  (factory((global.d3 = global.d3 || {})));
	}(this, (function (exports) { 'use strict';
	
	var pi = Math.PI;
	var tau = 2 * pi;
	var epsilon = 1e-6;
	var tauEpsilon = tau - epsilon;
	
	function Path() {
	  this._x0 = this._y0 = // start of current subpath
	  this._x1 = this._y1 = null; // end of current subpath
	  this._ = "";
	}
	
	function path() {
	  return new Path;
	}
	
	Path.prototype = path.prototype = {
	  constructor: Path,
	  moveTo: function(x, y) {
	    this._ += "M" + (this._x0 = this._x1 = +x) + "," + (this._y0 = this._y1 = +y);
	  },
	  closePath: function() {
	    if (this._x1 !== null) {
	      this._x1 = this._x0, this._y1 = this._y0;
	      this._ += "Z";
	    }
	  },
	  lineTo: function(x, y) {
	    this._ += "L" + (this._x1 = +x) + "," + (this._y1 = +y);
	  },
	  quadraticCurveTo: function(x1, y1, x, y) {
	    this._ += "Q" + (+x1) + "," + (+y1) + "," + (this._x1 = +x) + "," + (this._y1 = +y);
	  },
	  bezierCurveTo: function(x1, y1, x2, y2, x, y) {
	    this._ += "C" + (+x1) + "," + (+y1) + "," + (+x2) + "," + (+y2) + "," + (this._x1 = +x) + "," + (this._y1 = +y);
	  },
	  arcTo: function(x1, y1, x2, y2, r) {
	    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;
	    var x0 = this._x1,
	        y0 = this._y1,
	        x21 = x2 - x1,
	        y21 = y2 - y1,
	        x01 = x0 - x1,
	        y01 = y0 - y1,
	        l01_2 = x01 * x01 + y01 * y01;
	
	    // Is the radius negative? Error.
	    if (r < 0) throw new Error("negative radius: " + r);
	
	    // Is this path empty? Move to (x1,y1).
	    if (this._x1 === null) {
	      this._ += "M" + (this._x1 = x1) + "," + (this._y1 = y1);
	    }
	
	    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.
	    else if (!(l01_2 > epsilon)) {}
	
	    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?
	    // Equivalently, is (x1,y1) coincident with (x2,y2)?
	    // Or, is the radius zero? Line to (x1,y1).
	    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {
	      this._ += "L" + (this._x1 = x1) + "," + (this._y1 = y1);
	    }
	
	    // Otherwise, draw an arc!
	    else {
	      var x20 = x2 - x0,
	          y20 = y2 - y0,
	          l21_2 = x21 * x21 + y21 * y21,
	          l20_2 = x20 * x20 + y20 * y20,
	          l21 = Math.sqrt(l21_2),
	          l01 = Math.sqrt(l01_2),
	          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),
	          t01 = l / l01,
	          t21 = l / l21;
	
	      // If the start tangent is not coincident with (x0,y0), line to.
	      if (Math.abs(t01 - 1) > epsilon) {
	        this._ += "L" + (x1 + t01 * x01) + "," + (y1 + t01 * y01);
	      }
	
	      this._ += "A" + r + "," + r + ",0,0," + (+(y01 * x20 > x01 * y20)) + "," + (this._x1 = x1 + t21 * x21) + "," + (this._y1 = y1 + t21 * y21);
	    }
	  },
	  arc: function(x, y, r, a0, a1, ccw) {
	    x = +x, y = +y, r = +r;
	    var dx = r * Math.cos(a0),
	        dy = r * Math.sin(a0),
	        x0 = x + dx,
	        y0 = y + dy,
	        cw = 1 ^ ccw,
	        da = ccw ? a0 - a1 : a1 - a0;
	
	    // Is the radius negative? Error.
	    if (r < 0) throw new Error("negative radius: " + r);
	
	    // Is this path empty? Move to (x0,y0).
	    if (this._x1 === null) {
	      this._ += "M" + x0 + "," + y0;
	    }
	
	    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).
	    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {
	      this._ += "L" + x0 + "," + y0;
	    }
	
	    // Is this arc empty? We’re done.
	    if (!r) return;
	
	    // Is this a complete circle? Draw two arcs to complete the circle.
	    if (da > tauEpsilon) {
	      this._ += "A" + r + "," + r + ",0,1," + cw + "," + (x - dx) + "," + (y - dy) + "A" + r + "," + r + ",0,1," + cw + "," + (this._x1 = x0) + "," + (this._y1 = y0);
	    }
	
	    // Otherwise, draw an arc!
	    else {
	      if (da < 0) da = da % tau + tau;
	      this._ += "A" + r + "," + r + ",0," + (+(da >= pi)) + "," + cw + "," + (this._x1 = x + r * Math.cos(a1)) + "," + (this._y1 = y + r * Math.sin(a1));
	    }
	  },
	  rect: function(x, y, w, h) {
	    this._ += "M" + (this._x0 = this._x1 = +x) + "," + (this._y0 = this._y1 = +y) + "h" + (+w) + "v" + (+h) + "h" + (-w) + "Z";
	  },
	  toString: function() {
	    return this._;
	  }
	};
	
	exports.path = path;
	
	Object.defineProperty(exports, '__esModule', { value: true });
	
	})));


/***/ },
/* 753 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _isFunction2 = __webpack_require__(224);
	
	var _isFunction3 = _interopRequireDefault(_isFunction2);
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _class, _class2, _temp2; /**
	                              * @fileOverview Tooltip
	                              */
	
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactSmooth = __webpack_require__(754);
	
	var _DefaultTooltipContent = __webpack_require__(779);
	
	var _DefaultTooltipContent2 = _interopRequireDefault(_DefaultTooltipContent);
	
	var _ReactUtils = __webpack_require__(670);
	
	var _DataUtils = __webpack_require__(673);
	
	var _PureRender = __webpack_require__(746);
	
	var _PureRender2 = _interopRequireDefault(_PureRender);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var EPS = 1;
	
	var propTypes = {
	  content: _react.PropTypes.oneOfType([_react.PropTypes.element, _react.PropTypes.func]),
	  viewBox: _react.PropTypes.shape({
	    x: _react.PropTypes.number,
	    y: _react.PropTypes.number,
	    width: _react.PropTypes.number,
	    height: _react.PropTypes.number
	  }),
	
	  active: _react.PropTypes.bool,
	  separator: _react.PropTypes.string,
	  formatter: _react.PropTypes.func,
	  offset: _react.PropTypes.number,
	
	  itemStyle: _react.PropTypes.object,
	  labelStyle: _react.PropTypes.object,
	  wrapperStyle: _react.PropTypes.object,
	  cursor: _react.PropTypes.oneOfType([_react.PropTypes.bool, _react.PropTypes.element, _react.PropTypes.object]),
	
	  coordinate: _react.PropTypes.shape({
	    x: _react.PropTypes.number,
	    y: _react.PropTypes.number
	  }),
	  position: _react.PropTypes.shape({
	    x: _react.PropTypes.number,
	    y: _react.PropTypes.number
	  }),
	
	  label: _react.PropTypes.any,
	  payload: _react.PropTypes.arrayOf(_react.PropTypes.shape({
	    name: _react.PropTypes.any,
	    value: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.string]),
	    unit: _react.PropTypes.any
	  })),
	
	  isAnimationActive: _react.PropTypes.bool,
	  animationDuration: _react.PropTypes.number,
	  animationEasing: _react.PropTypes.oneOf(['ease', 'ease-in', 'ease-out', 'ease-in-out', 'linear']),
	  itemSorter: _react.PropTypes.func
	};
	
	var defaultProps = {
	  active: false,
	  offset: 10,
	  viewBox: { x1: 0, x2: 0, y1: 0, y2: 0 },
	  coordinate: { x: 0, y: 0 },
	  cursorStyle: {},
	  separator: ' : ',
	  wrapperStyle: {},
	  itemStyle: {},
	  labelStyle: {},
	  cursor: true,
	  isAnimationActive: !(0, _ReactUtils.isSsr)(),
	  animationEasing: 'ease',
	  animationDuration: 400,
	  itemSorter: function itemSorter() {
	    return -1;
	  }
	};
	
	var renderContent = function renderContent(content, props) {
	  if (_react2.default.isValidElement(content)) {
	    return _react2.default.cloneElement(content, props);
	  } else if ((0, _isFunction3.default)(content)) {
	    return content(props);
	  }
	
	  return _react2.default.createElement(_DefaultTooltipContent2.default, props);
	};
	
	var Tooltip = (0, _PureRender2.default)(_class = (_temp2 = _class2 = function (_Component) {
	  _inherits(Tooltip, _Component);
	
	  function Tooltip() {
	    var _ref;
	
	    var _temp, _this, _ret;
	
	    _classCallCheck(this, Tooltip);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Tooltip.__proto__ || Object.getPrototypeOf(Tooltip)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
	      boxWidth: -1,
	      boxHeight: -1
	    }, _temp), _possibleConstructorReturn(_this, _ret);
	  }
	
	  _createClass(Tooltip, [{
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      this.updateBBox();
	    }
	  }, {
	    key: 'componentDidUpdate',
	    value: function componentDidUpdate() {
	      this.updateBBox();
	    }
	  }, {
	    key: 'updateBBox',
	    value: function updateBBox() {
	      var _state = this.state,
	          boxWidth = _state.boxWidth,
	          boxHeight = _state.boxHeight;
	
	
	      if (this.wrapperNode && this.wrapperNode.getBoundingClientRect) {
	        var box = this.wrapperNode.getBoundingClientRect();
	
	        if (Math.abs(box.width - boxWidth) > EPS || Math.abs(box.height - boxHeight) > EPS) {
	          this.setState({
	            boxWidth: box.width,
	            boxHeight: box.height
	          });
	        }
	      } else if (boxWidth !== -1 || boxHeight !== -1) {
	        this.setState({
	          boxWidth: -1,
	          boxHeight: -1
	        });
	      }
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _this2 = this;
	
	      var _props = this.props,
	          payload = _props.payload,
	          isAnimationActive = _props.isAnimationActive,
	          animationDuration = _props.animationDuration,
	          animationEasing = _props.animationEasing;
	
	      var hasPayload = payload && payload.length && payload.filter(function (entry) {
	        return (0, _DataUtils.isNumOrStr)(entry.value);
	      }).length;
	      var _props2 = this.props,
	          content = _props2.content,
	          viewBox = _props2.viewBox,
	          coordinate = _props2.coordinate,
	          position = _props2.position,
	          active = _props2.active,
	          offset = _props2.offset,
	          wrapperStyle = _props2.wrapperStyle;
	
	      var outerStyle = _extends({
	        pointerEvents: 'none',
	        visibility: active && hasPayload ? 'visible' : 'hidden',
	        position: 'absolute',
	        top: 0
	      }, wrapperStyle);
	      var translateX = void 0,
	          translateY = void 0;
	
	      if (position && (0, _DataUtils.isNumber)(position.x) && (0, _DataUtils.isNumber)(position.y)) {
	        translateX = position.x;
	        translateY = position.y;
	      } else {
	        var _state2 = this.state,
	            boxWidth = _state2.boxWidth,
	            boxHeight = _state2.boxHeight;
	
	
	        if (boxWidth > 0 && boxHeight > 0 && coordinate) {
	          translateX = position && (0, _DataUtils.isNumber)(position.x) ? position.x : Math.max(coordinate.x + boxWidth + offset > viewBox.x + viewBox.width ? coordinate.x - boxWidth - offset : coordinate.x + offset, viewBox.x);
	
	          translateY = position && (0, _DataUtils.isNumber)(position.y) ? position.y : Math.max(coordinate.y + boxHeight + offset > viewBox.y + viewBox.height ? coordinate.y - boxHeight - offset : coordinate.y + offset, viewBox.y);
	        } else {
	          outerStyle.visibility = 'hidden';
	        }
	      }
	
	      outerStyle = _extends({}, outerStyle, (0, _reactSmooth.translateStyle)({
	        transform: 'translate(' + translateX + 'px, ' + translateY + 'px)'
	      }));
	
	      if (isAnimationActive && active) {
	        outerStyle = _extends({}, outerStyle, (0, _reactSmooth.translateStyle)({
	          transition: 'transform ' + animationDuration + 'ms ' + animationEasing
	        }));
	      }
	
	      return _react2.default.createElement(
	        'div',
	        {
	          className: 'recharts-tooltip-wrapper',
	          style: outerStyle,
	          ref: function ref(node) {
	            _this2.wrapperNode = node;
	          }
	        },
	        renderContent(content, this.props)
	      );
	    }
	  }]);
	
	  return Tooltip;
	}(_react.Component), _class2.displayName = 'Tooltip', _class2.propTypes = propTypes, _class2.defaultProps = defaultProps, _temp2)) || _class;
	
	exports.default = Tooltip;

/***/ },
/* 754 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.translateStyle = exports.AnimateGroup = exports.configBezier = exports.configSpring = undefined;
	
	var _Animate = __webpack_require__(755);
	
	var _Animate2 = _interopRequireDefault(_Animate);
	
	var _easing = __webpack_require__(762);
	
	var _util = __webpack_require__(763);
	
	var _AnimateGroup = __webpack_require__(776);
	
	var _AnimateGroup2 = _interopRequireDefault(_AnimateGroup);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.configSpring = _easing.configSpring;
	exports.configBezier = _easing.configBezier;
	exports.AnimateGroup = _AnimateGroup2.default;
	exports.translateStyle = _util.translateStyle;
	exports.default = _Animate2.default;

/***/ },
/* 755 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _isEqual2 = __webpack_require__(756);
	
	var _isEqual3 = _interopRequireDefault(_isEqual2);
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _class, _class2, _temp;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _AnimateManager = __webpack_require__(757);
	
	var _AnimateManager2 = _interopRequireDefault(_AnimateManager);
	
	var _PureRender = __webpack_require__(761);
	
	var _PureRender2 = _interopRequireDefault(_PureRender);
	
	var _easing = __webpack_require__(762);
	
	var _configUpdate = __webpack_require__(773);
	
	var _configUpdate2 = _interopRequireDefault(_configUpdate);
	
	var _util = __webpack_require__(763);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var Animate = (0, _PureRender2.default)(_class = (_temp = _class2 = function (_Component) {
	  _inherits(Animate, _Component);
	
	  function Animate(props, context) {
	    _classCallCheck(this, Animate);
	
	    var _this = _possibleConstructorReturn(this, (Animate.__proto__ || Object.getPrototypeOf(Animate)).call(this, props, context));
	
	    var _this$props = _this.props,
	        isActive = _this$props.isActive,
	        attributeName = _this$props.attributeName,
	        from = _this$props.from,
	        to = _this$props.to,
	        steps = _this$props.steps,
	        children = _this$props.children;
	
	
	    _this.handleStyleChange = _this.handleStyleChange.bind(_this);
	    _this.changeStyle = _this.changeStyle.bind(_this);
	
	    if (!isActive) {
	      _this.state = { style: {} };
	
	      // if children is a function and animation is not active, set style to 'to'
	      if (typeof children === 'function') {
	        _this.state = { style: to };
	      }
	
	      return _possibleConstructorReturn(_this);
	    }
	
	    if (steps && steps.length) {
	      _this.state = { style: steps[0].style };
	    } else if (from) {
	      if (typeof children === 'function') {
	        _this.state = {
	          style: from
	        };
	
	        return _possibleConstructorReturn(_this);
	      }
	      _this.state = {
	        style: attributeName ? _defineProperty({}, attributeName, from) : from
	      };
	    } else {
	      _this.state = { style: {} };
	    }
	    return _this;
	  }
	
	  _createClass(Animate, [{
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      var _props = this.props,
	          isActive = _props.isActive,
	          canBegin = _props.canBegin;
	
	
	      this.mounted = true;
	
	      if (!isActive || !canBegin) {
	        return;
	      }
	
	      this.runAnimation(this.props);
	    }
	  }, {
	    key: 'componentWillReceiveProps',
	    value: function componentWillReceiveProps(nextProps) {
	      var isActive = nextProps.isActive,
	          canBegin = nextProps.canBegin,
	          attributeName = nextProps.attributeName,
	          shouldReAnimate = nextProps.shouldReAnimate;
	
	
	      if (!canBegin) {
	        return;
	      }
	
	      if (!isActive) {
	        this.setState({
	          style: attributeName ? _defineProperty({}, attributeName, nextProps.to) : nextProps.to
	        });
	
	        return;
	      }
	
	      var animateProps = ['to', 'canBegin', 'isActive'];
	
	      if ((0, _isEqual3.default)(this.props.to, nextProps.to) && this.props.canBegin && this.props.isActive) {
	        return;
	      }
	
	      var isTriggered = !this.props.canBegin || !this.props.isActive;
	
	      if (this.manager) {
	        this.manager.stop();
	      }
	
	      if (this.stopJSAnimation) {
	        this.stopJSAnimation();
	      }
	
	      var from = isTriggered || shouldReAnimate ? nextProps.from : this.props.to;
	
	      this.setState({
	        style: attributeName ? _defineProperty({}, attributeName, from) : from
	      });
	
	      this.runAnimation(_extends({}, nextProps, {
	        from: from,
	        begin: 0
	      }));
	    }
	  }, {
	    key: 'componentWillUnmount',
	    value: function componentWillUnmount() {
	      this.mounted = false;
	
	      if (this.unSubscribe) {
	        this.unSubscribe();
	      }
	
	      if (this.manager) {
	        this.manager.stop();
	        this.manager = null;
	      }
	
	      if (this.stopJSAnimation) {
	        this.stopJSAnimation();
	      }
	    }
	  }, {
	    key: 'runJSAnimation',
	    value: function runJSAnimation(props) {
	      var _this2 = this;
	
	      var from = props.from,
	          to = props.to,
	          duration = props.duration,
	          easing = props.easing,
	          begin = props.begin,
	          onAnimationEnd = props.onAnimationEnd,
	          onAnimationStart = props.onAnimationStart;
	
	      var startAnimation = (0, _configUpdate2.default)(from, to, (0, _easing.configEasing)(easing), duration, this.changeStyle);
	
	      var finalStartAnimation = function finalStartAnimation() {
	        _this2.stopJSAnimation = startAnimation();
	      };
	
	      this.manager.start([onAnimationStart, begin, finalStartAnimation, duration, onAnimationEnd]);
	    }
	  }, {
	    key: 'runStepAnimation',
	    value: function runStepAnimation(props) {
	      var _this3 = this;
	
	      var steps = props.steps,
	          begin = props.begin,
	          onAnimationStart = props.onAnimationStart;
	      var _steps$ = steps[0],
	          initialStyle = _steps$.style,
	          _steps$$duration = _steps$.duration,
	          initialTime = _steps$$duration === undefined ? 0 : _steps$$duration;
	
	
	      var addStyle = function addStyle(sequence, nextItem, index) {
	        if (index === 0) {
	          return sequence;
	        }
	
	        var duration = nextItem.duration,
	            _nextItem$easing = nextItem.easing,
	            easing = _nextItem$easing === undefined ? 'ease' : _nextItem$easing,
	            style = nextItem.style,
	            nextProperties = nextItem.properties,
	            onAnimationEnd = nextItem.onAnimationEnd;
	
	
	        var preItem = index > 0 ? steps[index - 1] : nextItem;
	        var properties = nextProperties || Object.keys(style);
	
	        if (typeof easing === 'function' || easing === 'spring') {
	          return [].concat(_toConsumableArray(sequence), [_this3.runJSAnimation.bind(_this3, {
	            from: preItem.style,
	            to: style,
	            duration: duration,
	            easing: easing
	          }), duration]);
	        }
	
	        var transition = (0, _util.getTransitionVal)(properties, duration, easing);
	        var newStyle = _extends({}, preItem.style, style, {
	          transition: transition
	        });
	
	        return [].concat(_toConsumableArray(sequence), [newStyle, duration, onAnimationEnd]).filter(_util.identity);
	      };
	
	      return this.manager.start([onAnimationStart].concat(_toConsumableArray(steps.reduce(addStyle, [initialStyle, Math.max(initialTime, begin)])), [props.onAnimationEnd]));
	    }
	  }, {
	    key: 'runAnimation',
	    value: function runAnimation(props) {
	      if (!this.manager) {
	        this.manager = (0, _AnimateManager2.default)();
	      }
	      var begin = props.begin,
	          duration = props.duration,
	          attributeName = props.attributeName,
	          propsFrom = props.from,
	          propsTo = props.to,
	          easing = props.easing,
	          onAnimationStart = props.onAnimationStart,
	          onAnimationEnd = props.onAnimationEnd,
	          steps = props.steps,
	          children = props.children;
	
	
	      var manager = this.manager;
	
	      this.unSubscribe = manager.subscribe(this.handleStyleChange);
	
	      if (typeof easing === 'function' || typeof children === 'function' || easing === 'spring') {
	        this.runJSAnimation(props);
	        return;
	      }
	
	      if (steps.length > 1) {
	        this.runStepAnimation(props);
	        return;
	      }
	
	      var to = attributeName ? _defineProperty({}, attributeName, propsTo) : propsTo;
	      var transition = (0, _util.getTransitionVal)(Object.keys(to), duration, easing);
	
	      manager.start([onAnimationStart, begin, _extends({}, to, { transition: transition }), duration, onAnimationEnd]);
	    }
	  }, {
	    key: 'handleStyleChange',
	    value: function handleStyleChange(style) {
	      this.changeStyle(style);
	    }
	  }, {
	    key: 'changeStyle',
	    value: function changeStyle(style) {
	      if (this.mounted) {
	        this.setState({
	          style: style
	        });
	      }
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _props2 = this.props,
	          children = _props2.children,
	          begin = _props2.begin,
	          duration = _props2.duration,
	          attributeName = _props2.attributeName,
	          easing = _props2.easing,
	          isActive = _props2.isActive,
	          steps = _props2.steps,
	          from = _props2.from,
	          to = _props2.to,
	          canBegin = _props2.canBegin,
	          onAnimationEnd = _props2.onAnimationEnd,
	          shouldReAnimate = _props2.shouldReAnimate,
	          onAnimationReStart = _props2.onAnimationReStart,
	          others = _objectWithoutProperties(_props2, ['children', 'begin', 'duration', 'attributeName', 'easing', 'isActive', 'steps', 'from', 'to', 'canBegin', 'onAnimationEnd', 'shouldReAnimate', 'onAnimationReStart']);
	
	      var count = _react.Children.count(children);
	      var stateStyle = (0, _util.translateStyle)(this.state.style);
	
	      if (typeof children === 'function') {
	        return children(stateStyle);
	      }
	
	      if (!isActive || count === 0) {
	        return children;
	      }
	
	      var cloneContainer = function cloneContainer(container) {
	        var _container$props = container.props,
	            _container$props$styl = _container$props.style,
	            style = _container$props$styl === undefined ? {} : _container$props$styl,
	            className = _container$props.className;
	
	
	        var res = (0, _react.cloneElement)(container, _extends({}, others, {
	          style: _extends({}, style, stateStyle),
	          className: className
	        }));
	        return res;
	      };
	
	      if (count === 1) {
	        var onlyChild = _react.Children.only(children);
	
	        return cloneContainer(_react.Children.only(children));
	      }
	
	      return _react2.default.createElement(
	        'div',
	        null,
	        _react.Children.map(children, function (child) {
	          return cloneContainer(child);
	        })
	      );
	    }
	  }]);
	
	  return Animate;
	}(_react.Component), _class2.displayName = 'Animate', _class2.propTypes = {
	  from: _react.PropTypes.oneOfType([_react.PropTypes.object, _react.PropTypes.string]),
	  to: _react.PropTypes.oneOfType([_react.PropTypes.object, _react.PropTypes.string]),
	  attributeName: _react.PropTypes.string,
	  // animation duration
	  duration: _react.PropTypes.number,
	  begin: _react.PropTypes.number,
	  easing: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.func]),
	  steps: _react.PropTypes.arrayOf(_react.PropTypes.shape({
	    duration: _react.PropTypes.number.isRequired,
	    style: _react.PropTypes.object.isRequired,
	    easing: _react.PropTypes.oneOfType([_react.PropTypes.oneOf(['ease', 'ease-in', 'ease-out', 'ease-in-out', 'linear']), _react.PropTypes.func]),
	    // transition css properties(dash case), optional
	    properties: _react.PropTypes.arrayOf('string'),
	    onAnimationEnd: _react.PropTypes.func
	  })),
	  children: _react.PropTypes.oneOfType([_react.PropTypes.node, _react.PropTypes.func]),
	  isActive: _react.PropTypes.bool,
	  canBegin: _react.PropTypes.bool,
	  onAnimationEnd: _react.PropTypes.func,
	  // decide if it should reanimate with initial from style when props change
	  shouldReAnimate: _react.PropTypes.bool,
	  onAnimationStart: _react.PropTypes.func,
	  onAnimationReStart: _react.PropTypes.func
	}, _class2.defaultProps = {
	  begin: 0,
	  duration: 1000,
	  from: '',
	  to: '',
	  attributeName: '',
	  easing: 'ease',
	  isActive: true,
	  canBegin: true,
	  steps: [],
	  onAnimationEnd: function onAnimationEnd() {},
	  onAnimationStart: function onAnimationStart() {}
	}, _temp)) || _class;
	
	exports.default = Animate;

/***/ },
/* 756 */
/***/ function(module, exports, __webpack_require__) {

	var baseIsEqual = __webpack_require__(694);
	
	/**
	 * Performs a deep comparison between two values to determine if they are
	 * equivalent.
	 *
	 * **Note:** This method supports comparing arrays, array buffers, booleans,
	 * date objects, error objects, maps, numbers, `Object` objects, regexes,
	 * sets, strings, symbols, and typed arrays. `Object` objects are compared
	 * by their own, not inherited, enumerable properties. Functions and DOM
	 * nodes are compared by strict equality, i.e. `===`.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to compare.
	 * @param {*} other The other value to compare.
	 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
	 * @example
	 *
	 * var object = { 'a': 1 };
	 * var other = { 'a': 1 };
	 *
	 * _.isEqual(object, other);
	 * // => true
	 *
	 * object === other;
	 * // => false
	 */
	function isEqual(value, other) {
	  return baseIsEqual(value, other);
	}
	
	module.exports = isEqual;


/***/ },
/* 757 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	exports.default = createAnimateManager;
	
	var _setRafTimeout = __webpack_require__(758);
	
	var _setRafTimeout2 = _interopRequireDefault(_setRafTimeout);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _toArray(arr) { return Array.isArray(arr) ? arr : Array.from(arr); }
	
	function createAnimateManager() {
	  var currStyle = {};
	  var handleChange = function handleChange() {
	    return null;
	  };
	  var shouldStop = false;
	
	  var setStyle = function setStyle(_style) {
	    if (shouldStop) {
	      return;
	    }
	
	    if (Array.isArray(_style)) {
	      if (!_style.length) {
	        return;
	      }
	
	      var styles = _style;
	
	      var _styles = _toArray(styles),
	          curr = _styles[0],
	          restStyles = _styles.slice(1);
	
	      if (typeof curr === 'number') {
	        (0, _setRafTimeout2.default)(setStyle.bind(null, restStyles), curr);
	
	        return;
	      }
	
	      setStyle(curr);
	      (0, _setRafTimeout2.default)(setStyle.bind(null, restStyles));
	      return;
	    }
	
	    if ((typeof _style === 'undefined' ? 'undefined' : _typeof(_style)) === 'object') {
	      currStyle = _style;
	      handleChange(currStyle);
	    }
	
	    if (typeof _style === 'function') {
	      _style();
	    }
	  };
	
	  return {
	    stop: function stop() {
	      shouldStop = true;
	    },
	    start: function start(style) {
	      shouldStop = false;
	      setStyle(style);
	    },
	    subscribe: function subscribe(_handleChange) {
	      handleChange = _handleChange;
	
	      return function () {
	        handleChange = function handleChange() {
	          return null;
	        };
	      };
	    }
	  };
	}

/***/ },
/* 758 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = setRafTimeout;
	
	var _raf = __webpack_require__(759);
	
	var _raf2 = _interopRequireDefault(_raf);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function setRafTimeout(callback) {
	  var timeout = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
	
	  var currTime = -1;
	
	  var shouldUpdate = function shouldUpdate(now) {
	    if (currTime < 0) {
	      currTime = now;
	    }
	
	    if (now - currTime > timeout) {
	      callback(now);
	      currTime = -1;
	    } else {
	      (0, _raf2.default)(shouldUpdate);
	    }
	  };
	
	  (0, _raf2.default)(shouldUpdate);
	}

/***/ },
/* 759 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {var now = __webpack_require__(760)
	  , root = typeof window === 'undefined' ? global : window
	  , vendors = ['moz', 'webkit']
	  , suffix = 'AnimationFrame'
	  , raf = root['request' + suffix]
	  , caf = root['cancel' + suffix] || root['cancelRequest' + suffix]
	
	for(var i = 0; !raf && i < vendors.length; i++) {
	  raf = root[vendors[i] + 'Request' + suffix]
	  caf = root[vendors[i] + 'Cancel' + suffix]
	      || root[vendors[i] + 'CancelRequest' + suffix]
	}
	
	// Some versions of FF have rAF but not cAF
	if(!raf || !caf) {
	  var last = 0
	    , id = 0
	    , queue = []
	    , frameDuration = 1000 / 60
	
	  raf = function(callback) {
	    if(queue.length === 0) {
	      var _now = now()
	        , next = Math.max(0, frameDuration - (_now - last))
	      last = next + _now
	      setTimeout(function() {
	        var cp = queue.slice(0)
	        // Clear queue here to prevent
	        // callbacks from appending listeners
	        // to the current frame's queue
	        queue.length = 0
	        for(var i = 0; i < cp.length; i++) {
	          if(!cp[i].cancelled) {
	            try{
	              cp[i].callback(last)
	            } catch(e) {
	              setTimeout(function() { throw e }, 0)
	            }
	          }
	        }
	      }, Math.round(next))
	    }
	    queue.push({
	      handle: ++id,
	      callback: callback,
	      cancelled: false
	    })
	    return id
	  }
	
	  caf = function(handle) {
	    for(var i = 0; i < queue.length; i++) {
	      if(queue[i].handle === handle) {
	        queue[i].cancelled = true
	      }
	    }
	  }
	}
	
	module.exports = function(fn) {
	  // Wrap in a new function to prevent
	  // `cancel` potentially being assigned
	  // to the native rAF function
	  return raf.call(root, fn)
	}
	module.exports.cancel = function() {
	  caf.apply(root, arguments)
	}
	module.exports.polyfill = function() {
	  root.requestAnimationFrame = raf
	  root.cancelAnimationFrame = caf
	}
	
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 760 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {// Generated by CoffeeScript 1.7.1
	(function() {
	  var getNanoSeconds, hrtime, loadTime;
	
	  if ((typeof performance !== "undefined" && performance !== null) && performance.now) {
	    module.exports = function() {
	      return performance.now();
	    };
	  } else if ((typeof process !== "undefined" && process !== null) && process.hrtime) {
	    module.exports = function() {
	      return (getNanoSeconds() - loadTime) / 1e6;
	    };
	    hrtime = process.hrtime;
	    getNanoSeconds = function() {
	      var hr;
	      hr = hrtime();
	      return hr[0] * 1e9 + hr[1];
	    };
	    loadTime = getNanoSeconds();
	  } else if (Date.now) {
	    module.exports = function() {
	      return Date.now() - loadTime;
	    };
	    loadTime = Date.now();
	  } else {
	    module.exports = function() {
	      return new Date().getTime() - loadTime;
	    };
	    loadTime = new Date().getTime();
	  }
	
	}).call(this);
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 761 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.shallowEqual = undefined;
	
	var _isPlainObject2 = __webpack_require__(181);
	
	var _isPlainObject3 = _interopRequireDefault(_isPlainObject2);
	
	var _isEqual2 = __webpack_require__(756);
	
	var _isEqual3 = _interopRequireDefault(_isEqual2);
	
	var _isArray2 = __webpack_require__(261);
	
	var _isArray3 = _interopRequireDefault(_isArray2);
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function shallowEqual(objA, objB) {
	  if (objA === objB) {
	    return true;
	  }
	
	  if ((typeof objA === 'undefined' ? 'undefined' : _typeof(objA)) !== 'object' || objA === null || (typeof objB === 'undefined' ? 'undefined' : _typeof(objB)) !== 'object' || objB === null) {
	    return false;
	  }
	
	  var keysA = Object.keys(objA);
	  var keysB = Object.keys(objB);
	
	  if (keysA.length !== keysB.length) {
	    return false;
	  }
	
	  var bHasOwnProperty = hasOwnProperty.bind(objB);
	  for (var i = 0; i < keysA.length; i++) {
	    var keyA = keysA[i];
	
	    if (objA[keyA] === objB[keyA]) {
	      continue;
	    }
	
	    // special diff with Array or Object
	    if ((0, _isArray3.default)(objA[keyA])) {
	      if (!(0, _isArray3.default)(objB[keyA]) || objA[keyA].length !== objB[keyA].length) {
	        return false;
	      } else if (!(0, _isEqual3.default)(objA[keyA], objB[keyA])) {
	        return false;
	      }
	    } else if ((0, _isPlainObject3.default)(objA[keyA])) {
	      if (!(0, _isPlainObject3.default)(objB[keyA]) || !(0, _isEqual3.default)(objA[keyA], objB[keyA])) {
	        return false;
	      }
	    } else if (!bHasOwnProperty(keysA[i]) || objA[keysA[i]] !== objB[keysA[i]]) {
	      return false;
	    }
	  }
	
	  return true;
	}
	
	function shallowCompare(instance, nextProps, nextState) {
	  return !shallowEqual(instance.props, nextProps) || !shallowEqual(instance.state, nextState);
	}
	
	function shouldComponentUpdate(nextProps, nextState) {
	  return shallowCompare(this, nextProps, nextState);
	}
	/* eslint-disable no-param-reassign */
	function pureRenderDecorator(component) {
	  component.prototype.shouldComponentUpdate = shouldComponentUpdate;
	}
	exports.shallowEqual = shallowEqual;
	exports.default = pureRenderDecorator;

/***/ },
/* 762 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.configEasing = exports.configSpring = exports.configBezier = undefined;
	
	var _util = __webpack_require__(763);
	
	function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }
	
	var ACCURACY = 1e-4;
	
	var cubicBezierFactor = function cubicBezierFactor(c1, c2) {
	  return [0, 3 * c1, 3 * c2 - 6 * c1, 3 * c1 - 3 * c2 + 1];
	};
	
	var multyTime = function multyTime(params, t) {
	  return params.map(function (param, i) {
	    return param * Math.pow(t, i);
	  }).reduce(function (pre, curr) {
	    return pre + curr;
	  });
	};
	
	var cubicBezier = function cubicBezier(c1, c2) {
	  return function (t) {
	    var params = cubicBezierFactor(c1, c2);
	
	    return multyTime(params, t);
	  };
	};
	
	var derivativeCubicBezier = function derivativeCubicBezier(c1, c2) {
	  return function (t) {
	    var params = cubicBezierFactor(c1, c2);
	    var newParams = [].concat(_toConsumableArray(params.map(function (param, i) {
	      return param * i;
	    }).slice(1)), [0]);
	
	    return multyTime(newParams, t);
	  };
	};
	
	// calculate cubic-bezier using Newton's method
	var configBezier = exports.configBezier = function configBezier() {
	  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	    args[_key] = arguments[_key];
	  }
	
	  var x1 = args[0],
	      y1 = args[1],
	      x2 = args[2],
	      y2 = args[3];
	
	
	  if (args.length === 1) {
	    switch (args[0]) {
	      case 'linear':
	        x1 = 0.0;
	        y1 = 0.0;
	        x2 = 1.0;
	        y2 = 1.0;
	
	        break;
	      case 'ease':
	        x1 = 0.25;
	        y1 = 0.1;
	        x2 = 0.25;
	        y2 = 1.0;
	
	        break;
	      case 'ease-in':
	        x1 = 0.42;
	        y1 = 0.0;
	        x2 = 1.0;
	        y2 = 1.0;
	
	        break;
	      case 'ease-out':
	        x1 = 0.42;
	        y1 = 0.0;
	        x2 = 0.58;
	        y2 = 1.0;
	
	        break;
	      case 'ease-in-out':
	        x1 = 0.0;
	        y1 = 0.0;
	        x2 = 0.58;
	        y2 = 1.0;
	
	        break;
	      default:
	        (0, _util.warn)(false, '[configBezier]: arguments should be one of ' + 'oneOf \'linear\', \'ease\', \'ease-in\', \'ease-out\', ' + '\'ease-in-out\', instead received %s', args);
	    }
	  }
	
	  (0, _util.warn)([x1, x2, y1, y2].every(function (num) {
	    return typeof num === 'number' && num >= 0 && num <= 1;
	  }), '[configBezier]: arguments should be x1, y1, x2, y2 of [0, 1] instead received %s', args);
	
	  var curveX = cubicBezier(x1, x2);
	  var curveY = cubicBezier(y1, y2);
	  var derCurveX = derivativeCubicBezier(x1, x2);
	  var rangeValue = function rangeValue(value) {
	    if (value > 1) {
	      return 1;
	    } else if (value < 0) {
	      return 0;
	    }
	
	    return value;
	  };
	
	  var bezier = function bezier(_t) {
	    var t = _t > 1 ? 1 : _t;
	    var x = t;
	
	    for (var i = 0; i < 8; ++i) {
	      var evalT = curveX(x) - t;
	      var derVal = derCurveX(x);
	
	      if (Math.abs(evalT - t) < ACCURACY || derVal < ACCURACY) {
	        return curveY(x);
	      }
	
	      x = rangeValue(x - evalT / derVal);
	    }
	
	    return curveY(x);
	  };
	
	  bezier.isStepper = false;
	
	  return bezier;
	};
	
	var configSpring = exports.configSpring = function configSpring() {
	  var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	  var _config$stiff = config.stiff,
	      stiff = _config$stiff === undefined ? 100 : _config$stiff,
	      _config$damping = config.damping,
	      damping = _config$damping === undefined ? 8 : _config$damping,
	      _config$dt = config.dt,
	      dt = _config$dt === undefined ? 17 : _config$dt;
	
	  var stepper = function stepper(currX, destX, currV) {
	    var FSpring = -(currX - destX) * stiff;
	    var FDamping = currV * damping;
	    var newV = currV + (FSpring - FDamping) * dt / 1000;
	    var newX = currV * dt / 1000 + currX;
	
	    if (Math.abs(newX - destX) < ACCURACY && Math.abs(newV) < ACCURACY) {
	      return [destX, 0];
	    }
	    return [newX, newV];
	  };
	
	  stepper.isStepper = true;
	  stepper.dt = dt;
	
	  return stepper;
	};
	
	var configEasing = exports.configEasing = function configEasing() {
	  for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
	    args[_key2] = arguments[_key2];
	  }
	
	  var easing = args[0];
	
	
	  if (typeof easing === 'string') {
	    switch (easing) {
	      case 'ease':
	      case 'ease-in-out':
	      case 'ease-out':
	      case 'ease-in':
	      case 'linear':
	        return configBezier(easing);
	      case 'spring':
	        return configSpring();
	      default:
	        (0, _util.warn)(false, '[configEasing]: first argument should be one of \'ease\', \'ease-in\', ' + '\'ease-out\', \'ease-in-out\', \'linear\' and \'spring\', instead  received %s', args);
	    }
	  }
	
	  if (typeof easing === 'function') {
	    return easing;
	  }
	
	  (0, _util.warn)(false, '[configEasing]: first argument type should be function or ' + 'string, instead received %s', args);
	
	  return null;
	};

/***/ },
/* 763 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.warn = exports.getTransitionVal = exports.compose = exports.translateStyle = exports.mapObject = exports.debugf = exports.debug = exports.log = exports.generatePrefixStyle = exports.getDashCase = exports.identity = exports.getIntersectionKeys = undefined;
	
	var _intersection2 = __webpack_require__(764);
	
	var _intersection3 = _interopRequireDefault(_intersection2);
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	/* eslint no-console: 0 */
	var PREFIX_LIST = ['Webkit', 'Moz', 'O', 'ms'];
	var IN_LINE_PREFIX_LIST = ['-webkit-', '-moz-', '-o-', '-ms-'];
	var IN_COMPATIBLE_PROPERTY = ['transform', 'transformOrigin', 'transition'];
	
	var getIntersectionKeys = exports.getIntersectionKeys = function getIntersectionKeys(preObj, nextObj) {
	  return (0, _intersection3.default)(Object.keys(preObj), Object.keys(nextObj));
	};
	
	var identity = exports.identity = function identity(param) {
	  return param;
	};
	
	/*
	 * @description: convert camel case to dash case
	 * string => string
	 */
	var getDashCase = exports.getDashCase = function getDashCase(name) {
	  return name.replace(/([A-Z])/g, function (v) {
	    return '-' + v.toLowerCase();
	  });
	};
	
	/*
	 * @description: add compatible style prefix
	 * (string, string) => object
	 */
	var generatePrefixStyle = exports.generatePrefixStyle = function generatePrefixStyle(name, value) {
	  if (IN_COMPATIBLE_PROPERTY.indexOf(name) === -1) {
	    return _defineProperty({}, name, value);
	  }
	
	  var isTransition = name === 'transition';
	  var camelName = name.replace(/(\w)/, function (v) {
	    return v.toUpperCase();
	  });
	  var styleVal = value;
	
	  return PREFIX_LIST.reduce(function (result, property, i) {
	    if (isTransition) {
	      styleVal = value.replace(/(transform|transform-origin)/gim, IN_LINE_PREFIX_LIST[i] + '$1');
	    }
	
	    return _extends({}, result, _defineProperty({}, property + camelName, styleVal));
	  }, {});
	};
	
	var log = exports.log = function log() {
	  var _console;
	
	  (_console = console).log.apply(_console, arguments);
	};
	
	/*
	 * @description: log the value of a varible
	 * string => any => any
	 */
	var debug = exports.debug = function debug(name) {
	  return function (item) {
	    log(name, item);
	
	    return item;
	  };
	};
	
	/*
	 * @description: log name, args, return value of a function
	 * function => function
	 */
	var debugf = exports.debugf = function debugf(tag, f) {
	  return function () {
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    var res = f.apply(undefined, args);
	    var name = tag || f.name || 'anonymous function';
	    var argNames = '(' + args.map(JSON.stringify).join(', ') + ')';
	
	    log(name + ': ' + argNames + ' => ' + JSON.stringify(res));
	
	    return res;
	  };
	};
	
	/*
	 * @description: map object on every element in this object.
	 * (function, object) => object
	 */
	var mapObject = exports.mapObject = function mapObject(fn, obj) {
	  return Object.keys(obj).reduce(function (res, key) {
	    return _extends({}, res, _defineProperty({}, key, fn(key, obj[key])));
	  }, {});
	};
	
	/*
	 * @description: add compatible prefix to style
	 * object => object
	 */
	var translateStyle = exports.translateStyle = function translateStyle(style) {
	  return Object.keys(style).reduce(function (res, key) {
	    return _extends({}, res, generatePrefixStyle(key, res[key]));
	  }, style);
	};
	
	var compose = exports.compose = function compose() {
	  for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
	    args[_key2] = arguments[_key2];
	  }
	
	  if (!args.length) {
	    return identity;
	  }
	
	  var fns = args.reverse();
	  // first function can receive multiply arguments
	  var firstFn = fns[0];
	  var tailsFn = fns.slice(1);
	
	  return function () {
	    return tailsFn.reduce(function (res, fn) {
	      return fn(res);
	    }, firstFn.apply(undefined, arguments));
	  };
	};
	
	var getTransitionVal = exports.getTransitionVal = function getTransitionVal(props, duration, easing) {
	  return props.map(function (prop) {
	    return getDashCase(prop) + ' ' + duration + 'ms ' + easing;
	  }).join(',');
	};
	
	var isDev = process.env.NODE_ENV !== 'production';
	
	var warn = exports.warn = function warn(condition, format, a, b, c, d, e, f) {
	  if (isDev && typeof console !== 'undefined' && console.warn) {
	    if (format === undefined) {
	      console.warn('LogUtils requires an error message argument');
	    }
	
	    if (!condition) {
	      if (format === undefined) {
	        console.warn('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
	      } else {
	        (function () {
	          var args = [a, b, c, d, e, f];
	          var argIndex = 0;
	
	          console.warn(format.replace(/%s/g, function () {
	            return args[argIndex++];
	          }));
	        })();
	      }
	    }
	  }
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 764 */
/***/ function(module, exports, __webpack_require__) {

	var arrayMap = __webpack_require__(684),
	    baseIntersection = __webpack_require__(765),
	    baseRest = __webpack_require__(281),
	    castArrayLikeObject = __webpack_require__(772);
	
	/**
	 * Creates an array of unique values that are included in all given arrays
	 * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	 * for equality comparisons. The order and references of result values are
	 * determined by the first array.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Array
	 * @param {...Array} [arrays] The arrays to inspect.
	 * @returns {Array} Returns the new array of intersecting values.
	 * @example
	 *
	 * _.intersection([2, 1], [2, 3]);
	 * // => [2]
	 */
	var intersection = baseRest(function(arrays) {
	  var mapped = arrayMap(arrays, castArrayLikeObject);
	  return (mapped.length && mapped[0] === arrays[0])
	    ? baseIntersection(mapped)
	    : [];
	});
	
	module.exports = intersection;


/***/ },
/* 765 */
/***/ function(module, exports, __webpack_require__) {

	var SetCache = __webpack_require__(697),
	    arrayIncludes = __webpack_require__(766),
	    arrayIncludesWith = __webpack_require__(771),
	    arrayMap = __webpack_require__(684),
	    baseUnary = __webpack_require__(269),
	    cacheHas = __webpack_require__(701);
	
	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeMin = Math.min;
	
	/**
	 * The base implementation of methods like `_.intersection`, without support
	 * for iteratee shorthands, that accepts an array of arrays to inspect.
	 *
	 * @private
	 * @param {Array} arrays The arrays to inspect.
	 * @param {Function} [iteratee] The iteratee invoked per element.
	 * @param {Function} [comparator] The comparator invoked per element.
	 * @returns {Array} Returns the new array of shared values.
	 */
	function baseIntersection(arrays, iteratee, comparator) {
	  var includes = comparator ? arrayIncludesWith : arrayIncludes,
	      length = arrays[0].length,
	      othLength = arrays.length,
	      othIndex = othLength,
	      caches = Array(othLength),
	      maxLength = Infinity,
	      result = [];
	
	  while (othIndex--) {
	    var array = arrays[othIndex];
	    if (othIndex && iteratee) {
	      array = arrayMap(array, baseUnary(iteratee));
	    }
	    maxLength = nativeMin(array.length, maxLength);
	    caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))
	      ? new SetCache(othIndex && array)
	      : undefined;
	  }
	  array = arrays[0];
	
	  var index = -1,
	      seen = caches[0];
	
	  outer:
	  while (++index < length && result.length < maxLength) {
	    var value = array[index],
	        computed = iteratee ? iteratee(value) : value;
	
	    value = (comparator || value !== 0) ? value : 0;
	    if (!(seen
	          ? cacheHas(seen, computed)
	          : includes(result, computed, comparator)
	        )) {
	      othIndex = othLength;
	      while (--othIndex) {
	        var cache = caches[othIndex];
	        if (!(cache
	              ? cacheHas(cache, computed)
	              : includes(arrays[othIndex], computed, comparator))
	            ) {
	          continue outer;
	        }
	      }
	      if (seen) {
	        seen.push(computed);
	      }
	      result.push(value);
	    }
	  }
	  return result;
	}
	
	module.exports = baseIntersection;


/***/ },
/* 766 */
/***/ function(module, exports, __webpack_require__) {

	var baseIndexOf = __webpack_require__(767);
	
	/**
	 * A specialized version of `_.includes` for arrays without support for
	 * specifying an index to search from.
	 *
	 * @private
	 * @param {Array} [array] The array to inspect.
	 * @param {*} target The value to search for.
	 * @returns {boolean} Returns `true` if `target` is found, else `false`.
	 */
	function arrayIncludes(array, value) {
	  var length = array == null ? 0 : array.length;
	  return !!length && baseIndexOf(array, value, 0) > -1;
	}
	
	module.exports = arrayIncludes;


/***/ },
/* 767 */
/***/ function(module, exports, __webpack_require__) {

	var baseFindIndex = __webpack_require__(768),
	    baseIsNaN = __webpack_require__(769),
	    strictIndexOf = __webpack_require__(770);
	
	/**
	 * The base implementation of `_.indexOf` without `fromIndex` bounds checks.
	 *
	 * @private
	 * @param {Array} array The array to inspect.
	 * @param {*} value The value to search for.
	 * @param {number} fromIndex The index to search from.
	 * @returns {number} Returns the index of the matched value, else `-1`.
	 */
	function baseIndexOf(array, value, fromIndex) {
	  return value === value
	    ? strictIndexOf(array, value, fromIndex)
	    : baseFindIndex(array, baseIsNaN, fromIndex);
	}
	
	module.exports = baseIndexOf;


/***/ },
/* 768 */
/***/ function(module, exports) {

	/**
	 * The base implementation of `_.findIndex` and `_.findLastIndex` without
	 * support for iteratee shorthands.
	 *
	 * @private
	 * @param {Array} array The array to inspect.
	 * @param {Function} predicate The function invoked per iteration.
	 * @param {number} fromIndex The index to search from.
	 * @param {boolean} [fromRight] Specify iterating from right to left.
	 * @returns {number} Returns the index of the matched value, else `-1`.
	 */
	function baseFindIndex(array, predicate, fromIndex, fromRight) {
	  var length = array.length,
	      index = fromIndex + (fromRight ? 1 : -1);
	
	  while ((fromRight ? index-- : ++index < length)) {
	    if (predicate(array[index], index, array)) {
	      return index;
	    }
	  }
	  return -1;
	}
	
	module.exports = baseFindIndex;


/***/ },
/* 769 */
/***/ function(module, exports) {

	/**
	 * The base implementation of `_.isNaN` without support for number objects.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
	 */
	function baseIsNaN(value) {
	  return value !== value;
	}
	
	module.exports = baseIsNaN;


/***/ },
/* 770 */
/***/ function(module, exports) {

	/**
	 * A specialized version of `_.indexOf` which performs strict equality
	 * comparisons of values, i.e. `===`.
	 *
	 * @private
	 * @param {Array} array The array to inspect.
	 * @param {*} value The value to search for.
	 * @param {number} fromIndex The index to search from.
	 * @returns {number} Returns the index of the matched value, else `-1`.
	 */
	function strictIndexOf(array, value, fromIndex) {
	  var index = fromIndex - 1,
	      length = array.length;
	
	  while (++index < length) {
	    if (array[index] === value) {
	      return index;
	    }
	  }
	  return -1;
	}
	
	module.exports = strictIndexOf;


/***/ },
/* 771 */
/***/ function(module, exports) {

	/**
	 * This function is like `arrayIncludes` except that it accepts a comparator.
	 *
	 * @private
	 * @param {Array} [array] The array to inspect.
	 * @param {*} target The value to search for.
	 * @param {Function} comparator The comparator invoked per element.
	 * @returns {boolean} Returns `true` if `target` is found, else `false`.
	 */
	function arrayIncludesWith(array, value, comparator) {
	  var index = -1,
	      length = array == null ? 0 : array.length;
	
	  while (++index < length) {
	    if (comparator(value, array[index])) {
	      return true;
	    }
	  }
	  return false;
	}
	
	module.exports = arrayIncludesWith;


/***/ },
/* 772 */
/***/ function(module, exports, __webpack_require__) {

	var isArrayLikeObject = __webpack_require__(262);
	
	/**
	 * Casts `value` to an empty array if it's not an array like object.
	 *
	 * @private
	 * @param {*} value The value to inspect.
	 * @returns {Array|Object} Returns the cast array-like object.
	 */
	function castArrayLikeObject(value) {
	  return isArrayLikeObject(value) ? value : [];
	}
	
	module.exports = castArrayLikeObject;


/***/ },
/* 773 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _filter2 = __webpack_require__(774);
	
	var _filter3 = _interopRequireDefault(_filter2);
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();
	
	var _raf = __webpack_require__(759);
	
	var _raf2 = _interopRequireDefault(_raf);
	
	var _util = __webpack_require__(763);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	var alpha = function alpha(begin, end, k) {
	  return begin + (end - begin) * k;
	};
	var needContinue = function needContinue(_ref) {
	  var from = _ref.from,
	      to = _ref.to;
	  return from !== to;
	};
	
	/*
	 * @description: cal new from value and velocity in each stepper
	 * @return: { [styleProperty]: { from, to, velocity } }
	 */
	var calStepperVals = function calStepperVals(easing, preVals, steps) {
	  var nextStepVals = (0, _util.mapObject)(function (key, val) {
	    if (needContinue(val)) {
	      var _easing = easing(val.from, val.to, val.velocity),
	          _easing2 = _slicedToArray(_easing, 2),
	          newX = _easing2[0],
	          newV = _easing2[1];
	
	      return _extends({}, val, {
	        from: newX,
	        velocity: newV
	      });
	    }
	
	    return val;
	  }, preVals);
	
	  if (steps < 1) {
	    return (0, _util.mapObject)(function (key, val) {
	      if (needContinue(val)) {
	        return _extends({}, val, {
	          velocity: alpha(val.velocity, nextStepVals[key].velocity, steps),
	          from: alpha(val.from, nextStepVals[key].from, steps)
	        });
	      }
	
	      return val;
	    }, preVals);
	  }
	
	  return calStepperVals(easing, nextStepVals, steps - 1);
	};
	
	// configure update function
	
	exports.default = function (from, to, easing, duration, render) {
	  var interKeys = (0, _util.getIntersectionKeys)(from, to);
	  var timingStyle = interKeys.reduce(function (res, key) {
	    return _extends({}, res, _defineProperty({}, key, [from[key], to[key]]));
	  }, {});
	
	  var stepperStyle = interKeys.reduce(function (res, key) {
	    return _extends({}, res, _defineProperty({}, key, {
	      from: from[key],
	      velocity: 0,
	      to: to[key]
	    }));
	  }, {});
	  var cafId = -1;
	  var preTime = void 0;
	  var beginTime = void 0;
	  var update = function update() {
	    return null;
	  };
	
	  var getCurrStyle = function getCurrStyle() {
	    return (0, _util.mapObject)(function (key, val) {
	      return val.from;
	    }, stepperStyle);
	  };
	  var shouldStopAnimation = function shouldStopAnimation() {
	    return !(0, _filter3.default)(stepperStyle, needContinue).length;
	  };
	
	  // stepper timing function like spring
	  var stepperUpdate = function stepperUpdate(now) {
	    if (!preTime) {
	      preTime = now;
	    }
	    var deltaTime = now - preTime;
	    var steps = deltaTime / easing.dt;
	
	    stepperStyle = calStepperVals(easing, stepperStyle, steps);
	    // get union set and add compatible prefix
	    render(_extends({}, from, to, getCurrStyle(stepperStyle)));
	
	    preTime = now;
	
	    if (!shouldStopAnimation()) {
	      cafId = (0, _raf2.default)(update);
	    }
	  };
	
	  // t => val timing function like cubic-bezier
	  var timingUpdate = function timingUpdate(now) {
	    if (!beginTime) {
	      beginTime = now;
	    }
	
	    var t = (now - beginTime) / duration;
	    var currStyle = (0, _util.mapObject)(function (key, val) {
	      return alpha.apply(undefined, _toConsumableArray(val).concat([easing(t)]));
	    }, timingStyle);
	
	    // get union set and add compatible prefix
	    render(_extends({}, from, to, currStyle));
	
	    if (t < 1) {
	      cafId = (0, _raf2.default)(update);
	    } else {
	      var finalStyle = (0, _util.mapObject)(function (key, val) {
	        return alpha.apply(undefined, _toConsumableArray(val).concat([easing(1)]));
	      }, timingStyle);
	
	      render(_extends({}, from, to, finalStyle));
	    }
	  };
	
	  update = easing.isStepper ? stepperUpdate : timingUpdate;
	
	  // return start animation method
	  return function () {
	    (0, _raf2.default)(update);
	
	    // return stop animation method
	    return function () {
	      (0, _raf.cancel)(cafId);
	    };
	  };
	};

/***/ },
/* 774 */
/***/ function(module, exports, __webpack_require__) {

	var arrayFilter = __webpack_require__(709),
	    baseFilter = __webpack_require__(775),
	    baseIteratee = __webpack_require__(691),
	    isArray = __webpack_require__(261);
	
	/**
	 * Iterates over elements of `collection`, returning an array of all elements
	 * `predicate` returns truthy for. The predicate is invoked with three
	 * arguments: (value, index|key, collection).
	 *
	 * **Note:** Unlike `_.remove`, this method returns a new array.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Collection
	 * @param {Array|Object} collection The collection to iterate over.
	 * @param {Function} [predicate=_.identity] The function invoked per iteration.
	 * @returns {Array} Returns the new filtered array.
	 * @see _.reject
	 * @example
	 *
	 * var users = [
	 *   { 'user': 'barney', 'age': 36, 'active': true },
	 *   { 'user': 'fred',   'age': 40, 'active': false }
	 * ];
	 *
	 * _.filter(users, function(o) { return !o.active; });
	 * // => objects for ['fred']
	 *
	 * // The `_.matches` iteratee shorthand.
	 * _.filter(users, { 'age': 36, 'active': true });
	 * // => objects for ['barney']
	 *
	 * // The `_.matchesProperty` iteratee shorthand.
	 * _.filter(users, ['active', false]);
	 * // => objects for ['fred']
	 *
	 * // The `_.property` iteratee shorthand.
	 * _.filter(users, 'active');
	 * // => objects for ['barney']
	 */
	function filter(collection, predicate) {
	  var func = isArray(collection) ? arrayFilter : baseFilter;
	  return func(collection, baseIteratee(predicate, 3));
	}
	
	module.exports = filter;


/***/ },
/* 775 */
/***/ function(module, exports, __webpack_require__) {

	var baseEach = __webpack_require__(730);
	
	/**
	 * The base implementation of `_.filter` without support for iteratee shorthands.
	 *
	 * @private
	 * @param {Array|Object} collection The collection to iterate over.
	 * @param {Function} predicate The function invoked per iteration.
	 * @returns {Array} Returns the new filtered array.
	 */
	function baseFilter(collection, predicate) {
	  var result = [];
	  baseEach(collection, function(value, index, collection) {
	    if (predicate(value, index, collection)) {
	      result.push(value);
	    }
	  });
	  return result;
	}
	
	module.exports = baseFilter;


/***/ },
/* 776 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _class, _temp;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactAddonsTransitionGroup = __webpack_require__(777);
	
	var _reactAddonsTransitionGroup2 = _interopRequireDefault(_reactAddonsTransitionGroup);
	
	var _AnimateGroupChild = __webpack_require__(778);
	
	var _AnimateGroupChild2 = _interopRequireDefault(_AnimateGroupChild);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var AnimateGroup = (_temp = _class = function (_Component) {
	  _inherits(AnimateGroup, _Component);
	
	  function AnimateGroup() {
	    _classCallCheck(this, AnimateGroup);
	
	    return _possibleConstructorReturn(this, (AnimateGroup.__proto__ || Object.getPrototypeOf(AnimateGroup)).apply(this, arguments));
	  }
	
	  _createClass(AnimateGroup, [{
	    key: 'wrapChild',
	    value: function wrapChild(child) {
	      var _props = this.props,
	          appear = _props.appear,
	          leave = _props.leave,
	          enter = _props.enter;
	
	
	      return _react2.default.createElement(
	        _AnimateGroupChild2.default,
	        {
	          appear: appear,
	          leave: leave,
	          enter: enter
	        },
	        child
	      );
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _props2 = this.props,
	          component = _props2.component,
	          children = _props2.children;
	
	
	      return _react2.default.createElement(
	        _reactAddonsTransitionGroup2.default,
	        {
	          component: component,
	          childFactory: this.wrapChild.bind(this)
	        },
	        children
	      );
	    }
	  }]);
	
	  return AnimateGroup;
	}(_react.Component), _class.propTypes = {
	  appear: _react.PropTypes.object,
	  leave: _react.PropTypes.object,
	  enter: _react.PropTypes.object,
	  children: _react.PropTypes.oneOfType([_react.PropTypes.array, _react.PropTypes.element]),
	  component: _react.PropTypes.any
	}, _class.defaultProps = {
	  component: 'span'
	}, _temp);
	exports.default = AnimateGroup;

/***/ },
/* 777 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(610);

/***/ },
/* 778 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _class, _temp2;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Animate = __webpack_require__(755);
	
	var _Animate2 = _interopRequireDefault(_Animate);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var AnimateGroupChild = (_temp2 = _class = function (_Component) {
	  _inherits(AnimateGroupChild, _Component);
	
	  function AnimateGroupChild() {
	    var _ref;
	
	    var _temp, _this, _ret;
	
	    _classCallCheck(this, AnimateGroupChild);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = AnimateGroupChild.__proto__ || Object.getPrototypeOf(AnimateGroupChild)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
	      isActive: false
	    }, _temp), _possibleConstructorReturn(_this, _ret);
	  }
	
	  _createClass(AnimateGroupChild, [{
	    key: 'handleStyleActive',
	    value: function handleStyleActive(style, done) {
	      if (style) {
	        var onAnimationEnd = style.onAnimationEnd ? function () {
	          style.onAnimationEnd();
	          done();
	        } : done;
	
	        this.setState(_extends({}, style, {
	          onAnimationEnd: onAnimationEnd,
	          isActive: true
	        }));
	      } else {
	        done();
	      }
	    }
	  }, {
	    key: 'componentWillAppear',
	    value: function componentWillAppear(done) {
	      this.handleStyleActive(this.props.appear, done);
	    }
	  }, {
	    key: 'componentWillEnter',
	    value: function componentWillEnter(done) {
	      this.handleStyleActive(this.props.enter, done);
	    }
	  }, {
	    key: 'componentWillLeave',
	    value: function componentWillLeave(done) {
	      this.handleStyleActive(this.props.leave, done);
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      return _react2.default.createElement(
	        _Animate2.default,
	        this.state,
	        _react.Children.only(this.props.children)
	      );
	    }
	  }]);
	
	  return AnimateGroupChild;
	}(_react.Component), _class.propTypes = {
	  appear: _react.PropTypes.object,
	  leave: _react.PropTypes.object,
	  enter: _react.PropTypes.object,
	  children: _react.PropTypes.element
	}, _temp2);
	exports.default = AnimateGroupChild;

/***/ },
/* 779 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _class, _class2, _temp; /**
	                             * @fileOverview Default Tooltip Content
	                             */
	
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _PureRender = __webpack_require__(746);
	
	var _PureRender2 = _interopRequireDefault(_PureRender);
	
	var _DataUtils = __webpack_require__(673);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var DefaultTooltipContent = (0, _PureRender2.default)(_class = (_temp = _class2 = function (_Component) {
	  _inherits(DefaultTooltipContent, _Component);
	
	  function DefaultTooltipContent() {
	    _classCallCheck(this, DefaultTooltipContent);
	
	    return _possibleConstructorReturn(this, (DefaultTooltipContent.__proto__ || Object.getPrototypeOf(DefaultTooltipContent)).apply(this, arguments));
	  }
	
	  _createClass(DefaultTooltipContent, [{
	    key: 'renderContent',
	    value: function renderContent() {
	      var _props = this.props,
	          payload = _props.payload,
	          separator = _props.separator,
	          formatter = _props.formatter,
	          itemStyle = _props.itemStyle,
	          itemSorter = _props.itemSorter;
	
	
	      if (payload && payload.length) {
	        var listStyle = { padding: 0, margin: 0 };
	
	        var items = payload.filter(function (entry) {
	          return (0, _DataUtils.isNumOrStr)(entry.value);
	        }).sort(itemSorter).map(function (entry, i) {
	          var finalItemStyle = _extends({
	            display: 'block',
	            paddingTop: 4,
	            paddingBottom: 4,
	            color: entry.color || '#000'
	          }, itemStyle);
	          var finalFormatter = entry.formatter || formatter;
	
	          return _react2.default.createElement(
	            'li',
	            { className: 'recharts-tooltip-item', key: 'tooltip-item-' + i, style: finalItemStyle },
	            entry.name ? _react2.default.createElement(
	              'span',
	              { className: 'recharts-tooltip-item-name' },
	              entry.name
	            ) : null,
	            entry.name ? _react2.default.createElement(
	              'span',
	              { className: 'recharts-tooltip-item-separator' },
	              separator
	            ) : null,
	            _react2.default.createElement(
	              'span',
	              { className: 'recharts-tooltip-item-value' },
	              finalFormatter ? finalFormatter(entry.value, entry.name, entry) : entry.value
	            ),
	            _react2.default.createElement(
	              'span',
	              { className: 'recharts-tooltip-item-unit' },
	              entry.unit || ''
	            )
	          );
	        });
	
	        return _react2.default.createElement(
	          'ul',
	          { className: 'recharts-tooltip-item-list', style: listStyle },
	          items
	        );
	      }
	
	      return null;
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _props2 = this.props,
	          labelStyle = _props2.labelStyle,
	          label = _props2.label,
	          labelFormatter = _props2.labelFormatter,
	          wrapperStyle = _props2.wrapperStyle;
	
	      var finalStyle = _extends({
	        margin: 0,
	        padding: 10,
	        backgroundColor: '#fff',
	        border: '1px solid #ccc',
	        whiteSpace: 'nowrap'
	      }, wrapperStyle);
	      var finalLabelStyle = _extends({
	        margin: 0
	      }, labelStyle);
	      var hasLabel = (0, _DataUtils.isNumOrStr)(label);
	      var finalLabel = hasLabel ? label : '';
	
	      if (hasLabel && labelFormatter) {
	        finalLabel = labelFormatter(label);
	      }
	
	      return _react2.default.createElement(
	        'div',
	        { className: 'recharts-default-tooltip', style: finalStyle },
	        _react2.default.createElement(
	          'p',
	          { className: 'recharts-tooltip-label', style: finalLabelStyle },
	          finalLabel
	        ),
	        this.renderContent()
	      );
	    }
	  }]);
	
	  return DefaultTooltipContent;
	}(_react.Component), _class2.displayName = 'DefaultTooltipContent', _class2.propTypes = {
	  separator: _react.PropTypes.string,
	  formatter: _react.PropTypes.func,
	  wrapperStyle: _react.PropTypes.object,
	  itemStyle: _react.PropTypes.object,
	  labelStyle: _react.PropTypes.object,
	  labelFormatter: _react.PropTypes.func,
	  label: _react.PropTypes.any,
	  payload: _react.PropTypes.arrayOf(_react.PropTypes.shape({
	    name: _react.PropTypes.any,
	    value: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.string]),
	    unit: _react.PropTypes.any
	  })),
	  itemSorter: _react.PropTypes.func
	}, _class2.defaultProps = {
	  separator: ' : ',
	  itemStyle: {},
	  labelStyle: {}
	}, _temp)) || _class;
	
	exports.default = DefaultTooltipContent;

/***/ },
/* 780 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _debounce2 = __webpack_require__(781);
	
	var _debounce3 = _interopRequireDefault(_debounce2);
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _class, _temp; /**
	                    * @fileOverview Wrapper component to make charts adapt to the size of parent * DOM
	                    */
	
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactResizeDetector = __webpack_require__(784);
	
	var _reactResizeDetector2 = _interopRequireDefault(_reactResizeDetector);
	
	var _DataUtils = __webpack_require__(673);
	
	var _LogUtils = __webpack_require__(787);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var ResponsiveContainer = (_temp = _class = function (_Component) {
	  _inherits(ResponsiveContainer, _Component);
	
	  function ResponsiveContainer(props) {
	    _classCallCheck(this, ResponsiveContainer);
	
	    var _this = _possibleConstructorReturn(this, (ResponsiveContainer.__proto__ || Object.getPrototypeOf(ResponsiveContainer)).call(this, props));
	
	    _this.updateDimensionsImmediate = function () {
	      if (!_this.mounted) {
	        return;
	      }
	
	      var newSize = _this.getContainerSize();
	
	      if (newSize) {
	        var _this$state = _this.state,
	            oldWidth = _this$state.containerWidth,
	            oldHeight = _this$state.containerHeight;
	        var containerWidth = newSize.containerWidth,
	            containerHeight = newSize.containerHeight;
	
	
	        if (containerWidth !== oldWidth || containerHeight !== oldHeight) {
	          _this.setState({ containerWidth: containerWidth, containerHeight: containerHeight });
	        }
	      }
	    };
	
	    _this.state = {
	      containerWidth: -1,
	      containerHeight: -1
	    };
	
	    _this.handleResize = props.debounce > 0 ? (0, _debounce3.default)(_this.updateDimensionsImmediate, props.debounce) : _this.updateDimensionsImmediate;
	    return _this;
	  }
	
	  /* eslint-disable  react/no-did-mount-set-state */
	
	
	  _createClass(ResponsiveContainer, [{
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      this.mounted = true;
	
	      var size = this.getContainerSize();
	
	      if (size) {
	        this.setState(size);
	      }
	    }
	  }, {
	    key: 'componentWillUnmount',
	    value: function componentWillUnmount() {
	      this.mounted = false;
	    }
	  }, {
	    key: 'getContainerSize',
	    value: function getContainerSize() {
	      if (!this.container) {
	        return null;
	      }
	
	      return {
	        containerWidth: this.container.clientWidth,
	        containerHeight: this.container.clientHeight
	      };
	    }
	  }, {
	    key: 'renderChart',
	    value: function renderChart() {
	      var _state = this.state,
	          containerWidth = _state.containerWidth,
	          containerHeight = _state.containerHeight;
	
	
	      if (containerWidth < 0 || containerHeight < 0) {
	        return null;
	      }
	
	      var _props = this.props,
	          aspect = _props.aspect,
	          width = _props.width,
	          height = _props.height,
	          minWidth = _props.minWidth,
	          minHeight = _props.minHeight,
	          maxHeight = _props.maxHeight,
	          children = _props.children;
	
	
	      (0, _LogUtils.warn)((0, _DataUtils.isPercent)(width) || (0, _DataUtils.isPercent)(height), 'The width(%s) and height(%s) are both fixed numbers,\n       maybe you don\'t need to use a ResponsiveContainer.', width, height);
	
	      (0, _LogUtils.warn)(!aspect || aspect > 0, 'The aspect(%s) must be greater than zero.', aspect);
	
	      var calculatedWidth = (0, _DataUtils.isPercent)(width) ? containerWidth : width;
	      var calculatedHeight = (0, _DataUtils.isPercent)(height) ? containerHeight : height;
	
	      if (aspect && aspect > 0) {
	        // Preserve the desired aspect ratio
	        calculatedHeight = calculatedWidth / aspect;
	        // if maxHeight is set, overwrite if calculatedHeight is greater than maxHeight
	        if (maxHeight && calculatedHeight > maxHeight) {
	          calculatedHeight = maxHeight;
	        }
	      }
	
	      (0, _LogUtils.warn)(calculatedWidth > 0 && calculatedHeight > 0, 'The width(%s) and height(%s) of chart should be greater than 0,\n       please check the style of container, or the props width(%s) and height(%s),\n       or add a minWidth(%s) or minHeight(%s) or use aspect(%s) to control the\n       height and width.', calculatedWidth, calculatedHeight, width, height, minWidth, minHeight, aspect);
	
	      return _react2.default.cloneElement(children, {
	        width: calculatedWidth,
	        height: calculatedHeight
	      });
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _this2 = this;
	
	      var _props2 = this.props,
	          minWidth = _props2.minWidth,
	          minHeight = _props2.minHeight,
	          width = _props2.width,
	          height = _props2.height,
	          maxHeight = _props2.maxHeight;
	
	      var style = { width: width, height: height, minWidth: minWidth, minHeight: minHeight, maxHeight: maxHeight };
	
	      return _react2.default.createElement(
	        'div',
	        {
	          className: 'recharts-responsive-container',
	          style: style,
	          ref: function ref(node) {
	            _this2.container = node;
	          }
	        },
	        this.renderChart(),
	        _react2.default.createElement(_reactResizeDetector2.default, { handleWidth: true, handleHeight: true, onResize: this.handleResize })
	      );
	    }
	  }]);
	
	  return ResponsiveContainer;
	}(_react.Component), _class.displayName = 'ResponsiveContainer', _class.propTypes = {
	  aspect: _react.PropTypes.number,
	  width: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.number]),
	  height: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.number]),
	  minHeight: _react.PropTypes.number,
	  minWidth: _react.PropTypes.number,
	  maxHeight: _react.PropTypes.number,
	  children: _react.PropTypes.node.isRequired,
	  debounce: _react.PropTypes.number
	}, _class.defaultProps = {
	  width: '100%',
	  height: '100%',
	  debounce: 0
	}, _temp);
	exports.default = ResponsiveContainer;

/***/ },
/* 781 */
/***/ function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(225),
	    now = __webpack_require__(782),
	    toNumber = __webpack_require__(783);
	
	/** Error message constants. */
	var FUNC_ERROR_TEXT = 'Expected a function';
	
	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeMax = Math.max,
	    nativeMin = Math.min;
	
	/**
	 * Creates a debounced function that delays invoking `func` until after `wait`
	 * milliseconds have elapsed since the last time the debounced function was
	 * invoked. The debounced function comes with a `cancel` method to cancel
	 * delayed `func` invocations and a `flush` method to immediately invoke them.
	 * Provide `options` to indicate whether `func` should be invoked on the
	 * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
	 * with the last arguments provided to the debounced function. Subsequent
	 * calls to the debounced function return the result of the last `func`
	 * invocation.
	 *
	 * **Note:** If `leading` and `trailing` options are `true`, `func` is
	 * invoked on the trailing edge of the timeout only if the debounced function
	 * is invoked more than once during the `wait` timeout.
	 *
	 * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
	 * until to the next tick, similar to `setTimeout` with a timeout of `0`.
	 *
	 * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
	 * for details over the differences between `_.debounce` and `_.throttle`.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Function
	 * @param {Function} func The function to debounce.
	 * @param {number} [wait=0] The number of milliseconds to delay.
	 * @param {Object} [options={}] The options object.
	 * @param {boolean} [options.leading=false]
	 *  Specify invoking on the leading edge of the timeout.
	 * @param {number} [options.maxWait]
	 *  The maximum time `func` is allowed to be delayed before it's invoked.
	 * @param {boolean} [options.trailing=true]
	 *  Specify invoking on the trailing edge of the timeout.
	 * @returns {Function} Returns the new debounced function.
	 * @example
	 *
	 * // Avoid costly calculations while the window size is in flux.
	 * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
	 *
	 * // Invoke `sendMail` when clicked, debouncing subsequent calls.
	 * jQuery(element).on('click', _.debounce(sendMail, 300, {
	 *   'leading': true,
	 *   'trailing': false
	 * }));
	 *
	 * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
	 * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
	 * var source = new EventSource('/stream');
	 * jQuery(source).on('message', debounced);
	 *
	 * // Cancel the trailing debounced invocation.
	 * jQuery(window).on('popstate', debounced.cancel);
	 */
	function debounce(func, wait, options) {
	  var lastArgs,
	      lastThis,
	      maxWait,
	      result,
	      timerId,
	      lastCallTime,
	      lastInvokeTime = 0,
	      leading = false,
	      maxing = false,
	      trailing = true;
	
	  if (typeof func != 'function') {
	    throw new TypeError(FUNC_ERROR_TEXT);
	  }
	  wait = toNumber(wait) || 0;
	  if (isObject(options)) {
	    leading = !!options.leading;
	    maxing = 'maxWait' in options;
	    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
	    trailing = 'trailing' in options ? !!options.trailing : trailing;
	  }
	
	  function invokeFunc(time) {
	    var args = lastArgs,
	        thisArg = lastThis;
	
	    lastArgs = lastThis = undefined;
	    lastInvokeTime = time;
	    result = func.apply(thisArg, args);
	    return result;
	  }
	
	  function leadingEdge(time) {
	    // Reset any `maxWait` timer.
	    lastInvokeTime = time;
	    // Start the timer for the trailing edge.
	    timerId = setTimeout(timerExpired, wait);
	    // Invoke the leading edge.
	    return leading ? invokeFunc(time) : result;
	  }
	
	  function remainingWait(time) {
	    var timeSinceLastCall = time - lastCallTime,
	        timeSinceLastInvoke = time - lastInvokeTime,
	        result = wait - timeSinceLastCall;
	
	    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;
	  }
	
	  function shouldInvoke(time) {
	    var timeSinceLastCall = time - lastCallTime,
	        timeSinceLastInvoke = time - lastInvokeTime;
	
	    // Either this is the first call, activity has stopped and we're at the
	    // trailing edge, the system time has gone backwards and we're treating
	    // it as the trailing edge, or we've hit the `maxWait` limit.
	    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||
	      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));
	  }
	
	  function timerExpired() {
	    var time = now();
	    if (shouldInvoke(time)) {
	      return trailingEdge(time);
	    }
	    // Restart the timer.
	    timerId = setTimeout(timerExpired, remainingWait(time));
	  }
	
	  function trailingEdge(time) {
	    timerId = undefined;
	
	    // Only invoke if we have `lastArgs` which means `func` has been
	    // debounced at least once.
	    if (trailing && lastArgs) {
	      return invokeFunc(time);
	    }
	    lastArgs = lastThis = undefined;
	    return result;
	  }
	
	  function cancel() {
	    if (timerId !== undefined) {
	      clearTimeout(timerId);
	    }
	    lastInvokeTime = 0;
	    lastArgs = lastCallTime = lastThis = timerId = undefined;
	  }
	
	  function flush() {
	    return timerId === undefined ? result : trailingEdge(now());
	  }
	
	  function debounced() {
	    var time = now(),
	        isInvoking = shouldInvoke(time);
	
	    lastArgs = arguments;
	    lastThis = this;
	    lastCallTime = time;
	
	    if (isInvoking) {
	      if (timerId === undefined) {
	        return leadingEdge(lastCallTime);
	      }
	      if (maxing) {
	        // Handle invocations in a tight loop.
	        timerId = setTimeout(timerExpired, wait);
	        return invokeFunc(lastCallTime);
	      }
	    }
	    if (timerId === undefined) {
	      timerId = setTimeout(timerExpired, wait);
	    }
	    return result;
	  }
	  debounced.cancel = cancel;
	  debounced.flush = flush;
	  return debounced;
	}
	
	module.exports = debounce;


/***/ },
/* 782 */
/***/ function(module, exports, __webpack_require__) {

	var root = __webpack_require__(184);
	
	/**
	 * Gets the timestamp of the number of milliseconds that have elapsed since
	 * the Unix epoch (1 January 1970 00:00:00 UTC).
	 *
	 * @static
	 * @memberOf _
	 * @since 2.4.0
	 * @category Date
	 * @returns {number} Returns the timestamp.
	 * @example
	 *
	 * _.defer(function(stamp) {
	 *   console.log(_.now() - stamp);
	 * }, _.now());
	 * // => Logs the number of milliseconds it took for the deferred invocation.
	 */
	var now = function() {
	  return root.Date.now();
	};
	
	module.exports = now;


/***/ },
/* 783 */
/***/ function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(225),
	    isSymbol = __webpack_require__(678);
	
	/** Used as references for various `Number` constants. */
	var NAN = 0 / 0;
	
	/** Used to match leading and trailing whitespace. */
	var reTrim = /^\s+|\s+$/g;
	
	/** Used to detect bad signed hexadecimal string values. */
	var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;
	
	/** Used to detect binary string values. */
	var reIsBinary = /^0b[01]+$/i;
	
	/** Used to detect octal string values. */
	var reIsOctal = /^0o[0-7]+$/i;
	
	/** Built-in method references without a dependency on `root`. */
	var freeParseInt = parseInt;
	
	/**
	 * Converts `value` to a number.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to process.
	 * @returns {number} Returns the number.
	 * @example
	 *
	 * _.toNumber(3.2);
	 * // => 3.2
	 *
	 * _.toNumber(Number.MIN_VALUE);
	 * // => 5e-324
	 *
	 * _.toNumber(Infinity);
	 * // => Infinity
	 *
	 * _.toNumber('3.2');
	 * // => 3.2
	 */
	function toNumber(value) {
	  if (typeof value == 'number') {
	    return value;
	  }
	  if (isSymbol(value)) {
	    return NAN;
	  }
	  if (isObject(value)) {
	    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
	    value = isObject(other) ? (other + '') : other;
	  }
	  if (typeof value != 'string') {
	    return value === 0 ? value : +value;
	  }
	  value = value.replace(reTrim, '');
	  var isBinary = reIsBinary.test(value);
	  return (isBinary || reIsOctal.test(value))
	    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
	    : (reIsBadHex.test(value) ? NAN : +value);
	}
	
	module.exports = toNumber;


/***/ },
/* 784 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _ResizeDetector = __webpack_require__(785);
	
	var _ResizeDetector2 = _interopRequireDefault(_ResizeDetector);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = _ResizeDetector2.default;

/***/ },
/* 785 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _resizeDetectorStyles = __webpack_require__(786);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var ResizeDetector = function (_Component) {
	  _inherits(ResizeDetector, _Component);
	
	  function ResizeDetector() {
	    _classCallCheck(this, ResizeDetector);
	
	    var _this = _possibleConstructorReturn(this, (ResizeDetector.__proto__ || Object.getPrototypeOf(ResizeDetector)).call(this));
	
	    _this.state = {
	      expandChildHeight: 0,
	      expandChildWidth: 0,
	      expandScrollLeft: 0,
	      expandScrollTop: 0,
	      shrinkScrollTop: 0,
	      shrinkScrollLeft: 0,
	      lastWidth: 0,
	      lastHeight: 0
	    };
	
	    _this.reset = _this.reset.bind(_this);
	    _this.handleScroll = _this.handleScroll.bind(_this);
	    return _this;
	  }
	
	  _createClass(ResizeDetector, [{
	    key: 'componentWillMount',
	    value: function componentWillMount() {
	      this.forceUpdate();
	    }
	  }, {
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      var _containerSize = this.containerSize();
	
	      var _containerSize2 = _slicedToArray(_containerSize, 2);
	
	      var width = _containerSize2[0];
	      var height = _containerSize2[1];
	
	      this.reset(width, height);
	    }
	  }, {
	    key: 'shouldComponentUpdate',
	    value: function shouldComponentUpdate(nextProps) {
	      return this.props !== nextProps;
	    }
	  }, {
	    key: 'componentDidUpdate',
	    value: function componentDidUpdate() {
	      this.expand.scrollLeft = this.expand.scrollWidth;
	      this.expand.scrollTop = this.expand.scrollHeight;
	
	      this.shrink.scrollLeft = this.shrink.scrollWidth;
	      this.shrink.scrollTop = this.shrink.scrollHeight;
	    }
	  }, {
	    key: 'containerSize',
	    value: function containerSize() {
	      return [this.props.handleWidth && this.container.parentElement.offsetWidth, this.props.handleHeight && this.container.parentElement.offsetHeight];
	    }
	  }, {
	    key: 'reset',
	    value: function reset(containerWidth, containerHeight) {
	      if (typeof window === 'undefined') {
	        return;
	      }
	
	      var parent = this.container.parentElement;
	
	      var position = 'static';
	      if (parent.currentStyle) {
	        position = parent.currentStyle.position;
	      } else if (window.getComputedStyle) {
	        position = window.getComputedStyle(parent).position;
	      }
	      if (position === 'static') {
	        parent.style.position = 'relative';
	      }
	
	      this.setState({
	        expandChildHeight: this.expand.offsetHeight + 10,
	        expandChildWidth: this.expand.offsetWidth + 10,
	        lastWidth: containerWidth,
	        lastHeight: containerHeight
	      });
	    }
	  }, {
	    key: 'handleScroll',
	    value: function handleScroll() {
	      if (typeof window === 'undefined') {
	        return;
	      }
	
	      var state = this.state;
	
	      var _containerSize3 = this.containerSize();
	
	      var _containerSize4 = _slicedToArray(_containerSize3, 2);
	
	      var width = _containerSize4[0];
	      var height = _containerSize4[1];
	
	      if (width !== state.lastWidth || height !== state.lastHeight) {
	        this.props.onResize(width, height);
	      }
	
	      this.reset(width, height);
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _this2 = this;
	
	      var state = this.state;
	
	
	      var expandStyle = _extends({}, _resizeDetectorStyles.expandChildStyle, {
	        width: state.expandChildWidth,
	        height: state.expandChildHeight
	      });
	
	      return _react2.default.createElement(
	        'div',
	        { style: _resizeDetectorStyles.parentStyle, ref: function ref(e) {
	            _this2.container = e;
	          } },
	        _react2.default.createElement(
	          'div',
	          { style: _resizeDetectorStyles.parentStyle, onScroll: this.handleScroll, ref: function ref(e) {
	              _this2.expand = e;
	            } },
	          _react2.default.createElement('div', { style: expandStyle })
	        ),
	        _react2.default.createElement(
	          'div',
	          { style: _resizeDetectorStyles.parentStyle, onScroll: this.handleScroll, ref: function ref(e) {
	              _this2.shrink = e;
	            } },
	          _react2.default.createElement('div', { style: _resizeDetectorStyles.shrinkChildStyle })
	        )
	      );
	    }
	  }]);
	
	  return ResizeDetector;
	}(_react.Component);
	
	exports.default = ResizeDetector;
	
	
	ResizeDetector.propTypes = {
	  handleWidth: _react.PropTypes.bool,
	  handleHeight: _react.PropTypes.bool,
	  onResize: _react.PropTypes.func
	};
	
	ResizeDetector.defaultProps = {
	  handleWidth: false,
	  handleHeight: false,
	  onResize: function onResize(e) {
	    return e;
	  }
	};

/***/ },
/* 786 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var parentStyle = exports.parentStyle = {
	  position: 'absolute',
	  left: 0,
	  top: 0,
	  right: 0,
	  bottom: 0,
	  overflow: 'scroll',
	  zIndex: -1,
	  visibility: 'hidden'
	};
	
	var shrinkChildStyle = exports.shrinkChildStyle = {
	  position: 'absolute',
	  left: 0,
	  top: 0,
	  width: '200%',
	  height: '200%'
	};
	
	var expandChildStyle = exports.expandChildStyle = {
	  position: 'absolute',
	  left: 0,
	  top: 0,
	  width: '100%',
	  height: '100%'
	};

/***/ },
/* 787 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	/* eslint no-console: 0 */
	var isDev = process.env.NODE_ENV !== 'production';
	
	var warn = exports.warn = function warn(condition, format, a, b, c, d, e, f) {
	  if (isDev && typeof console !== 'undefined' && console.warn) {
	    if (format === undefined) {
	      console.warn('LogUtils requires an error message argument');
	    }
	
	    if (!condition) {
	      if (format === undefined) {
	        console.warn('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
	      } else {
	        (function () {
	          var args = [a, b, c, d, e, f];
	          var argIndex = 0;
	
	          console.warn(format.replace(/%s/g, function () {
	            return args[argIndex++];
	          }));
	        })();
	      }
	    }
	  }
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 788 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _class, _temp; /**
	                    * @fileOverview Cross
	                    */
	
	
	var _react = __webpack_require__(1);
	
	var _ReactUtils = __webpack_require__(670);
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var Cell = (_temp = _class = function (_Component) {
	  _inherits(Cell, _Component);
	
	  function Cell() {
	    _classCallCheck(this, Cell);
	
	    return _possibleConstructorReturn(this, (Cell.__proto__ || Object.getPrototypeOf(Cell)).apply(this, arguments));
	  }
	
	  _createClass(Cell, [{
	    key: 'render',
	    value: function render() {
	      return null;
	    }
	  }]);
	
	  return Cell;
	}(_react.Component), _class.displayName = 'Cell', _class.propTypes = _extends({}, _ReactUtils.PRESENTATION_ATTRIBUTES), _temp);
	exports.default = Cell;

/***/ },
/* 789 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _isNil2 = __webpack_require__(671);
	
	var _isNil3 = _interopRequireDefault(_isNil2);
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _class, _temp2;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reduceCssCalc = __webpack_require__(790);
	
	var _reduceCssCalc2 = _interopRequireDefault(_reduceCssCalc);
	
	var _classnames = __webpack_require__(404);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _DataUtils = __webpack_require__(673);
	
	var _ReactUtils = __webpack_require__(670);
	
	var _DOMUtils = __webpack_require__(798);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var calculateWordWidths = function calculateWordWidths(props) {
	  try {
	    var words = !(0, _isNil3.default)(props.children) ? props.children.toString().split(/\s+/) : [];
	    var wordsWithComputedWidth = words.map(function (word) {
	      return { word: word, width: (0, _DOMUtils.getStringSize)(word, props.style).width };
	    });
	
	    var spaceWidth = (0, _DOMUtils.getStringSize)('\xA0', props.style).width;
	
	    return { wordsWithComputedWidth: wordsWithComputedWidth, spaceWidth: spaceWidth };
	  } catch (e) {
	    return null;
	  }
	};
	
	var Text = (_temp2 = _class = function (_Component) {
	  _inherits(Text, _Component);
	
	  function Text() {
	    var _ref;
	
	    var _temp, _this, _ret;
	
	    _classCallCheck(this, Text);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Text.__proto__ || Object.getPrototypeOf(Text)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
	      wordsByLines: []
	    }, _temp), _possibleConstructorReturn(_this, _ret);
	  }
	
	  _createClass(Text, [{
	    key: 'componentWillMount',
	    value: function componentWillMount() {
	      this.updateWordsByLines(this.props, true);
	    }
	  }, {
	    key: 'componentWillReceiveProps',
	    value: function componentWillReceiveProps(nextProps) {
	      var needCalculate = this.props.children !== nextProps.children || this.props.style !== nextProps.style;
	      this.updateWordsByLines(nextProps, needCalculate);
	    }
	  }, {
	    key: 'updateWordsByLines',
	    value: function updateWordsByLines(props, needCalculate) {
	      // Only perform calculations if using features that require them (multiline, scaleToFit)
	      if ((props.width || props.scaleToFit) && !(0, _ReactUtils.isSsr)()) {
	        if (needCalculate) {
	          var wordWidths = calculateWordWidths(props);
	
	          if (wordWidths) {
	            var wordsWithComputedWidth = wordWidths.wordsWithComputedWidth,
	                spaceWidth = wordWidths.spaceWidth;
	
	
	            this.wordsWithComputedWidth = wordsWithComputedWidth;
	            this.spaceWidth = spaceWidth;
	          } else {
	            this.updateWordsWithoutCalculate(props);
	
	            return;
	          }
	        }
	
	        var wordsByLines = this.calculateWordsByLines(this.wordsWithComputedWidth, this.spaceWidth, props.width);
	        this.setState({ wordsByLines: wordsByLines });
	      } else {
	        this.updateWordsWithoutCalculate(props);
	      }
	    }
	  }, {
	    key: 'updateWordsWithoutCalculate',
	    value: function updateWordsWithoutCalculate(props) {
	      var words = !(0, _isNil3.default)(props.children) ? props.children.toString().split(/\s+/) : [];
	      this.setState({ wordsByLines: [{ words: words }] });
	    }
	  }, {
	    key: 'calculateWordsByLines',
	    value: function calculateWordsByLines(wordsWithComputedWidth, spaceWidth, lineWidth) {
	      var scaleToFit = this.props.scaleToFit;
	
	      return wordsWithComputedWidth.reduce(function (result, _ref2) {
	        var word = _ref2.word,
	            width = _ref2.width;
	
	        var currentLine = result[result.length - 1];
	
	        if (currentLine && (lineWidth == null || scaleToFit || currentLine.width + width + spaceWidth < lineWidth)) {
	          // Word can be added to an existing line
	          currentLine.words.push(word);
	          currentLine.width += width + spaceWidth;
	        } else {
	          // Add first word to line or word is too long to scaleToFit on existing line
	          var newLine = { words: [word], width: width };
	          result.push(newLine);
	        }
	
	        return result;
	      }, []);
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _props = this.props,
	          textAnchor = _props.textAnchor,
	          verticalAnchor = _props.verticalAnchor,
	          scaleToFit = _props.scaleToFit,
	          angle = _props.angle,
	          lineHeight = _props.lineHeight,
	          capHeight = _props.capHeight,
	          className = _props.className,
	          textProps = _objectWithoutProperties(_props, ['textAnchor', 'verticalAnchor', 'scaleToFit', 'angle', 'lineHeight', 'capHeight', 'className']);
	
	      var wordsByLines = this.state.wordsByLines;
	      var x = textProps.x,
	          y = textProps.y;
	
	
	      if (!(0, _DataUtils.isNumOrStr)(x) || !(0, _DataUtils.isNumOrStr)(y)) {
	        return null;
	      }
	
	      var startDy = void 0;
	      switch (verticalAnchor) {
	        case 'start':
	          startDy = (0, _reduceCssCalc2.default)('calc(' + capHeight + ')');
	          break;
	        case 'middle':
	          startDy = (0, _reduceCssCalc2.default)('calc(' + (wordsByLines.length - 1) / 2 + ' * -' + lineHeight + ' + (' + capHeight + ' / 2))');
	          break;
	        default:
	          startDy = (0, _reduceCssCalc2.default)('calc(' + (wordsByLines.length - 1) + ' * -' + lineHeight + ')');
	          break;
	      }
	
	      var transforms = [];
	      if (scaleToFit) {
	        var lineWidth = wordsByLines[0].width;
	        transforms.push('scale(' + this.props.width / lineWidth + ')');
	      }
	      if (angle) {
	        transforms.push('rotate(' + angle + ', ' + x + ', ' + y + ')');
	      }
	      if (transforms.length) {
	        textProps.transform = transforms.join(' ');
	      }
	
	      return _react2.default.createElement(
	        'text',
	        _extends({}, (0, _ReactUtils.getPresentationAttributes)(textProps), {
	          className: (0, _classnames2.default)('recharts-text', className),
	          textAnchor: textAnchor
	        }),
	        wordsByLines.map(function (line, index) {
	          return _react2.default.createElement(
	            'tspan',
	            { x: x, dy: index === 0 ? startDy : lineHeight, key: index },
	            line.words.join(' ')
	          );
	        })
	      );
	    }
	  }]);
	
	  return Text;
	}(_react.Component), _class.propTypes = _extends({}, _ReactUtils.PRESENTATION_ATTRIBUTES, {
	  scaleToFit: _react.PropTypes.bool,
	  angle: _react.PropTypes.number,
	  textAnchor: _react.PropTypes.oneOf(['start', 'middle', 'end', 'inherit']),
	  verticalAnchor: _react.PropTypes.oneOf(['start', 'middle', 'end']),
	  style: _react.PropTypes.object
	}), _class.defaultProps = {
	  x: 0,
	  y: 0,
	  lineHeight: '1em',
	  capHeight: '0.71em', // Magic number from d3
	  scaleToFit: false,
	  textAnchor: 'start',
	  verticalAnchor: 'end' }, _temp2);
	exports.default = Text;

/***/ },
/* 790 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Module dependencies
	 */
	var balanced = __webpack_require__(791)
	var reduceFunctionCall = __webpack_require__(792)
	var mexp = __webpack_require__(793)
	
	/**
	 * Constantes
	 */
	var MAX_STACK = 100 // should be enough for a single calc()...
	var NESTED_CALC_RE = /(\+|\-|\*|\\|[^a-z]|)(\s*)(\()/g
	
	/**
	 * Global variables
	 */
	var stack
	
	/**
	 * Expose reduceCSSCalc plugin
	 *
	 * @type {Function}
	 */
	module.exports = reduceCSSCalc
	
	/**
	 * Reduce CSS calc() in a string, whenever it's possible
	 *
	 * @param {String} value css input
	 */
	function reduceCSSCalc(value, decimalPrecision) {
	  stack = 0
	  decimalPrecision = Math.pow(10, decimalPrecision === undefined ? 5 : decimalPrecision)
	
	  // Allow calc() on multiple lines
	  value = value.replace(/\n+/g, " ")
	
	  /**
	   * Evaluates an expression
	   *
	   * @param {String} expression
	   * @returns {String}
	   */
	  function evaluateExpression (expression, functionIdentifier, call) {
	    if (stack++ > MAX_STACK) {
	      stack = 0
	      throw new Error("Call stack overflow for " + call)
	    }
	
	    if (expression === "") {
	      throw new Error(functionIdentifier + "(): '" + call + "' must contain a non-whitespace string")
	    }
	
	    expression = evaluateNestedExpression(expression, call)
	
	    var units = getUnitsInExpression(expression)
	
	    // If the expression contains multiple units or CSS variables,
	    // then let the expression be (i.e. browser calc())
	    if (units.length > 1 || expression.indexOf("var(") > -1) {
	      return functionIdentifier + "(" + expression + ")"
	    }
	
	    var unit = units[0] || ""
	
	    if (unit === "%") {
	      // Convert percentages to numbers, to handle expressions like: 50% * 50% (will become: 25%):
	      // console.log(expression)
	      expression = expression.replace(/\b[0-9\.]+%/g, function(percent) {
	        return parseFloat(percent.slice(0, -1)) * 0.01
	      })
	    }
	
	    // Remove units in expression:
	    var toEvaluate = expression.replace(new RegExp(unit, "gi"), "")
	    var result
	
	    try {
	      result = mexp.eval(toEvaluate)
	    }
	    catch (e) {
	      return functionIdentifier + "(" + expression + ")"
	    }
	
	    // Transform back to a percentage result:
	    if (unit === "%") {
	      result *= 100
	    }
	
	    // adjust rounding shit
	    // (0.1 * 0.2 === 0.020000000000000004)
	    if (functionIdentifier.length || unit === "%") {
	      result = Math.round(result * decimalPrecision) / decimalPrecision
	    }
	
	    // Add unit
	    result += unit
	
	    return result
	  }
	
	  /**
	   * Evaluates nested expressions
	   *
	   * @param {String} expression
	   * @returns {String}
	   */
	  function evaluateNestedExpression(expression, call) {
	    // Remove the calc part from nested expressions to ensure
	    // better browser compatibility
	    expression = expression.replace(/((?:\-[a-z]+\-)?calc)/g, "")
	    var evaluatedPart = ""
	    var nonEvaluatedPart = expression
	    var matches
	    while ((matches = NESTED_CALC_RE.exec(nonEvaluatedPart))) {
	      if (matches[0].index > 0) {
	        evaluatedPart += nonEvaluatedPart.substring(0, matches[0].index)
	      }
	
	      var balancedExpr = balanced("(", ")", nonEvaluatedPart.substring([0].index))
	      if (balancedExpr.body === "") {
	        throw new Error("'" + expression + "' must contain a non-whitespace string")
	      }
	
	      var evaluated = evaluateExpression(balancedExpr.body, "", call)
	
	      evaluatedPart += balancedExpr.pre + evaluated
	      nonEvaluatedPart = balancedExpr.post
	    }
	
	    return evaluatedPart + nonEvaluatedPart
	  }
	
	  return reduceFunctionCall(value, /((?:\-[a-z]+\-)?calc)\(/, evaluateExpression)
	}
	
	/**
	 * Checks what units are used in an expression
	 *
	 * @param {String} expression
	 * @returns {Array}
	 */
	
	function getUnitsInExpression(expression) {
	  var uniqueUnits = []
	  var uniqueLowerCaseUnits = []
	  var unitRegEx = /[\.0-9]([%a-z]+)/gi
	  var matches = unitRegEx.exec(expression)
	
	  while (matches) {
	    if (!matches || !matches[1]) {
	      continue
	    }
	
	    if (uniqueLowerCaseUnits.indexOf(matches[1].toLowerCase()) === -1) {
	      uniqueUnits.push(matches[1])
	      uniqueLowerCaseUnits.push(matches[1].toLowerCase())
	    }
	
	    matches = unitRegEx.exec(expression)
	  }
	
	  return uniqueUnits
	}


/***/ },
/* 791 */
/***/ function(module, exports) {

	module.exports = balanced;
	function balanced(a, b, str) {
	  if (a instanceof RegExp) a = maybeMatch(a, str);
	  if (b instanceof RegExp) b = maybeMatch(b, str);
	
	  var r = range(a, b, str);
	
	  return r && {
	    start: r[0],
	    end: r[1],
	    pre: str.slice(0, r[0]),
	    body: str.slice(r[0] + a.length, r[1]),
	    post: str.slice(r[1] + b.length)
	  };
	}
	
	function maybeMatch(reg, str) {
	  var m = str.match(reg);
	  return m ? m[0] : null;
	}
	
	balanced.range = range;
	function range(a, b, str) {
	  var begs, beg, left, right, result;
	  var ai = str.indexOf(a);
	  var bi = str.indexOf(b, ai + 1);
	  var i = ai;
	
	  if (ai >= 0 && bi > 0) {
	    begs = [];
	    left = str.length;
	
	    while (i >= 0 && !result) {
	      if (i == ai) {
	        begs.push(i);
	        ai = str.indexOf(a, i + 1);
	      } else if (begs.length == 1) {
	        result = [ begs.pop(), bi ];
	      } else {
	        beg = begs.pop();
	        if (beg < left) {
	          left = beg;
	          right = bi;
	        }
	
	        bi = str.indexOf(b, i + 1);
	      }
	
	      i = ai < bi && ai >= 0 ? ai : bi;
	    }
	
	    if (begs.length) {
	      result = [ left, right ];
	    }
	  }
	
	  return result;
	}


/***/ },
/* 792 */
/***/ function(module, exports, __webpack_require__) {

	/*
	 * Module dependencies
	 */
	var balanced = __webpack_require__(791)
	
	/**
	 * Expose `reduceFunctionCall`
	 *
	 * @type {Function}
	 */
	module.exports = reduceFunctionCall
	
	/**
	 * Walkthrough all expressions, evaluate them and insert them into the declaration
	 *
	 * @param {Array} expressions
	 * @param {Object} declaration
	 */
	
	function reduceFunctionCall(string, functionRE, callback) {
	  var call = string
	  return getFunctionCalls(string, functionRE).reduce(function(string, obj) {
	    return string.replace(obj.functionIdentifier + "(" + obj.matches.body + ")", evalFunctionCall(obj.matches.body, obj.functionIdentifier, callback, call, functionRE))
	  }, string)
	}
	
	/**
	 * Parses expressions in a value
	 *
	 * @param {String} value
	 * @returns {Array}
	 * @api private
	 */
	
	function getFunctionCalls(call, functionRE) {
	  var expressions = []
	
	  var fnRE = typeof functionRE === "string" ? new RegExp("\\b(" + functionRE + ")\\(") : functionRE
	  do {
	    var searchMatch = fnRE.exec(call)
	    if (!searchMatch) {
	      return expressions
	    }
	    if (searchMatch[1] === undefined) {
	      throw new Error("Missing the first couple of parenthesis to get the function identifier in " + functionRE)
	    }
	    var fn = searchMatch[1]
	    var startIndex = searchMatch.index
	    var matches = balanced("(", ")", call.substring(startIndex))
	
	    if (!matches || matches.start !== searchMatch[0].length - 1) {
	      throw new SyntaxError(fn + "(): missing closing ')' in the value '" + call + "'")
	    }
	
	    expressions.push({matches: matches, functionIdentifier: fn})
	    call = matches.post
	  }
	  while (fnRE.test(call))
	
	  return expressions
	}
	
	/**
	 * Evaluates an expression
	 *
	 * @param {String} expression
	 * @returns {String}
	 * @api private
	 */
	
	function evalFunctionCall (string, functionIdentifier, callback, call, functionRE) {
	  // allow recursivity
	  return callback(reduceFunctionCall(string, functionRE, callback), functionIdentifier, call)
	}


/***/ },
/* 793 */
/***/ function(module, exports, __webpack_require__) {

	var Mexp=__webpack_require__(794);
	Mexp.prototype.formulaEval = function () {
		"use strict";
		var stack=[],pop1,pop2,pop3;
		var disp=[];
		var temp='';
		var arr=this.value;
		for(var i=0;i<arr.length;i++){
			if(arr[i].type===1||arr[i].type===3){
				disp.push({value:arr[i].type===3?arr[i].show:arr[i].value,type:1});
			}
			else if(arr[i].type===13){
				disp.push({value:arr[i].show,type:1});
			}
			else if(arr[i].type===0){
				disp[disp.length-1]={value:arr[i].show+(arr[i].show!="-"?"(":"")+disp[disp.length-1].value+(arr[i].show!="-"?")":""),type:0};
			}
			else if(arr[i].type===7){
				disp[disp.length-1]={value:(disp[disp.length-1].type!=1?"(":"")+disp[disp.length-1].value+(disp[disp.length-1].type!=1?")":"")+arr[i].show,type:7};
			}
			else if(arr[i].type===10){
				pop1=disp.pop();
				pop2=disp.pop();
				if(arr[i].show==='P'||arr[i].show==='C')disp.push({value:"<sup>"+pop2.value+"</sup>"+arr[i].show+"<sub>"+pop1.value+"</sub>",type:10});
				else disp.push({value:(pop2.type!=1?"(":"")+pop2.value+(pop2.type!=1?")":"")+"<sup>"+pop1.value+"</sup>",type:1});
			}
			else if(arr[i].type===2||arr[i].type===9){
				pop1=disp.pop();
				pop2=disp.pop();
				disp.push({value:(pop2.type!=1?"(":"")+pop2.value+(pop2.type!=1?")":"")+arr[i].show+(pop1.type!=1?"(":"")+pop1.value+(pop1.type!=1?")":""),type:arr[i].type});
			}
			else if(arr[i].type===12){
				pop1=disp.pop();
				pop2=disp.pop();
				pop3=disp.pop();
				disp.push({value:arr[i].show+"("+pop3.value+","+pop2.value+","+pop1.value+")",type:12});
			}
		}
		return disp[0].value;
	};
	module.exports=Mexp;

/***/ },
/* 794 */
/***/ function(module, exports, __webpack_require__) {

	var Mexp=__webpack_require__(795);
	Mexp.prototype.postfixEval = function (UserDefined) {
		'use strict';
		UserDefined=UserDefined||{};
		UserDefined.PI=Math.PI;
		UserDefined.E=Math.E;
		var stack=[],pop1,pop2,pop3;
		var disp=[];
		var temp='';
		var arr=this.value;
		var bool=(typeof UserDefined.n!=="undefined");
		for(var i=0;i<arr.length;i++){
			if(arr[i].type===1){
				stack.push({value:arr[i].value,type:1});
			}
			else if(arr[i].type===3){
				stack.push({value:UserDefined[arr[i].value],type:1});
			}
			else if(arr[i].type===0){
				if(typeof stack[stack.length-1].type==="undefined"){
					stack[stack.length-1].value.push(arr[i]);
				}
				else stack[stack.length-1].value=arr[i].value(stack[stack.length-1].value);
			}
			else if(arr[i].type===7){
				if(typeof stack[stack.length-1].type==="undefined"){
					stack[stack.length-1].value.push(arr[i]);
				}
				else stack[stack.length-1].value=arr[i].value(stack[stack.length-1].value);
			}
			else if(arr[i].type===8){
				pop1=stack.pop();
				pop2=stack.pop();
				stack.push({type:1,value:arr[i].value(pop2.value,pop1.value)});
			}
			else if(arr[i].type===10){
				pop1=stack.pop();
				pop2=stack.pop();
				if(typeof pop2.type==="undefined"){
					pop2.value=pop2.concat(pop1);
					pop2.value.push(arr[i]);
					stack.push(pop2);
				}
				else if (typeof pop1.type==="undefined") {
					pop1.unshift(pop2);
					pop1.push(arr[i]);
					stack.push(pop1);
				}
				else{
					stack.push({type:1,value:arr[i].value(pop2.value,pop1.value)});
	            }
			}
			else if(arr[i].type===2||arr[i].type===9){
				pop1=stack.pop();
				pop2=stack.pop();
				if(typeof pop2.type==="undefined"){
	                console.log(pop2);
					pop2=pop2.concat(pop1);
					pop2.push(arr[i]);
					stack.push(pop2);
				}
				else if (typeof pop1.type==="undefined") {
					pop1.unshift(pop2);
					pop1.push(arr[i]);
					stack.push(pop1);
				}
				else{
					stack.push({type:1,value:arr[i].value(pop2.value,pop1.value)});
				}
			}
			else if(arr[i].type===12){
				pop1=stack.pop();
				if (typeof pop1.type!=="undefined") {
					pop1=[pop1];
				}
				pop2=stack.pop();
				pop3=stack.pop();
				stack.push({type:1,value:arr[i].value(pop3.value,pop2.value,new Mexp(pop1))});
			}
			else if(arr[i].type===13){
				if(bool){
					stack.push({value:UserDefined[arr[i].value],type:3});
				}
				else stack.push([arr[i]]);
			}
		}
		if (stack.length>1) {
			throw(new Mexp.exception("Uncaught Syntax error"));
		}
		return stack[0].value>1000000000000000?"Infinity":Number(stack[0].value.toFixed(15)).toPrecision();
	};
	Mexp.eval=function(str,tokens,obj){
		if (typeof tokens==="undefined") {
			return this.lex(str).toPostfix().postfixEval();
		}
		else if (typeof obj==="undefined") {
			if (typeof tokens.length!=="undefined") 
				return this.lex(str,tokens).toPostfix().postfixEval();
			else
				return this.lex(str).toPostfix().postfixEval(tokens);
		}
		else
			return this.lex(str,tokens).toPostfix().postfixEval(obj);
	};
	module.exports=Mexp;

/***/ },
/* 795 */
/***/ function(module, exports, __webpack_require__) {

	
	    var Mexp=__webpack_require__(796);
	
		Mexp.prototype.toPostfix = function () {
			'use strict';
			var post=[],elem,popped,prep,pre,ele;
	    	var stack=[{value:"(",type:4,pre:0}];
			var arr=this.value;
			for (var i=1; i < arr.length; i++) {
				if(arr[i].type===1||arr[i].type===3||arr[i].type===13){	//if token is number,constant,or n(which is also a special constant in our case)
					if(arr[i].type===1)
						arr[i].value=Number(arr[i].value);
					post.push(arr[i]);
				}
				else if(arr[i].type===4){
					stack.push(arr[i]);
				}
				else if(arr[i].type===5){
					while((popped=stack.pop()).type!==4){
						post.push(popped);
					}
				}
				else if(arr[i].type===11){
					while((popped=stack.pop()).type!==4){
						post.push(popped);
					}
					stack.push(popped);
				}
				else {
					elem=arr[i];
					pre=elem.pre;
					ele=stack[stack.length-1];
					prep=ele.pre;
					var flag=ele.value=='Math.pow'&&elem.value=='Math.pow';
					if(pre>prep)stack.push(elem);
					else {
						while(prep>=pre&&!flag||flag&&pre<prep){
							popped=stack.pop();
							ele=stack[stack.length-1];
							post.push(popped);
							prep=ele.pre;
							flag=elem.value=='Math.pow'&&ele.value=='Math.pow';
						}
						stack.push(elem);
					}
				}
			}
			return new Mexp(post);
		};
	    module.exports=Mexp;

/***/ },
/* 796 */
/***/ function(module, exports, __webpack_require__) {

	var Mexp=__webpack_require__(797);
		function inc(arr,val){
			for(var i=0;i<arr.length;i++)
				arr[i]+=val;
			return arr;
		}
		var token=['sin','cos','tan','pi','(',')','P','C',
			  'asin','acos','atan','7','8','9','int',
			  'cosh','acosh','ln','^','root','4','5','6','/','!',
			  'tanh','atanh','Mod','1','2','3','*',
			  'sinh','asinh','e','log','0','.','+','-',',','Sigma','n','Pi','pow'];
		var show=['sin','cos','tan','&pi;','(',')','P','C',
			'asin','acos','atan','7','8','9','Int',
			'cosh','acosh',' ln','^','root','4','5','6','&divide;','!',
			'tanh','atanh',' Mod ','1','2','3','&times;',
			'sinh','asinh','e',' log','0','.','+','-',',','&Sigma;','n','&Pi;','pow'];
		var eva=[Mexp.math.sin,Mexp.math.cos,Mexp.math.tan,'PI','(',')',Mexp.math.P,Mexp.math.C,
			Mexp.math.asin,Mexp.math.acos,Mexp.math.atan,'7','8','9',Math.floor,
			Mexp.math.cosh,Mexp.math.acosh,Math.log,Math.pow,Math.sqrt,'4','5','6',Mexp.math.div,Mexp.math.fact,
			Mexp.math.tanh,Mexp.math.atanh,Mexp.math.mod,'1','2','3',Mexp.math.mul,
			Mexp.math.sinh,Mexp.math.asinh,'E',Mexp.math.log,'0','.',Mexp.math.add,Mexp.math.sub,',',Mexp.math.sigma,'n',Mexp.math.Pi,Math.pow];
		var preced={0:11,1:0,2:3,3:0,4:0,5:0,6:0,7:11,8:11,9:1,10:10,11:0,12:11,13:0};
		var type=[0,0,0,3,4,5,10,10,
			0,0,0,1,1,1,0,
			0,0,0,10,0,1,1,1,2,7,
			0,0,2,1,1,1,2,
			0,0,3,0,1,6,9,9,11,12,13,12,8];
		 /*
		0 : function with syntax function_name(Maths_exp)
		1 : numbers
		2 : binary operators like * / Mod left associate and same precedence
		3 : Math constant values like e,pi,Cruncher ans
		4 : opening bracket
		5 : closing bracket
		6 : decimal
		7 : function with syntax (Math_exp)function_name
		8: function with syntax function_name(Math_exp1,Math_exp2)
		9 : binary operator like +,-
		10: binary operator like P C or ^
		11: ,
		12: function with , seperated three parameters
		13: variable of Sigma function
		 */
		var type0={0:true,1:true,3:true,4:true,6:true,8:true,9:true,12:true,13:true},//type2:true,type4:true,type9:true,type11:true,type21:true,type22
		type1={0:true,1:true,2:true,3:true,4:true,5:true,6:true,7:true,8:true,9:true,10:true,11:true,12:true,13:true},//type3:true,type5:true,type7:true,type23
		type_1={0:true,3:true,4:true,8:true,12:true,13:true},
		empty={},
		type_3={0:true,1:true,3:true,4:true,6:true,8:true,12:true,13:true},//type_5:true,type_7:true,type_23
		type6={1:true},
		newAr=[[],
				["1","2","3","7","8","9","4","5","6","+","-","*","/","(",")","^","!","P","C","e","0",".",",","n"],
				["pi","ln","Pi"],
				["sin","cos","tan","Del","int","Mod","log","pow"],
				["asin","acos","atan","cosh","root","tanh","sinh"],
				["acosh","atanh","asinh","Sigma"]];
		function match(str1,str2,i,x){
			for(var f=0;f<x;f++){
				if (str1[i+f]!==str2[f])
					return false;
			}
			return true;
		}
		Mexp.addToken=function(tokens){
			for(i=0;i<tokens.length;i++){
				x=tokens[i].token.length;
				var temp=-1;
	
				//newAr is a specially designed data structure in which 1D array at location one of 2d array has all string with length 1 2 with 2 and so on
	
				if (x<newAr.length)	//match to check if token is really huge and not existing
									//if not checked it will break in next line as undefined index
					for(y=0;y<newAr[x].length;y++){
						if (tokens[i].token===newAr[x][y]){
							temp=token.indexOf(newAr[x][y]);
							break;
						}
					}
				if (temp===-1) {
					token.push(tokens[i].token);
					type.push(tokens[i].type);
					if(newAr.length<=tokens[i].token.length)
						newAr[tokens[i].token.length]=[];
					newAr[tokens[i].token.length].push(tokens[i].token);
					eva.push(tokens[i].value);
					show.push(tokens[i].show);
				}
				else {
					token[temp]=tokens[i].token;
					type[temp]=tokens[i].type;
					eva[temp]=tokens[i].value;
					show[temp]=tokens[i].show;
				}
			}
		};
		Mexp.lex=function(inp,tokens){
			'use strict';
			var str=[{type:4,value:"(",show:"(",pre:0}];
			var ptc=[];	//Parenthesis to close at the beginning is after one token
			var inpStr=inp;
			var key;
	        var pcounter=0;
			var allowed=type0;
			var bracToClose=0;
			var asterick=empty;
			var prevKey='';
			var i,x,y;
			if(typeof tokens!=="undefined")
				Mexp.addToken(tokens);
			var obj={};
			for(i=0;i<inpStr.length;i++){
				if (inpStr[i]==' ') {
					continue;
				}
				key='';
				sec:for(x=(inpStr.length-i>(newAr.length-2)?newAr.length-1:inpStr.length-i);x>0;x--){
					for(y=0;y<newAr[x].length;y++){
						if (match(inpStr,newAr[x][y],i,x)){
							key=newAr[x][y];
							break sec;
						}
					}
				}
				i+=key.length-1;
				if(key===''){
					throw(new Mexp.exception("Can't understand after "+inpStr.slice(i)));
				}
				var index=token.indexOf(key);
				var cToken=key;
				var cType=type[index];
				var cEv=eva[index];
				var cPre=preced[cType];
				var	cShow=show[index];
				var pre=str[str.length-1];
				for(j=ptc.length;j--;){	//loop over ptc
					if(ptc[j]===0){
						if([0,2,3,5,9,11,12,13].indexOf(cType)!==-1){
							if(allowed[cType]!==true){
								throw(new Mexp.exception(key+" is not allowed after "+prevKey));
							}
							str.push({value:")",type:5,pre:0,show:")"});
							allowed=type1;
							asterick=type_3;
							inc(ptc,-1).pop();
						}
					}
				}
				if(allowed[cType]!==true){
					throw(new Mexp.exception(key+" is not allowed after "+prevKey));
				}
				if(asterick[cType]===true){
					cType=2;
					cEv=Mexp.math.mul;
					cShow="&times;";
					cPre=3;
					i=i-key.length;
			 	}
				obj={value:cEv,type:cType,pre:cPre,show:cShow};
				if(cType===0){
					allowed=type0;
					asterick=empty;
					inc(ptc,2).push(2);
					str.push(obj);
					str.push({value:"(",type:4,pre:0,show:"("});
				}
				else if(cType===1){
					if(pre.type===1){
						pre.value+=cEv;
						inc(ptc,1);
					}
					else {
						str.push(obj);
					}
					allowed=type1;
					asterick=type_1;
				}
				else if(cType===2){
					allowed=type0;
					asterick=empty;
					inc(ptc,2);
					str.push(obj);
				}
				else if(cType===3){//constant
					str.push(obj);
					allowed=type1;
					asterick=type_3;
				}
				else if(cType===4){
	                pcounter+=ptc.length;
	                ptc=[];
					bracToClose++;
					allowed=type0;
					asterick=empty;
					str.push(obj);
				}
				else if(cType===5){
					if(!bracToClose){
						throw(new Mexp.exception("Closing parenthesis are more than opening one, wait What!!!"));
					}
	                while(pcounter--){	//loop over ptc
	    						str.push({value:")",type:5,pre:0,show:")"});
	    			}
	                pcounter=0;
					bracToClose--;
					allowed=type1;
					asterick=type_3;
					str.push(obj);
				}
				else if(cType===6){
					if(pre.hasDec){
						throw(new Mexp.exception("Two decimals are not allowed in one number"));
					}
					if(pre.type!==1){
						pre={value:0,type:1,pre:0};	//pre needs to be changed as it will the last value now to be safe in later code
						str.push(pre);
						inc(ptc,-1);
					}
					allowed=type6;
					inc(ptc,1);
					asterick=empty;
					pre.value+=cEv;
					pre.hasDec=true;
				}
				else if(cType===7){
					allowed=type1;
					asterick=type_3;
					inc(ptc,1);
					str.push(obj);
				}
				if(cType===8){
					allowed=type0;
					asterick=empty;
					inc(ptc,4).push(4);
					str.push(obj);
					str.push({value:"(",type:4,pre:0,show:"("});
				}
				else if(cType===9){
					if(pre.type===9){
						if(pre.value===Mexp.math.add){
							pre.value=cEv;
							pre.show=cShow;
							inc(ptc,1);
						}
						else if(pre.value===Mexp.math.sub&&cShow==='-'){
							pre.value=Mexp.math.add;
							pre.show='+';
							inc(ptc,1);
						}
					}
					else if(pre.type!==5&&pre.type!==7&&pre.type!==1&&pre.type!==3&&pre.type!==13){//changesign only when negative is found
						if(cToken==='-'){//do nothing for + token
										//don't add with the above if statement as that will run the else statement of parent if on Ctoken +
							allowed=type0;
							asterick=empty;
							inc(ptc,2).push(2);
							str.push({value:Mexp.math.changeSign,type:0,pre:21,show:"-"});
							str.push({value:"(",type:4,pre:0,show:"("});
						}
					}
					else{
						str.push(obj);
						inc(ptc,2);
					}
					allowed=type0;
					asterick=empty;
				}
				else if(cType===10){
					allowed=type0;
					asterick=empty;
					inc(ptc,2);
					str.push(obj);
				}
				else if(cType===11){
					allowed=type0;
					asterick=empty;
					str.push(obj);
				}
				else if(cType===12){
					allowed=type0;
					asterick=empty;
					inc(ptc,6).push(6);
					str.push(obj);
					str.push({value:"(",type:4,pre:0});
				}
				else if(cType===13){
					allowed=type1;
					asterick=type_3;
					str.push(obj);
				}
				inc(ptc,-1);
				prevKey=key;
			}
			for(var j=ptc.length;j--;){	//loop over ptc
				if(ptc[j]===0){
	
					str.push({value:")",show:")",type:5,pre:3});
					inc(ptc,-1).pop();
				}
			}
			if (allowed[5]!==true) {
				throw(new Mexp.exception("complete the expression"));
			}
			while(bracToClose--)
				str.push({value:")",show:")",type:5,pre:3});
	
			str.push({type:5,value:")",show:")",pre:0});
	//        console.log(str);
			return new Mexp(str);
		};
	    module.exports=Mexp;


/***/ },
/* 797 */
/***/ function(module, exports) {

		var Mexp=function(parsed){
			this.value=parsed;
	
		};
	
		Mexp.math={
			isDegree:true, //mode of calculator
			acos:function(x){
				return (Mexp.math.isDegree?180/Math.PI*Math.acos(x):Math.acos(x));
			},
			add:function(a,b){
				return a+b;
			},
			asin:function(x){
				return (Mexp.math.isDegree?180/Math.PI*Math.asin(x):Math.asin(x));
			},
			atan:function(x){
				return (Mexp.math.isDegree?180/Math.PI*Math.atan(x):Math.atan(x));
			},
			acosh:function(x){
				return Math.log(x+Math.sqrt(x*x-1));
			},
			asinh:function(x){
				return Math.log(x+Math.sqrt(x*x+1));
			},
			atanh:function(x){
				return Math.log((1+x)/(1-x));
			},
			C:function(n,r){
				var pro=1,other=n-r,choice=r;
				if(choice<other){
				choice=other;
				other=r;
				}
				for(var i=choice+1;i<=n;i++)
					pro*=i;
				return pro/Mexp.math.fact(other);
			},
			changeSign:function(x){
				return -x;
			},
			cos:function(x){
				if(Mexp.math.isDegree)x=Mexp.math.toRadian(x);
				return Math.cos(x);
			},
			cosh:function(x){
				return (Math.pow(Math.E,x)+Math.pow(Math.E,-1*x))/2;
			},
			div:function(a,b){
			return a/b;
			},
			fact:function(n) {
			if(n%1!==0)return "NAN";
				var pro=1;
				for(var i=2;i<=n;i++)
					pro*=i;
				return pro;
			},
			inverse:function(x){
				return 1/x;
			},
			log:function(i){
				return Math.log(i)/Math.log(10);
			},
			mod:function(a,b){
			return a%b;
			},
			mul:function(a,b){
			return a*b;
			},
			P:function(n,r){var pro=1;
				 for(var i=Math.floor(n)-Math.floor(r)+1;i<=Math.floor(n);i++)
						pro*=i;
						return pro;
	
			},
			Pi:function(low,high,ex){
				var pro=1;
				for(var i=low;i<=high;i++){
					pro*=Number(ex.postfixEval({n:i}));
				}
				return pro;
			},
			pow10x:function(e){
				var x=1;
				while(e--){x*=10;}
				return x;
			},
			sigma:function(low,high,ex){
				var sum=0;
				for(var i=low;i<=high;i++){
					sum+=Number(ex.postfixEval({n:i}));
				}
				return sum;
			},
			sin:function(x){
				if(Mexp.math.isDegree)x=Mexp.math.toRadian(x);
				return Math.sin(x);
			},
			sinh:function(x){
				return (Math.pow(Math.E,x)-Math.pow(Math.E,-1*x))/2;
			},
			sub:function(a,b){
			return a-b;
			},
			tan:function(x){
				if(Mexp.math.isDegree)x=Mexp.math.toRadian(x);
				return Math.tan(x);
			},
			tanh:function(x){
				return Mexp.sinha(x)/Mexp.cosha(x);
			},
			toRadian:function(x){
				return x*Math.PI/180;
			}
		};
		Mexp.exception=function(message){
			this.message=message;
		};
	    module.exports=Mexp;

/***/ },
/* 798 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.calculateChartCoordinate = exports.getOffset = exports.getStringSize = exports.getStyleString = undefined;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _ReactUtils = __webpack_require__(670);
	
	function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }
	
	var stringCache = {
	  widthCache: {},
	  cacheCount: 0
	};
	var MAX_CACHE_NUM = 2000;
	var SPAN_STYLE = {
	  position: 'absolute',
	  top: '-20000px',
	  left: 0,
	  padding: 0,
	  margin: 0,
	  border: 'none',
	  whiteSpace: 'pre'
	};
	var STYLE_LIST = ['minWidth', 'maxWidth', 'width', 'minHeight', 'maxHeight', 'height', 'top', 'left', 'fontSize', 'lineHeight', 'padding', 'margin', 'paddingLeft', 'paddingRight', 'paddingTop', 'paddingBottom', 'marginLeft', 'marginRight', 'marginTop', 'marginBottom'];
	var MEASUREMENT_SPAN_ID = 'recharts_measurement_span';
	
	function autoCompleteStyle(name, value) {
	  if (STYLE_LIST.indexOf(name) >= 0 && value === +value) {
	    return value + 'px';
	  }
	
	  return value;
	}
	
	function camelToMiddleLine(text) {
	  var strs = text.split('');
	
	  var formatStrs = strs.reduce(function (result, entry) {
	    if (entry === entry.toUpperCase()) {
	      return [].concat(_toConsumableArray(result), ['-', entry.toLowerCase()]);
	    }
	
	    return [].concat(_toConsumableArray(result), [entry]);
	  }, []);
	
	  return formatStrs.join('');
	}
	
	var getStyleString = exports.getStyleString = function getStyleString(style) {
	  return Object.keys(style).reduce(function (result, s) {
	    return '' + result + camelToMiddleLine(s) + ':' + autoCompleteStyle(s, style[s]) + ';';
	  }, '');
	};
	
	var getStringSize = exports.getStringSize = function getStringSize(text) {
	  var style = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	
	  if (text === undefined || text === null || (0, _ReactUtils.isSsr)()) {
	    return { width: 0, height: 0 };
	  }
	
	  var str = '' + text;
	  var styleString = getStyleString(style);
	  var cacheKey = str + '-' + styleString;
	
	  if (stringCache.widthCache[cacheKey]) {
	    return stringCache.widthCache[cacheKey];
	  }
	
	  try {
	    var measurementSpan = document.getElementById(MEASUREMENT_SPAN_ID);
	    if (!measurementSpan) {
	      measurementSpan = document.createElement('span');
	      measurementSpan.setAttribute('id', MEASUREMENT_SPAN_ID);
	      document.body.appendChild(measurementSpan);
	    }
	
	    measurementSpan.setAttribute('style', getStyleString(_extends({}, SPAN_STYLE, style)));
	    measurementSpan.textContent = str;
	
	    var rect = measurementSpan.getBoundingClientRect();
	    var result = { width: rect.width, height: rect.height };
	
	    stringCache.widthCache[cacheKey] = result;
	
	    if (++stringCache.cacheCount > MAX_CACHE_NUM) {
	      stringCache.cacheCount = 0;
	      stringCache.widthCache = {};
	    }
	
	    return result;
	  } catch (e) {
	    return { width: 0, height: 0 };
	  }
	};
	
	var getOffset = exports.getOffset = function getOffset(el) {
	  var html = el.ownerDocument.documentElement;
	  var box = { top: 0, left: 0 };
	
	  // If we don't have gBCR, just use 0,0 rather than error
	  // BlackBerry 5, iOS 3 (original iPhone)
	  if (typeof el.getBoundingClientRect !== 'undefined') {
	    box = el.getBoundingClientRect();
	  }
	
	  return {
	    top: box.top + window.pageYOffset - html.clientTop,
	    left: box.left + window.pageXOffset - html.clientLeft
	  };
	};
	
	/**
	 * Calculate coordinate of cursor in chart
	 * @param  {Object} event  Event object
	 * @param  {Object} offset The offset of main part in the svg element
	 * @return {Object}        {chartX, chartY}
	 */
	var calculateChartCoordinate = exports.calculateChartCoordinate = function calculateChartCoordinate(event, offset) {
	  return {
	    chartX: Math.round(event.pageX - offset.left),
	    chartY: Math.round(event.pageY - offset.top)
	  };
	};

/***/ },
/* 799 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _class, _class2, _temp; /**
	                             * @fileOverview Sector
	                             */
	
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(404);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _PureRender = __webpack_require__(746);
	
	var _PureRender2 = _interopRequireDefault(_PureRender);
	
	var _ReactUtils = __webpack_require__(670);
	
	var _PolarUtils = __webpack_require__(800);
	
	var _DataUtils = __webpack_require__(673);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var getDeltaAngle = function getDeltaAngle(startAngle, endAngle) {
	  var sign = Math.sign(endAngle - startAngle);
	  var deltaAngle = Math.min(Math.abs(endAngle - startAngle), 359.999);
	
	  return sign * deltaAngle;
	};
	
	var getTangentCircle = function getTangentCircle(_ref) {
	  var cx = _ref.cx,
	      cy = _ref.cy,
	      radius = _ref.radius,
	      angle = _ref.angle,
	      sign = _ref.sign,
	      isExternal = _ref.isExternal,
	      cornerRadius = _ref.cornerRadius;
	
	  var centerRadius = cornerRadius * (isExternal ? 1 : -1) + radius;
	  var theta = Math.asin(cornerRadius / centerRadius) / _PolarUtils.RADIAN;
	  var centerAngle = angle + sign * theta;
	  var center = (0, _PolarUtils.polarToCartesian)(cx, cy, centerRadius, centerAngle);
	  // The coordinate of point which is tangent to the circle
	  var circleTangency = (0, _PolarUtils.polarToCartesian)(cx, cy, radius, centerAngle);
	  // The coordinate of point which is tangent to the radius line
	  var lineTangency = (0, _PolarUtils.polarToCartesian)(cx, cy, centerRadius * Math.cos(theta * _PolarUtils.RADIAN), angle);
	
	  return { center: center, circleTangency: circleTangency, lineTangency: lineTangency, theta: theta };
	};
	
	var getSectorPath = function getSectorPath(_ref2) {
	  var cx = _ref2.cx,
	      cy = _ref2.cy,
	      innerRadius = _ref2.innerRadius,
	      outerRadius = _ref2.outerRadius,
	      startAngle = _ref2.startAngle,
	      endAngle = _ref2.endAngle;
	
	  var angle = getDeltaAngle(startAngle, endAngle);
	
	  // When the angle of sector equals to 360, star point and end point coincide
	  var tempEndAngle = startAngle + angle;
	  var outerStartPoint = (0, _PolarUtils.polarToCartesian)(cx, cy, outerRadius, startAngle);
	  var outerEndPoint = (0, _PolarUtils.polarToCartesian)(cx, cy, outerRadius, tempEndAngle);
	
	  var path = 'M ' + outerStartPoint.x + ',' + outerStartPoint.y + '\n    A ' + outerRadius + ',' + outerRadius + ',0,\n    ' + +(Math.abs(angle) > 180) + ',' + +(startAngle > tempEndAngle) + ',\n    ' + outerEndPoint.x + ',' + outerEndPoint.y + '\n  ';
	
	  if (innerRadius > 0) {
	    var innerStartPoint = (0, _PolarUtils.polarToCartesian)(cx, cy, innerRadius, startAngle);
	    var innerEndPoint = (0, _PolarUtils.polarToCartesian)(cx, cy, innerRadius, tempEndAngle);
	    path += 'L ' + innerEndPoint.x + ',' + innerEndPoint.y + '\n            A ' + innerRadius + ',' + innerRadius + ',0,\n            ' + +(Math.abs(angle) > 180) + ',' + +(startAngle <= tempEndAngle) + ',\n            ' + innerStartPoint.x + ',' + innerStartPoint.y + ' Z';
	  } else {
	    path += 'L ' + cx + ',' + cy + ' Z';
	  }
	
	  return path;
	};
	
	var getSectorWithCorner = function getSectorWithCorner(_ref3) {
	  var cx = _ref3.cx,
	      cy = _ref3.cy,
	      innerRadius = _ref3.innerRadius,
	      outerRadius = _ref3.outerRadius,
	      cornerRadius = _ref3.cornerRadius,
	      startAngle = _ref3.startAngle,
	      endAngle = _ref3.endAngle;
	
	  var sign = Math.sign(endAngle - startAngle);
	
	  var _getTangentCircle = getTangentCircle({
	    cx: cx, cy: cy, radius: outerRadius, angle: startAngle, sign: sign, cornerRadius: cornerRadius
	  }),
	      soct = _getTangentCircle.circleTangency,
	      solt = _getTangentCircle.lineTangency,
	      sot = _getTangentCircle.theta;
	
	  var _getTangentCircle2 = getTangentCircle({
	    cx: cx, cy: cy, radius: outerRadius, angle: endAngle, sign: -sign, cornerRadius: cornerRadius
	  }),
	      eoct = _getTangentCircle2.circleTangency,
	      eolt = _getTangentCircle2.lineTangency,
	      eot = _getTangentCircle2.theta;
	
	  var outerArcAngle = Math.abs(startAngle - endAngle) - sot - eot;
	
	  if (outerArcAngle < 0) {
	    return getSectorPath({
	      cx: cx, cy: cy, innerRadius: innerRadius, outerRadius: outerRadius, startAngle: startAngle, endAngle: endAngle
	    });
	  }
	
	  var path = 'M ' + solt.x + ',' + solt.y + '\n    A' + cornerRadius + ',' + cornerRadius + ',0,0,' + +(sign < 0) + ',' + soct.x + ',' + soct.y + '\n    A' + outerRadius + ',' + outerRadius + ',0,' + +(outerArcAngle > 180) + ',' + +(sign < 0) + ',' + eoct.x + ',' + eoct.y + '\n    A' + cornerRadius + ',' + cornerRadius + ',0,0,' + +(sign < 0) + ',' + eolt.x + ',' + eolt.y + '\n  ';
	
	  if (innerRadius > 0) {
	    var _getTangentCircle3 = getTangentCircle({
	      cx: cx, cy: cy, radius: innerRadius, angle: startAngle, sign: sign, isExternal: true, cornerRadius: cornerRadius
	    }),
	        sict = _getTangentCircle3.circleTangency,
	        silt = _getTangentCircle3.lineTangency,
	        sit = _getTangentCircle3.theta;
	
	    var _getTangentCircle4 = getTangentCircle({
	      cx: cx, cy: cy, radius: innerRadius, angle: endAngle, sign: -sign, isExternal: true, cornerRadius: cornerRadius
	    }),
	        eict = _getTangentCircle4.circleTangency,
	        eilt = _getTangentCircle4.lineTangency,
	        eit = _getTangentCircle4.theta;
	
	    var innerArcAngle = Math.abs(startAngle - endAngle) - sit - eit;
	
	    if (innerArcAngle < 0) {
	      return path + 'L' + cx + ',' + cy + 'Z';
	    }
	
	    path += 'L' + eilt.x + ',' + eilt.y + '\n      A' + cornerRadius + ',' + cornerRadius + ',0,0,' + +(sign < 0) + ',' + eict.x + ',' + eict.y + '\n      A' + innerRadius + ',' + innerRadius + ',0,' + +(innerArcAngle > 180) + ',' + +(sign > 0) + ',' + sict.x + ',' + sict.y + '\n      A' + cornerRadius + ',' + cornerRadius + ',0,0,' + +(sign < 0) + ',' + silt.x + ',' + silt.y + 'Z';
	  } else {
	    path += 'L' + cx + ',' + cy + 'Z';
	  }
	
	  return path;
	};
	
	var Sector = (0, _PureRender2.default)(_class = (_temp = _class2 = function (_Component) {
	  _inherits(Sector, _Component);
	
	  function Sector() {
	    _classCallCheck(this, Sector);
	
	    return _possibleConstructorReturn(this, (Sector.__proto__ || Object.getPrototypeOf(Sector)).apply(this, arguments));
	  }
	
	  _createClass(Sector, [{
	    key: 'render',
	    value: function render() {
	      var _props = this.props,
	          cx = _props.cx,
	          cy = _props.cy,
	          innerRadius = _props.innerRadius,
	          outerRadius = _props.outerRadius,
	          cornerRadius = _props.cornerRadius,
	          startAngle = _props.startAngle,
	          endAngle = _props.endAngle,
	          className = _props.className;
	
	
	      if (outerRadius < innerRadius || startAngle === endAngle) {
	        return null;
	      }
	
	      var layerClass = (0, _classnames2.default)('recharts-sector', className);
	      var deltaRadius = outerRadius - innerRadius;
	      var cr = (0, _DataUtils.getPercentValue)(cornerRadius, deltaRadius, 0, true);
	      var path = void 0;
	
	      if (cr > 0 && Math.abs(startAngle - endAngle) < 360) {
	        path = getSectorWithCorner({
	          cx: cx, cy: cy, innerRadius: innerRadius, outerRadius: outerRadius,
	          cornerRadius: Math.min(cr, deltaRadius / 2),
	          startAngle: startAngle, endAngle: endAngle
	        });
	      } else {
	        path = getSectorPath({ cx: cx, cy: cy, innerRadius: innerRadius, outerRadius: outerRadius, startAngle: startAngle, endAngle: endAngle });
	      }
	
	      return _react2.default.createElement('path', _extends({}, (0, _ReactUtils.getPresentationAttributes)(this.props), (0, _ReactUtils.filterEventAttributes)(this.props), {
	        className: layerClass,
	        d: path
	      }));
	    }
	  }]);
	
	  return Sector;
	}(_react.Component), _class2.displayName = 'Sector', _class2.propTypes = _extends({}, _ReactUtils.PRESENTATION_ATTRIBUTES, {
	  className: _react.PropTypes.string,
	  cx: _react.PropTypes.number,
	  cy: _react.PropTypes.number,
	  innerRadius: _react.PropTypes.number,
	  outerRadius: _react.PropTypes.number,
	  startAngle: _react.PropTypes.number,
	  endAngle: _react.PropTypes.number,
	  cornerRadius: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.string])
	}), _class2.defaultProps = {
	  cx: 0,
	  cy: 0,
	  innerRadius: 0,
	  outerRadius: 0,
	  startAngle: 0,
	  endAngle: 0,
	  cornerRadius: 0
	}, _temp)) || _class;
	
	exports.default = Sector;

/***/ },
/* 800 */
/***/ function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var RADIAN = exports.RADIAN = Math.PI / 180;
	
	var polarToCartesian = exports.polarToCartesian = function polarToCartesian(cx, cy, radius, angle) {
	  return {
	    x: cx + Math.cos(-RADIAN * angle) * radius,
	    y: cy + Math.sin(-RADIAN * angle) * radius
	  };
	};
	
	var getMaxRadius = exports.getMaxRadius = function getMaxRadius(width, height) {
	  var margin = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {
	    top: 0, right: 0, bottom: 0, left: 0
	  };
	  return Math.min(Math.abs(width - (margin.left || 0) - (margin.right || 0)), Math.abs(height - (margin.left || 0) - (margin.right || 0))) / 2;
	};

/***/ },
/* 801 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _isArray2 = __webpack_require__(261);
	
	var _isArray3 = _interopRequireDefault(_isArray2);
	
	var _isFunction2 = __webpack_require__(224);
	
	var _isFunction3 = _interopRequireDefault(_isFunction2);
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _class, _class2, _temp; /**
	                             * @fileOverview Curve
	                             */
	
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _d3Shape = __webpack_require__(751);
	
	var _classnames = __webpack_require__(404);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _PureRender = __webpack_require__(746);
	
	var _PureRender2 = _interopRequireDefault(_PureRender);
	
	var _ReactUtils = __webpack_require__(670);
	
	var _DataUtils = __webpack_require__(673);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var CURVE_FACTORIES = {
	  curveBasisClosed: _d3Shape.curveBasisClosed, curveBasisOpen: _d3Shape.curveBasisOpen, curveBasis: _d3Shape.curveBasis, curveLinearClosed: _d3Shape.curveLinearClosed, curveLinear: _d3Shape.curveLinear,
	  curveMonotoneX: _d3Shape.curveMonotoneX, curveMonotoneY: _d3Shape.curveMonotoneY, curveNatural: _d3Shape.curveNatural, curveStep: _d3Shape.curveStep, curveStepAfter: _d3Shape.curveStepAfter,
	  curveStepBefore: _d3Shape.curveStepBefore
	};
	
	var defined = function defined(p) {
	  return p.x === +p.x && p.y === +p.y;
	};
	var getX = function getX(p) {
	  return p.x;
	};
	var getY = function getY(p) {
	  return p.y;
	};
	
	var getCurveFactory = function getCurveFactory(type, layout) {
	  if ((0, _isFunction3.default)(type)) {
	    return type;
	  }
	
	  var name = 'curve' + type.slice(0, 1).toUpperCase() + type.slice(1);
	
	  if (name === 'curveMonotone' && layout) {
	    return CURVE_FACTORIES['' + name + (layout === 'vertical' ? 'Y' : 'X')];
	  }
	  return CURVE_FACTORIES[name] || _d3Shape.curveLinear;
	};
	
	var Curve = (0, _PureRender2.default)(_class = (_temp = _class2 = function (_Component) {
	  _inherits(Curve, _Component);
	
	  function Curve() {
	    _classCallCheck(this, Curve);
	
	    return _possibleConstructorReturn(this, (Curve.__proto__ || Object.getPrototypeOf(Curve)).apply(this, arguments));
	  }
	
	  _createClass(Curve, [{
	    key: 'getPath',
	
	    /**
	     * Calculate the path of curve
	     * @return {String} path
	     */
	    value: function getPath() {
	      var _props = this.props,
	          type = _props.type,
	          points = _props.points,
	          baseLine = _props.baseLine,
	          layout = _props.layout,
	          connectNulls = _props.connectNulls;
	
	      var curveFactory = getCurveFactory(type, layout);
	      var formatPoints = connectNulls ? points.filter(function (entry) {
	        return defined(entry);
	      }) : points;
	      var lineFunction = void 0;
	
	      if ((0, _isArray3.default)(baseLine)) {
	        var areaPoints = formatPoints.map(function (entry, index) {
	          return _extends({}, entry, { base: baseLine[index] });
	        });
	        if (layout === 'vertical') {
	          lineFunction = (0, _d3Shape.area)().y(getY).x1(getX).x0(function (d) {
	            return d.base.x;
	          });
	        } else {
	          lineFunction = (0, _d3Shape.area)().x(getX).y1(getY).y0(function (d) {
	            return d.base.y;
	          });
	        }
	        lineFunction.defined(defined).curve(curveFactory);
	
	        return lineFunction(areaPoints);
	      } else if (layout === 'vertical' && (0, _DataUtils.isNumber)(baseLine)) {
	        lineFunction = (0, _d3Shape.area)().y(getY).x1(getX).x0(baseLine);
	      } else if ((0, _DataUtils.isNumber)(baseLine)) {
	        lineFunction = (0, _d3Shape.area)().x(getX).y1(getY).y0(baseLine);
	      } else {
	        lineFunction = (0, _d3Shape.line)().x(getX).y(getY);
	      }
	
	      lineFunction.defined(defined).curve(curveFactory);
	
	      return lineFunction(formatPoints);
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _props2 = this.props,
	          className = _props2.className,
	          points = _props2.points,
	          pathRef = _props2.pathRef;
	
	
	      if (!points || !points.length) {
	        return null;
	      }
	
	      return _react2.default.createElement('path', _extends({}, (0, _ReactUtils.getPresentationAttributes)(this.props), (0, _ReactUtils.filterEventAttributes)(this.props), {
	        className: (0, _classnames2.default)('recharts-curve', className),
	        d: this.getPath(),
	        ref: pathRef
	      }));
	    }
	  }]);
	
	  return Curve;
	}(_react.Component), _class2.displayName = 'Curve', _class2.propTypes = _extends({}, _ReactUtils.PRESENTATION_ATTRIBUTES, {
	  className: _react.PropTypes.string,
	  type: _react.PropTypes.oneOfType([_react.PropTypes.oneOf(['basis', 'basisClosed', 'basisOpen', 'linear', 'linearClosed', 'natural', 'monotoneX', 'monotoneY', 'monotone', 'step', 'stepBefore', 'stepAfter']), _react.PropTypes.func]),
	  layout: _react.PropTypes.oneOf(['horizontal', 'vertical']),
	  baseLine: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.array]),
	  points: _react.PropTypes.arrayOf(_react.PropTypes.object),
	  connectNulls: _react.PropTypes.bool,
	  pathRef: _react.PropTypes.func
	}), _class2.defaultProps = {
	  type: 'linear',
	  points: [],
	  connectNulls: false
	}, _temp)) || _class;
	
	exports.default = Curve;

/***/ },
/* 802 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _class, _class2, _temp2; /**
	                              * @fileOverview Rectangle
	                              */
	
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(404);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _reactSmooth = __webpack_require__(754);
	
	var _reactSmooth2 = _interopRequireDefault(_reactSmooth);
	
	var _PureRender = __webpack_require__(746);
	
	var _PureRender2 = _interopRequireDefault(_PureRender);
	
	var _ReactUtils = __webpack_require__(670);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var getRectangePath = function getRectangePath(x, y, width, height, radius) {
	  var maxRadius = Math.min(Math.abs(width) / 2, Math.abs(height) / 2);
	  var sign = height >= 0 ? 1 : -1;
	  var clockWise = height >= 0 ? 1 : 0;
	  var path = void 0;
	
	  if (maxRadius > 0 && radius instanceof Array) {
	    var newRadius = [];
	    for (var i = 0, len = 4; i < len; i++) {
	      newRadius[i] = radius[i] > maxRadius ? maxRadius : radius[i];
	    }
	
	    path = 'M' + x + ',' + (y + sign * newRadius[0]);
	
	    if (newRadius[0] > 0) {
	      path += 'A ' + newRadius[0] + ',' + newRadius[0] + ',0,0,' + clockWise + ',' + (x + newRadius[0]) + ',' + y;
	    }
	
	    path += 'L ' + (x + width - newRadius[1]) + ',' + y;
	
	    if (newRadius[1] > 0) {
	      path += 'A ' + newRadius[1] + ',' + newRadius[1] + ',0,0,' + clockWise + ',\n        ' + (x + width) + ',' + (y + sign * newRadius[1]);
	    }
	    path += 'L ' + (x + width) + ',' + (y + height - sign * newRadius[2]);
	
	    if (newRadius[2] > 0) {
	      path += 'A ' + newRadius[2] + ',' + newRadius[2] + ',0,0,' + clockWise + ',\n        ' + (x + width - newRadius[2]) + ',' + (y + height);
	    }
	    path += 'L ' + (x + newRadius[3]) + ',' + (y + height);
	
	    if (newRadius[3] > 0) {
	      path += 'A ' + newRadius[3] + ',' + newRadius[3] + ',0,0,' + clockWise + ',\n        ' + x + ',' + (y + height - sign * newRadius[3]);
	    }
	    path += 'Z';
	  } else if (maxRadius > 0 && radius === +radius && radius > 0) {
	    var _newRadius = Math.min(maxRadius, radius);
	
	    path = 'M ' + x + ',' + (y + sign * _newRadius) + '\n            A ' + _newRadius + ',' + _newRadius + ',0,0,' + clockWise + ',' + (x + _newRadius) + ',' + y + '\n            L ' + (x + width - _newRadius) + ',' + y + '\n            A ' + _newRadius + ',' + _newRadius + ',0,0,' + clockWise + ',' + (x + width) + ',' + (y + sign * _newRadius) + '\n            L ' + (x + width) + ',' + (y + height - sign * _newRadius) + '\n            A ' + _newRadius + ',' + _newRadius + ',0,0,' + clockWise + ',' + (x + width - _newRadius) + ',' + (y + height) + '\n            L ' + (x + _newRadius) + ',' + (y + height) + '\n            A ' + _newRadius + ',' + _newRadius + ',0,0,' + clockWise + ',' + x + ',' + (y + height - sign * _newRadius) + ' Z';
	  } else {
	    path = 'M ' + x + ',' + y + ' h ' + width + ' v ' + height + ' h ' + -width + ' Z';
	  }
	
	  return path;
	};
	
	var Rectangle = (0, _PureRender2.default)(_class = (_temp2 = _class2 = function (_Component) {
	  _inherits(Rectangle, _Component);
	
	  function Rectangle() {
	    var _ref;
	
	    var _temp, _this, _ret;
	
	    _classCallCheck(this, Rectangle);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Rectangle.__proto__ || Object.getPrototypeOf(Rectangle)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
	      totalLength: -1
	    }, _temp), _possibleConstructorReturn(_this, _ret);
	  }
	
	  _createClass(Rectangle, [{
	    key: 'componentDidMount',
	
	
	    /* eslint-disable  react/no-did-mount-set-state */
	    value: function componentDidMount() {
	      if (this.node && this.node.getTotalLength) {
	        var totalLength = this.node.getTotalLength();
	
	        if (totalLength) {
	          this.setState({
	            totalLength: totalLength
	          });
	        }
	      }
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _this2 = this;
	
	      var _props = this.props,
	          x = _props.x,
	          y = _props.y,
	          width = _props.width,
	          height = _props.height,
	          radius = _props.radius,
	          className = _props.className;
	      var totalLength = this.state.totalLength;
	      var _props2 = this.props,
	          animationEasing = _props2.animationEasing,
	          animationDuration = _props2.animationDuration,
	          animationBegin = _props2.animationBegin,
	          isAnimationActive = _props2.isAnimationActive,
	          isUpdateAnimationActive = _props2.isUpdateAnimationActive;
	
	
	      if (x !== +x || y !== +y || width !== +width || height !== +height) {
	        return null;
	      }
	
	      var layerClass = (0, _classnames2.default)('recharts-rectangle', className);
	
	      if (!isUpdateAnimationActive) {
	        return _react2.default.createElement('path', _extends({}, (0, _ReactUtils.getPresentationAttributes)(this.props), (0, _ReactUtils.filterEventAttributes)(this.props), {
	          className: layerClass,
	          d: getRectangePath(x, y, width, height, radius)
	        }));
	      }
	
	      return _react2.default.createElement(
	        _reactSmooth2.default,
	        {
	          canBegin: totalLength > 0,
	          from: { width: width, height: height, x: x, y: y },
	          to: { width: width, height: height, x: x, y: y },
	          duration: animationDuration,
	          animationEasing: animationEasing,
	          isActive: isUpdateAnimationActive
	        },
	        function (_ref2) {
	          var currWidth = _ref2.width,
	              currHeight = _ref2.height,
	              currX = _ref2.x,
	              currY = _ref2.y;
	          return _react2.default.createElement(
	            _reactSmooth2.default,
	            {
	              canBegin: totalLength > 0,
	              from: '0px ' + (totalLength === -1 ? 1 : totalLength) + 'px',
	              to: totalLength + 'px 0px',
	              attributeName: 'strokeDasharray',
	              begin: animationBegin,
	              duration: animationDuration,
	              isActive: isAnimationActive,
	              easing: animationEasing
	            },
	            _react2.default.createElement('path', _extends({}, (0, _ReactUtils.getPresentationAttributes)(_this2.props), (0, _ReactUtils.filterEventAttributes)(_this2.props), {
	              className: layerClass,
	              d: getRectangePath(currX, currY, currWidth, currHeight, radius),
	              ref: function ref(node) {
	                _this2.node = node;
	              }
	            }))
	          );
	        }
	      );
	    }
	  }]);
	
	  return Rectangle;
	}(_react.Component), _class2.displayName = 'Rectangle', _class2.propTypes = _extends({}, _ReactUtils.PRESENTATION_ATTRIBUTES, _ReactUtils.EVENT_ATTRIBUTES, {
	  className: _react.PropTypes.string,
	  x: _react.PropTypes.number,
	  y: _react.PropTypes.number,
	  width: _react.PropTypes.number,
	  height: _react.PropTypes.number,
	  radius: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.array]),
	  isAnimationActive: _react.PropTypes.bool,
	  isUpdateAnimationActive: _react.PropTypes.bool,
	  animationBegin: _react.PropTypes.number,
	  animationDuration: _react.PropTypes.number,
	  animationEasing: _react.PropTypes.oneOf(['ease', 'ease-in', 'ease-out', 'ease-in-out', 'linear'])
	}), _class2.defaultProps = {
	  x: 0,
	  y: 0,
	  width: 0,
	  height: 0,
	  // The radius of border
	  // The radius of four corners when radius is a number
	  // The radius of left-top, right-top, right-bottom, left-bottom when radius is an array
	  radius: 0,
	  isAnimationActive: false,
	  isUpdateAnimationActive: false,
	  animationBegin: 0,
	  animationDuration: 1500,
	  animationEasing: 'ease'
	}, _temp2)) || _class;
	
	exports.default = Rectangle;

/***/ },
/* 803 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _class, _class2, _temp; /**
	                             * @fileOverview Polygon
	                             */
	
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(404);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _PureRender = __webpack_require__(746);
	
	var _PureRender2 = _interopRequireDefault(_PureRender);
	
	var _ReactUtils = __webpack_require__(670);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var getPolygonPoints = function getPolygonPoints(points) {
	  return points.reduce(function (result, entry) {
	    if (entry.x === +entry.x && entry.y === +entry.y) {
	      result.push([entry.x, entry.y]);
	    }
	
	    return result;
	  }, []).join(' ');
	};
	
	var Polygon = (0, _PureRender2.default)(_class = (_temp = _class2 = function (_Component) {
	  _inherits(Polygon, _Component);
	
	  function Polygon() {
	    _classCallCheck(this, Polygon);
	
	    return _possibleConstructorReturn(this, (Polygon.__proto__ || Object.getPrototypeOf(Polygon)).apply(this, arguments));
	  }
	
	  _createClass(Polygon, [{
	    key: 'render',
	    value: function render() {
	      var _props = this.props,
	          points = _props.points,
	          className = _props.className;
	
	
	      if (!points || !points.length) {
	        return null;
	      }
	
	      var layerClass = (0, _classnames2.default)('recharts-polygon', className);
	
	      return _react2.default.createElement('polygon', _extends({}, (0, _ReactUtils.getPresentationAttributes)(this.props), (0, _ReactUtils.filterEventAttributes)(this.props), {
	        className: layerClass,
	        points: getPolygonPoints(points)
	      }));
	    }
	  }]);
	
	  return Polygon;
	}(_react.Component), _class2.displayName = 'Polygon', _class2.propTypes = _extends({}, _ReactUtils.PRESENTATION_ATTRIBUTES, {
	  className: _react.PropTypes.string,
	  points: _react.PropTypes.arrayOf(_react.PropTypes.shape({
	    x: _react.PropTypes.number,
	    y: _react.PropTypes.number
	  }))
	}), _temp)) || _class;
	
	exports.default = Polygon;

/***/ },
/* 804 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _class, _class2, _temp; /**
	                             * @fileOverview Dot
	                             */
	
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(404);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _PureRender = __webpack_require__(746);
	
	var _PureRender2 = _interopRequireDefault(_PureRender);
	
	var _ReactUtils = __webpack_require__(670);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var Dot = (0, _PureRender2.default)(_class = (_temp = _class2 = function (_Component) {
	  _inherits(Dot, _Component);
	
	  function Dot() {
	    _classCallCheck(this, Dot);
	
	    return _possibleConstructorReturn(this, (Dot.__proto__ || Object.getPrototypeOf(Dot)).apply(this, arguments));
	  }
	
	  _createClass(Dot, [{
	    key: 'render',
	    value: function render() {
	      var _props = this.props,
	          cx = _props.cx,
	          cy = _props.cy,
	          r = _props.r,
	          className = _props.className;
	
	      var layerClass = (0, _classnames2.default)('recharts-dot', className);
	
	      if (cx === +cx && cy === +cy && r === +r) {
	        return _react2.default.createElement('circle', _extends({}, (0, _ReactUtils.getPresentationAttributes)(this.props), {
	          className: layerClass,
	          cx: cx,
	          cy: cy,
	          r: r
	        }));
	      }
	
	      return null;
	    }
	  }]);
	
	  return Dot;
	}(_react.Component), _class2.displayName = 'Dot', _class2.propTypes = {
	  className: _react.PropTypes.string,
	  cx: _react.PropTypes.number,
	  cy: _react.PropTypes.number,
	  r: _react.PropTypes.number
	}, _temp)) || _class;
	
	exports.default = Dot;

/***/ },
/* 805 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _class, _class2, _temp; /**
	                             * @fileOverview Cross
	                             */
	
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(404);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _PureRender = __webpack_require__(746);
	
	var _PureRender2 = _interopRequireDefault(_PureRender);
	
	var _DataUtils = __webpack_require__(673);
	
	var _ReactUtils = __webpack_require__(670);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var Cross = (0, _PureRender2.default)(_class = (_temp = _class2 = function (_Component) {
	  _inherits(Cross, _Component);
	
	  function Cross() {
	    _classCallCheck(this, Cross);
	
	    return _possibleConstructorReturn(this, (Cross.__proto__ || Object.getPrototypeOf(Cross)).apply(this, arguments));
	  }
	
	  _createClass(Cross, [{
	    key: 'getPath',
	    value: function getPath(x, y, width, height, top, left) {
	      return 'M' + x + ',' + top + 'v' + height + 'M' + left + ',' + y + 'h' + width;
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _props = this.props,
	          x = _props.x,
	          y = _props.y,
	          width = _props.width,
	          height = _props.height,
	          top = _props.top,
	          left = _props.left,
	          className = _props.className;
	
	
	      if (!(0, _DataUtils.isNumber)(x) || !(0, _DataUtils.isNumber)(y) || !(0, _DataUtils.isNumber)(width) || !(0, _DataUtils.isNumber)(height) || !(0, _DataUtils.isNumber)(top) || !(0, _DataUtils.isNumber)(left)) {
	        return null;
	      }
	
	      return _react2.default.createElement('path', _extends({}, (0, _ReactUtils.getPresentationAttributes)(this.props), {
	        className: (0, _classnames2.default)('recharts-cross', className),
	        d: this.getPath(x, y, width, height, top, left)
	      }));
	    }
	  }]);
	
	  return Cross;
	}(_react.Component), _class2.displayName = 'Cross', _class2.propTypes = _extends({}, _ReactUtils.PRESENTATION_ATTRIBUTES, {
	  x: _react.PropTypes.number,
	  y: _react.PropTypes.number,
	  width: _react.PropTypes.number,
	  height: _react.PropTypes.number,
	  top: _react.PropTypes.number,
	  left: _react.PropTypes.number,
	  className: _react.PropTypes.string
	}), _class2.defaultProps = {
	  x: 0,
	  y: 0,
	  top: 0,
	  left: 0,
	  width: 0,
	  height: 0
	}, _temp)) || _class;
	
	exports.default = Cross;

/***/ },
/* 806 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _class, _class2, _temp; /**
	                             * @fileOverview Polar Grid
	                             */
	
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _PureRender = __webpack_require__(746);
	
	var _PureRender2 = _interopRequireDefault(_PureRender);
	
	var _PolarUtils = __webpack_require__(800);
	
	var _ReactUtils = __webpack_require__(670);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var PolarGrid = (0, _PureRender2.default)(_class = (_temp = _class2 = function (_Component) {
	  _inherits(PolarGrid, _Component);
	
	  function PolarGrid() {
	    _classCallCheck(this, PolarGrid);
	
	    return _possibleConstructorReturn(this, (PolarGrid.__proto__ || Object.getPrototypeOf(PolarGrid)).apply(this, arguments));
	  }
	
	  _createClass(PolarGrid, [{
	    key: 'getPolygonPath',
	    value: function getPolygonPath(radius) {
	      var _props = this.props,
	          cx = _props.cx,
	          cy = _props.cy,
	          polarAngles = _props.polarAngles;
	
	
	      var path = '';
	
	      polarAngles.forEach(function (angle, i) {
	        var point = (0, _PolarUtils.polarToCartesian)(cx, cy, radius, angle);
	
	        if (i) {
	          path += 'L ' + point.x + ',' + point.y;
	        } else {
	          path += 'M ' + point.x + ',' + point.y;
	        }
	      });
	      path += 'Z';
	
	      return path;
	    }
	    /**
	     * Draw axis of radial line
	     * @return {[type]} The lines
	     */
	
	  }, {
	    key: 'renderPolarAngles',
	    value: function renderPolarAngles() {
	      var _props2 = this.props,
	          cx = _props2.cx,
	          cy = _props2.cy,
	          innerRadius = _props2.innerRadius,
	          outerRadius = _props2.outerRadius,
	          polarAngles = _props2.polarAngles;
	
	
	      if (!polarAngles || !polarAngles.length) {
	        return null;
	      }
	      var props = _extends({
	        stroke: '#ccc'
	      }, (0, _ReactUtils.getPresentationAttributes)(this.props));
	
	      return _react2.default.createElement(
	        'g',
	        { className: 'recharts-polar-grid-angle' },
	        polarAngles.map(function (entry, i) {
	          var start = (0, _PolarUtils.polarToCartesian)(cx, cy, innerRadius, entry);
	          var end = (0, _PolarUtils.polarToCartesian)(cx, cy, outerRadius, entry);
	
	          return _react2.default.createElement('line', _extends({}, props, {
	            key: 'line-' + i,
	            x1: start.x,
	            y1: start.y,
	            x2: end.x,
	            y2: end.y
	          }));
	        })
	      );
	    }
	    /**
	     * Draw concentric circles
	     * @param {Number} radius The radius of circle
	     * @param {Number} index  The index of circle
	     * @param {Object} extraProps Extra props
	     * @return {ReactElement} circle
	     */
	
	  }, {
	    key: 'renderConcentricCircle',
	    value: function renderConcentricCircle(radius, index, extraProps) {
	      var _props3 = this.props,
	          cx = _props3.cx,
	          cy = _props3.cy;
	
	      var props = _extends({
	        stroke: '#ccc'
	      }, (0, _ReactUtils.getPresentationAttributes)(this.props), {
	        fill: 'none'
	      }, extraProps);
	
	      return _react2.default.createElement('circle', _extends({}, props, {
	        className: 'recharts-polar-grid-concentric-circle',
	        key: 'circle-' + index,
	        cx: cx,
	        cy: cy,
	        r: radius
	      }));
	    }
	    /**
	     * Draw concentric polygons
	     * @param {Number} radius     The radius of polygon
	     * @param {Number} index      The index of polygon
	     * @param {Object} extraProps Extra props
	     * @return {ReactElement} polygon
	     */
	
	  }, {
	    key: 'renderConcentricPolygon',
	    value: function renderConcentricPolygon(radius, index, extraProps) {
	      var props = _extends({
	        stroke: '#ccc'
	      }, (0, _ReactUtils.getPresentationAttributes)(this.props), {
	        fill: 'none'
	      }, extraProps);
	
	      return _react2.default.createElement('path', _extends({}, props, {
	        className: 'recharts-polar-grid-concentric-polygon',
	        key: 'path-' + index,
	        d: this.getPolygonPath(radius)
	      }));
	    }
	
	    /**
	     * Draw concentric axis
	     * @return {ReactElement} Concentric axis
	     * @todo Optimize the name
	     */
	
	  }, {
	    key: 'renderConcentricPath',
	    value: function renderConcentricPath() {
	      var _this2 = this;
	
	      var _props4 = this.props,
	          polarRadius = _props4.polarRadius,
	          gridType = _props4.gridType;
	
	
	      if (!polarRadius || !polarRadius.length) {
	        return null;
	      }
	
	      return _react2.default.createElement(
	        'g',
	        { className: 'recharts-polar-grid-concentric' },
	        polarRadius.map(function (entry, i) {
	          return gridType === 'circle' ? _this2.renderConcentricCircle(entry, i) : _this2.renderConcentricPolygon(entry, i);
	        })
	      );
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var outerRadius = this.props.outerRadius;
	
	
	      if (outerRadius <= 0) {
	        return null;
	      }
	
	      return _react2.default.createElement(
	        'g',
	        { className: 'recharts-polar-grid' },
	        this.renderPolarAngles(),
	        this.renderConcentricPath()
	      );
	    }
	  }]);
	
	  return PolarGrid;
	}(_react.Component), _class2.displayName = 'PolarGrid', _class2.propTypes = _extends({}, _ReactUtils.PRESENTATION_ATTRIBUTES, {
	  cx: _react.PropTypes.number,
	  cy: _react.PropTypes.number,
	  innerRadius: _react.PropTypes.number,
	  outerRadius: _react.PropTypes.number,
	
	  polarAngles: _react.PropTypes.arrayOf(_react.PropTypes.number),
	  polarRadius: _react.PropTypes.arrayOf(_react.PropTypes.number),
	  gridType: _react.PropTypes.oneOf(['polygon', 'circle'])
	}), _class2.defaultProps = {
	  cx: 0,
	  cy: 0,
	  innerRadius: 0,
	  outerRadius: 0,
	  gridType: 'polygon'
	}, _temp)) || _class;
	
	exports.default = PolarGrid;

/***/ },
/* 807 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _maxBy2 = __webpack_require__(808);
	
	var _maxBy3 = _interopRequireDefault(_maxBy2);
	
	var _isFunction2 = __webpack_require__(224);
	
	var _isFunction3 = _interopRequireDefault(_isFunction2);
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _class, _class2, _temp; /**
	                             * @fileOverview The axis of polar coordinate system
	                             */
	
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _PureRender = __webpack_require__(746);
	
	var _PureRender2 = _interopRequireDefault(_PureRender);
	
	var _Text = __webpack_require__(789);
	
	var _Text2 = _interopRequireDefault(_Text);
	
	var _Layer = __webpack_require__(747);
	
	var _Layer2 = _interopRequireDefault(_Layer);
	
	var _ReactUtils = __webpack_require__(670);
	
	var _PolarUtils = __webpack_require__(800);
	
	var _DataUtils = __webpack_require__(673);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var PolarRadiusAxis = (0, _PureRender2.default)(_class = (_temp = _class2 = function (_Component) {
	  _inherits(PolarRadiusAxis, _Component);
	
	  function PolarRadiusAxis() {
	    _classCallCheck(this, PolarRadiusAxis);
	
	    return _possibleConstructorReturn(this, (PolarRadiusAxis.__proto__ || Object.getPrototypeOf(PolarRadiusAxis)).apply(this, arguments));
	  }
	
	  _createClass(PolarRadiusAxis, [{
	    key: 'getTickValueCoord',
	
	
	    /**
	     * Calculate the coordinate of tick
	     * @param  {Object} radius The data of a simple tick
	     * @return {Object} (x, y)
	     */
	    value: function getTickValueCoord(_ref) {
	      var radius = _ref.radius;
	      var _props = this.props,
	          angle = _props.angle,
	          cx = _props.cx,
	          cy = _props.cy;
	
	
	      return (0, _PolarUtils.polarToCartesian)(cx, cy, radius, angle);
	    }
	  }, {
	    key: 'getTickTextAnchor',
	    value: function getTickTextAnchor() {
	      var orientation = this.props.orientation;
	
	      var textAnchor = void 0;
	
	      switch (orientation) {
	        case 'left':
	          textAnchor = 'end';
	          break;
	        case 'right':
	          textAnchor = 'start';
	          break;
	        default:
	          textAnchor = 'middle';
	          break;
	      }
	
	      return textAnchor;
	    }
	  }, {
	    key: 'renderAxisLine',
	    value: function renderAxisLine() {
	      var _props2 = this.props,
	          cx = _props2.cx,
	          cy = _props2.cy,
	          angle = _props2.angle,
	          ticks = _props2.ticks,
	          axisLine = _props2.axisLine,
	          others = _objectWithoutProperties(_props2, ['cx', 'cy', 'angle', 'ticks', 'axisLine']);
	
	      var extent = ticks.reduce(function (result, entry) {
	        return [Math.min(result[0], entry.radius), Math.max(result[1], entry.radius)];
	      }, [Infinity, -Infinity]);
	      var point0 = (0, _PolarUtils.polarToCartesian)(cx, cy, extent[0], angle);
	      var point1 = (0, _PolarUtils.polarToCartesian)(cx, cy, extent[1], angle);
	
	      var props = _extends({}, (0, _ReactUtils.getPresentationAttributes)(others), {
	        fill: 'none'
	      }, (0, _ReactUtils.getPresentationAttributes)(axisLine), {
	        x1: point0.x,
	        y1: point0.y,
	        x2: point1.x,
	        y2: point1.y
	      });
	
	      return _react2.default.createElement('line', _extends({ className: 'recharts-polar-radius-axis-line' }, props));
	    }
	  }, {
	    key: 'renderTickItem',
	    value: function renderTickItem(option, props, value) {
	      var tickItem = void 0;
	
	      if (_react2.default.isValidElement(option)) {
	        tickItem = _react2.default.cloneElement(option, props);
	      } else if ((0, _isFunction3.default)(option)) {
	        tickItem = option(props);
	      } else {
	        tickItem = _react2.default.createElement(
	          _Text2.default,
	          _extends({}, props, {
	            className: 'recharts-polar-radius-axis-tick-value'
	          }),
	          value
	        );
	      }
	
	      return tickItem;
	    }
	  }, {
	    key: 'renderTicks',
	    value: function renderTicks() {
	      var _this2 = this;
	
	      var _props3 = this.props,
	          ticks = _props3.ticks,
	          tick = _props3.tick,
	          angle = _props3.angle,
	          tickFormatter = _props3.tickFormatter,
	          stroke = _props3.stroke,
	          others = _objectWithoutProperties(_props3, ['ticks', 'tick', 'angle', 'tickFormatter', 'stroke']);
	
	      var textAnchor = this.getTickTextAnchor();
	      var axisProps = (0, _ReactUtils.getPresentationAttributes)(others);
	      var customTickProps = (0, _ReactUtils.getPresentationAttributes)(tick);
	
	      var items = ticks.map(function (entry, i) {
	        var coord = _this2.getTickValueCoord(entry);
	        var tickProps = _extends({
	          textAnchor: textAnchor,
	          transform: 'rotate(' + (90 - angle) + ', ' + coord.x + ', ' + coord.y + ')'
	        }, axisProps, {
	          stroke: 'none', fill: stroke
	        }, customTickProps, {
	          index: i
	        }, coord, {
	          payload: entry
	        });
	
	        return _react2.default.createElement(
	          _Layer2.default,
	          _extends({
	            className: 'recharts-polar-radius-axis-tick',
	            key: 'tick-' + i
	          }, (0, _ReactUtils.filterEventsOfChild)(_this2.props, entry, i)),
	          _this2.renderTickItem(tick, tickProps, tickFormatter ? tickFormatter(entry.value) : entry.value)
	        );
	      });
	
	      return _react2.default.createElement(
	        _Layer2.default,
	        { className: 'recharts-polar-radius-axis-ticks' },
	        items
	      );
	    }
	  }, {
	    key: 'renderLabel',
	    value: function renderLabel() {
	      var label = this.props.label;
	
	      var _props4 = this.props,
	          ticks = _props4.ticks,
	          angle = _props4.angle,
	          stroke = _props4.stroke,
	          others = _objectWithoutProperties(_props4, ['ticks', 'angle', 'stroke']);
	
	      var maxRadiusTick = (0, _maxBy3.default)(ticks, function (entry) {
	        return entry.radius || 0;
	      });
	      var radius = maxRadiusTick.radius || 0;
	      var coord = this.getTickValueCoord({ radius: radius + 10 });
	      var props = _extends({}, others, {
	        stroke: 'none',
	        fill: stroke
	      }, coord, {
	        textAnchor: 'middle',
	        transform: 'rotate(' + (90 - angle) + ', ' + coord.x + ', ' + coord.y + ')'
	      });
	
	      if (_react2.default.isValidElement(label)) {
	        return _react2.default.cloneElement(label, props);
	      } else if ((0, _isFunction3.default)(label)) {
	        return label(props);
	      } else if ((0, _DataUtils.isNumOrStr)(label)) {
	        return _react2.default.createElement(
	          _Layer2.default,
	          { className: 'recharts-polar-radius-axis-label' },
	          _react2.default.createElement(
	            _Text2.default,
	            props,
	            label
	          )
	        );
	      }
	
	      return null;
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _props5 = this.props,
	          ticks = _props5.ticks,
	          axisLine = _props5.axisLine,
	          tick = _props5.tick;
	
	
	      if (!ticks || !ticks.length) {
	        return null;
	      }
	
	      return _react2.default.createElement(
	        _Layer2.default,
	        { className: 'recharts-polar-radius-axis' },
	        axisLine && this.renderAxisLine(),
	        tick && this.renderTicks(),
	        this.renderLabel()
	      );
	    }
	  }]);
	
	  return PolarRadiusAxis;
	}(_react.Component), _class2.displayName = 'PolarRadiusAxis', _class2.propTypes = _extends({}, _ReactUtils.PRESENTATION_ATTRIBUTES, _ReactUtils.EVENT_ATTRIBUTES, {
	  cx: _react.PropTypes.number,
	  cy: _react.PropTypes.number,
	  hide: _react.PropTypes.bool,
	
	  angle: _react.PropTypes.number,
	  tickCount: _react.PropTypes.number,
	  ticks: _react.PropTypes.arrayOf(_react.PropTypes.shape({
	    value: _react.PropTypes.any,
	    radius: _react.PropTypes.value
	  })),
	  orientation: _react.PropTypes.oneOf(['left', 'right', 'middle']),
	  axisLine: _react.PropTypes.oneOfType([_react.PropTypes.bool, _react.PropTypes.object]),
	  label: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.string, _react.PropTypes.element, _react.PropTypes.func]),
	  tick: _react.PropTypes.oneOfType([_react.PropTypes.bool, _react.PropTypes.object, _react.PropTypes.element, _react.PropTypes.func]),
	  stroke: _react.PropTypes.string,
	  tickFormatter: _react.PropTypes.func,
	  domain: _react.PropTypes.arrayOf(_react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.oneOf(['auto', 'dataMin', 'dataMax'])])),
	  scale: _react.PropTypes.oneOfType([_react.PropTypes.oneOf(['auto', 'linear', 'pow', 'sqrt', 'log', 'identity', 'time', 'band', 'point', 'ordinal', 'quantile', 'quantize', 'utcTime', 'sequential', 'threshold']), _react.PropTypes.func]),
	  allowDataOverflow: _react.PropTypes.bool
	}), _class2.defaultProps = {
	  cx: 0,
	  cy: 0,
	  angle: 0,
	  orientation: 'right',
	  stroke: '#ccc',
	  axisLine: true,
	  tick: true,
	  tickCount: 5,
	  domain: [0, 'auto'],
	  allowDataOverflow: false,
	  scale: 'auto'
	}, _temp)) || _class;
	
	exports.default = PolarRadiusAxis;

/***/ },
/* 808 */
/***/ function(module, exports, __webpack_require__) {

	var baseExtremum = __webpack_require__(809),
	    baseGt = __webpack_require__(810),
	    baseIteratee = __webpack_require__(691);
	
	/**
	 * This method is like `_.max` except that it accepts `iteratee` which is
	 * invoked for each element in `array` to generate the criterion by which
	 * the value is ranked. The iteratee is invoked with one argument: (value).
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Math
	 * @param {Array} array The array to iterate over.
	 * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
	 * @returns {*} Returns the maximum value.
	 * @example
	 *
	 * var objects = [{ 'n': 1 }, { 'n': 2 }];
	 *
	 * _.maxBy(objects, function(o) { return o.n; });
	 * // => { 'n': 2 }
	 *
	 * // The `_.property` iteratee shorthand.
	 * _.maxBy(objects, 'n');
	 * // => { 'n': 2 }
	 */
	function maxBy(array, iteratee) {
	  return (array && array.length)
	    ? baseExtremum(array, baseIteratee(iteratee, 2), baseGt)
	    : undefined;
	}
	
	module.exports = maxBy;


/***/ },
/* 809 */
/***/ function(module, exports, __webpack_require__) {

	var isSymbol = __webpack_require__(678);
	
	/**
	 * The base implementation of methods like `_.max` and `_.min` which accepts a
	 * `comparator` to determine the extremum value.
	 *
	 * @private
	 * @param {Array} array The array to iterate over.
	 * @param {Function} iteratee The iteratee invoked per iteration.
	 * @param {Function} comparator The comparator used to compare values.
	 * @returns {*} Returns the extremum value.
	 */
	function baseExtremum(array, iteratee, comparator) {
	  var index = -1,
	      length = array.length;
	
	  while (++index < length) {
	    var value = array[index],
	        current = iteratee(value);
	
	    if (current != null && (computed === undefined
	          ? (current === current && !isSymbol(current))
	          : comparator(current, computed)
	        )) {
	      var computed = current,
	          result = value;
	    }
	  }
	  return result;
	}
	
	module.exports = baseExtremum;


/***/ },
/* 810 */
/***/ function(module, exports) {

	/**
	 * The base implementation of `_.gt` which doesn't coerce arguments.
	 *
	 * @private
	 * @param {*} value The value to compare.
	 * @param {*} other The other value to compare.
	 * @returns {boolean} Returns `true` if `value` is greater than `other`,
	 *  else `false`.
	 */
	function baseGt(value, other) {
	  return value > other;
	}
	
	module.exports = baseGt;


/***/ },
/* 811 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _isFunction2 = __webpack_require__(224);
	
	var _isFunction3 = _interopRequireDefault(_isFunction2);
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _class, _class2, _temp; /**
	                             * @fileOverview Axis of radial direction
	                             */
	
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _PureRender = __webpack_require__(746);
	
	var _PureRender2 = _interopRequireDefault(_PureRender);
	
	var _Layer = __webpack_require__(747);
	
	var _Layer2 = _interopRequireDefault(_Layer);
	
	var _ReactUtils = __webpack_require__(670);
	
	var _Dot = __webpack_require__(804);
	
	var _Dot2 = _interopRequireDefault(_Dot);
	
	var _Polygon = __webpack_require__(803);
	
	var _Polygon2 = _interopRequireDefault(_Polygon);
	
	var _Text = __webpack_require__(789);
	
	var _Text2 = _interopRequireDefault(_Text);
	
	var _PolarUtils = __webpack_require__(800);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var RADIAN = Math.PI / 180;
	var eps = 1e-5;
	
	var PolarAngleAxis = (0, _PureRender2.default)(_class = (_temp = _class2 = function (_Component) {
	  _inherits(PolarAngleAxis, _Component);
	
	  function PolarAngleAxis() {
	    _classCallCheck(this, PolarAngleAxis);
	
	    return _possibleConstructorReturn(this, (PolarAngleAxis.__proto__ || Object.getPrototypeOf(PolarAngleAxis)).apply(this, arguments));
	  }
	
	  _createClass(PolarAngleAxis, [{
	    key: 'getTickLineCoord',
	
	
	    /**
	     * Calculate the coordinate of line endpoint
	     * @param  {Object} data The Data if ticks
	     * @return {Object} (x0, y0): The start point of text,
	     *                  (x1, y1): The end point close to text,
	     *                  (x2, y2): The end point close to axis
	     */
	    value: function getTickLineCoord(data) {
	      var _props = this.props,
	          cx = _props.cx,
	          cy = _props.cy,
	          radius = _props.radius,
	          orientation = _props.orientation,
	          tickLine = _props.tickLine;
	
	      var tickLineSize = tickLine && tickLine.size || 8;
	      var p1 = (0, _PolarUtils.polarToCartesian)(cx, cy, radius, data.angle);
	      var p2 = (0, _PolarUtils.polarToCartesian)(cx, cy, radius + (orientation === 'inner' ? -1 : 1) * tickLineSize, data.angle);
	
	      return { x1: p1.x, y1: p1.y, x2: p2.x, y2: p2.y };
	    }
	    /**
	     * Get the text-anchor of each tick
	     * @param  {Object} data Data of ticks
	     * @return {String} text-anchor
	     */
	
	  }, {
	    key: 'getTickTextAnchor',
	    value: function getTickTextAnchor(data) {
	      var orientation = this.props.orientation;
	
	      var cos = Math.cos(-data.angle * RADIAN);
	      var textAnchor = void 0;
	
	      if (cos > eps) {
	        textAnchor = orientation === 'outer' ? 'start' : 'end';
	      } else if (cos < -eps) {
	        textAnchor = orientation === 'outer' ? 'end' : 'start';
	      } else {
	        textAnchor = 'middle';
	      }
	
	      return textAnchor;
	    }
	  }, {
	    key: 'renderAxisLine',
	    value: function renderAxisLine() {
	      var _props2 = this.props,
	          cx = _props2.cx,
	          cy = _props2.cy,
	          radius = _props2.radius,
	          axisLine = _props2.axisLine,
	          axisLineType = _props2.axisLineType;
	
	      var props = _extends({}, (0, _ReactUtils.getPresentationAttributes)(this.props), {
	        fill: 'none'
	      }, (0, _ReactUtils.getPresentationAttributes)(axisLine));
	
	      if (axisLineType === 'circle') {
	        return _react2.default.createElement(_Dot2.default, _extends({
	          className: 'recharts-polar-angle-axis-line'
	        }, props, {
	          cx: cx,
	          cy: cy,
	          r: radius
	        }));
	      }
	      var ticks = this.props.ticks;
	
	      var points = ticks.map(function (entry) {
	        return (0, _PolarUtils.polarToCartesian)(cx, cy, radius, entry.angle);
	      });
	
	      return _react2.default.createElement(_Polygon2.default, _extends({ className: 'recharts-polar-angle-axis-line' }, props, { points: points }));
	    }
	  }, {
	    key: 'renderTickItem',
	    value: function renderTickItem(option, props, value) {
	      var tickItem = void 0;
	
	      if (_react2.default.isValidElement(option)) {
	        tickItem = _react2.default.cloneElement(option, props);
	      } else if ((0, _isFunction3.default)(option)) {
	        tickItem = option(props);
	      } else {
	        tickItem = _react2.default.createElement(
	          _Text2.default,
	          _extends({}, props, {
	            className: 'recharts-polar-angle-axis-tick-value'
	          }),
	          value
	        );
	      }
	
	      return tickItem;
	    }
	  }, {
	    key: 'renderTicks',
	    value: function renderTicks() {
	      var _this2 = this;
	
	      var _props3 = this.props,
	          ticks = _props3.ticks,
	          tick = _props3.tick,
	          tickLine = _props3.tickLine,
	          tickFormatter = _props3.tickFormatter,
	          stroke = _props3.stroke;
	
	      var axisProps = (0, _ReactUtils.getPresentationAttributes)(this.props);
	      var customTickProps = (0, _ReactUtils.getPresentationAttributes)(tick);
	      var tickLineProps = _extends({}, axisProps, { fill: 'none' }, (0, _ReactUtils.getPresentationAttributes)(tickLine));
	
	      var items = ticks.map(function (entry, i) {
	        var lineCoord = _this2.getTickLineCoord(entry);
	        var textAnchor = _this2.getTickTextAnchor(entry);
	        var tickProps = _extends({
	          textAnchor: textAnchor
	        }, axisProps, {
	          stroke: 'none', fill: stroke
	        }, customTickProps, {
	          index: i, payload: entry,
	          x: lineCoord.x2, y: lineCoord.y2
	        });
	
	        return _react2.default.createElement(
	          _Layer2.default,
	          _extends({
	            className: 'recharts-polar-angle-axis-tick',
	            key: 'tick-' + i
	          }, (0, _ReactUtils.filterEventsOfChild)(_this2.props, entry, i)),
	          tickLine && _react2.default.createElement('line', _extends({
	            className: 'recharts-polar-angle-axis-tick-line'
	          }, tickLineProps, lineCoord)),
	          tick && _this2.renderTickItem(tick, tickProps, tickFormatter ? tickFormatter(entry.value) : entry.value)
	        );
	      });
	
	      return _react2.default.createElement(
	        _Layer2.default,
	        { className: 'recharts-polar-angle-axis-ticks' },
	        items
	      );
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _props4 = this.props,
	          ticks = _props4.ticks,
	          radius = _props4.radius,
	          axisLine = _props4.axisLine;
	
	
	      if (radius <= 0 || !ticks || !ticks.length) {
	        return null;
	      }
	
	      return _react2.default.createElement(
	        _Layer2.default,
	        { className: 'recharts-polar-angle-axis' },
	        axisLine && this.renderAxisLine(),
	        this.renderTicks()
	      );
	    }
	  }]);
	
	  return PolarAngleAxis;
	}(_react.Component), _class2.displayName = 'PolarAngleAxis', _class2.propTypes = _extends({}, _ReactUtils.PRESENTATION_ATTRIBUTES, _ReactUtils.EVENT_ATTRIBUTES, {
	  dataKey: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.string, _react.PropTypes.func]),
	  cx: _react.PropTypes.number,
	  cy: _react.PropTypes.number,
	  radius: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.string]),
	  hide: _react.PropTypes.bool,
	
	  axisLine: _react.PropTypes.oneOfType([_react.PropTypes.bool, _react.PropTypes.object]),
	  axisLineType: _react.PropTypes.oneOf(['polygon', 'circle']),
	  tickLine: _react.PropTypes.oneOfType([_react.PropTypes.bool, _react.PropTypes.object]),
	  tick: _react.PropTypes.oneOfType([_react.PropTypes.bool, _react.PropTypes.func, _react.PropTypes.object, _react.PropTypes.element]),
	
	  ticks: _react.PropTypes.arrayOf(_react.PropTypes.shape({
	    value: _react.PropTypes.any,
	    angle: _react.PropTypes.number
	  })),
	  stroke: _react.PropTypes.string,
	  orientation: _react.PropTypes.oneOf(['inner', 'outer']),
	  tickFormatter: _react.PropTypes.func
	}), _class2.defaultProps = {
	  cx: 0,
	  cy: 0,
	  orientation: 'outer',
	  axisLine: true,
	  tickLine: true,
	  tick: true,
	  hide: false
	}, _temp)) || _class;
	
	exports.default = PolarAngleAxis;

/***/ },
/* 812 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _isPlainObject2 = __webpack_require__(181);
	
	var _isPlainObject3 = _interopRequireDefault(_isPlainObject2);
	
	var _isFunction2 = __webpack_require__(224);
	
	var _isFunction3 = _interopRequireDefault(_isFunction2);
	
	var _uniqueId2 = __webpack_require__(813);
	
	var _uniqueId3 = _interopRequireDefault(_uniqueId2);
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _class, _class2, _temp2; /**
	                              * @fileOverview Render sectors of a pie
	                              */
	
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactSmooth = __webpack_require__(754);
	
	var _reactSmooth2 = _interopRequireDefault(_reactSmooth);
	
	var _classnames = __webpack_require__(404);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _PureRender = __webpack_require__(746);
	
	var _PureRender2 = _interopRequireDefault(_PureRender);
	
	var _Layer = __webpack_require__(747);
	
	var _Layer2 = _interopRequireDefault(_Layer);
	
	var _Sector = __webpack_require__(799);
	
	var _Sector2 = _interopRequireDefault(_Sector);
	
	var _Curve = __webpack_require__(801);
	
	var _Curve2 = _interopRequireDefault(_Curve);
	
	var _Text = __webpack_require__(789);
	
	var _Text2 = _interopRequireDefault(_Text);
	
	var _ReactUtils = __webpack_require__(670);
	
	var _PolarUtils = __webpack_require__(800);
	
	var _AnimationDecorator = __webpack_require__(814);
	
	var _AnimationDecorator2 = _interopRequireDefault(_AnimationDecorator);
	
	var _DataUtils = __webpack_require__(673);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var Pie = (0, _AnimationDecorator2.default)(_class = (0, _PureRender2.default)(_class = (_temp2 = _class2 = function (_Component) {
	  _inherits(Pie, _Component);
	
	  function Pie() {
	    var _ref;
	
	    var _temp, _this, _ret;
	
	    _classCallCheck(this, Pie);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Pie.__proto__ || Object.getPrototypeOf(Pie)).call.apply(_ref, [this].concat(args))), _this), _this.state = { isAnimationFinished: false }, _this.id = (0, _uniqueId3.default)('recharts-pie-'), _this.handleAnimationEnd = function () {
	      _this.setState({
	        isAnimationFinished: true
	      });
	    }, _temp), _possibleConstructorReturn(_this, _ret);
	  }
	
	  _createClass(Pie, [{
	    key: 'getDeltaAngle',
	    value: function getDeltaAngle() {
	      var _props = this.props,
	          startAngle = _props.startAngle,
	          endAngle = _props.endAngle;
	
	      var sign = Math.sign(endAngle - startAngle);
	      var deltaAngle = Math.min(Math.abs(endAngle - startAngle), 360);
	
	      return sign * deltaAngle;
	    }
	  }, {
	    key: 'getSectors',
	    value: function getSectors(data) {
	      var _props2 = this.props,
	          cx = _props2.cx,
	          cy = _props2.cy,
	          innerRadius = _props2.innerRadius,
	          outerRadius = _props2.outerRadius,
	          cornerRadius = _props2.cornerRadius,
	          startAngle = _props2.startAngle,
	          paddingAngle = _props2.paddingAngle,
	          minAngle = _props2.minAngle,
	          nameKey = _props2.nameKey,
	          valueKey = _props2.valueKey;
	
	      var len = data.length;
	      var deltaAngle = this.getDeltaAngle();
	      var absDeltaAngle = Math.abs(deltaAngle);
	      var totalPadingAngle = (absDeltaAngle >= 360 ? len : len - 1) * paddingAngle;
	      var sum = data.reduce(function (result, entry) {
	        return result + (0, _DataUtils.getValueByDataKey)(entry, valueKey, 0);
	      }, 0);
	
	      var sectors = [];
	      var prev = void 0;
	
	      if (sum > 0) {
	        sectors = data.map(function (entry, i) {
	          var percent = (0, _DataUtils.getValueByDataKey)(entry, valueKey, 0) / sum;
	
	          var tempStartAngle = void 0;
	
	          if (i) {
	            tempStartAngle = (deltaAngle < 0 ? prev.endAngle : prev.startAngle) + Math.sign(deltaAngle) * paddingAngle;
	          } else {
	            tempStartAngle = startAngle;
	          }
	
	          var tempEndAngle = tempStartAngle + Math.sign(deltaAngle) * (minAngle + percent * (absDeltaAngle - len * minAngle - totalPadingAngle));
	
	          prev = _extends({
	            percent: percent,
	            cornerRadius: cornerRadius
	          }, entry, {
	            cx: cx,
	            cy: cy,
	            innerRadius: innerRadius,
	            outerRadius: outerRadius,
	            name: (0, _DataUtils.getValueByDataKey)(entry, nameKey),
	            value: (0, _DataUtils.getValueByDataKey)(entry, valueKey),
	            startAngle: deltaAngle < 0 ? tempStartAngle : tempEndAngle,
	            endAngle: deltaAngle < 0 ? tempEndAngle : tempStartAngle,
	            midAngle: (tempStartAngle + tempEndAngle) / 2
	          });
	
	          return prev;
	        });
	      }
	
	      return sectors;
	    }
	  }, {
	    key: 'getTextAnchor',
	    value: function getTextAnchor(x, cx) {
	      if (x > cx) {
	        return 'start';
	      } else if (x < cx) {
	        return 'end';
	      }
	
	      return 'middle';
	    }
	  }, {
	    key: 'isActiveIndex',
	    value: function isActiveIndex(i) {
	      var activeIndex = this.props.activeIndex;
	
	
	      if (Array.isArray(activeIndex)) {
	        return activeIndex.indexOf(i) !== -1;
	      }
	
	      return i === activeIndex;
	    }
	  }, {
	    key: 'renderClipPath',
	    value: function renderClipPath() {
	      var _props3 = this.props,
	          cx = _props3.cx,
	          cy = _props3.cy,
	          maxRadius = _props3.maxRadius,
	          startAngle = _props3.startAngle,
	          isAnimationActive = _props3.isAnimationActive,
	          animationDuration = _props3.animationDuration,
	          animationEasing = _props3.animationEasing,
	          animationBegin = _props3.animationBegin,
	          animationId = _props3.animationId;
	
	
	      return _react2.default.createElement(
	        'defs',
	        null,
	        _react2.default.createElement(
	          'clipPath',
	          { id: this.id },
	          _react2.default.createElement(
	            _reactSmooth2.default,
	            {
	              easing: animationEasing,
	              isActive: isAnimationActive,
	              duration: animationDuration,
	              key: animationId,
	              animationBegin: animationBegin,
	              onAnimationEnd: this.handleAnimationEnd,
	              from: {
	                endAngle: startAngle
	              },
	              to: {
	                outerRadius: Math.max(this.props.outerRadius, maxRadius || 0),
	                innerRadius: 0,
	                endAngle: this.props.endAngle
	              }
	            },
	            function (_ref2) {
	              var outerRadius = _ref2.outerRadius,
	                  innerRadius = _ref2.innerRadius,
	                  endAngle = _ref2.endAngle;
	              return _react2.default.createElement(_Sector2.default, {
	                cx: cx,
	                cy: cy,
	                outerRadius: outerRadius,
	                innerRadius: innerRadius,
	                startAngle: startAngle,
	                endAngle: endAngle
	              });
	            }
	          )
	        )
	      );
	    }
	  }, {
	    key: 'renderLabelLineItem',
	    value: function renderLabelLineItem(option, props) {
	      if (_react2.default.isValidElement(option)) {
	        return _react2.default.cloneElement(option, props);
	      } else if ((0, _isFunction3.default)(option)) {
	        return option(props);
	      }
	
	      return _react2.default.createElement(_Curve2.default, _extends({}, props, { type: 'linear', className: 'recharts-pie-label-line' }));
	    }
	  }, {
	    key: 'renderLabelItem',
	    value: function renderLabelItem(option, props, value) {
	      if (_react2.default.isValidElement(option)) {
	        return _react2.default.cloneElement(option, props);
	      }
	      var label = value;
	      if ((0, _isFunction3.default)(option)) {
	        label = option(props);
	        if (_react2.default.isValidElement(label)) {
	          return label;
	        }
	      }
	
	      return _react2.default.createElement(
	        _Text2.default,
	        _extends({}, props, {
	          alignmentBaseline: 'middle',
	          className: 'recharts-pie-label-text'
	        }),
	        label
	      );
	    }
	  }, {
	    key: 'renderLabels',
	    value: function renderLabels(sectors) {
	      var _this2 = this;
	
	      var isAnimationActive = this.props.isAnimationActive;
	
	
	      if (isAnimationActive && !this.state.isAnimationFinished) {
	        return null;
	      }
	      var _props4 = this.props,
	          label = _props4.label,
	          labelLine = _props4.labelLine,
	          valueKey = _props4.valueKey;
	
	      var pieProps = (0, _ReactUtils.getPresentationAttributes)(this.props);
	      var customLabelProps = (0, _ReactUtils.getPresentationAttributes)(label);
	      var customLabelLineProps = (0, _ReactUtils.getPresentationAttributes)(labelLine);
	      var offsetRadius = label && label.offsetRadius || 20;
	
	      var labels = sectors.map(function (entry, i) {
	        var midAngle = (entry.startAngle + entry.endAngle) / 2;
	        var endPoint = (0, _PolarUtils.polarToCartesian)(entry.cx, entry.cy, entry.outerRadius + offsetRadius, midAngle);
	        var labelProps = _extends({}, pieProps, entry, {
	          stroke: 'none'
	        }, customLabelProps, {
	          index: i,
	          textAnchor: _this2.getTextAnchor(endPoint.x, entry.cx)
	        }, endPoint);
	        var lineProps = _extends({}, pieProps, entry, {
	          fill: 'none',
	          stroke: entry.fill
	        }, customLabelLineProps, {
	          points: [(0, _PolarUtils.polarToCartesian)(entry.cx, entry.cy, entry.outerRadius, midAngle), endPoint]
	        });
	
	        return _react2.default.createElement(
	          _Layer2.default,
	          { key: 'label-' + i },
	          labelLine && _this2.renderLabelLineItem(labelLine, lineProps),
	          _this2.renderLabelItem(label, labelProps, (0, _DataUtils.getValueByDataKey)(entry, valueKey))
	        );
	      });
	
	      return _react2.default.createElement(
	        _Layer2.default,
	        { className: 'recharts-pie-labels' },
	        labels
	      );
	    }
	  }, {
	    key: 'renderSectorItem',
	    value: function renderSectorItem(option, props) {
	      if (_react2.default.isValidElement(option)) {
	        return _react2.default.cloneElement(option, props);
	      } else if ((0, _isFunction3.default)(option)) {
	        return option(props);
	      } else if ((0, _isPlainObject3.default)(option)) {
	        return _react2.default.createElement(_Sector2.default, _extends({}, props, option));
	      }
	
	      return _react2.default.createElement(_Sector2.default, props);
	    }
	  }, {
	    key: 'renderSectors',
	    value: function renderSectors(sectors) {
	      var _this3 = this;
	
	      var activeShape = this.props.activeShape;
	
	
	      return sectors.map(function (entry, i) {
	        return _react2.default.createElement(
	          _Layer2.default,
	          _extends({
	            className: 'recharts-pie-sector'
	          }, (0, _ReactUtils.filterEventsOfChild)(_this3.props, entry, i), {
	            key: 'sector-' + i
	          }),
	          _this3.renderSectorItem(_this3.isActiveIndex(i) ? activeShape : null, entry)
	        );
	      });
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _props5 = this.props,
	          data = _props5.data,
	          composedData = _props5.composedData,
	          className = _props5.className,
	          label = _props5.label,
	          cx = _props5.cx,
	          cy = _props5.cy,
	          innerRadius = _props5.innerRadius,
	          outerRadius = _props5.outerRadius;
	
	      var pieData = composedData || data;
	
	      if (!pieData || !pieData.length || !(0, _DataUtils.isNumber)(cx) || !(0, _DataUtils.isNumber)(cy) || !(0, _DataUtils.isNumber)(innerRadius) || !(0, _DataUtils.isNumber)(outerRadius)) {
	        return null;
	      }
	
	      var sectors = this.getSectors(pieData);
	      var layerClass = (0, _classnames2.default)('recharts-pie', className);
	
	      return _react2.default.createElement(
	        _Layer2.default,
	        { className: layerClass },
	        this.renderClipPath(),
	        _react2.default.createElement(
	          'g',
	          { clipPath: 'url(#' + this.id + ')' },
	          this.renderSectors(sectors)
	        ),
	        label && this.renderLabels(sectors)
	      );
	    }
	  }]);
	
	  return Pie;
	}(_react.Component), _class2.displayName = 'Pie', _class2.propTypes = _extends({}, _ReactUtils.PRESENTATION_ATTRIBUTES, _ReactUtils.EVENT_ATTRIBUTES, {
	  className: _react.PropTypes.string,
	  animationId: _react.PropTypes.number,
	  cx: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.string]),
	  cy: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.string]),
	  startAngle: _react.PropTypes.number,
	  endAngle: _react.PropTypes.number,
	  paddingAngle: _react.PropTypes.number,
	  innerRadius: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.string]),
	  outerRadius: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.string]),
	  cornerRadius: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.string]),
	  nameKey: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.string]),
	  valueKey: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.string]),
	  data: _react.PropTypes.arrayOf(_react.PropTypes.object),
	  composedData: _react.PropTypes.arrayOf(_react.PropTypes.object),
	  minAngle: _react.PropTypes.number,
	  legendType: _react.PropTypes.oneOf(['line', 'square', 'rect', 'circle', 'cross', 'diamond', 'square', 'star', 'triangle', 'wye']),
	  maxRadius: _react.PropTypes.number,
	
	  labelLine: _react.PropTypes.oneOfType([_react.PropTypes.object, _react.PropTypes.func, _react.PropTypes.element, _react.PropTypes.bool]),
	  label: _react.PropTypes.oneOfType([_react.PropTypes.shape({
	    offsetRadius: _react.PropTypes.number
	  }), _react.PropTypes.func, _react.PropTypes.element, _react.PropTypes.bool]),
	  activeShape: _react.PropTypes.oneOfType([_react.PropTypes.object, _react.PropTypes.func, _react.PropTypes.element]),
	  activeIndex: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.arrayOf(_react.PropTypes.number)]),
	
	  isAnimationActive: _react.PropTypes.bool,
	  animationBegin: _react.PropTypes.number,
	  animationDuration: _react.PropTypes.number,
	  animationEasing: _react.PropTypes.oneOf(['ease', 'ease-in', 'ease-out', 'ease-in-out', 'spring', 'linear'])
	}), _class2.defaultProps = {
	  stroke: '#fff',
	  fill: '#808080',
	  legendType: 'rect',
	  // The abscissa of pole
	  cx: '50%',
	  // The ordinate of pole
	  cy: '50%',
	  // The start angle of first sector
	  startAngle: 0,
	  // The direction of drawing sectors
	  endAngle: 360,
	  // The inner radius of sectors
	  innerRadius: 0,
	  // The outer radius of sectors
	  outerRadius: '80%',
	  paddingAngle: 0,
	  nameKey: 'name',
	  valueKey: 'value',
	  labelLine: true,
	  data: [],
	  minAngle: 0,
	  isAnimationActive: !(0, _ReactUtils.isSsr)(),
	  animationBegin: 400,
	  animationDuration: 1500,
	  animationEasing: 'ease'
	}, _temp2)) || _class) || _class;
	
	exports.default = Pie;

/***/ },
/* 813 */
/***/ function(module, exports, __webpack_require__) {

	var toString = __webpack_require__(682);
	
	/** Used to generate unique IDs. */
	var idCounter = 0;
	
	/**
	 * Generates a unique ID. If `prefix` is given, the ID is appended to it.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Util
	 * @param {string} [prefix=''] The value to prefix the ID with.
	 * @returns {string} Returns the unique ID.
	 * @example
	 *
	 * _.uniqueId('contact_');
	 * // => 'contact_104'
	 *
	 * _.uniqueId();
	 * // => '105'
	 */
	function uniqueId(prefix) {
	  var id = ++idCounter;
	  return toString(prefix) + id;
	}
	
	module.exports = uniqueId;


/***/ },
/* 814 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	exports.default = function (WrappedComponent) {
	  var _class, _temp2;
	
	  var AnimationDecorator = (_temp2 = _class = function (_Component) {
	    _inherits(AnimationDecorator, _Component);
	
	    function AnimationDecorator() {
	      var _ref;
	
	      var _temp, _this, _ret;
	
	      _classCallCheck(this, AnimationDecorator);
	
	      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	        args[_key] = arguments[_key];
	      }
	
	      return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = AnimationDecorator.__proto__ || Object.getPrototypeOf(AnimationDecorator)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
	        animationId: 0
	      }, _temp), _possibleConstructorReturn(_this, _ret);
	    }
	
	    _createClass(AnimationDecorator, [{
	      key: 'componentWillReceiveProps',
	      value: function componentWillReceiveProps(nextProps) {
	        var animationId = this.state.animationId;
	
	
	        if (this.props.data !== nextProps.data) {
	          this.setState({
	            animationId: animationId + 1
	          });
	        }
	      }
	    }, {
	      key: 'render',
	      value: function render() {
	        return _react2.default.createElement(WrappedComponent, _extends({}, this.props, { animationId: this.state.animationId }));
	      }
	    }]);
	
	    return AnimationDecorator;
	  }(_react.Component), _class.displayName = 'AnimationDecorator(' + (0, _ReactUtils.getDisplayName)(WrappedComponent) + ')', _class.propTypes = _extends({}, WrappedComponent.propTypes, {
	    data: _react.PropTypes.array
	  }), _class.WrappedComponent = WrappedComponent, _class.defaultProps = WrappedComponent.defaultProps, _temp2);
	
	
	  return AnimationDecorator;
	};
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _ReactUtils = __webpack_require__(670);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/***/ },
/* 815 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _isFunction2 = __webpack_require__(224);
	
	var _isFunction3 = _interopRequireDefault(_isFunction2);
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _class, _class2, _temp2; /**
	                              * @fileOverview Radar
	                              */
	
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactSmooth = __webpack_require__(754);
	
	var _reactSmooth2 = _interopRequireDefault(_reactSmooth);
	
	var _classnames = __webpack_require__(404);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _PureRender = __webpack_require__(746);
	
	var _PureRender2 = _interopRequireDefault(_PureRender);
	
	var _ReactUtils = __webpack_require__(670);
	
	var _Polygon = __webpack_require__(803);
	
	var _Polygon2 = _interopRequireDefault(_Polygon);
	
	var _Dot = __webpack_require__(804);
	
	var _Dot2 = _interopRequireDefault(_Dot);
	
	var _Layer = __webpack_require__(747);
	
	var _Layer2 = _interopRequireDefault(_Layer);
	
	var _Text = __webpack_require__(789);
	
	var _Text2 = _interopRequireDefault(_Text);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var Radar = (0, _PureRender2.default)(_class = (_temp2 = _class2 = function (_Component) {
	  _inherits(Radar, _Component);
	
	  function Radar() {
	    var _ref;
	
	    var _temp, _this, _ret;
	
	    _classCallCheck(this, Radar);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Radar.__proto__ || Object.getPrototypeOf(Radar)).call.apply(_ref, [this].concat(args))), _this), _this.handleMouseEnter = function (e) {
	      var onMouseEnter = _this.props.onMouseEnter;
	
	
	      if (onMouseEnter) {
	        onMouseEnter(_this.props, e);
	      }
	    }, _this.handleMouseLeave = function (e) {
	      var onMouseLeave = _this.props.onMouseLeave;
	
	
	      if (onMouseLeave) {
	        onMouseLeave(_this.props, e);
	      }
	    }, _temp), _possibleConstructorReturn(_this, _ret);
	  }
	
	  _createClass(Radar, [{
	    key: 'renderPolygon',
	    value: function renderPolygon() {
	      /* eslint-disable no-unused-vars */
	      var _props = this.props,
	          shape = _props.shape,
	          points = _props.points,
	          animationDuration = _props.animationDuration,
	          animationEasing = _props.animationEasing,
	          animationBegin = _props.animationBegin,
	          isAnimationActive = _props.isAnimationActive,
	          animationId = _props.animationId,
	          dataKey = _props.dataKey,
	          className = _props.className,
	          others = _objectWithoutProperties(_props, ['shape', 'points', 'animationDuration', 'animationEasing', 'animationBegin', 'isAnimationActive', 'animationId', 'dataKey', 'className']);
	      /* eslint-enable no-unused-vars */
	
	      if (_react2.default.isValidElement(shape)) {
	        return _react2.default.cloneElement(shape, _extends({}, others, { points: points }));
	      } else if ((0, _isFunction3.default)(shape)) {
	        return shape(this.props);
	      }
	
	      var point = points[0];
	      var transformPoints = points.map(function (p) {
	        return { x: p.x - point.cx, y: p.y - point.cy };
	      });
	
	      return _react2.default.createElement(
	        _Layer2.default,
	        { className: 'recharts-radar-polygon', transform: 'translate(' + point.cx + ', ' + point.cy + ')' },
	        _react2.default.createElement(
	          _reactSmooth2.default,
	          {
	            from: 'scale(0)',
	            to: 'scale(1)',
	            attributeName: 'transform',
	            isActive: isAnimationActive,
	            begin: animationBegin,
	            easing: animationEasing,
	            duration: animationDuration,
	            key: animationId
	          },
	          _react2.default.createElement(_Polygon2.default, _extends({
	            onMouseEnter: this.handleMouseEnter,
	            onMouseLeave: this.handleMouseLeave
	          }, (0, _ReactUtils.getPresentationAttributes)(this.props), {
	            points: transformPoints
	          }))
	        )
	      );
	    }
	  }, {
	    key: 'renderLabelItem',
	    value: function renderLabelItem(option, props, value) {
	      var labelItem = void 0;
	
	      if (_react2.default.isValidElement(option)) {
	        labelItem = _react2.default.cloneElement(option, props);
	      } else if ((0, _isFunction3.default)(option)) {
	        labelItem = option(props);
	      } else {
	        labelItem = _react2.default.createElement(
	          _Text2.default,
	          _extends({
	            key: props.key
	          }, props, {
	            className: 'recharts-radar-label'
	          }),
	          value
	        );
	      }
	
	      return labelItem;
	    }
	  }, {
	    key: 'renderLabels',
	    value: function renderLabels() {
	      var _this2 = this;
	
	      var _props2 = this.props,
	          points = _props2.points,
	          label = _props2.label;
	
	      var baseProps = (0, _ReactUtils.getPresentationAttributes)(this.props);
	      var customLabelProps = (0, _ReactUtils.getPresentationAttributes)(label);
	
	      var labels = points.map(function (entry, i) {
	        var labelProps = _extends({
	          textAnchor: 'middle'
	        }, baseProps, {
	          stroke: 'none',
	          fill: baseProps && baseProps.stroke || '#666'
	        }, customLabelProps, entry, {
	          index: i,
	          key: 'label-' + i,
	          payload: entry
	        });
	
	        return _this2.renderLabelItem(label, labelProps, entry.value);
	      });
	
	      return _react2.default.createElement(
	        _Layer2.default,
	        { className: 'recharts-radar-labels' },
	        labels
	      );
	    }
	  }, {
	    key: 'renderDotItem',
	    value: function renderDotItem(option, props) {
	      var dotItem = void 0;
	
	      if (_react2.default.isValidElement(option)) {
	        dotItem = _react2.default.cloneElement(option, props);
	      } else if ((0, _isFunction3.default)(option)) {
	        dotItem = option(props);
	      } else {
	        dotItem = _react2.default.createElement(_Dot2.default, _extends({}, props, { className: 'recharts-radar-dot' }));
	      }
	
	      return dotItem;
	    }
	  }, {
	    key: 'renderDots',
	    value: function renderDots() {
	      var _this3 = this;
	
	      var _props3 = this.props,
	          dot = _props3.dot,
	          points = _props3.points;
	
	      var baseProps = (0, _ReactUtils.getPresentationAttributes)(this.props);
	      var customDotProps = (0, _ReactUtils.getPresentationAttributes)(dot);
	
	      var dots = points.map(function (entry, i) {
	        var dotProps = _extends({
	          key: 'dot-' + i,
	          r: 3
	        }, baseProps, customDotProps, {
	          cx: entry.x,
	          cy: entry.y,
	          index: i,
	          playload: entry
	        });
	
	        return _this3.renderDotItem(dot, dotProps);
	      });
	
	      return _react2.default.createElement(
	        _Layer2.default,
	        { className: 'recharts-radar-dots' },
	        dots
	      );
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _props4 = this.props,
	          className = _props4.className,
	          points = _props4.points,
	          label = _props4.label,
	          dot = _props4.dot;
	
	
	      if (!points || !points.length) {
	        return null;
	      }
	
	      var layerClass = (0, _classnames2.default)('recharts-radar', className);
	
	      return _react2.default.createElement(
	        _Layer2.default,
	        { className: layerClass },
	        this.renderPolygon(),
	        label && this.renderLabels(),
	        dot && this.renderDots()
	      );
	    }
	  }]);
	
	  return Radar;
	}(_react.Component), _class2.displayName = 'Radar', _class2.propTypes = _extends({}, _ReactUtils.PRESENTATION_ATTRIBUTES, {
	  className: _react.PropTypes.string,
	  dataKey: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.string, _react.PropTypes.func]).isRequired,
	
	  points: _react.PropTypes.arrayOf(_react.PropTypes.shape({
	    x: _react.PropTypes.number,
	    y: _react.PropTypes.number,
	    cx: _react.PropTypes.number,
	    cy: _react.PropTypes.number,
	    angle: _react.PropTypes.number,
	    radius: _react.PropTypes.number,
	    value: _react.PropTypes.number,
	    payload: _react.PropTypes.object
	  })),
	  shape: _react.PropTypes.oneOfType([_react.PropTypes.element, _react.PropTypes.func]),
	  dot: _react.PropTypes.oneOfType([_react.PropTypes.element, _react.PropTypes.func, _react.PropTypes.object, _react.PropTypes.bool]),
	  label: _react.PropTypes.oneOfType([_react.PropTypes.element, _react.PropTypes.func, _react.PropTypes.object, _react.PropTypes.bool]),
	  legendType: _react.PropTypes.oneOf(['line', 'square', 'rect', 'circle', 'cross', 'diamond', 'square', 'star', 'triangle', 'wye']),
	
	  onMouseEnter: _react.PropTypes.func,
	  onMouseLeave: _react.PropTypes.func,
	  onClick: _react.PropTypes.func,
	  isAnimationActive: _react.PropTypes.bool,
	  animationId: _react.PropTypes.number,
	  animationBegin: _react.PropTypes.number,
	  animationDuration: _react.PropTypes.number,
	  animationEasing: _react.PropTypes.oneOf(['ease', 'ease-in', 'ease-out', 'ease-in-out', 'linear'])
	}), _class2.defaultProps = {
	  dot: false,
	  label: false,
	  legendType: 'rect',
	  isAnimationActive: !(0, _ReactUtils.isSsr)(),
	  animationBegin: 0,
	  animationDuration: 1500,
	  animationEasing: 'ease'
	}, _temp2)) || _class;
	
	exports.default = Radar;

/***/ },
/* 816 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _uniqueId2 = __webpack_require__(813);
	
	var _uniqueId3 = _interopRequireDefault(_uniqueId2);
	
	var _isFunction2 = __webpack_require__(224);
	
	var _isFunction3 = _interopRequireDefault(_isFunction2);
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _class, _class2, _temp2; /**
	                              * @fileOverview Render a group of radial bar
	                              */
	
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(404);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _reactSmooth = __webpack_require__(754);
	
	var _reactSmooth2 = _interopRequireDefault(_reactSmooth);
	
	var _Sector = __webpack_require__(799);
	
	var _Sector2 = _interopRequireDefault(_Sector);
	
	var _Layer = __webpack_require__(747);
	
	var _Layer2 = _interopRequireDefault(_Layer);
	
	var _DOMUtils = __webpack_require__(798);
	
	var _ReactUtils = __webpack_require__(670);
	
	var _PureRender = __webpack_require__(746);
	
	var _PureRender2 = _interopRequireDefault(_PureRender);
	
	var _PolarUtils = __webpack_require__(800);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var RADIAN = Math.PI / 180;
	
	var RadialBar = (0, _PureRender2.default)(_class = (_temp2 = _class2 = function (_Component) {
	  _inherits(RadialBar, _Component);
	
	  function RadialBar() {
	    var _ref;
	
	    var _temp, _this, _ret;
	
	    _classCallCheck(this, RadialBar);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = RadialBar.__proto__ || Object.getPrototypeOf(RadialBar)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
	      isAnimationFinished: false
	    }, _this.handleAnimationEnd = function () {
	      _this.setState({ isAnimationFinished: true });
	    }, _this.handleAnimationStart = function () {
	      _this.setState({ isAnimationFinished: false });
	    }, _temp), _possibleConstructorReturn(_this, _ret);
	  }
	
	  _createClass(RadialBar, [{
	    key: 'getDeltaAngle',
	    value: function getDeltaAngle() {
	      var _props = this.props,
	          startAngle = _props.startAngle,
	          endAngle = _props.endAngle;
	
	      var sign = Math.sign(endAngle - startAngle);
	      var deltaAngle = Math.min(Math.abs(endAngle - startAngle), 360);
	
	      return sign * deltaAngle;
	    }
	  }, {
	    key: 'getSectors',
	    value: function getSectors() {
	      var _props2 = this.props,
	          cx = _props2.cx,
	          cy = _props2.cy,
	          startAngle = _props2.startAngle,
	          data = _props2.data,
	          minAngle = _props2.minAngle,
	          maxAngle = _props2.maxAngle;
	
	      var maxValue = Math.max.apply(null, data.map(function (entry) {
	        return Math.abs(entry.value);
	      }));
	      var absMinAngle = Math.abs(minAngle);
	      var absMaxAngle = Math.abs(maxAngle);
	      var deltaAngle = this.getDeltaAngle();
	      var gapAngle = Math.min(Math.abs(absMaxAngle - absMinAngle), 360);
	
	      var sectors = data.map(function (entry) {
	        var value = entry.value;
	        var tempEndAngle = maxValue === 0 ? startAngle : startAngle + Math.sign(value * deltaAngle) * (absMinAngle + gapAngle * Math.abs(entry.value) / maxValue);
	
	        return _extends({}, entry, {
	          cx: cx, cy: cy,
	          startAngle: startAngle,
	          endAngle: tempEndAngle,
	          payload: entry
	        });
	      });
	
	      return sectors;
	    }
	  }, {
	    key: 'getLabelPathArc',
	    value: function getLabelPathArc(data, labelContent, style) {
	      var label = this.props.label;
	
	      var labelProps = _react2.default.isValidElement(label) ? label.props : label;
	      var offsetRadius = labelProps.offsetRadius || 2;
	      var orientation = labelProps.orientation || 'inner';
	      var cx = data.cx,
	          cy = data.cy,
	          innerRadius = data.innerRadius,
	          outerRadius = data.outerRadius,
	          startAngle = data.startAngle,
	          endAngle = data.endAngle;
	
	      var clockWise = this.getDeltaAngle() < 0 && data.value > 0;
	      var radius = clockWise ? innerRadius + offsetRadius : Math.max(outerRadius - offsetRadius, 0);
	
	      if (radius <= 0) {
	        return '';
	      }
	
	      var labelSize = (0, _DOMUtils.getStringSize)(labelContent, style);
	      var deltaAngle = labelSize.width / (radius * RADIAN);
	      var tempStartAngle = void 0,
	          tempEndAngle = void 0;
	
	      if (clockWise) {
	        tempStartAngle = orientation === 'inner' ? Math.min(endAngle + deltaAngle, startAngle) : endAngle;
	        tempEndAngle = tempStartAngle - deltaAngle;
	      } else {
	        tempStartAngle = orientation === 'inner' ? Math.max(endAngle - deltaAngle, startAngle) : endAngle;
	        tempEndAngle = tempStartAngle + deltaAngle;
	      }
	
	      var startPoint = (0, _PolarUtils.polarToCartesian)(cx, cy, radius, tempStartAngle);
	      var endPoint = (0, _PolarUtils.polarToCartesian)(cx, cy, radius, tempEndAngle);
	
	      return 'M' + startPoint.x + ',' + startPoint.y + '\n            A' + radius + ',' + radius + ',0,\n            ' + (deltaAngle >= 180 ? 1 : 0) + ',\n            ' + (clockWise ? 1 : 0) + ',\n            ' + endPoint.x + ',' + endPoint.y;
	    }
	  }, {
	    key: 'renderSectorShape',
	    value: function renderSectorShape(shape, props) {
	      var sectorShape = void 0;
	
	      if (_react2.default.isValidElement(shape)) {
	        sectorShape = _react2.default.cloneElement(shape, props);
	      } else if ((0, _isFunction3.default)(shape)) {
	        sectorShape = shape(props);
	      } else {
	        sectorShape = _react2.default.createElement(_Sector2.default, props);
	      }
	
	      return sectorShape;
	    }
	  }, {
	    key: 'renderSectors',
	    value: function renderSectors(sectors) {
	      var _this2 = this;
	
	      var _props3 = this.props,
	          shape = _props3.shape,
	          activeShape = _props3.activeShape,
	          activeIndex = _props3.activeIndex,
	          cornerRadius = _props3.cornerRadius;
	      var _props4 = this.props,
	          animationEasing = _props4.animationEasing,
	          animationDuration = _props4.animationDuration,
	          animationBegin = _props4.animationBegin,
	          isAnimationActive = _props4.isAnimationActive;
	
	      var baseProps = (0, _ReactUtils.getPresentationAttributes)(this.props);
	
	      return sectors.map(function (entry, i) {
	        var startAngle = entry.startAngle,
	            endAngle = entry.endAngle;
	
	
	        return _react2.default.createElement(
	          _reactSmooth2.default,
	          {
	            from: { angle: startAngle },
	            to: { angle: endAngle },
	            begin: animationBegin,
	            isActive: isAnimationActive,
	            duration: animationDuration,
	            easing: animationEasing,
	            shouldReAnimate: true,
	            key: 'aniamte-' + i,
	            onAnimationStart: _this2.handleAnimationStart,
	            onAnimationEnd: _this2.handleAnimationEnd
	          },
	          function (_ref2) {
	            var angle = _ref2.angle;
	
	            var props = _extends({}, baseProps, {
	              cornerRadius: cornerRadius
	            }, entry, (0, _ReactUtils.filterEventsOfChild)(_this2.props, entry, i), {
	              endAngle: angle,
	              key: 'sector-' + i,
	              className: 'recharts-radial-bar-sector'
	            });
	
	            return _this2.renderSectorShape(i === activeIndex ? activeShape : shape, props);
	          }
	        );
	      });
	    }
	  }, {
	    key: 'renderBackground',
	    value: function renderBackground(sectors) {
	      var _this3 = this;
	
	      var _props5 = this.props,
	          startAngle = _props5.startAngle,
	          endAngle = _props5.endAngle,
	          background = _props5.background,
	          cornerRadius = _props5.cornerRadius;
	
	      var backgroundProps = (0, _ReactUtils.getPresentationAttributes)(background);
	
	      return sectors.map(function (entry, i) {
	        // eslint-disable-next-line no-unused-vars
	        var value = entry.value,
	            rest = _objectWithoutProperties(entry, ['value']);
	
	        var props = _extends({
	          cornerRadius: cornerRadius
	        }, rest, {
	          fill: '#eee'
	        }, backgroundProps, (0, _ReactUtils.filterEventsOfChild)(_this3.props, entry, i), {
	          startAngle: startAngle,
	          endAngle: endAngle,
	          index: i,
	          key: 'sector-' + i,
	          className: 'recharts-radial-bar-background-sector'
	        });
	
	        return _this3.renderSectorShape(background, props);
	      });
	    }
	  }, {
	    key: 'renderLabelItem',
	    value: function renderLabelItem(option, props, value) {
	      var labelItem = void 0;
	
	      if (_react2.default.isValidElement(option)) {
	        labelItem = _react2.default.cloneElement(option, props);
	      } else if ((0, _isFunction3.default)(option)) {
	        labelItem = option(props);
	      } else {
	        var id = (0, _uniqueId3.default)('recharts-defs-');
	        var filteredProps = (0, _ReactUtils.getPresentationAttributes)(props);
	        var path = this.getLabelPathArc(props, value, filteredProps);
	
	        labelItem = _react2.default.createElement(
	          'text',
	          _extends({}, filteredProps, { key: props.key, className: 'recharts-radial-bar-label' }),
	          _react2.default.createElement(
	            'defs',
	            null,
	            _react2.default.createElement('path', { id: id, d: path })
	          ),
	          _react2.default.createElement(
	            'textPath',
	            { xlinkHref: '#' + id },
	            value
	          )
	        );
	      }
	
	      return labelItem;
	    }
	  }, {
	    key: 'renderLabels',
	    value: function renderLabels(sectors) {
	      var _this4 = this;
	
	      var isAnimationActive = this.props.isAnimationActive;
	
	      if (isAnimationActive && !this.state.isAnimationFinished) {
	        return null;
	      }
	
	      var label = this.props.label;
	
	
	      return sectors.map(function (entry, i) {
	        var props = _extends({
	          fontSize: 10
	        }, entry, (0, _ReactUtils.getPresentationAttributes)(label), {
	          index: i,
	          key: 'label-' + i
	        });
	
	        return _this4.renderLabelItem(label, props, entry.value);
	      });
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _props6 = this.props,
	          data = _props6.data,
	          className = _props6.className,
	          background = _props6.background,
	          label = _props6.label;
	
	
	      if (!data || !data.length) {
	        return null;
	      }
	
	      var sectors = this.getSectors();
	      var layerClass = (0, _classnames2.default)('recharts-area', className);
	
	      return _react2.default.createElement(
	        _Layer2.default,
	        { className: layerClass },
	        background && _react2.default.createElement(
	          _Layer2.default,
	          { className: 'recharts-radial-bar-background' },
	          this.renderBackground(sectors)
	        ),
	        _react2.default.createElement(
	          _Layer2.default,
	          { className: 'recharts-radial-bar-sectors' },
	          this.renderSectors(sectors)
	        ),
	        label && _react2.default.createElement(
	          _Layer2.default,
	          { className: 'recharts-radial-bar-labels' },
	          this.renderLabels(sectors)
	        )
	      );
	    }
	  }]);
	
	  return RadialBar;
	}(_react.Component), _class2.displayName = 'RadialBar', _class2.propTypes = _extends({}, _ReactUtils.PRESENTATION_ATTRIBUTES, {
	  className: _react.PropTypes.string,
	  shape: _react.PropTypes.oneOfType([_react.PropTypes.func, _react.PropTypes.element]),
	  activeShape: _react.PropTypes.oneOfType([_react.PropTypes.object, _react.PropTypes.func, _react.PropTypes.element]),
	  activeIndex: _react.PropTypes.number,
	
	  cornerRadius: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.string]),
	  cx: _react.PropTypes.number,
	  cy: _react.PropTypes.number,
	  startAngle: _react.PropTypes.number,
	  endAngle: _react.PropTypes.number,
	  maxAngle: _react.PropTypes.number,
	  minAngle: _react.PropTypes.number,
	  data: _react.PropTypes.arrayOf(_react.PropTypes.shape({
	    cx: _react.PropTypes.number,
	    cy: _react.PropTypes.number,
	    innerRadius: _react.PropTypes.number,
	    outerRadius: _react.PropTypes.number,
	    value: _react.PropTypes.value
	  })),
	  legendType: _react.PropTypes.oneOf(['line', 'square', 'rect', 'circle', 'cross', 'diamond', 'square', 'star', 'triangle', 'wye']),
	  label: _react.PropTypes.oneOfType([_react.PropTypes.bool, _react.PropTypes.func, _react.PropTypes.element, _react.PropTypes.object]),
	  background: _react.PropTypes.oneOfType([_react.PropTypes.bool, _react.PropTypes.func, _react.PropTypes.object, _react.PropTypes.element]),
	
	  onMouseEnter: _react.PropTypes.func,
	  onMouseLeave: _react.PropTypes.func,
	  onClick: _react.PropTypes.func,
	
	  isAnimationActive: _react.PropTypes.bool,
	  animationBegin: _react.PropTypes.number,
	  animationDuration: _react.PropTypes.number,
	  animationEasing: _react.PropTypes.oneOf(['ease', 'ease-in', 'ease-out', 'ease-in-out', 'linear', 'spring'])
	}), _class2.defaultProps = {
	  startAngle: 180,
	  endAngle: 0,
	  maxAngle: 135,
	  minAngle: 0,
	  legendType: 'rect',
	  data: [],
	  isAnimationActive: !(0, _ReactUtils.isSsr)(),
	  animationBegin: 0,
	  animationDuration: 1500,
	  animationEasing: 'ease'
	}, _temp2)) || _class;
	
	exports.default = RadialBar;

/***/ },
/* 817 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _range2 = __webpack_require__(818);
	
	var _range3 = _interopRequireDefault(_range2);
	
	var _isFunction2 = __webpack_require__(224);
	
	var _isFunction3 = _interopRequireDefault(_isFunction2);
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _class, _class2, _temp; /**
	                             * @fileOverview Brush
	                             */
	
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(404);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _d3Scale = __webpack_require__(738);
	
	var _DataUtils = __webpack_require__(673);
	
	var _PureRender = __webpack_require__(746);
	
	var _PureRender2 = _interopRequireDefault(_PureRender);
	
	var _Layer = __webpack_require__(747);
	
	var _Layer2 = _interopRequireDefault(_Layer);
	
	var _Text = __webpack_require__(789);
	
	var _Text2 = _interopRequireDefault(_Text);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var Brush = (0, _PureRender2.default)(_class = (_temp = _class2 = function (_Component) {
	  _inherits(Brush, _Component);
	
	  function Brush(props) {
	    _classCallCheck(this, Brush);
	
	    var _this = _possibleConstructorReturn(this, (Brush.__proto__ || Object.getPrototypeOf(Brush)).call(this, props));
	
	    _this.handleDrag = function (e) {
	      if (_this.leaveTimer) {
	        clearTimeout(_this.leaveTimer);
	        _this.leaveTimer = null;
	      }
	
	      if (_this.state.isTravellerMoving) {
	        _this.handleTravellerMove(e);
	      } else if (_this.state.isSlideMoving) {
	        _this.handleSlideDrag(e);
	      }
	    };
	
	    _this.handleTouchMove = function (e) {
	      if (e.changedTouches != null && e.changedTouches.length > 0) {
	        _this.handleDrag(e.changedTouches[0]);
	      }
	    };
	
	    _this.handleDragEnd = function () {
	      _this.setState({
	        isTravellerMoving: false,
	        isSlideMoving: false
	      });
	    };
	
	    _this.handleLeaveWrapper = function () {
	      if (_this.state.isTravellerMoving || _this.state.isSlideMoving) {
	        _this.leaveTimer = setTimeout(_this.handleDragEnd, 1000);
	      }
	    };
	
	    _this.handleEnterSlideOrTraveller = function () {
	      _this.setState({
	        isTextActive: true
	      });
	    };
	
	    _this.handleLeaveSlideOrTraveller = function () {
	      _this.setState({
	        isTextActive: false
	      });
	    };
	
	    _this.handleSlideDragStart = function (e) {
	      var event = e.changedTouches && e.changedTouches.length ? e.changedTouches[0] : e;
	
	      _this.setState({
	        isTravellerMoving: false,
	        isSlideMoving: true,
	        slideMoveStartX: event.pageX
	      });
	    };
	
	    _this.travellerDragStartHandlers = {
	      startX: _this.handleTravellerDragStart.bind(_this, 'startX'),
	      endX: _this.handleTravellerDragStart.bind(_this, 'endX')
	    };
	
	    if (props.data && props.data.length) {
	      _this.updateScale(props);
	    } else {
	      _this.state = {};
	    }
	    return _this;
	  }
	
	  _createClass(Brush, [{
	    key: 'componentWillReceiveProps',
	    value: function componentWillReceiveProps(nextProps) {
	      var _this2 = this;
	
	      var _props = this.props,
	          data = _props.data,
	          width = _props.width,
	          x = _props.x,
	          travellerWidth = _props.travellerWidth,
	          updateId = _props.updateId;
	
	
	      if (nextProps.data !== data || nextProps.updateId !== updateId) {
	        this.updateScale(nextProps);
	      } else if (nextProps.width !== width || nextProps.x !== x || nextProps.travellerWidth !== travellerWidth) {
	        this.scale.range([nextProps.x, nextProps.x + nextProps.width - nextProps.travellerWidth]);
	        this.scaleValues = this.scale.domain().map(function (entry) {
	          return _this2.scale(entry);
	        });
	
	        this.setState({
	          startX: this.scale(nextProps.startIndex),
	          endX: this.scale(nextProps.endIndex)
	        });
	      }
	    }
	  }, {
	    key: 'componentWillUnmount',
	    value: function componentWillUnmount() {
	      this.scale = null;
	      this.scaleValues = null;
	
	      if (this.leaveTimer) {
	        clearTimeout(this.leaveTimer);
	        this.leaveTimer = null;
	      }
	    }
	  }, {
	    key: 'getIndexInRange',
	    value: function getIndexInRange(range, x) {
	      var len = range.length;
	      var start = 0;
	      var end = len - 1;
	
	      while (end - start > 1) {
	        var middle = Math.floor((start + end) / 2);
	
	        if (range[middle] > x) {
	          end = middle;
	        } else {
	          start = middle;
	        }
	      }
	
	      return x >= range[end] ? end : start;
	    }
	  }, {
	    key: 'getIndex',
	    value: function getIndex(_ref) {
	      var startX = _ref.startX,
	          endX = _ref.endX;
	
	      var min = Math.min(startX, endX);
	      var max = Math.max(startX, endX);
	      var minIndex = this.getIndexInRange(this.scaleValues, min);
	      var maxIndex = this.getIndexInRange(this.scaleValues, max);
	
	      return {
	        startIndex: minIndex,
	        endIndex: maxIndex
	      };
	    }
	  }, {
	    key: 'getTextOfTick',
	    value: function getTextOfTick(index) {
	      var _props2 = this.props,
	          data = _props2.data,
	          tickFormatter = _props2.tickFormatter,
	          dataKey = _props2.dataKey;
	
	      var text = (0, _DataUtils.getValueByDataKey)(data[index], dataKey, index);
	
	      return (0, _isFunction3.default)(tickFormatter) ? tickFormatter(text) : text;
	    }
	  }, {
	    key: 'handleSlideDrag',
	    value: function handleSlideDrag(e) {
	      var _state = this.state,
	          slideMoveStartX = _state.slideMoveStartX,
	          startX = _state.startX,
	          endX = _state.endX;
	      var _props3 = this.props,
	          x = _props3.x,
	          width = _props3.width,
	          travellerWidth = _props3.travellerWidth,
	          startIndex = _props3.startIndex,
	          endIndex = _props3.endIndex,
	          onChange = _props3.onChange;
	
	      var delta = e.pageX - slideMoveStartX;
	
	      if (delta > 0) {
	        delta = Math.min(delta, x + width - travellerWidth - endX, x + width - travellerWidth - startX);
	      } else if (delta < 0) {
	        delta = Math.max(delta, x - startX, x - endX);
	      }
	      var newIndex = this.getIndex({
	        startX: startX + delta,
	        endX: endX + delta
	      });
	
	      if ((newIndex.startIndex !== startIndex || newIndex.endIndex !== endIndex) && onChange) {
	        onChange(newIndex);
	      }
	
	      this.setState({
	        startX: startX + delta,
	        endX: endX + delta,
	        slideMoveStartX: e.pageX
	      });
	    }
	  }, {
	    key: 'handleTravellerDragStart',
	    value: function handleTravellerDragStart(id, e) {
	      var event = e.changedTouches && e.changedTouches.length ? e.changedTouches[0] : e;
	
	      this.setState({
	        isSlideMoving: false,
	        isTravellerMoving: true,
	        movingTravellerId: id,
	        brushMoveStartX: event.pageX
	      });
	    }
	  }, {
	    key: 'handleTravellerMove',
	    value: function handleTravellerMove(e) {
	      var _setState;
	
	      var _state2 = this.state,
	          brushMoveStartX = _state2.brushMoveStartX,
	          movingTravellerId = _state2.movingTravellerId;
	
	      var prevValue = this.state[movingTravellerId];
	      var _props4 = this.props,
	          x = _props4.x,
	          width = _props4.width,
	          travellerWidth = _props4.travellerWidth,
	          onChange = _props4.onChange;
	
	
	      var params = { startX: this.state.startX, endX: this.state.endX };
	      var delta = e.pageX - brushMoveStartX;
	
	      if (delta > 0) {
	        delta = Math.min(delta, x + width - travellerWidth - prevValue);
	      } else if (delta < 0) {
	        delta = Math.max(delta, x - prevValue);
	      }
	
	      params[movingTravellerId] = prevValue + delta;
	      var newIndex = this.getIndex(params);
	
	      this.setState((_setState = {}, _defineProperty(_setState, movingTravellerId, prevValue + delta), _defineProperty(_setState, 'brushMoveStartX', e.pageX), _setState), function () {
	        if (onChange) {
	          onChange(newIndex);
	        }
	      });
	    }
	  }, {
	    key: 'updateScale',
	    value: function updateScale(props) {
	      var _this3 = this;
	
	      var data = props.data,
	          startIndex = props.startIndex,
	          endIndex = props.endIndex,
	          x = props.x,
	          width = props.width,
	          travellerWidth = props.travellerWidth;
	
	
	      if (data && data.length) {
	        var len = data.length;
	        this.scale = (0, _d3Scale.scalePoint)().domain((0, _range3.default)(0, len)).range([x, x + width - travellerWidth]);
	        this.scaleValues = this.scale.domain().map(function (entry) {
	          return _this3.scale(entry);
	        });
	        this.state = {
	          isTextActive: false,
	          isSlideMoving: false,
	          isTravellerMoving: false,
	          startX: this.scale(startIndex),
	          endX: this.scale(endIndex)
	        };
	      }
	    }
	  }, {
	    key: 'renderBackground',
	    value: function renderBackground() {
	      var _props5 = this.props,
	          x = _props5.x,
	          y = _props5.y,
	          width = _props5.width,
	          height = _props5.height,
	          fill = _props5.fill,
	          stroke = _props5.stroke;
	
	
	      return _react2.default.createElement('rect', {
	        stroke: stroke,
	        fill: fill,
	        x: x,
	        y: y,
	        width: width,
	        height: height
	      });
	    }
	  }, {
	    key: 'renderTraveller',
	    value: function renderTraveller(startX, id) {
	      var _props6 = this.props,
	          y = _props6.y,
	          travellerWidth = _props6.travellerWidth,
	          height = _props6.height,
	          stroke = _props6.stroke;
	
	      var lineY = Math.floor(y + height / 2) - 1;
	      var x = Math.max(startX, this.props.x);
	
	      return _react2.default.createElement(
	        _Layer2.default,
	        {
	          className: 'recharts-brush-traveller',
	          onMouseEnter: this.handleEnterSlideOrTraveller,
	          onMouseLeave: this.handleLeaveSlideOrTraveller,
	          onMouseDown: this.travellerDragStartHandlers[id],
	          onTouchStart: this.travellerDragStartHandlers[id],
	          style: { cursor: 'col-resize' }
	        },
	        _react2.default.createElement('rect', {
	          x: x,
	          y: y,
	          width: travellerWidth,
	          height: height,
	          fill: stroke,
	          stroke: 'none'
	        }),
	        _react2.default.createElement('line', {
	          x1: x + 1,
	          y1: lineY,
	          x2: x + travellerWidth - 1,
	          y2: lineY,
	          fill: 'none',
	          stroke: '#fff'
	        }),
	        _react2.default.createElement('line', {
	          x1: x + 1,
	          y1: lineY + 2,
	          x2: x + travellerWidth - 1,
	          y2: lineY + 2,
	          fill: 'none',
	          stroke: '#fff'
	        })
	      );
	    }
	  }, {
	    key: 'renderSlide',
	    value: function renderSlide(startX, endX) {
	      var _props7 = this.props,
	          y = _props7.y,
	          height = _props7.height,
	          stroke = _props7.stroke;
	
	
	      return _react2.default.createElement('rect', {
	        className: 'recharts-brush-slide',
	        onMouseEnter: this.handleEnterSlideOrTraveller,
	        onMouseLeave: this.handleLeaveSlideOrTraveller,
	        onMouseDown: this.handleSlideDragStart,
	        onTouchStart: this.handleSlideDragStart,
	        style: { cursor: 'move' },
	        stroke: 'none',
	        fill: stroke,
	        fillOpacity: 0.2,
	        x: Math.min(startX, endX),
	        y: y,
	        width: Math.abs(endX - startX),
	        height: height
	      });
	    }
	  }, {
	    key: 'renderText',
	    value: function renderText() {
	      var _props8 = this.props,
	          startIndex = _props8.startIndex,
	          endIndex = _props8.endIndex,
	          y = _props8.y,
	          height = _props8.height,
	          travellerWidth = _props8.travellerWidth,
	          stroke = _props8.stroke;
	      var _state3 = this.state,
	          startX = _state3.startX,
	          endX = _state3.endX;
	
	      var offset = 5;
	      var style = {
	        pointerEvents: 'none',
	        fill: stroke
	      };
	
	      return _react2.default.createElement(
	        _Layer2.default,
	        { className: 'recharts-brush-texts' },
	        _react2.default.createElement(
	          _Text2.default,
	          {
	            textAnchor: 'end',
	            verticalAnchor: 'middle',
	            style: style,
	            x: Math.min(startX, endX) - offset,
	            y: y + height / 2
	          },
	          this.getTextOfTick(startIndex)
	        ),
	        _react2.default.createElement(
	          _Text2.default,
	          {
	            textAnchor: 'start',
	            verticalAnchor: 'middle',
	            style: style,
	            x: Math.max(startX, endX) + travellerWidth + offset,
	            y: y + height / 2
	          },
	          this.getTextOfTick(endIndex)
	        )
	      );
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _props9 = this.props,
	          data = _props9.data,
	          className = _props9.className;
	      var _state4 = this.state,
	          startX = _state4.startX,
	          endX = _state4.endX,
	          isTextActive = _state4.isTextActive,
	          isSlideMoving = _state4.isSlideMoving,
	          isTravellerMoving = _state4.isTravellerMoving;
	
	
	      if (!data || !data.length) {
	        return null;
	      }
	
	      var layerClass = (0, _classnames2.default)('recharts-brush', className);
	
	      return _react2.default.createElement(
	        _Layer2.default,
	        {
	          className: layerClass,
	          onMouseMove: this.handleDrag,
	          onMouseLeave: this.handleLeaveWrapper,
	          onMouseUp: this.handleDragEnd,
	          onTouchEnd: this.handleDragEnd,
	          onTouchMove: this.handleTouchMove
	        },
	        this.renderBackground(),
	        this.renderSlide(startX, endX),
	        this.renderTraveller(startX, 'startX'),
	        this.renderTraveller(endX, 'endX'),
	        (isTextActive || isSlideMoving || isTravellerMoving) && this.renderText()
	      );
	    }
	  }]);
	
	  return Brush;
	}(_react.Component), _class2.displayName = 'Brush', _class2.propTypes = {
	  className: _react.PropTypes.string,
	
	  fill: _react.PropTypes.string,
	  stroke: _react.PropTypes.string,
	  x: _react.PropTypes.number.isRequired,
	  y: _react.PropTypes.number.isRequired,
	  width: _react.PropTypes.number.isRequired,
	  height: _react.PropTypes.number.isRequired,
	  travellerWidth: _react.PropTypes.number,
	
	  dataKey: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.number, _react.PropTypes.func]),
	  data: _react.PropTypes.array,
	  startIndex: _react.PropTypes.number,
	  endIndex: _react.PropTypes.number,
	  tickFormatter: _react.PropTypes.func,
	
	  onChange: _react.PropTypes.func,
	  updateId: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.number])
	}, _class2.defaultProps = {
	  x: 0,
	  y: 0,
	  width: 0,
	  height: 40,
	  travellerWidth: 5,
	  fill: '#fff',
	  stroke: '#666'
	}, _temp)) || _class;
	
	exports.default = Brush;

/***/ },
/* 818 */
/***/ function(module, exports, __webpack_require__) {

	var createRange = __webpack_require__(819);
	
	/**
	 * Creates an array of numbers (positive and/or negative) progressing from
	 * `start` up to, but not including, `end`. A step of `-1` is used if a negative
	 * `start` is specified without an `end` or `step`. If `end` is not specified,
	 * it's set to `start` with `start` then set to `0`.
	 *
	 * **Note:** JavaScript follows the IEEE-754 standard for resolving
	 * floating-point values which can produce unexpected results.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Util
	 * @param {number} [start=0] The start of the range.
	 * @param {number} end The end of the range.
	 * @param {number} [step=1] The value to increment or decrement by.
	 * @returns {Array} Returns the range of numbers.
	 * @see _.inRange, _.rangeRight
	 * @example
	 *
	 * _.range(4);
	 * // => [0, 1, 2, 3]
	 *
	 * _.range(-4);
	 * // => [0, -1, -2, -3]
	 *
	 * _.range(1, 5);
	 * // => [1, 2, 3, 4]
	 *
	 * _.range(0, 20, 5);
	 * // => [0, 5, 10, 15]
	 *
	 * _.range(0, -4, -1);
	 * // => [0, -1, -2, -3]
	 *
	 * _.range(1, 4, 0);
	 * // => [1, 1, 1]
	 *
	 * _.range(0);
	 * // => []
	 */
	var range = createRange();
	
	module.exports = range;


/***/ },
/* 819 */
/***/ function(module, exports, __webpack_require__) {

	var baseRange = __webpack_require__(820),
	    isIterateeCall = __webpack_require__(289),
	    toFinite = __webpack_require__(821);
	
	/**
	 * Creates a `_.range` or `_.rangeRight` function.
	 *
	 * @private
	 * @param {boolean} [fromRight] Specify iterating from right to left.
	 * @returns {Function} Returns the new range function.
	 */
	function createRange(fromRight) {
	  return function(start, end, step) {
	    if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {
	      end = step = undefined;
	    }
	    // Ensure the sign of `-0` is preserved.
	    start = toFinite(start);
	    if (end === undefined) {
	      end = start;
	      start = 0;
	    } else {
	      end = toFinite(end);
	    }
	    step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);
	    return baseRange(start, end, step, fromRight);
	  };
	}
	
	module.exports = createRange;


/***/ },
/* 820 */
/***/ function(module, exports) {

	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeCeil = Math.ceil,
	    nativeMax = Math.max;
	
	/**
	 * The base implementation of `_.range` and `_.rangeRight` which doesn't
	 * coerce arguments.
	 *
	 * @private
	 * @param {number} start The start of the range.
	 * @param {number} end The end of the range.
	 * @param {number} step The value to increment or decrement by.
	 * @param {boolean} [fromRight] Specify iterating from right to left.
	 * @returns {Array} Returns the range of numbers.
	 */
	function baseRange(start, end, step, fromRight) {
	  var index = -1,
	      length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),
	      result = Array(length);
	
	  while (length--) {
	    result[fromRight ? length : ++index] = start;
	    start += step;
	  }
	  return result;
	}
	
	module.exports = baseRange;


/***/ },
/* 821 */
/***/ function(module, exports, __webpack_require__) {

	var toNumber = __webpack_require__(783);
	
	/** Used as references for various `Number` constants. */
	var INFINITY = 1 / 0,
	    MAX_INTEGER = 1.7976931348623157e+308;
	
	/**
	 * Converts `value` to a finite number.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.12.0
	 * @category Lang
	 * @param {*} value The value to convert.
	 * @returns {number} Returns the converted number.
	 * @example
	 *
	 * _.toFinite(3.2);
	 * // => 3.2
	 *
	 * _.toFinite(Number.MIN_VALUE);
	 * // => 5e-324
	 *
	 * _.toFinite(Infinity);
	 * // => 1.7976931348623157e+308
	 *
	 * _.toFinite('3.2');
	 * // => 3.2
	 */
	function toFinite(value) {
	  if (!value) {
	    return value === 0 ? value : 0;
	  }
	  value = toNumber(value);
	  if (value === INFINITY || value === -INFINITY) {
	    var sign = (value < 0 ? -1 : 1);
	    return sign * MAX_INTEGER;
	  }
	  return value === value ? value : 0;
	}
	
	module.exports = toFinite;


/***/ },
/* 822 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _isFunction2 = __webpack_require__(224);
	
	var _isFunction3 = _interopRequireDefault(_isFunction2);
	
	var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _class, _class2, _temp;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; /**
	                                                                                                                                                                                                                                                                   * @fileOverview Reference Line
	                                                                                                                                                                                                                                                                   */
	
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _PureRender = __webpack_require__(746);
	
	var _PureRender2 = _interopRequireDefault(_PureRender);
	
	var _Layer = __webpack_require__(747);
	
	var _Layer2 = _interopRequireDefault(_Layer);
	
	var _Text = __webpack_require__(789);
	
	var _Text2 = _interopRequireDefault(_Text);
	
	var _ReactUtils = __webpack_require__(670);
	
	var _DataUtils = __webpack_require__(673);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var renderLine = function renderLine(option, props) {
	  var line = void 0;
	
	  if (_react2.default.isValidElement(option)) {
	    line = _react2.default.cloneElement(option, props);
	  } else if ((0, _isFunction3.default)(option)) {
	    line = option(props);
	  } else {
	    line = _react2.default.createElement('line', _extends({}, props, {
	      className: 'recharts-reference-line-line'
	    }));
	  }
	
	  return line;
	};
	
	var ReferenceLine = (0, _PureRender2.default)(_class = (_temp = _class2 = function (_Component) {
	  _inherits(ReferenceLine, _Component);
	
	  function ReferenceLine() {
	    _classCallCheck(this, ReferenceLine);
	
	    return _possibleConstructorReturn(this, (ReferenceLine.__proto__ || Object.getPrototypeOf(ReferenceLine)).apply(this, arguments));
	  }
	
	  _createClass(ReferenceLine, [{
	    key: 'getEndPoints',
	    value: function getEndPoints(isX, isY) {
	      var _props = this.props,
	          xAxis = _props.xAxis,
	          yAxis = _props.yAxis,
	          viewBox = _props.viewBox;
	      var x = viewBox.x,
	          y = viewBox.y,
	          width = viewBox.width,
	          height = viewBox.height;
	
	
	      if (isY) {
	        var value = this.props.y;
	        var scale = yAxis.scale;
	
	        var offset = scale.bandwidth ? scale.bandwidth() / 2 : 0;
	        var coord = scale(value) + offset;
	
	        if ((0, _DataUtils.validateCoordinateInRange)(coord, scale)) {
	          return yAxis.orientation === 'left' ? [{ x: x, y: coord }, { x: x + width, y: coord }] : [{ x: x + width, y: coord }, { x: x, y: coord }];
	        }
	      } else if (isX) {
	        var _value = this.props.x;
	        var _scale = xAxis.scale;
	
	        var _offset = _scale.bandwidth ? _scale.bandwidth() / 2 : 0;
	        var _coord = _scale(_value) + _offset;
	
	        if ((0, _DataUtils.validateCoordinateInRange)(_coord, _scale)) {
	          return xAxis.orientation === 'top' ? [{ x: _coord, y: y }, { x: _coord, y: y + height }] : [{ x: _coord, y: y + height }, { x: _coord, y: y }];
	        }
	      }
	
	      return null;
	    }
	  }, {
	    key: 'getLabelProps',
	    value: function getLabelProps(isX, isY) {
	      var _props2 = this.props,
	          xAxis = _props2.xAxis,
	          yAxis = _props2.yAxis,
	          labelPosition = _props2.labelPosition;
	
	
	      if (isY) {
	        var axis = yAxis;
	
	        if (axis.orientation === 'left' && labelPosition === 'end') {
	          return { dx: 6, dy: 6, textAnchor: 'start' };
	        }
	        if (axis.orientation === 'right' && labelPosition === 'start') {
	          return { dx: 6, dy: 6, textAnchor: 'start' };
	        }
	        return { dx: -6, dy: 6, textAnchor: 'end' };
	      } else if (isX) {
	        var _axis = xAxis;
	
	        if (_axis.orientation === 'top') {
	          return { dy: 6, textAnchor: 'middle' };
	        }
	        return { dy: -6, textAnchor: 'middle' };
	      }
	
	      return null;
	    }
	  }, {
	    key: 'renderLabel',
	    value: function renderLabel(isX, isY, end) {
	      var _props3 = this.props,
	          label = _props3.label,
	          stroke = _props3.stroke;
	
	      var props = _extends({}, (0, _ReactUtils.getPresentationAttributes)(label), {
	        stroke: 'none',
	        fill: stroke
	      }, end, this.getLabelProps(isX, isY));
	
	      if (_react2.default.isValidElement(label)) {
	        return _react2.default.cloneElement(label, props);
	      } else if ((0, _isFunction3.default)(label)) {
	        return label(props);
	      } else if ((0, _DataUtils.isNumOrStr)(label)) {
	        return _react2.default.createElement(
	          'g',
	          { className: 'recharts-reference-line-label' },
	          _react2.default.createElement(
	            _Text2.default,
	            props,
	            label
	          )
	        );
	      }
	
	      return null;
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _props4 = this.props,
	          x = _props4.x,
	          y = _props4.y,
	          labelPosition = _props4.labelPosition,
	          shape = _props4.shape;
	
	      var isX = (0, _DataUtils.isNumOrStr)(x);
	      var isY = (0, _DataUtils.isNumOrStr)(y);
	
	      if (!isX && !isY) {
	        return null;
	      }
	
	      var endPoints = this.getEndPoints(isX, isY);
	
	      if (!endPoints) {
	        return null;
	      }
	
	      var _endPoints = _slicedToArray(endPoints, 2),
	          start = _endPoints[0],
	          end = _endPoints[1];
	
	      var props = _extends({}, (0, _ReactUtils.getPresentationAttributes)(this.props), {
	        x1: start.x,
	        y1: start.y,
	        x2: end.x,
	        y2: end.y
	      });
	
	      return _react2.default.createElement(
	        _Layer2.default,
	        { className: 'recharts-reference-line' },
	        renderLine(shape, props),
	        this.renderLabel(isX, isY, labelPosition === 'start' ? start : end)
	      );
	    }
	  }]);
	
	  return ReferenceLine;
	}(_react.Component), _class2.displayName = 'ReferenceLine', _class2.propTypes = _extends({}, _ReactUtils.PRESENTATION_ATTRIBUTES, {
	  viewBox: _react.PropTypes.shape({
	    x: _react.PropTypes.number,
	    y: _react.PropTypes.number,
	    width: _react.PropTypes.number,
	    height: _react.PropTypes.number
	  }),
	
	  label: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.string, _react.PropTypes.element, _react.PropTypes.func]),
	
	  xAxis: _react.PropTypes.object,
	  yAxis: _react.PropTypes.object,
	
	  isFront: _react.PropTypes.bool,
	  alwaysShow: _react.PropTypes.bool,
	  x: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.string]),
	  y: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.string]),
	
	  yAxisId: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.number]),
	  xAxisId: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.number]),
	
	  labelPosition: _react.PropTypes.oneOf(['start', 'end']),
	  shape: _react.PropTypes.func
	}), _class2.defaultProps = {
	  isFront: false,
	  alwaysShow: false,
	  xAxisId: 0,
	  yAxisId: 0,
	  fill: 'none',
	  stroke: '#ccc',
	  fillOpacity: 1,
	  strokeWidth: 1,
	  labelPosition: 'end'
	}, _temp)) || _class;
	
	exports.default = ReferenceLine;

/***/ },
/* 823 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _isFunction2 = __webpack_require__(224);
	
	var _isFunction3 = _interopRequireDefault(_isFunction2);
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _class, _class2, _temp; /**
	                             * @fileOverview Reference Line
	                             */
	
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _PureRender = __webpack_require__(746);
	
	var _PureRender2 = _interopRequireDefault(_PureRender);
	
	var _Layer = __webpack_require__(747);
	
	var _Layer2 = _interopRequireDefault(_Layer);
	
	var _Dot = __webpack_require__(804);
	
	var _Dot2 = _interopRequireDefault(_Dot);
	
	var _Text = __webpack_require__(789);
	
	var _Text2 = _interopRequireDefault(_Text);
	
	var _ReactUtils = __webpack_require__(670);
	
	var _DataUtils = __webpack_require__(673);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var ReferenceDot = (0, _PureRender2.default)(_class = (_temp = _class2 = function (_Component) {
	  _inherits(ReferenceDot, _Component);
	
	  function ReferenceDot() {
	    _classCallCheck(this, ReferenceDot);
	
	    return _possibleConstructorReturn(this, (ReferenceDot.__proto__ || Object.getPrototypeOf(ReferenceDot)).apply(this, arguments));
	  }
	
	  _createClass(ReferenceDot, [{
	    key: 'getCoordinate',
	    value: function getCoordinate() {
	      var _props = this.props,
	          x = _props.x,
	          y = _props.y,
	          xAxis = _props.xAxis,
	          yAxis = _props.yAxis;
	
	      var xScale = xAxis.scale;
	      var yScale = yAxis.scale;
	      var result = {
	        cx: xScale(x) + (xScale.bandwidth ? xScale.bandwidth() / 2 : 0),
	        cy: yScale(y) + (yScale.bandwidth ? yScale.bandwidth() / 2 : 0)
	      };
	
	      if ((0, _DataUtils.validateCoordinateInRange)(result.cx, xScale) && (0, _DataUtils.validateCoordinateInRange)(result.cy, yScale)) {
	        return result;
	      }
	
	      return null;
	    }
	  }, {
	    key: 'renderLabel',
	    value: function renderLabel(coordinate) {
	      var _props2 = this.props,
	          label = _props2.label,
	          stroke = _props2.stroke;
	
	      var props = _extends({}, (0, _ReactUtils.getPresentationAttributes)(label), {
	        stroke: 'none',
	        fill: stroke,
	        x: coordinate.cx,
	        y: coordinate.cy,
	        textAnchor: 'middle',
	        verticalAnchor: 'middle'
	      });
	
	      if (_react2.default.isValidElement(label)) {
	        return _react2.default.cloneElement(label, props);
	      } else if ((0, _isFunction3.default)(label)) {
	        return label(props);
	      } else if ((0, _DataUtils.isNumOrStr)(label)) {
	        return _react2.default.createElement(
	          'g',
	          { className: 'recharts-reference-dot-label' },
	          _react2.default.createElement(
	            _Text2.default,
	            props,
	            label
	          )
	        );
	      }
	
	      return null;
	    }
	  }, {
	    key: 'renderDot',
	    value: function renderDot(option, props) {
	      var dot = void 0;
	
	      if (_react2.default.isValidElement(option)) {
	        dot = _react2.default.cloneElement(option, props);
	      } else if ((0, _isFunction3.default)(option)) {
	        dot = option(props);
	      } else {
	        dot = _react2.default.createElement(_Dot2.default, _extends({}, props, {
	          cx: props.cx,
	          cy: props.cy,
	          className: 'recharts-reference-dot-dot'
	        }));
	      }
	
	      return dot;
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _props3 = this.props,
	          x = _props3.x,
	          y = _props3.y;
	
	      var isX = (0, _DataUtils.isNumOrStr)(x);
	      var isY = (0, _DataUtils.isNumOrStr)(y);
	
	      if (!isX || !isY) {
	        return null;
	      }
	
	      var coordinate = this.getCoordinate();
	
	      if (!coordinate) {
	        return null;
	      }
	
	      var shape = this.props.shape;
	
	
	      return _react2.default.createElement(
	        _Layer2.default,
	        { className: 'recharts-reference-dot' },
	        this.renderDot(shape, _extends({}, (0, _ReactUtils.getPresentationAttributes)(this.props), coordinate)),
	        this.renderLabel(coordinate)
	      );
	    }
	  }]);
	
	  return ReferenceDot;
	}(_react.Component), _class2.displayName = 'ReferenceDot', _class2.propTypes = _extends({}, _ReactUtils.PRESENTATION_ATTRIBUTES, {
	  r: _react.PropTypes.number,
	
	  label: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.string, _react.PropTypes.func, _react.PropTypes.element]),
	
	  xAxis: _react.PropTypes.shape({ scale: _react.PropTypes.func }),
	  yAxis: _react.PropTypes.shape({ scale: _react.PropTypes.func }),
	
	  isFront: _react.PropTypes.bool,
	  alwaysShow: _react.PropTypes.bool,
	  x: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.string]),
	  y: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.string]),
	
	  yAxisId: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.number]),
	  xAxisId: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.number]),
	  shape: _react.PropTypes.oneOfType([_react.PropTypes.func, _react.PropTypes.element])
	}), _class2.defaultProps = {
	  isFront: false,
	  alwaysShow: false,
	  xAxisId: 0,
	  yAxisId: 0,
	  r: 10,
	  fill: '#fff',
	  stroke: '#ccc',
	  fillOpacity: 1,
	  strokeWidth: 1
	}, _temp)) || _class;
	
	exports.default = ReferenceDot;

/***/ },
/* 824 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _isFunction2 = __webpack_require__(224);
	
	var _isFunction3 = _interopRequireDefault(_isFunction2);
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _class, _class2, _temp; /**
	                             * @fileOverview Reference Line
	                             */
	
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _PureRender = __webpack_require__(746);
	
	var _PureRender2 = _interopRequireDefault(_PureRender);
	
	var _Layer = __webpack_require__(747);
	
	var _Layer2 = _interopRequireDefault(_Layer);
	
	var _Text = __webpack_require__(789);
	
	var _Text2 = _interopRequireDefault(_Text);
	
	var _ReactUtils = __webpack_require__(670);
	
	var _DataUtils = __webpack_require__(673);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var ReferenceArea = (0, _PureRender2.default)(_class = (_temp = _class2 = function (_Component) {
	  _inherits(ReferenceArea, _Component);
	
	  function ReferenceArea() {
	    _classCallCheck(this, ReferenceArea);
	
	    return _possibleConstructorReturn(this, (ReferenceArea.__proto__ || Object.getPrototypeOf(ReferenceArea)).apply(this, arguments));
	  }
	
	  _createClass(ReferenceArea, [{
	    key: 'getRect',
	    value: function getRect(hasX, hasY) {
	      var _props = this.props,
	          xValue1 = _props.x1,
	          xValue2 = _props.x2,
	          yValue1 = _props.y1,
	          yValue2 = _props.y2,
	          xAxis = _props.xAxis,
	          yAxis = _props.yAxis;
	
	      var xScale = xAxis.scale;
	      var yScale = yAxis.scale;
	      var xOffset = xScale.bandwidth ? xScale.bandwidth() / 2 : 0;
	      var yOffset = yScale.bandwidth ? yScale.bandwidth() / 2 : 0;
	      var xRange = xScale.range();
	      var yRange = yScale.range();
	      var x1 = void 0,
	          x2 = void 0,
	          y1 = void 0,
	          y2 = void 0;
	
	      if (hasX && (0, _DataUtils.isNumOrStr)(xValue1)) {
	        x1 = xScale(xValue1) + xOffset;
	      } else if (hasY) {
	        x1 = xRange[0];
	      }
	      if (hasX && (0, _DataUtils.isNumOrStr)(xValue2)) {
	        x2 = xScale(xValue2) + xOffset;
	      } else if (hasY) {
	        x2 = xRange[1];
	      }
	      if (hasY && (0, _DataUtils.isNumOrStr)(yValue1)) {
	        y1 = yScale(yValue1) + yOffset;
	      } else if (hasX) {
	        y1 = yRange[0];
	      }
	      if (hasY && (0, _DataUtils.isNumOrStr)(yValue2)) {
	        y2 = yScale(yValue2) + yOffset;
	      } else if (hasX) {
	        y2 = yRange[1];
	      }
	
	      if ((0, _DataUtils.validateCoordinateInRange)(x1, xScale) && (0, _DataUtils.validateCoordinateInRange)(x2, xScale) && (0, _DataUtils.validateCoordinateInRange)(y1, yScale) && (0, _DataUtils.validateCoordinateInRange)(y2, yScale)) {
	        return {
	          x: Math.min(x1, x2),
	          y: Math.min(y1, y2),
	          width: Math.abs(x2 - x1),
	          height: Math.abs(y2 - y1)
	        };
	      }
	
	      return null;
	    }
	  }, {
	    key: 'renderLabel',
	    value: function renderLabel(_ref) {
	      var x = _ref.x,
	          y = _ref.y,
	          width = _ref.width,
	          height = _ref.height;
	      var _props2 = this.props,
	          label = _props2.label,
	          stroke = _props2.stroke;
	
	      var props = _extends({}, label, {
	        stroke: 'none',
	        fill: stroke,
	        x: x + width / 2,
	        y: y + height / 2,
	        textAnchor: 'middle'
	      });
	
	      if (_react2.default.isValidElement(label)) {
	        return _react2.default.cloneElement(label, props);
	      } else if ((0, _isFunction3.default)(label)) {
	        return label(props);
	      } else if ((0, _DataUtils.isNumOrStr)(label)) {
	        return _react2.default.createElement(
	          'g',
	          { className: 'recharts-reference-area-label' },
	          _react2.default.createElement(
	            _Text2.default,
	            props,
	            label
	          )
	        );
	      }
	
	      return null;
	    }
	  }, {
	    key: 'renderRect',
	    value: function renderRect(option, props) {
	      var rect = void 0;
	
	      if (_react2.default.isValidElement(option)) {
	        rect = _react2.default.cloneElement(option, props);
	      } else if ((0, _isFunction3.default)(option)) {
	        rect = option(props);
	      } else {
	        rect = _react2.default.createElement('rect', _extends({}, props, {
	          className: 'recharts-reference-area-rect'
	        }));
	      }
	
	      return rect;
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _props3 = this.props,
	          x1 = _props3.x1,
	          x2 = _props3.x2,
	          y1 = _props3.y1,
	          y2 = _props3.y2;
	
	      var hasX = (0, _DataUtils.isNumOrStr)(x1) && (0, _DataUtils.isNumOrStr)(x2);
	      var hasY = (0, _DataUtils.isNumOrStr)(y1) && (0, _DataUtils.isNumOrStr)(y2);
	
	      if (!hasX && !hasY) {
	        return null;
	      }
	
	      var rect = this.getRect(hasX, hasY);
	
	      if (!rect) {
	        return null;
	      }
	
	      var shape = this.props.shape;
	
	
	      return _react2.default.createElement(
	        _Layer2.default,
	        { className: 'recharts-reference-area' },
	        this.renderRect(shape, _extends({}, (0, _ReactUtils.getPresentationAttributes)(this.props), rect)),
	        this.renderLabel(rect)
	      );
	    }
	  }]);
	
	  return ReferenceArea;
	}(_react.Component), _class2.displayName = 'ReferenceArea', _class2.propTypes = _extends({}, _ReactUtils.PRESENTATION_ATTRIBUTES, {
	  viewBox: _react.PropTypes.shape({
	    x: _react.PropTypes.number,
	    y: _react.PropTypes.number,
	    width: _react.PropTypes.number,
	    height: _react.PropTypes.number
	  }),
	
	  label: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.string, _react.PropTypes.func, _react.PropTypes.element]),
	
	  xAxis: _react.PropTypes.object,
	  yAxis: _react.PropTypes.object,
	
	  isFront: _react.PropTypes.bool,
	  alwaysShow: _react.PropTypes.bool,
	  x1: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.string]),
	  x2: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.string]),
	  y1: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.string]),
	  y2: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.string]),
	
	  yAxisId: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.number]),
	  xAxisId: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.number]),
	  shape: _react.PropTypes.oneOfType([_react.PropTypes.func, _react.PropTypes.element])
	}), _class2.defaultProps = {
	  isFront: false,
	  alwaysShow: false,
	  xAxisId: 0,
	  yAxisId: 0,
	  r: 10,
	  fill: '#ccc',
	  fillOpacity: 0.5,
	  stroke: 'none',
	  strokeWidth: 1
	}, _temp)) || _class;
	
	exports.default = ReferenceArea;

/***/ },
/* 825 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _isFunction2 = __webpack_require__(224);
	
	var _isFunction3 = _interopRequireDefault(_isFunction2);
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _class, _temp; /**
	                    * @fileOverview Cartesian Axis
	                    */
	
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _PureRender = __webpack_require__(746);
	
	var _DOMUtils = __webpack_require__(798);
	
	var _Layer = __webpack_require__(747);
	
	var _Layer2 = _interopRequireDefault(_Layer);
	
	var _Text = __webpack_require__(789);
	
	var _Text2 = _interopRequireDefault(_Text);
	
	var _ReactUtils = __webpack_require__(670);
	
	var _DataUtils = __webpack_require__(673);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var CartesianAxis = (_temp = _class = function (_Component) {
	  _inherits(CartesianAxis, _Component);
	
	  function CartesianAxis() {
	    _classCallCheck(this, CartesianAxis);
	
	    return _possibleConstructorReturn(this, (CartesianAxis.__proto__ || Object.getPrototypeOf(CartesianAxis)).apply(this, arguments));
	  }
	
	  _createClass(CartesianAxis, [{
	    key: 'shouldComponentUpdate',
	    value: function shouldComponentUpdate(_ref, state) {
	      var viewBox = _ref.viewBox,
	          restProps = _objectWithoutProperties(_ref, ['viewBox']);
	
	      // props.viewBox is sometimes generated every time -
	      // check that specially as object equality is likely to fail
	      var _props = this.props,
	          viewBoxOld = _props.viewBox,
	          restPropsOld = _objectWithoutProperties(_props, ['viewBox']);
	
	      return !(0, _PureRender.shallowEqual)(viewBox, viewBoxOld) || !(0, _PureRender.shallowEqual)(restProps, restPropsOld) || !(0, _PureRender.shallowEqual)(state, this.state);
	    }
	
	    /**
	     * Calculate the coordinates of endpoints in ticks
	     * @param  {Object} data The data of a simple tick
	     * @return {Object} (x1, y1): The coordinate of endpoint close to tick text
	     *  (x2, y2): The coordinate of endpoint close to axis
	     */
	
	  }, {
	    key: 'getTickLineCoord',
	    value: function getTickLineCoord(data) {
	      var _props2 = this.props,
	          x = _props2.x,
	          y = _props2.y,
	          width = _props2.width,
	          height = _props2.height,
	          orientation = _props2.orientation,
	          tickSize = _props2.tickSize;
	
	      var x1 = void 0,
	          x2 = void 0,
	          y1 = void 0,
	          y2 = void 0,
	          tx = void 0,
	          ty = void 0;
	
	      var finalTickSize = data.tickSize || tickSize;
	      var tickCoord = (0, _DataUtils.isNumber)(data.tickCoord) ? data.tickCoord : data.coordinate;
	
	      switch (orientation) {
	        case 'top':
	          x1 = x2 = data.coordinate;
	          y1 = ty = y + height - finalTickSize;
	          y2 = y + height;
	          tx = tickCoord;
	          break;
	        case 'left':
	          y1 = y2 = data.coordinate;
	          x1 = tx = x + width - finalTickSize;
	          x2 = x + width;
	          ty = tickCoord;
	          break;
	        case 'right':
	          y1 = y2 = data.coordinate;
	          x1 = tx = x + finalTickSize;
	          x2 = x;
	          ty = tickCoord;
	          break;
	        default:
	          x1 = x2 = data.coordinate;
	          y1 = ty = y + finalTickSize;
	          y2 = y;
	          tx = tickCoord;
	          break;
	      }
	
	      return { line: { x1: x1, y1: y1, x2: x2, y2: y2 }, tick: { x: tx, y: ty } };
	    }
	  }, {
	    key: 'getTickTextAnchor',
	    value: function getTickTextAnchor() {
	      var orientation = this.props.orientation;
	
	      var textAnchor = void 0;
	
	      switch (orientation) {
	        case 'left':
	          textAnchor = 'end';
	          break;
	        case 'right':
	          textAnchor = 'start';
	          break;
	        default:
	          textAnchor = 'middle';
	          break;
	      }
	
	      return textAnchor;
	    }
	  }, {
	    key: 'getTickVerticalAnchor',
	    value: function getTickVerticalAnchor() {
	      var orientation = this.props.orientation;
	
	      var verticalAnchor = 'end';
	
	      switch (orientation) {
	        case 'left':
	        case 'right':
	          verticalAnchor = 'middle';
	          break;
	        case 'top':
	          verticalAnchor = 'end';
	          break;
	        default:
	          verticalAnchor = 'start';
	          break;
	      }
	
	      return verticalAnchor;
	    }
	  }, {
	    key: 'getLabelProps',
	    value: function getLabelProps() {
	      var _props3 = this.props,
	          x = _props3.x,
	          y = _props3.y,
	          width = _props3.width,
	          height = _props3.height,
	          orientation = _props3.orientation;
	
	
	      switch (orientation) {
	        case 'left':
	          return { x: x + width, y: y - 6, textAnchor: 'middle' };
	        case 'right':
	          return { x: x, y: y - 6, textAnchor: 'middle' };
	        case 'top':
	          return { x: x + width + 6, y: y + height + 6, textAnchor: 'start' };
	        default:
	          return { x: x + width + 6, y: y + 6, textAnchor: 'start' };
	      }
	    }
	  }, {
	    key: 'renderAxisLine',
	    value: function renderAxisLine() {
	      var _props4 = this.props,
	          x = _props4.x,
	          y = _props4.y,
	          width = _props4.width,
	          height = _props4.height,
	          orientation = _props4.orientation,
	          axisLine = _props4.axisLine;
	
	      var props = _extends({}, (0, _ReactUtils.getPresentationAttributes)(this.props), {
	        fill: 'none'
	      }, (0, _ReactUtils.getPresentationAttributes)(axisLine));
	
	      switch (orientation) {
	        case 'top':
	          props = _extends({}, props, { x1: x, y1: y + height, x2: x + width, y2: y + height });
	          break;
	        case 'left':
	          props = _extends({}, props, { x1: x + width, y1: y, x2: x + width, y2: y + height });
	          break;
	        case 'right':
	          props = _extends({}, props, { x1: x, y1: y, x2: x, y2: y + height });
	          break;
	        default:
	          props = _extends({}, props, { x1: x, y1: y, x2: x + width, y2: y });
	          break;
	      }
	
	      return _react2.default.createElement('line', _extends({ className: 'recharts-cartesian-axis-line' }, props));
	    }
	  }, {
	    key: 'renderTickItem',
	    value: function renderTickItem(option, props, value) {
	      var tickItem = void 0;
	
	      if (_react2.default.isValidElement(option)) {
	        tickItem = _react2.default.cloneElement(option, props);
	      } else if ((0, _isFunction3.default)(option)) {
	        tickItem = option(props);
	      } else {
	        tickItem = _react2.default.createElement(
	          _Text2.default,
	          _extends({}, props, {
	            className: 'recharts-cartesian-axis-tick-value'
	          }),
	          value
	        );
	      }
	
	      return tickItem;
	    }
	
	    /**
	     * render the ticks
	     * @param {Array} ticks The ticks to actually render (overrides what was passed in props)
	     * @return {ReactComponent} renderedTicks
	     */
	
	  }, {
	    key: 'renderTicks',
	    value: function renderTicks(ticks) {
	      var _this2 = this;
	
	      var _props5 = this.props,
	          tickLine = _props5.tickLine,
	          stroke = _props5.stroke,
	          tick = _props5.tick,
	          tickFormatter = _props5.tickFormatter;
	
	      var finalTicks = CartesianAxis.getTicks(_extends({}, this.props, { ticks: ticks }));
	      var textAnchor = this.getTickTextAnchor();
	      var verticalAnchor = this.getTickVerticalAnchor();
	      var axisProps = (0, _ReactUtils.getPresentationAttributes)(this.props);
	      var customTickProps = (0, _ReactUtils.getPresentationAttributes)(tick);
	      var tickLineProps = _extends({}, axisProps, { fill: 'none' }, (0, _ReactUtils.getPresentationAttributes)(tickLine));
	      var items = finalTicks.map(function (entry, i) {
	        var _getTickLineCoord = _this2.getTickLineCoord(entry),
	            lineCoord = _getTickLineCoord.line,
	            tickCoord = _getTickLineCoord.tick;
	
	        var tickProps = _extends({
	          textAnchor: textAnchor,
	          verticalAnchor: verticalAnchor
	        }, axisProps, {
	          stroke: 'none', fill: stroke
	        }, customTickProps, tickCoord, {
	          index: i, payload: entry
	        });
	
	        return _react2.default.createElement(
	          _Layer2.default,
	          _extends({
	            className: 'recharts-cartesian-axis-tick',
	            key: 'tick-' + i
	          }, (0, _ReactUtils.filterEventsOfChild)(_this2.props, entry, i)),
	          tickLine && _react2.default.createElement('line', _extends({
	            className: 'recharts-cartesian-axis-tick-line'
	          }, tickLineProps, lineCoord)),
	          tick && _this2.renderTickItem(tick, tickProps, (0, _isFunction3.default)(tickFormatter) ? tickFormatter(entry.value) : entry.value)
	        );
	      });
	
	      return _react2.default.createElement(
	        'g',
	        { className: 'recharts-cartesian-axis-ticks' },
	        items
	      );
	    }
	  }, {
	    key: 'renderLabel',
	    value: function renderLabel() {
	      var _props6 = this.props,
	          label = _props6.label,
	          stroke = _props6.stroke,
	          orientation = _props6.orientation,
	          viewBox = _props6.viewBox;
	
	      var presentation = (0, _ReactUtils.getPresentationAttributes)(this.props);
	
	      if (_react2.default.isValidElement(label)) {
	        return _react2.default.cloneElement(label, _extends({}, presentation, { orientation: orientation, viewBox: viewBox }));
	      } else if ((0, _isFunction3.default)(label)) {
	        return label(this.props);
	      } else if ((0, _DataUtils.isNumOrStr)(label)) {
	        var props = _extends({}, presentation, {
	          stroke: 'none',
	          fill: stroke
	        }, this.getLabelProps());
	
	        return _react2.default.createElement(
	          'g',
	          { className: 'recharts-cartesian-axis-label' },
	          _react2.default.createElement(
	            _Text2.default,
	            props,
	            label
	          )
	        );
	      }
	
	      return null;
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _props7 = this.props,
	          axisLine = _props7.axisLine,
	          width = _props7.width,
	          height = _props7.height,
	          ticksGenerator = _props7.ticksGenerator;
	
	      var _props8 = this.props,
	          ticks = _props8.ticks,
	          noTicksProps = _objectWithoutProperties(_props8, ['ticks']);
	
	      if ((0, _isFunction3.default)(ticksGenerator)) {
	        ticks = ticks && ticks.length > 0 ? ticksGenerator(this.props) : ticksGenerator(noTicksProps);
	      }
	
	      if (width <= 0 || height <= 0 || !ticks || !ticks.length) {
	        return null;
	      }
	
	      return _react2.default.createElement(
	        _Layer2.default,
	        { className: 'recharts-cartesian-axis' },
	        axisLine && this.renderAxisLine(),
	        this.renderTicks(ticks),
	        this.renderLabel()
	      );
	    }
	  }], [{
	    key: 'getTicks',
	    value: function getTicks(props) {
	      var ticks = props.ticks,
	          viewBox = props.viewBox,
	          minTickGap = props.minTickGap,
	          orientation = props.orientation,
	          interval = props.interval,
	          tickFormatter = props.tickFormatter;
	
	
	      if (!ticks || !ticks.length) {
	        return [];
	      }
	
	      if ((0, _DataUtils.isNumber)(interval) || (0, _ReactUtils.isSsr)()) {
	        return CartesianAxis.getNumberIntervalTicks(ticks, (0, _DataUtils.isNumber)(interval) ? interval : 0);
	      }
	
	      if (interval === 'preserveStartEnd') {
	        return CartesianAxis.getTicksStart({
	          ticks: ticks, tickFormatter: tickFormatter, viewBox: viewBox, orientation: orientation, minTickGap: minTickGap
	        }, true);
	      } else if (interval === 'preserveStart') {
	        return CartesianAxis.getTicksStart({
	          ticks: ticks, tickFormatter: tickFormatter, viewBox: viewBox, orientation: orientation, minTickGap: minTickGap
	        });
	      }
	
	      return CartesianAxis.getTicksEnd({ ticks: ticks, tickFormatter: tickFormatter, viewBox: viewBox, orientation: orientation, minTickGap: minTickGap });
	    }
	  }, {
	    key: 'getNumberIntervalTicks',
	    value: function getNumberIntervalTicks(ticks, interval) {
	      return ticks.filter(function (entry, i) {
	        return i % (interval + 1) === 0;
	      });
	    }
	  }, {
	    key: 'getTicksStart',
	    value: function getTicksStart(_ref2, preserveEnd) {
	      var ticks = _ref2.ticks,
	          tickFormatter = _ref2.tickFormatter,
	          viewBox = _ref2.viewBox,
	          orientation = _ref2.orientation,
	          minTickGap = _ref2.minTickGap;
	      var x = viewBox.x,
	          y = viewBox.y,
	          width = viewBox.width,
	          height = viewBox.height;
	
	      var sizeKey = orientation === 'top' || orientation === 'bottom' ? 'width' : 'height';
	      var result = (ticks || []).slice();
	      var len = result.length;
	      var sign = len >= 2 ? Math.sign(result[1].coordinate - result[0].coordinate) : 1;
	
	      var start = void 0,
	          end = void 0;
	
	      if (sign === 1) {
	        start = sizeKey === 'width' ? x : y;
	        end = sizeKey === 'width' ? x + width : y + height;
	      } else {
	        start = sizeKey === 'width' ? x + width : y + height;
	        end = sizeKey === 'width' ? x : y;
	      }
	
	      if (preserveEnd) {
	        // Try to guarantee the tail to be displayed
	        var tail = ticks[len - 1];
	        var tailContent = (0, _isFunction3.default)(tickFormatter) ? tickFormatter(tail.value) : tail.value;
	        var tailSize = (0, _DOMUtils.getStringSize)(tailContent)[sizeKey];
	        var tailGap = sign * (tail.coordinate + sign * tailSize / 2 - end);
	        result[len - 1] = tail = _extends({}, tail, {
	          tickCoord: tailGap > 0 ? tail.coordinate - tailGap * sign : tail.coordinate
	        });
	
	        var isTailShow = sign * (tail.tickCoord - sign * tailSize / 2 - start) >= 0 && sign * (tail.tickCoord + sign * tailSize / 2 - end) <= 0;
	
	        if (isTailShow) {
	          end = tail.tickCoord - sign * (tailSize / 2 + minTickGap);
	          result[len - 1] = _extends({}, tail, { isShow: true });
	        }
	      }
	
	      var count = preserveEnd ? len - 1 : len;
	      for (var i = 0; i < count; i++) {
	        var entry = result[i];
	        var content = (0, _isFunction3.default)(tickFormatter) ? tickFormatter(entry.value) : entry.value;
	        var size = (0, _DOMUtils.getStringSize)(content)[sizeKey];
	
	        if (i === 0) {
	          var gap = sign * (entry.coordinate - sign * size / 2 - start);
	          result[i] = entry = _extends({}, entry, {
	            tickCoord: gap < 0 ? entry.coordinate - gap * sign : entry.coordinate
	          });
	        } else {
	          result[i] = entry = _extends({}, entry, { tickCoord: entry.coordinate });
	        }
	
	        var isShow = sign * (entry.tickCoord - sign * size / 2 - start) >= 0 && sign * (entry.tickCoord + sign * size / 2 - end) <= 0;
	
	        if (isShow) {
	          start = entry.tickCoord + sign * (size / 2 + minTickGap);
	          result[i] = _extends({}, entry, { isShow: true });
	        }
	      }
	
	      return result.filter(function (entry) {
	        return entry.isShow;
	      });
	    }
	  }, {
	    key: 'getTicksEnd',
	    value: function getTicksEnd(_ref3) {
	      var ticks = _ref3.ticks,
	          tickFormatter = _ref3.tickFormatter,
	          viewBox = _ref3.viewBox,
	          orientation = _ref3.orientation,
	          minTickGap = _ref3.minTickGap;
	      var x = viewBox.x,
	          y = viewBox.y,
	          width = viewBox.width,
	          height = viewBox.height;
	
	      var sizeKey = orientation === 'top' || orientation === 'bottom' ? 'width' : 'height';
	      var result = (ticks || []).slice();
	      var len = result.length;
	      var sign = len >= 2 ? Math.sign(result[1].coordinate - result[0].coordinate) : 1;
	
	      var start = void 0,
	          end = void 0;
	
	      if (sign === 1) {
	        start = sizeKey === 'width' ? x : y;
	        end = sizeKey === 'width' ? x + width : y + height;
	      } else {
	        start = sizeKey === 'width' ? x + width : y + height;
	        end = sizeKey === 'width' ? x : y;
	      }
	
	      for (var i = len - 1; i >= 0; i--) {
	        var entry = result[i];
	        var content = (0, _isFunction3.default)(tickFormatter) ? tickFormatter(entry.value) : entry.value;
	        var size = (0, _DOMUtils.getStringSize)(content)[sizeKey];
	
	        if (i === len - 1) {
	          var gap = sign * (entry.coordinate + sign * size / 2 - end);
	          result[i] = entry = _extends({}, entry, {
	            tickCoord: gap > 0 ? entry.coordinate - gap * sign : entry.coordinate
	          });
	        } else {
	          result[i] = entry = _extends({}, entry, { tickCoord: entry.coordinate });
	        }
	
	        var isShow = sign * (entry.tickCoord - sign * size / 2 - start) >= 0 && sign * (entry.tickCoord + sign * size / 2 - end) <= 0;
	
	        if (isShow) {
	          end = entry.tickCoord - sign * (size / 2 + minTickGap);
	          result[i] = _extends({}, entry, { isShow: true });
	        }
	      }
	
	      return result.filter(function (entry) {
	        return entry.isShow;
	      });
	    }
	  }]);
	
	  return CartesianAxis;
	}(_react.Component), _class.displayName = 'CartesianAxis', _class.propTypes = _extends({}, _ReactUtils.PRESENTATION_ATTRIBUTES, _ReactUtils.EVENT_ATTRIBUTES, {
	  x: _react.PropTypes.number,
	  y: _react.PropTypes.number,
	  width: _react.PropTypes.number,
	  height: _react.PropTypes.number,
	  orientation: _react.PropTypes.oneOf(['top', 'bottom', 'left', 'right']),
	  // The viewBox of svg
	  viewBox: _react.PropTypes.shape({
	    x: _react.PropTypes.number,
	    y: _react.PropTypes.number,
	    width: _react.PropTypes.number,
	    height: _react.PropTypes.number
	  }),
	  label: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.string, _react.PropTypes.func, _react.PropTypes.element]),
	  tick: _react.PropTypes.oneOfType([_react.PropTypes.bool, _react.PropTypes.func, _react.PropTypes.object, _react.PropTypes.element]),
	  axisLine: _react.PropTypes.oneOfType([_react.PropTypes.bool, _react.PropTypes.object]),
	  tickLine: _react.PropTypes.oneOfType([_react.PropTypes.bool, _react.PropTypes.object]),
	
	  minTickGap: _react.PropTypes.number,
	  ticks: _react.PropTypes.array,
	  tickSize: _react.PropTypes.number,
	  stroke: _react.PropTypes.string,
	  tickFormatter: _react.PropTypes.func,
	  ticksGenerator: _react.PropTypes.func,
	  interval: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.oneOf(['preserveStart', 'preserveEnd', 'preserveStartEnd'])])
	}), _class.defaultProps = {
	  x: 0,
	  y: 0,
	  width: 0,
	  height: 0,
	  viewBox: { x: 0, y: 0, width: 0, height: 0 },
	  // The orientation of axis
	  orientation: 'bottom',
	  // The ticks
	  ticks: [],
	
	  stroke: '#666',
	  tickLine: true,
	  axisLine: true,
	  tick: true,
	
	  minTickGap: 5,
	  // The width or height of tick
	  tickSize: 6,
	  interval: 'preserveEnd'
	}, _temp);
	exports.default = CartesianAxis;

/***/ },
/* 826 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _isFunction2 = __webpack_require__(224);
	
	var _isFunction3 = _interopRequireDefault(_isFunction2);
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _class, _class2, _temp; /**
	                             * @fileOverview Cartesian Grid
	                             */
	
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _PureRender = __webpack_require__(746);
	
	var _PureRender2 = _interopRequireDefault(_PureRender);
	
	var _ReactUtils = __webpack_require__(670);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var CartesianGrid = (0, _PureRender2.default)(_class = (_temp = _class2 = function (_Component) {
	  _inherits(CartesianGrid, _Component);
	
	  function CartesianGrid() {
	    _classCallCheck(this, CartesianGrid);
	
	    return _possibleConstructorReturn(this, (CartesianGrid.__proto__ || Object.getPrototypeOf(CartesianGrid)).apply(this, arguments));
	  }
	
	  _createClass(CartesianGrid, [{
	    key: 'renderHorizontal',
	
	
	    /**
	     * Draw the horizontal grid lines
	     * @param {Array} horizontalPoints either passed in as props or generated from function
	     * @return {Group} Horizontal lines
	     */
	    value: function renderHorizontal(horizontalPoints) {
	      var _props = this.props,
	          x = _props.x,
	          width = _props.width;
	
	
	      if (!horizontalPoints || !horizontalPoints.length) {
	        return null;
	      }
	
	      var props = (0, _ReactUtils.getPresentationAttributes)(this.props);
	      var items = horizontalPoints.map(function (entry, i) {
	        return _react2.default.createElement('line', _extends({}, props, { fill: 'none', key: 'line-' + i, x1: x, y1: entry, x2: x + width, y2: entry }));
	      });
	
	      return _react2.default.createElement(
	        'g',
	        { className: 'recharts-cartesian-grid-horizontal' },
	        items
	      );
	    }
	
	    /**
	     * Draw vertical grid lines
	     * @param {Array} verticalPoints either passed in as props or generated from function
	     * @return {Group} Vertical lines
	     */
	
	  }, {
	    key: 'renderVertical',
	    value: function renderVertical(verticalPoints) {
	      var _props2 = this.props,
	          y = _props2.y,
	          height = _props2.height;
	
	
	      if (!verticalPoints || !verticalPoints.length) {
	        return null;
	      }
	
	      var props = (0, _ReactUtils.getPresentationAttributes)(this.props);
	
	      var items = verticalPoints.map(function (entry, i) {
	        return _react2.default.createElement('line', _extends({}, props, { fill: 'none', key: 'line-' + i, x1: entry, y1: y, x2: entry, y2: y + height }));
	      });
	
	      return _react2.default.createElement(
	        'g',
	        { className: 'recharts-cartesian-grid-vertical' },
	        items
	      );
	    }
	  }, {
	    key: 'renderBackground',
	    value: function renderBackground() {
	      var fill = this.props.fill;
	
	
	      if (!fill || fill === 'none') {
	        return null;
	      }
	
	      var _props3 = this.props,
	          fillOpacity = _props3.fillOpacity,
	          x = _props3.x,
	          y = _props3.y,
	          width = _props3.width,
	          height = _props3.height;
	
	
	      return _react2.default.createElement('rect', {
	        x: x,
	        y: y,
	        width: width,
	        height: height,
	        stroke: 'none',
	        fill: fill,
	        fillOpacity: fillOpacity,
	        className: 'recharts-cartesian-grid-bg'
	      });
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _props4 = this.props,
	          x = _props4.x,
	          y = _props4.y,
	          width = _props4.width,
	          height = _props4.height,
	          horizontal = _props4.horizontal,
	          vertical = _props4.vertical,
	          horizontalCoordinatesGenerator = _props4.horizontalCoordinatesGenerator,
	          verticalCoordinatesGenerator = _props4.verticalCoordinatesGenerator,
	          xAxis = _props4.xAxis,
	          yAxis = _props4.yAxis,
	          offset = _props4.offset,
	          chartWidth = _props4.chartWidth,
	          chartHeight = _props4.chartHeight;
	
	
	      if (width <= 0 || height <= 0 || x !== +x || y !== +y) {
	        return null;
	      }
	
	      var _props5 = this.props,
	          horizontalPoints = _props5.horizontalPoints,
	          verticalPoints = _props5.verticalPoints;
	
	
	      if ((0, _isFunction3.default)(horizontalCoordinatesGenerator)) {
	        horizontalPoints = horizontalCoordinatesGenerator({ yAxis: yAxis, width: chartWidth,
	          height: chartHeight, offset: offset });
	      }
	
	      if ((0, _isFunction3.default)(verticalCoordinatesGenerator)) {
	        verticalPoints = verticalCoordinatesGenerator({ xAxis: xAxis, width: chartWidth,
	          height: chartHeight, offset: offset });
	      }
	
	      return _react2.default.createElement(
	        'g',
	        { className: 'recharts-cartesian-grid' },
	        this.renderBackground(),
	        horizontal && this.renderHorizontal(horizontalPoints),
	        vertical && this.renderVertical(verticalPoints)
	      );
	    }
	  }]);
	
	  return CartesianGrid;
	}(_react.Component), _class2.displayName = 'CartesianGrid', _class2.propTypes = _extends({}, _ReactUtils.PRESENTATION_ATTRIBUTES, {
	  x: _react.PropTypes.number,
	  y: _react.PropTypes.number,
	  width: _react.PropTypes.number,
	  height: _react.PropTypes.number,
	  horizontal: _react.PropTypes.bool,
	  vertical: _react.PropTypes.bool,
	  horizontalPoints: _react.PropTypes.arrayOf(_react.PropTypes.number),
	  verticalPoints: _react.PropTypes.arrayOf(_react.PropTypes.number),
	  horizontalCoordinatesGenerator: _react.PropTypes.func,
	  verticalCoordinatesGenerator: _react.PropTypes.func,
	  xAxis: _react.PropTypes.object,
	  yAxis: _react.PropTypes.object,
	  offset: _react.PropTypes.object,
	  chartWidth: _react.PropTypes.number,
	  chartHeight: _react.PropTypes.number
	}), _class2.defaultProps = {
	  x: 0,
	  y: 0,
	  width: 0,
	  height: 0,
	  horizontal: true,
	  vertical: true,
	  // The ordinates of horizontal grid lines
	  horizontalPoints: [],
	  // The abscissas of vertical grid lines
	  verticalPoints: [],
	
	  stroke: '#ccc',
	  fill: 'none'
	}, _temp)) || _class;
	
	exports.default = CartesianGrid;

/***/ },
/* 827 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _isFunction2 = __webpack_require__(224);
	
	var _isFunction3 = _interopRequireDefault(_isFunction2);
	
	var _uniqueId2 = __webpack_require__(813);
	
	var _uniqueId3 = _interopRequireDefault(_uniqueId2);
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _class, _class2, _temp2; /**
	                              * @fileOverview Line
	                              */
	
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactSmooth = __webpack_require__(754);
	
	var _reactSmooth2 = _interopRequireDefault(_reactSmooth);
	
	var _classnames = __webpack_require__(404);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _PureRender = __webpack_require__(746);
	
	var _PureRender2 = _interopRequireDefault(_PureRender);
	
	var _Curve = __webpack_require__(801);
	
	var _Curve2 = _interopRequireDefault(_Curve);
	
	var _Dot = __webpack_require__(804);
	
	var _Dot2 = _interopRequireDefault(_Dot);
	
	var _Layer = __webpack_require__(747);
	
	var _Layer2 = _interopRequireDefault(_Layer);
	
	var _Text = __webpack_require__(789);
	
	var _Text2 = _interopRequireDefault(_Text);
	
	var _ErrorBar = __webpack_require__(828);
	
	var _ErrorBar2 = _interopRequireDefault(_ErrorBar);
	
	var _DataUtils = __webpack_require__(673);
	
	var _ReactUtils = __webpack_require__(670);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var FACTOR = 1.0000001;
	
	var Line = (0, _PureRender2.default)(_class = (_temp2 = _class2 = function (_Component) {
	  _inherits(Line, _Component);
	
	  function Line() {
	    var _ref;
	
	    var _temp, _this, _ret;
	
	    _classCallCheck(this, Line);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Line.__proto__ || Object.getPrototypeOf(Line)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
	      isAnimationFinished: true,
	      totalLength: 0
	    }, _this.id = (0, _uniqueId3.default)('recharts-line-'), _this.pathRef = function (node) {
	      _this.animate = node;
	    }, _this.handleAnimationEnd = function () {
	      _this.setState({ isAnimationFinished: true });
	      _this.props.onAnimationEnd();
	    }, _this.handleAnimationStart = function () {
	      _this.setState({ isAnimationFinished: false });
	      _this.props.onAnimationStart();
	    }, _temp), _possibleConstructorReturn(_this, _ret);
	  }
	
	  _createClass(Line, [{
	    key: 'componentDidMount',
	
	
	    /* eslint-disable  react/no-did-mount-set-state */
	    value: function componentDidMount() {
	      var isAnimationActive = this.props.isAnimationActive;
	
	
	      if (!isAnimationActive) {
	        return;
	      }
	
	      var totalLength = this.getTotalLength();
	
	      this.setState({ totalLength: totalLength });
	    }
	
	    /* eslint-disable  react/no-did-update-set-state */
	
	  }, {
	    key: 'componentDidUpdate',
	    value: function componentDidUpdate(prevProps, prevState) {
	      var animationId = this.props.animationId;
	
	
	      if (animationId !== prevProps.animationId) {
	        var cur = this.getTotalLength();
	        var totalLength = prevState.totalLength;
	        // A hack method to trigger animation
	
	        this.setState({
	          totalLength: cur === totalLength ? cur * FACTOR : cur
	        });
	      }
	    }
	  }, {
	    key: 'getTotalLength',
	    value: function getTotalLength() {
	      var curveDom = this.animate;
	      var totalLength = curveDom && curveDom.getTotalLength && curveDom.getTotalLength() || 0;
	
	      return totalLength;
	    }
	  }, {
	    key: 'getStrokeDasharray',
	    value: function getStrokeDasharray(length, totalLength, lines) {
	      var lineLength = lines.reduce(function (pre, next) {
	        return pre + next;
	      });
	
	      var count = parseInt(length / lineLength, 10);
	      var remainLength = length % lineLength;
	      var restLength = totalLength - length;
	
	      var remainLines = [];
	      for (var i = 0, sum = 0;; sum += lines[i], ++i) {
	        if (sum + lines[i] > remainLength) {
	          remainLines = [].concat(_toConsumableArray(lines.slice(0, i)), [remainLength - sum]);
	          break;
	        }
	      }
	
	      var emptyLines = remainLines.length % 2 === 0 ? [0, restLength] : [restLength];
	
	      return [].concat(_toConsumableArray(this.repeat(lines, count)), _toConsumableArray(remainLines), emptyLines).map(function (line) {
	        return line + 'px';
	      }).join(', ');
	    }
	  }, {
	    key: 'repeat',
	    value: function repeat(lines, count) {
	      var linesUnit = lines.length % 2 !== 0 ? [].concat(_toConsumableArray(lines), [0]) : lines;
	      var result = [];
	
	      for (var i = 0; i < count; ++i) {
	        result = [].concat(_toConsumableArray(result), _toConsumableArray(linesUnit));
	      }
	
	      return result;
	    }
	  }, {
	    key: 'renderLabelItem',
	    value: function renderLabelItem(option, props, value) {
	      var labelItem = void 0;
	
	      if (_react2.default.isValidElement(option)) {
	        labelItem = _react2.default.cloneElement(option, props);
	      } else if ((0, _isFunction3.default)(option)) {
	        labelItem = option(props);
	      } else {
	        labelItem = _react2.default.createElement(
	          _Text2.default,
	          _extends({
	            key: props.key
	          }, props, {
	            className: 'recharts-line-label'
	          }),
	          value
	        );
	      }
	
	      return labelItem;
	    }
	  }, {
	    key: 'renderLabels',
	    value: function renderLabels() {
	      var _this2 = this;
	
	      var isAnimationActive = this.props.isAnimationActive;
	
	
	      if (isAnimationActive && !this.state.isAnimationFinished) {
	        return null;
	      }
	
	      var _props = this.props,
	          points = _props.points,
	          label = _props.label;
	
	      var lineProps = (0, _ReactUtils.getPresentationAttributes)(this.props);
	      var customLabelProps = (0, _ReactUtils.getPresentationAttributes)(label);
	
	      var labels = points.map(function (entry, i) {
	        var labelProps = _extends({
	          textAnchor: 'middle'
	        }, entry, lineProps, customLabelProps, {
	          index: i,
	          key: 'label-' + i
	        });
	
	        return _this2.renderLabelItem(label, labelProps, entry.value);
	      });
	
	      return _react2.default.createElement(
	        _Layer2.default,
	        { className: 'recharts-line-labels' },
	        labels
	      );
	    }
	  }, {
	    key: 'renderErrorBar',
	    value: function renderErrorBar() {
	      if (this.props.isAnimationActive && !this.state.isAnimationFinished) {
	        return null;
	      }
	
	      var _props2 = this.props,
	          points = _props2.points,
	          xAxis = _props2.xAxis,
	          yAxis = _props2.yAxis,
	          layout = _props2.layout,
	          children = _props2.children;
	
	      var errorBarItem = (0, _ReactUtils.findChildByType)(children, _ErrorBar2.default);
	
	      if (!errorBarItem) {
	        return null;
	      }
	
	      function dataPointFormatter(dataPoint, dataKey) {
	        return {
	          x: dataPoint.x,
	          y: dataPoint.y,
	          value: dataPoint.value,
	          errorVal: (0, _DataUtils.getValueByDataKey)(dataPoint.payload, dataKey)
	        };
	      }
	
	      return _react2.default.cloneElement(errorBarItem, {
	        data: points,
	        xAxis: xAxis,
	        yAxis: yAxis,
	        layout: layout,
	        dataPointFormatter: dataPointFormatter
	      });
	    }
	  }, {
	    key: 'renderDotItem',
	    value: function renderDotItem(option, props) {
	      var dotItem = void 0;
	
	      if (_react2.default.isValidElement(option)) {
	        dotItem = _react2.default.cloneElement(option, props);
	      } else if ((0, _isFunction3.default)(option)) {
	        dotItem = option(props);
	      } else {
	        dotItem = _react2.default.createElement(_Dot2.default, _extends({}, props, { className: 'recharts-line-dot' }));
	      }
	
	      return dotItem;
	    }
	  }, {
	    key: 'renderDots',
	    value: function renderDots() {
	      var _this3 = this;
	
	      var isAnimationActive = this.props.isAnimationActive;
	
	
	      if (isAnimationActive && !this.state.isAnimationFinished) {
	        return null;
	      }
	      var _props3 = this.props,
	          dot = _props3.dot,
	          points = _props3.points;
	
	      var lineProps = (0, _ReactUtils.getPresentationAttributes)(this.props);
	      var customDotProps = (0, _ReactUtils.getPresentationAttributes)(dot);
	      var dots = points.map(function (entry, i) {
	        var dotProps = _extends({
	          key: 'dot-' + i,
	          r: 3
	        }, lineProps, customDotProps, {
	          value: entry.value,
	          cx: entry.x, cy: entry.y, index: i, payload: entry.payload
	        });
	
	        return _this3.renderDotItem(dot, dotProps);
	      });
	
	      return _react2.default.createElement(
	        _Layer2.default,
	        { className: 'recharts-line-dots', key: 'dots' },
	        dots
	      );
	    }
	  }, {
	    key: 'renderCurve',
	    value: function renderCurve(needClip) {
	      var _this4 = this;
	
	      var _props4 = this.props,
	          points = _props4.points,
	          strokeDasharray = _props4.strokeDasharray,
	          isAnimationActive = _props4.isAnimationActive,
	          animationBegin = _props4.animationBegin,
	          animationDuration = _props4.animationDuration,
	          animationEasing = _props4.animationEasing,
	          onClick = _props4.onClick,
	          onMouseEnter = _props4.onMouseEnter,
	          onMouseLeave = _props4.onMouseLeave,
	          other = _objectWithoutProperties(_props4, ['points', 'strokeDasharray', 'isAnimationActive', 'animationBegin', 'animationDuration', 'animationEasing', 'onClick', 'onMouseEnter', 'onMouseLeave']);
	
	      var totalLength = this.state.totalLength;
	
	      var animationProps = {
	        isActive: isAnimationActive,
	        begin: animationBegin,
	        canBegin: totalLength > 0,
	        easing: animationEasing,
	        duration: animationDuration,
	        onAnimationEnd: this.handleAnimationEnd,
	        onAnimationStart: this.handleAnimationStart,
	        shouldReAnimate: true,
	        pathRef: this.pathRef
	      };
	      var curveProps = _extends({}, other, {
	        fill: 'none',
	        className: 'recharts-line-curve',
	        clipPath: needClip ? 'url(#clipPath-' + this.id + ')' : null,
	        onClick: onClick, onMouseEnter: onMouseEnter, onMouseLeave: onMouseLeave, points: points
	      });
	
	      if (!isAnimationActive) {
	        return _react2.default.createElement(_Curve2.default, _extends({}, curveProps, { strokeDasharray: strokeDasharray }));
	      }
	
	      if (strokeDasharray && totalLength) {
	        var _ret2 = function () {
	          var lines = strokeDasharray.split(/[,\s]+/gim).map(function (num) {
	            return parseFloat(num);
	          });
	
	          return {
	            v: _react2.default.createElement(
	              _reactSmooth2.default,
	              _extends({}, animationProps, {
	                from: { curveLen: 0 },
	                to: { curveLen: totalLength }
	              }),
	              function (_ref2) {
	                var curveLen = _ref2.curveLen;
	                return _react2.default.createElement(_Curve2.default, _extends({}, curveProps, {
	                  strokeDasharray: _this4.getStrokeDasharray(curveLen, totalLength, lines)
	                }));
	              }
	            )
	          };
	        }();
	
	        if ((typeof _ret2 === 'undefined' ? 'undefined' : _typeof(_ret2)) === "object") return _ret2.v;
	      } else if (strokeDasharray) {
	        return _react2.default.createElement(_Curve2.default, _extends({}, curveProps, {
	          pathRef: this.pathRef,
	          strokeDasharray: strokeDasharray
	        }));
	      }
	
	      return _react2.default.createElement(
	        _reactSmooth2.default,
	        _extends({}, animationProps, {
	          from: '0px ' + (totalLength === 0 ? 1 : totalLength) + 'px',
	          to: totalLength + 'px 0px',
	          attributeName: 'strokeDasharray'
	        }),
	        _react2.default.createElement(_Curve2.default, curveProps)
	      );
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _props5 = this.props,
	          dot = _props5.dot,
	          points = _props5.points,
	          label = _props5.label,
	          className = _props5.className,
	          xAxis = _props5.xAxis,
	          yAxis = _props5.yAxis,
	          top = _props5.top,
	          left = _props5.left,
	          width = _props5.width,
	          height = _props5.height;
	
	
	      if (!points || !points.length) {
	        return null;
	      }
	
	      var hasSinglePoint = points.length === 1;
	      var layerClass = (0, _classnames2.default)('recharts-line', className);
	      var needClip = xAxis && xAxis.allowDataOverflow || yAxis && yAxis.allowDataOverflow;
	
	      return _react2.default.createElement(
	        _Layer2.default,
	        { className: layerClass },
	        needClip ? _react2.default.createElement(
	          'defs',
	          null,
	          _react2.default.createElement(
	            'clipPath',
	            { id: 'clipPath-' + this.id },
	            _react2.default.createElement('rect', { x: left, y: top, width: width, height: height })
	          )
	        ) : null,
	        !hasSinglePoint && this.renderCurve(needClip),
	        this.renderErrorBar(),
	        (hasSinglePoint || dot) && this.renderDots(),
	        label && this.renderLabels()
	      );
	    }
	  }]);
	
	  return Line;
	}(_react.Component), _class2.displayName = 'Line', _class2.propTypes = _extends({}, _ReactUtils.PRESENTATION_ATTRIBUTES, _ReactUtils.EVENT_ATTRIBUTES, {
	  className: _react.PropTypes.string,
	  type: _react.PropTypes.oneOfType([_react.PropTypes.oneOf(['basis', 'basisClosed', 'basisOpen', 'linear', 'linearClosed', 'natural', 'monotoneX', 'monotoneY', 'monotone', 'step', 'stepBefore', 'stepAfter']), _react.PropTypes.func]),
	  unit: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.number]),
	  name: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.number]),
	  yAxisId: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.number]),
	  xAxisId: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.number]),
	  yAxis: _react.PropTypes.object,
	  xAxis: _react.PropTypes.object,
	  legendType: _react.PropTypes.oneOf(['line', 'square', 'rect', 'circle', 'cross', 'diamond', 'square', 'star', 'triangle', 'wye']),
	  layout: _react.PropTypes.oneOf(['horizontal', 'vertical']),
	  connectNulls: _react.PropTypes.bool,
	
	  // whether have dot in line
	  activeDot: _react.PropTypes.oneOfType([_react.PropTypes.object, _react.PropTypes.element, _react.PropTypes.func, _react.PropTypes.bool]),
	  dot: _react.PropTypes.oneOfType([_react.PropTypes.object, _react.PropTypes.element, _react.PropTypes.func, _react.PropTypes.bool]),
	  label: _react.PropTypes.oneOfType([_react.PropTypes.object, _react.PropTypes.element, _react.PropTypes.func, _react.PropTypes.bool]),
	
	  top: _react.PropTypes.number,
	  left: _react.PropTypes.number,
	  width: _react.PropTypes.number,
	  height: _react.PropTypes.number,
	  points: _react.PropTypes.arrayOf(_react.PropTypes.shape({
	    x: _react.PropTypes.number,
	    y: _react.PropTypes.number,
	    value: _react.PropTypes.value
	  })),
	  onAnimationStart: _react.PropTypes.func,
	  onAnimationEnd: _react.PropTypes.func,
	
	  isAnimationActive: _react.PropTypes.bool,
	  animationBegin: _react.PropTypes.number,
	  animationDuration: _react.PropTypes.number,
	  animationEasing: _react.PropTypes.oneOf(['ease', 'ease-in', 'ease-out', 'ease-in-out', 'linear']),
	  animationId: _react.PropTypes.number
	}), _class2.defaultProps = {
	  xAxisId: 0,
	  yAxisId: 0,
	  connectNulls: false,
	  activeDot: true,
	  dot: true,
	  legendType: 'line',
	  stroke: '#3182bd',
	  strokeWidth: 1,
	  fill: '#fff',
	  points: [],
	  isAnimationActive: !(0, _ReactUtils.isSsr)(),
	  animationBegin: 0,
	  animationDuration: 1500,
	  animationEasing: 'ease',
	
	  onAnimationStart: function onAnimationStart() {},
	  onAnimationEnd: function onAnimationEnd() {}
	}, _temp2)) || _class;
	
	exports.default = Line;

/***/ },
/* 828 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _class, _temp; /**
	                    * @fileOverview Render a group of error bar
	                   */
	
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Layer = __webpack_require__(747);
	
	var _Layer2 = _interopRequireDefault(_Layer);
	
	var _ReactUtils = __webpack_require__(670);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var ErrorBar = (_temp = _class = function (_Component) {
	  _inherits(ErrorBar, _Component);
	
	  function ErrorBar() {
	    _classCallCheck(this, ErrorBar);
	
	    return _possibleConstructorReturn(this, (ErrorBar.__proto__ || Object.getPrototypeOf(ErrorBar)).apply(this, arguments));
	  }
	
	  _createClass(ErrorBar, [{
	    key: 'renderErrorBars',
	    value: function renderErrorBars() {
	      var _props = this.props,
	          offset = _props.offset,
	          layout = _props.layout,
	          width = _props.width,
	          dataKey = _props.dataKey,
	          data = _props.data,
	          dataPointFormatter = _props.dataPointFormatter,
	          xAxis = _props.xAxis,
	          yAxis = _props.yAxis,
	          others = _objectWithoutProperties(_props, ['offset', 'layout', 'width', 'dataKey', 'data', 'dataPointFormatter', 'xAxis', 'yAxis']);
	
	      var props = (0, _ReactUtils.getPresentationAttributes)(others);
	
	      return data.map(function (entry, i) {
	        var _dataPointFormatter = dataPointFormatter(entry, dataKey),
	            x = _dataPointFormatter.x,
	            y = _dataPointFormatter.y,
	            value = _dataPointFormatter.value,
	            errorVal = _dataPointFormatter.errorVal;
	
	        if (!errorVal) {
	          return null;
	        }
	
	        var xMid = void 0,
	            yMid = void 0,
	            xMin = void 0,
	            yMin = void 0,
	            xMax = void 0,
	            yMax = void 0,
	            scale = void 0,
	            coordsTop = void 0,
	            coordsMid = void 0,
	            coordsBot = void 0,
	            lowBound = void 0,
	            highBound = void 0;
	
	        if (Array.isArray(errorVal)) {
	          lowBound = errorVal[0];
	          highBound = errorVal[1];
	        } else {
	          lowBound = errorVal;
	          highBound = errorVal;
	        }
	
	        if (layout === 'vertical') {
	          scale = xAxis.scale;
	          xMid = value;
	          yMid = y + offset;
	          xMin = scale(xMid - lowBound);
	          yMin = yMid + width;
	          xMax = scale(xMid + highBound);
	          yMax = yMid - width;
	          coordsTop = { x1: xMax, y1: yMin, x2: xMax, y2: yMax };
	          coordsMid = { x1: xMin, y1: yMid, x2: xMax, y2: yMid };
	          coordsBot = { x1: xMin, y1: yMin, x2: xMin, y2: yMax };
	        } else if (layout === 'horizontal') {
	          scale = yAxis.scale;
	          xMid = x + offset;
	          yMid = value;
	          xMin = xMid - width;
	          xMax = xMid + width;
	          yMin = scale(yMid - lowBound);
	          yMax = scale(yMid + highBound);
	          coordsTop = { x1: xMin, y1: yMax, x2: xMax, y2: yMax };
	          coordsMid = { x1: xMid, y1: yMin, x2: xMid, y2: yMax };
	          coordsBot = { x1: xMin, y1: yMin, x2: xMax, y2: yMin };
	        }
	
	        return _react2.default.createElement(
	          _Layer2.default,
	          _extends({ className: 'recharts-errorBar', key: i }, props),
	          _react2.default.createElement('line', coordsTop),
	          ';',
	          _react2.default.createElement('line', coordsMid),
	          ';',
	          _react2.default.createElement('line', coordsBot),
	          ';'
	        );
	      });
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      return _react2.default.createElement(
	        _Layer2.default,
	        { className: 'recharts-errorBars' },
	        this.renderErrorBars()
	      );
	    }
	  }]);
	
	  return ErrorBar;
	}(_react.Component), _class.propTypes = {
	  dataKey: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.number, _react.PropTypes.func]).isRequired,
	  data: _react.PropTypes.array,
	  xAxis: _react.PropTypes.object,
	  yAxis: _react.PropTypes.object,
	  layout: _react.PropTypes.string,
	  dataPointFormatter: _react.PropTypes.func,
	  stroke: _react.PropTypes.string,
	  strokeWidth: _react.PropTypes.number,
	  width: _react.PropTypes.number,
	  offset: _react.PropTypes.number
	}, _class.defaultProps = {
	  stroke: 'black',
	  strokeWidth: 1.5,
	  width: 5,
	  offset: 0,
	  layout: 'horizontal'
	}, _temp);
	exports.default = ErrorBar;

/***/ },
/* 829 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _isArray2 = __webpack_require__(261);
	
	var _isArray3 = _interopRequireDefault(_isArray2);
	
	var _isFunction2 = __webpack_require__(224);
	
	var _isFunction3 = _interopRequireDefault(_isFunction2);
	
	var _uniqueId2 = __webpack_require__(813);
	
	var _uniqueId3 = _interopRequireDefault(_uniqueId2);
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _class, _class2, _temp2; /**
	                              * @fileOverview Area
	                              */
	
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(404);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _reactSmooth = __webpack_require__(754);
	
	var _reactSmooth2 = _interopRequireDefault(_reactSmooth);
	
	var _Curve = __webpack_require__(801);
	
	var _Curve2 = _interopRequireDefault(_Curve);
	
	var _Dot = __webpack_require__(804);
	
	var _Dot2 = _interopRequireDefault(_Dot);
	
	var _Layer = __webpack_require__(747);
	
	var _Layer2 = _interopRequireDefault(_Layer);
	
	var _Text = __webpack_require__(789);
	
	var _Text2 = _interopRequireDefault(_Text);
	
	var _PureRender = __webpack_require__(746);
	
	var _PureRender2 = _interopRequireDefault(_PureRender);
	
	var _ReactUtils = __webpack_require__(670);
	
	var _DataUtils = __webpack_require__(673);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var Area = (0, _PureRender2.default)(_class = (_temp2 = _class2 = function (_Component) {
	  _inherits(Area, _Component);
	
	  function Area() {
	    var _ref;
	
	    var _temp, _this, _ret;
	
	    _classCallCheck(this, Area);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Area.__proto__ || Object.getPrototypeOf(Area)).call.apply(_ref, [this].concat(args))), _this), _this.state = { isAnimationFinished: true }, _this.id = (0, _uniqueId3.default)('recharts-area-'), _this.handleAnimationEnd = function () {
	      _this.setState({ isAnimationFinished: true });
	      _this.props.onAnimationEnd();
	    }, _this.handleAnimationStart = function () {
	      _this.setState({ isAnimationFinished: false });
	      _this.props.onAnimationStart();
	    }, _temp), _possibleConstructorReturn(_this, _ret);
	  }
	
	  _createClass(Area, [{
	    key: 'renderCurve',
	    value: function renderCurve() {
	      var _props = this.props,
	          layout = _props.layout,
	          type = _props.type,
	          curve = _props.curve,
	          points = _props.points,
	          connectNulls = _props.connectNulls;
	
	
	      return _react2.default.createElement(
	        'g',
	        null,
	        curve && _react2.default.createElement(_Curve2.default, _extends({}, (0, _ReactUtils.getPresentationAttributes)(this.props), {
	          className: 'recharts-area-curve',
	          layout: layout,
	          type: type,
	          connectNulls: connectNulls,
	          fill: 'none',
	          points: points
	        })),
	        _react2.default.createElement(_Curve2.default, _extends({}, this.props, {
	          stroke: 'none',
	          className: 'recharts-area-area'
	        }))
	      );
	    }
	  }, {
	    key: 'renderHorizontalRect',
	    value: function renderHorizontalRect(alpha) {
	      var _props2 = this.props,
	          baseLine = _props2.baseLine,
	          points = _props2.points,
	          strokeWidth = _props2.strokeWidth;
	
	      var startX = points[0].x;
	      var endX = points[points.length - 1].x;
	      var width = alpha * Math.abs(startX - endX);
	      var maxY = Math.max.apply(null, points.map(function (entry) {
	        return entry.y || 0;
	      }));
	
	      if ((0, _DataUtils.isNumber)(baseLine)) {
	        maxY = Math.max(baseLine, maxY);
	      } else {
	        maxY = Math.max(Math.max.apply(null, baseLine.map(function (entry) {
	          return entry.y || 0;
	        })), maxY);
	      }
	
	      return _react2.default.createElement('rect', {
	        x: startX < endX ? startX : startX - width,
	        y: 0,
	        width: width,
	        height: maxY + (strokeWidth || 1)
	      });
	    }
	  }, {
	    key: 'renderVerticalRect',
	    value: function renderVerticalRect(alpha) {
	      var _props3 = this.props,
	          baseLine = _props3.baseLine,
	          points = _props3.points,
	          strokeWidth = _props3.strokeWidth;
	
	      var startY = points[0].y;
	      var endY = points[points.length - 1].y;
	      var height = alpha * Math.abs(startY - endY);
	      var maxX = Math.max.apply(null, points.map(function (entry) {
	        return entry.x || 0;
	      }));
	
	      if ((0, _DataUtils.isNumber)(baseLine)) {
	        maxX = Math.max(baseLine, maxX);
	      } else {
	        maxX = Math.max(Math.max.apply(null, baseLine.map(function (entry) {
	          return entry.x || 0;
	        })), maxX);
	      }
	
	      return _react2.default.createElement('rect', {
	        x: 0,
	        y: startY < endY ? startY : startY - height,
	        width: maxX + (strokeWidth || 1),
	        height: height
	      });
	    }
	  }, {
	    key: 'renderClipRect',
	    value: function renderClipRect(alpha) {
	      var layout = this.props.layout;
	
	
	      if (layout === 'vertical') {
	        return this.renderVerticalRect(alpha);
	      }
	
	      return this.renderHorizontalRect(alpha);
	    }
	  }, {
	    key: 'renderClipPath',
	    value: function renderClipPath() {
	      var _this2 = this;
	
	      var _props4 = this.props,
	          isAnimationActive = _props4.isAnimationActive,
	          animationDuration = _props4.animationDuration,
	          animationEasing = _props4.animationEasing,
	          animationBegin = _props4.animationBegin,
	          animationId = _props4.animationId;
	
	
	      return _react2.default.createElement(
	        'defs',
	        null,
	        _react2.default.createElement(
	          'clipPath',
	          { id: 'animationClipPath-' + this.id },
	          _react2.default.createElement(
	            _reactSmooth2.default,
	            {
	              easing: animationEasing,
	              isActive: isAnimationActive,
	              duration: animationDuration,
	              key: animationId,
	              animationBegin: animationBegin,
	              onAnimationStart: this.handleAnimationStart,
	              onAnimationEnd: this.handleAnimationEnd,
	              from: { alpha: 0 },
	              to: { alpha: 1 }
	            },
	            function (_ref2) {
	              var alpha = _ref2.alpha;
	              return _this2.renderClipRect(alpha);
	            }
	          )
	        )
	      );
	    }
	  }, {
	    key: 'renderDotItem',
	    value: function renderDotItem(option, props) {
	      var dotItem = void 0;
	
	      if (_react2.default.isValidElement(option)) {
	        dotItem = _react2.default.cloneElement(option, props);
	      } else if ((0, _isFunction3.default)(option)) {
	        dotItem = option(props);
	      } else {
	        dotItem = _react2.default.createElement(_Dot2.default, _extends({}, props, { className: 'recharts-area-dot' }));
	      }
	
	      return dotItem;
	    }
	  }, {
	    key: 'renderDots',
	    value: function renderDots() {
	      var _this3 = this;
	
	      var isAnimationActive = this.props.isAnimationActive;
	
	
	      if (isAnimationActive && !this.state.isAnimationFinished) {
	        return null;
	      }
	
	      var _props5 = this.props,
	          dot = _props5.dot,
	          points = _props5.points;
	
	      var areaProps = (0, _ReactUtils.getPresentationAttributes)(this.props);
	      var customDotProps = (0, _ReactUtils.getPresentationAttributes)(dot);
	
	      var dots = points.map(function (entry, i) {
	        var dotProps = _extends({
	          key: 'dot-' + i,
	          r: 3
	        }, areaProps, customDotProps, {
	          cx: entry.x,
	          cy: entry.y,
	          index: i,
	          value: entry.value,
	          payload: entry.payload
	        });
	
	        return _this3.renderDotItem(dot, dotProps);
	      });
	
	      return _react2.default.createElement(
	        _Layer2.default,
	        { className: 'recharts-area-dots' },
	        dots
	      );
	    }
	  }, {
	    key: 'renderLabelItem',
	    value: function renderLabelItem(option, props, value) {
	      var labelItem = void 0;
	
	      if (_react2.default.isValidElement(option)) {
	        labelItem = _react2.default.cloneElement(option, props);
	      } else if ((0, _isFunction3.default)(option)) {
	        labelItem = option(props);
	      } else {
	        labelItem = _react2.default.createElement(
	          _Text2.default,
	          _extends({
	            key: props.key
	          }, props, {
	            className: 'recharts-area-label'
	          }),
	          (0, _isArray3.default)(value) ? value[1] : value
	        );
	      }
	
	      return labelItem;
	    }
	  }, {
	    key: 'renderLabels',
	    value: function renderLabels() {
	      var _this4 = this;
	
	      var isAnimationActive = this.props.isAnimationActive;
	
	
	      if (isAnimationActive && !this.state.isAnimationFinished) {
	        return null;
	      }
	
	      var _props6 = this.props,
	          points = _props6.points,
	          label = _props6.label;
	
	      var areaProps = (0, _ReactUtils.getPresentationAttributes)(this.props);
	      var customLabelProps = (0, _ReactUtils.getPresentationAttributes)(label);
	
	      var labels = points.map(function (entry, i) {
	        var labelProps = _extends({
	          textAnchor: 'middle'
	        }, entry, areaProps, customLabelProps, {
	          index: i,
	          key: 'label-' + i,
	          value: entry.value,
	          payload: entry.payload
	        });
	
	        return _this4.renderLabelItem(label, labelProps, entry.value);
	      });
	
	      return _react2.default.createElement(
	        _Layer2.default,
	        { className: 'recharts-area-labels' },
	        labels
	      );
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _props7 = this.props,
	          dot = _props7.dot,
	          label = _props7.label,
	          points = _props7.points,
	          className = _props7.className,
	          top = _props7.top,
	          left = _props7.left,
	          xAxis = _props7.xAxis,
	          yAxis = _props7.yAxis,
	          width = _props7.width,
	          height = _props7.height;
	
	
	      if (!points || !points.length) {
	        return null;
	      }
	
	      var hasSinglePoint = points.length === 1;
	      var layerClass = (0, _classnames2.default)('recharts-area', className);
	      var needClip = xAxis && xAxis.allowDataOverflow || yAxis && yAxis.allowDataOverflow;
	
	      return _react2.default.createElement(
	        _Layer2.default,
	        { className: layerClass },
	        needClip ? _react2.default.createElement(
	          'defs',
	          null,
	          _react2.default.createElement(
	            'clipPath',
	            { id: 'clipPath-' + this.id },
	            _react2.default.createElement('rect', { x: left, y: top, width: width, height: height })
	          )
	        ) : null,
	        !hasSinglePoint ? this.renderClipPath() : null,
	        !hasSinglePoint ? _react2.default.createElement(
	          _Layer2.default,
	          { clipPath: needClip ? 'url(#clipPath-' + this.id + ')' : null },
	          _react2.default.createElement(
	            _Layer2.default,
	            { clipPath: 'url(#animationClipPath-' + this.id + ')' },
	            this.renderCurve()
	          )
	        ) : null,
	        (dot || hasSinglePoint) && this.renderDots(),
	        label && this.renderLabels()
	      );
	    }
	  }]);
	
	  return Area;
	}(_react.Component), _class2.displayName = 'Area', _class2.propTypes = _extends({}, _ReactUtils.PRESENTATION_ATTRIBUTES, _ReactUtils.EVENT_ATTRIBUTES, {
	  className: _react.PropTypes.string,
	  dataKey: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.number, _react.PropTypes.func]).isRequired,
	  type: _react.PropTypes.oneOfType([_react.PropTypes.oneOf(['basis', 'basisClosed', 'basisOpen', 'linear', 'linearClosed', 'natural', 'monotoneX', 'monotoneY', 'monotone', 'step', 'stepBefore', 'stepAfter']), _react.PropTypes.func]),
	  unit: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.number]),
	  name: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.number]),
	  yAxisId: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.number]),
	  xAxisId: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.number]),
	  yAxis: _react.PropTypes.object,
	  xAxis: _react.PropTypes.object,
	  stackId: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.string]),
	  legendType: _react.PropTypes.oneOf(['line', 'square', 'rect', 'circle', 'cross', 'diamond', 'square', 'star', 'triangle', 'wye']),
	  connectNulls: _react.PropTypes.bool,
	
	  activeDot: _react.PropTypes.oneOfType([_react.PropTypes.object, _react.PropTypes.element, _react.PropTypes.func, _react.PropTypes.bool]),
	  // dot configuration
	  dot: _react.PropTypes.oneOfType([_react.PropTypes.func, _react.PropTypes.element, _react.PropTypes.object, _react.PropTypes.bool]),
	  label: _react.PropTypes.oneOfType([_react.PropTypes.func, _react.PropTypes.element, _react.PropTypes.object, _react.PropTypes.bool]),
	  // have curve configuration
	  curve: _react.PropTypes.bool,
	  layout: _react.PropTypes.oneOf(['horizontal', 'vertical']),
	  baseLine: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.array]),
	  points: _react.PropTypes.arrayOf(_react.PropTypes.shape({
	    x: _react.PropTypes.number,
	    y: _react.PropTypes.number,
	    value: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.array])
	  })),
	  onAnimationStart: _react.PropTypes.func,
	  onAnimationEnd: _react.PropTypes.func,
	
	  animationId: _react.PropTypes.number,
	  isAnimationActive: _react.PropTypes.bool,
	  animationBegin: _react.PropTypes.number,
	  animationDuration: _react.PropTypes.number,
	  animationEasing: _react.PropTypes.oneOf(['ease', 'ease-in', 'ease-out', 'ease-in-out', 'linear'])
	}), _class2.defaultProps = {
	  stroke: '#3182bd',
	  fill: '#3182bd',
	  fillOpacity: 0.6,
	  xAxisId: 0,
	  yAxisId: 0,
	  legendType: 'line',
	  connectNulls: false,
	  // points of area
	  points: [],
	  dot: false,
	  label: false,
	  curve: true,
	  activeDot: true,
	
	  isAnimationActive: !(0, _ReactUtils.isSsr)(),
	  animationBegin: 0,
	  animationDuration: 1500,
	  animationEasing: 'ease',
	
	  onAnimationStart: function onAnimationStart() {},
	  onAnimationEnd: function onAnimationEnd() {}
	}, _temp2)) || _class;
	
	exports.default = Area;

/***/ },
/* 830 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _isArray2 = __webpack_require__(261);
	
	var _isArray3 = _interopRequireDefault(_isArray2);
	
	var _isNil2 = __webpack_require__(671);
	
	var _isNil3 = _interopRequireDefault(_isNil2);
	
	var _isFunction2 = __webpack_require__(224);
	
	var _isFunction3 = _interopRequireDefault(_isFunction2);
	
	var _uniqueId2 = __webpack_require__(813);
	
	var _uniqueId3 = _interopRequireDefault(_uniqueId2);
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _class, _class2, _temp2; /**
	                              * @fileOverview Render a group of bar
	                              */
	
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(404);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _reactSmooth = __webpack_require__(754);
	
	var _reactSmooth2 = _interopRequireDefault(_reactSmooth);
	
	var _Rectangle = __webpack_require__(802);
	
	var _Rectangle2 = _interopRequireDefault(_Rectangle);
	
	var _Layer = __webpack_require__(747);
	
	var _Layer2 = _interopRequireDefault(_Layer);
	
	var _Text = __webpack_require__(789);
	
	var _Text2 = _interopRequireDefault(_Text);
	
	var _ErrorBar = __webpack_require__(828);
	
	var _ErrorBar2 = _interopRequireDefault(_ErrorBar);
	
	var _PureRender = __webpack_require__(746);
	
	var _PureRender2 = _interopRequireDefault(_PureRender);
	
	var _DataUtils = __webpack_require__(673);
	
	var _ReactUtils = __webpack_require__(670);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var Bar = (0, _PureRender2.default)(_class = (_temp2 = _class2 = function (_Component) {
	  _inherits(Bar, _Component);
	
	  function Bar() {
	    var _ref;
	
	    var _temp, _this, _ret;
	
	    _classCallCheck(this, Bar);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Bar.__proto__ || Object.getPrototypeOf(Bar)).call.apply(_ref, [this].concat(args))), _this), _this.state = { isAnimationFinished: false }, _this.id = (0, _uniqueId3.default)('recharts-bar-'), _this.handleAnimationEnd = function () {
	      _this.setState({ isAnimationFinished: true });
	      _this.props.onAnimationEnd();
	    }, _this.handleAnimationStart = function () {
	      _this.setState({ isAnimationFinished: false });
	      _this.props.onAnimationStart();
	    }, _temp), _possibleConstructorReturn(_this, _ret);
	  }
	
	  _createClass(Bar, [{
	    key: 'renderRectangle',
	    value: function renderRectangle(option, props) {
	      var rectangle = void 0;
	
	      if (_react2.default.isValidElement(option)) {
	        rectangle = _react2.default.cloneElement(option, props);
	      } else if ((0, _isFunction3.default)(option)) {
	        rectangle = option(props);
	      } else {
	        rectangle = _react2.default.createElement(_Rectangle2.default, props);
	      }
	
	      return rectangle;
	    }
	  }, {
	    key: 'renderRectangles',
	    value: function renderRectangles() {
	      var _this2 = this;
	
	      var _props = this.props,
	          data = _props.data,
	          shape = _props.shape,
	          layout = _props.layout,
	          isAnimationActive = _props.isAnimationActive,
	          animationBegin = _props.animationBegin,
	          animationDuration = _props.animationDuration,
	          animationEasing = _props.animationEasing,
	          animationId = _props.animationId;
	
	      var baseProps = (0, _ReactUtils.getPresentationAttributes)(this.props);
	      var getStyle = function getStyle(isBegin) {
	        return {
	          transform: 'scale' + (layout === 'vertical' ? 'X' : 'Y') + '(' + (isBegin ? 0 : 1) + ')'
	        };
	      };
	
	      return data.map(function (entry, index) {
	        var x = entry.x,
	            y = entry.y,
	            width = entry.width,
	            height = entry.height;
	
	        var props = _extends({}, baseProps, entry, { index: index });
	
	        if ((0, _isNil3.default)(entry.value) || !isAnimationActive) {
	          return _react2.default.createElement(
	            _Layer2.default,
	            _extends({
	              className: 'recharts-bar-rectangle'
	            }, (0, _ReactUtils.filterEventsOfChild)(_this2.props, entry, index), {
	              key: 'rectangle-' + index
	            }),
	            _this2.renderRectangle(shape, props)
	          );
	        }
	
	        var transformOrigin = '';
	
	        if (layout === 'vertical') {
	          transformOrigin = x + 'px ' + (y + height / 2) + 'px';
	        } else {
	          transformOrigin = x + width / 2 + 'px ' + (y + height) + 'px';
	        }
	
	        return _react2.default.createElement(
	          _reactSmooth2.default,
	          {
	            begin: animationBegin,
	            duration: animationDuration,
	            isActive: isAnimationActive,
	            easing: animationEasing,
	            from: getStyle(true),
	            to: getStyle(false),
	            key: 'rectangle-' + index + '-' + animationId,
	            onAnimationEnd: _this2.handleAnimationEnd,
	            onAnimationStart: _this2.handleAnimationStart
	          },
	          _react2.default.createElement(
	            _Layer2.default,
	            _extends({
	              className: 'recharts-bar-rectangle',
	              style: (0, _reactSmooth.translateStyle)({ transformOrigin: transformOrigin })
	            }, (0, _ReactUtils.filterEventsOfChild)(_this2.props, entry, index), {
	              key: 'rectangle-' + index
	            }),
	            _this2.renderRectangle(shape, props)
	          )
	        );
	      });
	    }
	  }, {
	    key: 'renderLabelItem',
	    value: function renderLabelItem(option, props, value) {
	      var labelItem = null;
	
	      if (_react2.default.isValidElement(option)) {
	        labelItem = _react2.default.cloneElement(option, props);
	      } else if ((0, _isFunction3.default)(option)) {
	        labelItem = option(props);
	      } else {
	        labelItem = _react2.default.createElement(
	          _Text2.default,
	          _extends({}, props, {
	            key: props.key,
	            className: 'recharts-bar-label'
	          }),
	          (0, _isArray3.default)(value) ? value[1] : value
	        );
	      }
	
	      return labelItem;
	    }
	  }, {
	    key: 'renderLabels',
	    value: function renderLabels() {
	      var _this3 = this;
	
	      var isAnimationActive = this.props.isAnimationActive;
	
	
	      if (isAnimationActive && !this.state.isAnimationFinished) {
	        return null;
	      }
	
	      var _props2 = this.props,
	          data = _props2.data,
	          label = _props2.label,
	          layout = _props2.layout;
	
	      var barProps = (0, _ReactUtils.getPresentationAttributes)(this.props);
	      var customLabelProps = (0, _ReactUtils.getPresentationAttributes)(label);
	      var textAnchor = layout === 'vertical' ? 'start' : 'middle';
	      var labels = data.map(function (entry, i) {
	        var x = 0;
	        var y = 0;
	
	        if (layout === 'vertical') {
	          x = 5 + entry.x + entry.width;
	          y = 5 + entry.y + entry.height / 2;
	        } else {
	          x = entry.x + entry.width / 2;
	          y = entry.y - 5;
	        }
	
	        var labelProps = _extends({
	          textAnchor: textAnchor
	        }, barProps, entry, customLabelProps, {
	          x: x,
	          y: y,
	          index: i,
	          key: 'label-' + i,
	          payload: entry.payload
	        });
	
	        var labelValue = entry.value;
	        if (label === true && entry.value && labelProps.label) {
	          labelValue = labelProps.label;
	        }
	        return _this3.renderLabelItem(label, labelProps, labelValue);
	      });
	
	      return _react2.default.createElement(
	        _Layer2.default,
	        { className: 'recharts-bar-labels' },
	        labels
	      );
	    }
	  }, {
	    key: 'renderErrorBar',
	    value: function renderErrorBar() {
	      if (this.props.isAnimationActive && !this.state.isAnimationFinished) {
	        return null;
	      }
	
	      var _props3 = this.props,
	          data = _props3.data,
	          xAxis = _props3.xAxis,
	          yAxis = _props3.yAxis,
	          layout = _props3.layout,
	          children = _props3.children;
	
	      var errorBarItem = (0, _ReactUtils.findChildByType)(children, _ErrorBar2.default);
	
	      if (!errorBarItem) {
	        return null;
	      }
	
	      var offset = layout === 'vertical' ? data[0].height / 2 : data[0].width / 2;
	
	      function dataPointFormatter(dataPoint, dataKey) {
	        return {
	          x: dataPoint.x,
	          y: dataPoint.y,
	          value: dataPoint.value,
	          errorVal: (0, _DataUtils.getValueByDataKey)(dataPoint, dataKey)
	        };
	      }
	
	      return _react2.default.cloneElement(errorBarItem, {
	        data: data,
	        xAxis: xAxis,
	        yAxis: yAxis,
	        layout: layout,
	        offset: offset,
	        dataPointFormatter: dataPointFormatter
	      });
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _props4 = this.props,
	          data = _props4.data,
	          className = _props4.className,
	          label = _props4.label,
	          xAxis = _props4.xAxis,
	          yAxis = _props4.yAxis,
	          left = _props4.left,
	          top = _props4.top,
	          width = _props4.width,
	          height = _props4.height;
	
	
	      if (!data || !data.length) {
	        return null;
	      }
	
	      var layerClass = (0, _classnames2.default)('recharts-bar', className);
	      var needClip = xAxis && xAxis.allowDataOverflow || yAxis && yAxis.allowDataOverflow;
	
	      return _react2.default.createElement(
	        _Layer2.default,
	        { className: layerClass },
	        needClip ? _react2.default.createElement(
	          'defs',
	          null,
	          _react2.default.createElement(
	            'clipPath',
	            { id: 'clipPath-' + this.id },
	            _react2.default.createElement('rect', { x: left, y: top, width: width, height: height })
	          )
	        ) : null,
	        _react2.default.createElement(
	          _Layer2.default,
	          {
	            className: 'recharts-bar-rectangles',
	            clipPath: needClip ? 'url(#clipPath-' + this.id + ')' : null
	          },
	          this.renderRectangles()
	        ),
	        label && _react2.default.createElement(
	          _Layer2.default,
	          { className: 'recharts-bar-rectangle-labels' },
	          this.renderLabels()
	        ),
	        this.renderErrorBar()
	      );
	    }
	  }]);
	
	  return Bar;
	}(_react.Component), _class2.displayName = 'Bar', _class2.propTypes = _extends({}, _ReactUtils.PRESENTATION_ATTRIBUTES, _ReactUtils.EVENT_ATTRIBUTES, {
	  className: _react.PropTypes.string,
	  layout: _react.PropTypes.oneOf(['vertical', 'horizontal']),
	  xAxisId: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.string]),
	  yAxisId: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.string]),
	  yAxis: _react.PropTypes.object,
	  xAxis: _react.PropTypes.object,
	  stackId: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.string]),
	  barSize: _react.PropTypes.number,
	  unit: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.number]),
	  name: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.number]),
	  dataKey: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.number, _react.PropTypes.func]).isRequired,
	  legendType: _react.PropTypes.oneOf(['line', 'square', 'rect', 'circle', 'cross', 'diamond', 'square', 'star', 'triangle', 'wye']),
	  minPointSize: _react.PropTypes.number,
	  maxBarSize: _react.PropTypes.number,
	
	  shape: _react.PropTypes.oneOfType([_react.PropTypes.func, _react.PropTypes.element]),
	  label: _react.PropTypes.oneOfType([_react.PropTypes.bool, _react.PropTypes.func, _react.PropTypes.object, _react.PropTypes.element]),
	  data: _react.PropTypes.arrayOf(_react.PropTypes.shape({
	    x: _react.PropTypes.number,
	    y: _react.PropTypes.number,
	    width: _react.PropTypes.number,
	    height: _react.PropTypes.number,
	    radius: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.array]),
	    value: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.array])
	  })),
	  onAnimationStart: _react.PropTypes.func,
	  onAnimationEnd: _react.PropTypes.func,
	
	  animationId: _react.PropTypes.number,
	  isAnimationActive: _react.PropTypes.bool,
	  animationBegin: _react.PropTypes.number,
	  animationDuration: _react.PropTypes.number,
	  animationEasing: _react.PropTypes.oneOf(['ease', 'ease-in', 'ease-out', 'ease-in-out', 'linear'])
	}), _class2.defaultProps = {
	  xAxisId: 0,
	  yAxisId: 0,
	  legendType: 'rect',
	  minPointSize: 0,
	  // data of bar
	  data: [],
	  layout: 'vertical',
	  isAnimationActive: !(0, _ReactUtils.isSsr)(),
	  animationBegin: 0,
	  animationDuration: 1500,
	  animationEasing: 'ease',
	
	  onAnimationStart: function onAnimationStart() {},
	  onAnimationEnd: function onAnimationEnd() {}
	}, _temp2)) || _class;
	
	exports.default = Bar;

/***/ },
/* 831 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _isFunction2 = __webpack_require__(224);
	
	var _isFunction3 = _interopRequireDefault(_isFunction2);
	
	var _uniqueId2 = __webpack_require__(813);
	
	var _uniqueId3 = _interopRequireDefault(_uniqueId2);
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _class, _class2, _temp2; /**
	                              * @fileOverview Render a group of scatters
	                              */
	
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactSmooth = __webpack_require__(754);
	
	var _reactSmooth2 = _interopRequireDefault(_reactSmooth);
	
	var _classnames = __webpack_require__(404);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _PureRender = __webpack_require__(746);
	
	var _PureRender2 = _interopRequireDefault(_PureRender);
	
	var _Layer = __webpack_require__(747);
	
	var _Layer2 = _interopRequireDefault(_Layer);
	
	var _ReactUtils = __webpack_require__(670);
	
	var _Curve = __webpack_require__(801);
	
	var _Curve2 = _interopRequireDefault(_Curve);
	
	var _Symbols = __webpack_require__(750);
	
	var _Symbols2 = _interopRequireDefault(_Symbols);
	
	var _ErrorBar = __webpack_require__(828);
	
	var _ErrorBar2 = _interopRequireDefault(_ErrorBar);
	
	var _DataUtils = __webpack_require__(673);
	
	var _AnimationDecorator = __webpack_require__(814);
	
	var _AnimationDecorator2 = _interopRequireDefault(_AnimationDecorator);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var Scatter = (0, _AnimationDecorator2.default)(_class = (0, _PureRender2.default)(_class = (_temp2 = _class2 = function (_Component) {
	  _inherits(Scatter, _Component);
	
	  function Scatter() {
	    var _ref;
	
	    var _temp, _this, _ret;
	
	    _classCallCheck(this, Scatter);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Scatter.__proto__ || Object.getPrototypeOf(Scatter)).call.apply(_ref, [this].concat(args))), _this), _this.state = { activeIndex: -1, isAnimationFinished: false }, _this.id = (0, _uniqueId3.default)('recharts-scatter-'), _temp), _possibleConstructorReturn(_this, _ret);
	  }
	
	  _createClass(Scatter, [{
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      var _this2 = this;
	
	      var animationDuration = this.props.animationDuration;
	
	      window.setTimeout(function () {
	        return _this2.setState({ isAnimationFinished: true });
	      }, animationDuration);
	    }
	  }, {
	    key: 'renderSymbolItem',
	    value: function renderSymbolItem(option, props) {
	      var symbol = void 0;
	
	      if (_react2.default.isValidElement(option)) {
	        symbol = _react2.default.cloneElement(option, props);
	      } else if ((0, _isFunction3.default)(option)) {
	        symbol = option(props);
	      } else {
	        symbol = _react2.default.createElement(_Symbols2.default, _extends({}, props, { type: option }));
	      }
	
	      return symbol;
	    }
	  }, {
	    key: 'renderSymbols',
	    value: function renderSymbols() {
	      var _this3 = this;
	
	      var _props = this.props,
	          points = _props.points,
	          shape = _props.shape,
	          activeShape = _props.activeShape,
	          activeIndex = _props.activeIndex,
	          animationBegin = _props.animationBegin,
	          animationDuration = _props.animationDuration,
	          isAnimationActive = _props.isAnimationActive,
	          animationEasing = _props.animationEasing,
	          animationId = _props.animationId;
	
	      var baseProps = (0, _ReactUtils.getPresentationAttributes)(this.props);
	
	      return points.map(function (entry, i) {
	        var props = _extends({
	          key: 'symbol-' + i
	        }, baseProps, entry);
	        return _react2.default.createElement(
	          _Layer2.default,
	          _extends({
	            className: 'recharts-scatter-symbol'
	          }, (0, _ReactUtils.filterEventsOfChild)(_this3.props, entry, i), {
	            key: 'symbol-' + i
	          }),
	          _react2.default.createElement(
	            _reactSmooth2.default,
	            {
	              from: { size: 0 },
	              to: { size: props.size },
	              duration: animationDuration,
	              begin: animationBegin,
	              isActive: isAnimationActive,
	              key: animationId,
	              easing: animationEasing
	            },
	            function (_ref2) {
	              var size = _ref2.size;
	
	              var finalProps = _extends({}, props, { size: size });
	
	              return _this3.renderSymbolItem(activeIndex === i ? activeShape : shape, finalProps);
	            }
	          )
	        );
	      });
	    }
	  }, {
	    key: 'renderErrorBar',
	    value: function renderErrorBar() {
	      if (!this.state.isAnimationFinished) {
	        return null;
	      }
	
	      var _props2 = this.props,
	          points = _props2.points,
	          xAxis = _props2.xAxis,
	          yAxis = _props2.yAxis,
	          children = _props2.children;
	
	      var errorBarItems = (0, _ReactUtils.findAllByType)(children, _ErrorBar2.default);
	
	      if (!errorBarItems) {
	        return null;
	      }
	
	      function dataPointFormatterY(dataPoint, dataKey) {
	        return {
	          x: dataPoint.cx,
	          y: dataPoint.cy,
	          value: dataPoint.y,
	          errorVal: (0, _DataUtils.getValueByDataKey)(dataPoint, dataKey)
	        };
	      }
	
	      function dataPointFormatterX(dataPoint, dataKey) {
	        return {
	          x: dataPoint.cx,
	          y: dataPoint.cy,
	          value: dataPoint.x,
	          errorVal: (0, _DataUtils.getValueByDataKey)(dataPoint, dataKey)
	        };
	      }
	
	      return errorBarItems.map(function (item, i) {
	        var direction = item.props.direction;
	
	
	        return _react2.default.cloneElement(item, {
	          key: i,
	          data: points,
	          xAxis: xAxis,
	          yAxis: yAxis,
	          layout: direction === 'x' ? 'vertical' : 'horizontal',
	          dataPointFormatter: direction === 'x' ? dataPointFormatterX : dataPointFormatterY
	        });
	      });
	    }
	  }, {
	    key: 'renderLine',
	    value: function renderLine() {
	      var _props3 = this.props,
	          points = _props3.points,
	          line = _props3.line,
	          lineType = _props3.lineType,
	          lineJointType = _props3.lineJointType;
	
	      var scatterProps = (0, _ReactUtils.getPresentationAttributes)(this.props);
	      var customLineProps = (0, _ReactUtils.getPresentationAttributes)(line);
	      var linePoints = void 0,
	          lineItem = void 0;
	
	      if (lineType === 'joint') {
	        linePoints = points.map(function (entry) {
	          return { x: entry.cx, y: entry.cy };
	        });
	      }
	      var lineProps = _extends({}, scatterProps, {
	        fill: 'none',
	        stroke: scatterProps && scatterProps.fill
	      }, customLineProps, {
	        points: linePoints
	      });
	
	      if (_react2.default.isValidElement(line)) {
	        lineItem = _react2.default.cloneElement(line, lineProps);
	      } else if ((0, _isFunction3.default)(line)) {
	        lineItem = line(lineProps);
	      } else {
	        lineItem = _react2.default.createElement(_Curve2.default, _extends({}, lineProps, { type: lineJointType }));
	      }
	
	      return _react2.default.createElement(
	        _Layer2.default,
	        { className: 'recharts-scatter-line', key: 'recharts-scatter-line' },
	        lineItem
	      );
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _props4 = this.props,
	          points = _props4.points,
	          line = _props4.line,
	          className = _props4.className,
	          xAxis = _props4.xAxis,
	          yAxis = _props4.yAxis,
	          left = _props4.left,
	          top = _props4.top,
	          width = _props4.width,
	          height = _props4.height;
	
	
	      if (!points || !points.length) {
	        return null;
	      }
	
	      var layerClass = (0, _classnames2.default)('recharts-scatter', className);
	      var needClip = xAxis && xAxis.allowDataOverflow || yAxis && yAxis.allowDataOverflow;
	
	      return _react2.default.createElement(
	        _Layer2.default,
	        {
	          className: layerClass,
	          clipPath: needClip ? 'url(#clipPath-' + this.id + ')' : null
	        },
	        needClip ? _react2.default.createElement(
	          'defs',
	          null,
	          _react2.default.createElement(
	            'clipPath',
	            { id: 'clipPath-' + this.id },
	            _react2.default.createElement('rect', { x: left, y: top, width: width, height: height })
	          )
	        ) : null,
	        line && this.renderLine(),
	        this.renderErrorBar(),
	        _react2.default.createElement(
	          _Layer2.default,
	          { key: 'recharts-scatter-symbols' },
	          this.renderSymbols()
	        )
	      );
	    }
	  }]);
	
	  return Scatter;
	}(_react.Component), _class2.displayName = 'Scatter', _class2.propTypes = _extends({}, _ReactUtils.EVENT_ATTRIBUTES, _ReactUtils.PRESENTATION_ATTRIBUTES, {
	
	  xAxisId: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.number]),
	  yAxisId: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.number]),
	  zAxisId: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.number]),
	  line: _react.PropTypes.oneOfType([_react.PropTypes.bool, _react.PropTypes.object, _react.PropTypes.func, _react.PropTypes.element]),
	  lineType: _react.PropTypes.oneOf(['fitting', 'joint']),
	  lineJointType: _react.PropTypes.oneOfType([_react.PropTypes.oneOf(['basis', 'basisClosed', 'basisOpen', 'linear', 'linearClosed', 'natural', 'monotoneX', 'monotoneY', 'monotone', 'step', 'stepBefore', 'stepAfter']), _react.PropTypes.func]),
	  legendType: _react.PropTypes.oneOf(['line', 'square', 'rect', 'circle', 'cross', 'diamond', 'star', 'triangle', 'wye']),
	  className: _react.PropTypes.string,
	
	  activeIndex: _react.PropTypes.number,
	  activeShape: _react.PropTypes.oneOfType([_react.PropTypes.object, _react.PropTypes.func, _react.PropTypes.element]),
	  shape: _react.PropTypes.oneOfType([_react.PropTypes.oneOf(['circle', 'cross', 'diamond', 'square', 'star', 'triangle', 'wye']), _react.PropTypes.element, _react.PropTypes.func]),
	  points: _react.PropTypes.arrayOf(_react.PropTypes.shape({
	    cx: _react.PropTypes.number,
	    cy: _react.PropTypes.number,
	    size: _react.PropTypes.number,
	    node: _react.PropTypes.shape({
	      x: _react.PropTypes.number,
	      y: _react.PropTypes.number,
	      z: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.string])
	    }),
	    payload: _react.PropTypes.any
	  })),
	
	  isAnimationActive: _react.PropTypes.bool,
	  animationId: _react.PropTypes.number,
	  animationBegin: _react.PropTypes.number,
	  animationDuration: _react.PropTypes.number,
	  animationEasing: _react.PropTypes.oneOf(['ease', 'ease-in', 'ease-out', 'ease-in-out', 'linear'])
	}), _class2.defaultProps = {
	  xAxisId: 0,
	  yAxisId: 0,
	  zAxisId: 0,
	  legendType: 'circle',
	  lineType: 'joint',
	  lineJointType: 'linear',
	  data: [],
	  shape: 'circle',
	
	  isAnimationActive: !(0, _ReactUtils.isSsr)(),
	  animationBegin: 0,
	  animationDuration: 400,
	  animationEasing: 'linear'
	}, _temp2)) || _class) || _class;
	
	exports.default = Scatter;

/***/ },
/* 832 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _class, _class2, _temp; /**
	                             * @fileOverview X Axis
	                             */
	
	
	var _react = __webpack_require__(1);
	
	var _PureRender = __webpack_require__(746);
	
	var _PureRender2 = _interopRequireDefault(_PureRender);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var XAxis = (0, _PureRender2.default)(_class = (_temp = _class2 = function (_Component) {
	  _inherits(XAxis, _Component);
	
	  function XAxis() {
	    _classCallCheck(this, XAxis);
	
	    return _possibleConstructorReturn(this, (XAxis.__proto__ || Object.getPrototypeOf(XAxis)).apply(this, arguments));
	  }
	
	  _createClass(XAxis, [{
	    key: 'render',
	    value: function render() {
	      return null;
	    }
	  }]);
	
	  return XAxis;
	}(_react.Component), _class2.displayName = 'XAxis', _class2.propTypes = {
	  allowDecimals: _react.PropTypes.bool,
	  hide: _react.PropTypes.bool,
	  // The name of data displayed in the axis
	  name: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.number]),
	  // The unit of data displayed in the axis
	  unit: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.number]),
	  // The unique id of x-axis
	  xAxisId: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.number]),
	  domain: _react.PropTypes.arrayOf(_react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.number, _react.PropTypes.oneOf(['auto', 'dataMin', 'dataMax'])])),
	  // The key of data displayed in the axis
	  dataKey: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.number, _react.PropTypes.func]),
	  // The width of axis which is usually calculated internally
	  width: _react.PropTypes.number,
	  // The height of axis, which need to be setted by user
	  height: _react.PropTypes.number,
	  // The orientation of axis
	  orientation: _react.PropTypes.oneOf(['top', 'bottom']),
	  type: _react.PropTypes.oneOf(['number', 'category']),
	  // Ticks can be any type when the axis is the type of category
	  // Ticks must be numbers when the axis is the type of number
	  ticks: _react.PropTypes.array,
	  // The count of ticks
	  tickCount: _react.PropTypes.number,
	  // The formatter function of tick
	  tickFormatter: _react.PropTypes.func,
	  padding: _react.PropTypes.shape({
	    left: _react.PropTypes.number,
	    right: _react.PropTypes.number
	  }),
	  allowDataOverflow: _react.PropTypes.bool,
	  scale: _react.PropTypes.oneOfType([_react.PropTypes.oneOf(['auto', 'linear', 'pow', 'sqrt', 'log', 'identity', 'time', 'band', 'point', 'ordinal', 'quantile', 'quantize', 'utcTime', 'sequential', 'threshold']), _react.PropTypes.func]),
	  label: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.string, _react.PropTypes.func, _react.PropTypes.element]),
	  tick: _react.PropTypes.oneOfType([_react.PropTypes.bool, _react.PropTypes.func, _react.PropTypes.object, _react.PropTypes.element]),
	  axisLine: _react.PropTypes.oneOfType([_react.PropTypes.bool, _react.PropTypes.object]),
	  tickLine: _react.PropTypes.oneOfType([_react.PropTypes.bool, _react.PropTypes.object]),
	  minTickGap: _react.PropTypes.number,
	  tickSize: _react.PropTypes.number,
	  interval: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.oneOf(['preserveStart', 'preserveEnd', 'preserveStartEnd'])])
	}, _class2.defaultProps = {
	  allowDecimals: true,
	  hide: false,
	  orientation: 'bottom',
	  width: 0,
	  height: 30,
	  xAxisId: 0,
	  tickCount: 5,
	  type: 'category',
	  domain: [0, 'auto'],
	  padding: { left: 0, right: 0 },
	  allowDataOverflow: false,
	  scale: 'auto'
	}, _temp)) || _class;
	
	exports.default = XAxis;

/***/ },
/* 833 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _class, _class2, _temp; /**
	                             * @fileOverview Y Axis
	                             */
	
	
	var _react = __webpack_require__(1);
	
	var _PureRender = __webpack_require__(746);
	
	var _PureRender2 = _interopRequireDefault(_PureRender);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var YAxis = (0, _PureRender2.default)(_class = (_temp = _class2 = function (_Component) {
	  _inherits(YAxis, _Component);
	
	  function YAxis() {
	    _classCallCheck(this, YAxis);
	
	    return _possibleConstructorReturn(this, (YAxis.__proto__ || Object.getPrototypeOf(YAxis)).apply(this, arguments));
	  }
	
	  _createClass(YAxis, [{
	    key: 'render',
	    value: function render() {
	      return null;
	    }
	  }]);
	
	  return YAxis;
	}(_react.Component), _class2.displayName = 'YAxis', _class2.propTypes = {
	  allowDecimals: _react.PropTypes.bool,
	  hide: _react.PropTypes.bool,
	  // The name of data displayed in the axis
	  name: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.number]),
	  // The unit of data displayed in the axis
	  unit: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.number]),
	  // The unique id of y-axis
	  yAxisId: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.number]),
	  domain: _react.PropTypes.arrayOf(_react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.number, _react.PropTypes.oneOf(['auto', 'dataMin', 'dataMax'])])),
	  // The key of data displayed in the axis
	  dataKey: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.number, _react.PropTypes.func]),
	  // Ticks can be any type when the axis is the type of category
	  // Ticks must be numbers when the axis is the type of number
	  ticks: _react.PropTypes.array,
	  // The count of ticks
	  tickCount: _react.PropTypes.number,
	  // The formatter function of tick
	  tickFormatter: _react.PropTypes.func,
	  // The width of axis, which need to be setted by user
	  width: _react.PropTypes.number,
	  // The height of axis which is usually calculated in Chart
	  height: _react.PropTypes.number,
	  // The orientation of axis
	  orientation: _react.PropTypes.oneOf(['left', 'right']),
	  type: _react.PropTypes.oneOf(['number', 'category']),
	  padding: _react.PropTypes.shape({
	    top: _react.PropTypes.number,
	    bottom: _react.PropTypes.number
	  }),
	  allowDataOverflow: _react.PropTypes.bool,
	  scale: _react.PropTypes.oneOfType([_react.PropTypes.oneOf(['auto', 'linear', 'pow', 'sqrt', 'log', 'identity', 'time', 'band', 'point', 'ordinal', 'quantile', 'quantize', 'utcTime', 'sequential', 'threshold']), _react.PropTypes.func]),
	  label: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.string, _react.PropTypes.func, _react.PropTypes.element]),
	  tick: _react.PropTypes.oneOfType([_react.PropTypes.bool, _react.PropTypes.func, _react.PropTypes.object, _react.PropTypes.element]),
	  axisLine: _react.PropTypes.oneOfType([_react.PropTypes.bool, _react.PropTypes.object]),
	  tickLine: _react.PropTypes.oneOfType([_react.PropTypes.bool, _react.PropTypes.object]),
	  minTickGap: _react.PropTypes.number,
	  tickSize: _react.PropTypes.number,
	  interval: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.oneOf(['preserveStart', 'preserveEnd', 'preserveStartEnd'])])
	}, _class2.defaultProps = {
	  allowDecimals: true,
	  hide: false,
	  orientation: 'left',
	  width: 60,
	  height: 0,
	  yAxisId: 0,
	  tickCount: 5,
	  type: 'number',
	  domain: [0, 'auto'],
	  padding: { top: 0, bottom: 0 },
	  allowDataOverflow: false,
	  scale: 'auto'
	}, _temp)) || _class;
	
	exports.default = YAxis;

/***/ },
/* 834 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _class, _class2, _temp; /**
	                             * @fileOverview Z Axis
	                             */
	
	
	var _react = __webpack_require__(1);
	
	var _PureRender = __webpack_require__(746);
	
	var _PureRender2 = _interopRequireDefault(_PureRender);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var ZAxis = (0, _PureRender2.default)(_class = (_temp = _class2 = function (_Component) {
	  _inherits(ZAxis, _Component);
	
	  function ZAxis() {
	    _classCallCheck(this, ZAxis);
	
	    return _possibleConstructorReturn(this, (ZAxis.__proto__ || Object.getPrototypeOf(ZAxis)).apply(this, arguments));
	  }
	
	  _createClass(ZAxis, [{
	    key: 'render',
	    value: function render() {
	      return null;
	    }
	  }]);
	
	  return ZAxis;
	}(_react.Component), _class2.displayName = 'ZAxis', _class2.propTypes = {
	  // The name of data displayed in the axis
	  name: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.number]),
	  // The unit of data displayed in the axis
	  unit: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.number]),
	  // The unique id of z-axis
	  zAxisId: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.number]),
	  // The key of data displayed in the axis
	  dataKey: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.number, _react.PropTypes.func]),
	  // The range of axis
	  range: _react.PropTypes.arrayOf(_react.PropTypes.number),
	  scale: _react.PropTypes.oneOfType([_react.PropTypes.oneOf(['auto', 'linear', 'pow', 'sqrt', 'log', 'identity', 'time', 'band', 'point', 'ordinal', 'quantile', 'quantize', 'utcTime', 'sequential', 'threshold']), _react.PropTypes.func])
	}, _class2.defaultProps = {
	  zAxisId: 0,
	  range: [64, 64],
	  scale: 'auto'
	}, _temp)) || _class;
	
	exports.default = ZAxis;

/***/ },
/* 835 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.LineChart = undefined;
	
	var _isFunction2 = __webpack_require__(224);
	
	var _isFunction3 = _interopRequireDefault(_isFunction2);
	
	var _isNil2 = __webpack_require__(671);
	
	var _isNil3 = _interopRequireDefault(_isNil2);
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _dec, _class, _class2, _temp; /**
	                                   * @fileOverview Line Chart
	                                   */
	
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactSmooth = __webpack_require__(754);
	
	var _reactSmooth2 = _interopRequireDefault(_reactSmooth);
	
	var _Layer = __webpack_require__(747);
	
	var _Layer2 = _interopRequireDefault(_Layer);
	
	var _Tooltip = __webpack_require__(753);
	
	var _Tooltip2 = _interopRequireDefault(_Tooltip);
	
	var _Curve = __webpack_require__(801);
	
	var _Curve2 = _interopRequireDefault(_Curve);
	
	var _Dot = __webpack_require__(804);
	
	var _Dot2 = _interopRequireDefault(_Dot);
	
	var _generateCategoricalChart = __webpack_require__(836);
	
	var _generateCategoricalChart2 = _interopRequireDefault(_generateCategoricalChart);
	
	var _Line = __webpack_require__(827);
	
	var _Line2 = _interopRequireDefault(_Line);
	
	var _ReactUtils = __webpack_require__(670);
	
	var _AnimationDecorator = __webpack_require__(814);
	
	var _AnimationDecorator2 = _interopRequireDefault(_AnimationDecorator);
	
	var _ComposedDataDecorator = __webpack_require__(845);
	
	var _ComposedDataDecorator2 = _interopRequireDefault(_ComposedDataDecorator);
	
	var _DataUtils = __webpack_require__(673);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var getCategoryAxisCoordinate = function getCategoryAxisCoordinate(_ref) {
	  var axis = _ref.axis,
	      ticks = _ref.ticks,
	      bandSize = _ref.bandSize,
	      entry = _ref.entry,
	      index = _ref.index;
	
	  if (axis.type === 'category') {
	    return ticks[index] ? ticks[index].coordinate + bandSize / 2 : null;
	  }
	
	  var value = (0, _DataUtils.getValueByDataKey)(entry, axis.dataKey);
	
	  return !(0, _isNil3.default)(value) ? axis.scale(value) : null;
	};
	/**
	 * Compose the data of each group
	 * @param {Object} props The props from the component
	 * @param  {Object} xAxis   The configuration of x-axis
	 * @param  {Object} yAxis   The configuration of y-axis
	 * @param  {String} dataKey The unique key of a group
	 * @return {Array}  Composed data
	 */
	var getComposedData = function getComposedData(_ref2) {
	  var props = _ref2.props,
	      xAxis = _ref2.xAxis,
	      yAxis = _ref2.yAxis,
	      xTicks = _ref2.xTicks,
	      yTicks = _ref2.yTicks,
	      dataKey = _ref2.dataKey,
	      bandSize = _ref2.bandSize;
	  var layout = props.layout,
	      dataStartIndex = props.dataStartIndex,
	      dataEndIndex = props.dataEndIndex;
	
	  var data = props.data.slice(dataStartIndex, dataEndIndex + 1);
	
	  return data.map(function (entry, index) {
	    var value = (0, _DataUtils.getValueByDataKey)(entry, dataKey);
	
	    if (layout === 'horizontal') {
	      return {
	        x: getCategoryAxisCoordinate({ axis: xAxis, ticks: xTicks, bandSize: bandSize, entry: entry, index: index }),
	        y: (0, _isNil3.default)(value) ? null : yAxis.scale(value),
	        value: value,
	        payload: entry
	      };
	    }
	
	    return {
	      x: (0, _isNil3.default)(value) ? null : xAxis.scale(value),
	      y: getCategoryAxisCoordinate({ axis: yAxis, ticks: yTicks, bandSize: bandSize, entry: entry, index: index }),
	      value: value,
	      payload: entry
	    };
	  });
	};
	
	var LineChart = exports.LineChart = (_dec = (0, _ComposedDataDecorator2.default)({ getComposedData: getComposedData }), (0, _AnimationDecorator2.default)(_class = _dec(_class = (_temp = _class2 = function (_Component) {
	  _inherits(LineChart, _Component);
	
	  function LineChart() {
	    _classCallCheck(this, LineChart);
	
	    return _possibleConstructorReturn(this, (LineChart.__proto__ || Object.getPrototypeOf(LineChart)).apply(this, arguments));
	  }
	
	  _createClass(LineChart, [{
	    key: 'renderCursor',
	    value: function renderCursor(_ref3) {
	      var offset = _ref3.offset;
	      var _props = this.props,
	          children = _props.children,
	          isTooltipActive = _props.isTooltipActive,
	          layout = _props.layout,
	          activeTooltipIndex = _props.activeTooltipIndex,
	          axisTicks = _props.axisTicks;
	
	      var tooltipItem = (0, _ReactUtils.findChildByType)(children, _Tooltip2.default);
	
	      if (!tooltipItem || !tooltipItem.props.cursor || !isTooltipActive || activeTooltipIndex < 0) {
	        return null;
	      }
	
	      var ticks = axisTicks;
	
	      if (!ticks || !ticks[activeTooltipIndex]) {
	        return null;
	      }
	
	      var start = ticks[activeTooltipIndex].coordinate;
	      var x1 = layout === 'horizontal' ? start : offset.left;
	      var y1 = layout === 'horizontal' ? offset.top : start;
	      var x2 = layout === 'horizontal' ? start : offset.left + offset.width;
	      var y2 = layout === 'horizontal' ? offset.top + offset.height : start;
	      var cursorProps = _extends({
	        stroke: '#ccc'
	      }, (0, _ReactUtils.getPresentationAttributes)(tooltipItem.props.cursor), {
	        points: [{ x: x1, y: y1 }, { x: x2, y: y2 }]
	      });
	
	      return _react2.default.isValidElement(tooltipItem.props.cursor) ? _react2.default.cloneElement(tooltipItem.props.cursor, cursorProps) : _react2.default.createElement(_Curve2.default, _extends({}, cursorProps, { type: 'linear', className: 'recharts-tooltip-cursor' }));
	    }
	  }, {
	    key: 'renderActiveDot',
	    value: function renderActiveDot(option, props, childIndex) {
	      var dot = void 0;
	
	      if (_react2.default.isValidElement(option)) {
	        dot = _react2.default.cloneElement(option, props);
	      } else if ((0, _isFunction3.default)(option)) {
	        dot = option(props);
	      } else {
	        dot = _react2.default.createElement(_Dot2.default, _extends({}, props, { className: 'recharts-line-active-dot' }));
	      }
	
	      return _react2.default.createElement(
	        _reactSmooth2.default,
	        {
	          from: 'scale(0)',
	          to: 'scale(1)',
	          duration: 400,
	          key: 'dot-' + childIndex,
	          attributeName: 'transform'
	        },
	        _react2.default.createElement(
	          _Layer2.default,
	          { style: { transformOrigin: 'center center' } },
	          dot
	        )
	      );
	    }
	    /**
	     * Draw the main part of line chart
	     * @param  {Array} items     All the instance of Line
	     * @param  {Object} xAxisMap The configuration of all x-axes
	     * @param  {Object} yAxisMap The configuration of all y-axes
	     * @param  {Object} offset   The offset of main part in the svg element
	     * @return {ReactComponent}  All the instances of Line
	     */
	
	  }, {
	    key: 'renderItems',
	    value: function renderItems(items, xAxisMap, yAxisMap, offset) {
	      var _this2 = this;
	
	      var _props2 = this.props,
	          children = _props2.children,
	          layout = _props2.layout,
	          isTooltipActive = _props2.isTooltipActive,
	          activeTooltipIndex = _props2.activeTooltipIndex,
	          animationId = _props2.animationId,
	          allComposedData = _props2.allComposedData;
	
	      var tooltipItem = (0, _ReactUtils.findChildByType)(children, _Tooltip2.default);
	      var hasDot = tooltipItem && isTooltipActive;
	      var dotItems = [];
	
	      var lineItems = items.map(function (child, i) {
	        var _child$props = child.props,
	            dataKey = _child$props.dataKey,
	            stroke = _child$props.stroke,
	            activeDot = _child$props.activeDot;
	
	        var points = allComposedData[i];
	        var activePoint = points[activeTooltipIndex];
	
	        if (hasDot && activeDot && activePoint) {
	          var dotProps = _extends({
	            index: activeTooltipIndex,
	            dataKey: dataKey,
	            cx: activePoint.x, cy: activePoint.y, r: 4,
	            fill: stroke, strokeWidth: 2, stroke: '#fff',
	            payload: activePoint.payload,
	            value: activePoint.value
	          }, (0, _ReactUtils.getPresentationAttributes)(activeDot));
	          dotItems.push(_this2.renderActiveDot(activeDot, dotProps, i));
	        }
	
	        return _react2.default.cloneElement(child, _extends({
	          key: 'line-' + i
	        }, offset, {
	          layout: layout,
	          points: points,
	          animationId: animationId,
	          xAxis: xAxisMap[child.props.xAxisId],
	          yAxis: yAxisMap[child.props.yAxisId]
	        }));
	      }, this);
	
	      return _react2.default.createElement(
	        _Layer2.default,
	        { className: 'recharts-line-chart-wrapper' },
	        _react2.default.createElement(
	          _Layer2.default,
	          { className: 'recharts-line-chart' },
	          lineItems
	        ),
	        _react2.default.createElement(
	          _Layer2.default,
	          { className: 'recharts-line-chart-dot' },
	          dotItems
	        )
	      );
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _props3 = this.props,
	          isComposed = _props3.isComposed,
	          xAxisMap = _props3.xAxisMap,
	          yAxisMap = _props3.yAxisMap,
	          offset = _props3.offset,
	          graphicalItems = _props3.graphicalItems;
	
	
	      return _react2.default.createElement(
	        _Layer2.default,
	        { className: 'recharts-line-graphical' },
	        !isComposed && this.renderCursor({ offset: offset }),
	        this.renderItems(graphicalItems, xAxisMap, yAxisMap, offset)
	      );
	    }
	  }]);
	
	  return LineChart;
	}(_react.Component), _class2.displayName = 'LineChart', _class2.propTypes = {
	  allComposedData: _react.PropTypes.array,
	  axisTicks: _react.PropTypes.array,
	  layout: _react.PropTypes.oneOf(['horizontal', 'vertical']),
	  dataStartIndex: _react.PropTypes.number,
	  dataEndIndex: _react.PropTypes.number,
	  data: _react.PropTypes.array,
	  isTooltipActive: _react.PropTypes.bool,
	  activeTooltipIndex: _react.PropTypes.number,
	  xAxisMap: _react.PropTypes.object,
	  yAxisMap: _react.PropTypes.object,
	  offset: _react.PropTypes.object,
	  graphicalItems: _react.PropTypes.array,
	  children: _react.PropTypes.oneOfType([_react.PropTypes.arrayOf(_react.PropTypes.node), _react.PropTypes.node]),
	  // used internally
	  isComposed: _react.PropTypes.bool,
	  animationId: _react.PropTypes.number
	}, _temp)) || _class) || _class);
	exports.default = (0, _generateCategoricalChart2.default)(LineChart, _Line2.default);

/***/ },
/* 836 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _sortBy2 = __webpack_require__(686);
	
	var _sortBy3 = _interopRequireDefault(_sortBy2);
	
	var _isFunction2 = __webpack_require__(224);
	
	var _isFunction3 = _interopRequireDefault(_isFunction2);
	
	var _range2 = __webpack_require__(818);
	
	var _range3 = _interopRequireDefault(_range2);
	
	var _isNil2 = __webpack_require__(671);
	
	var _isNil3 = _interopRequireDefault(_isNil2);
	
	var _throttle2 = __webpack_require__(837);
	
	var _throttle3 = _interopRequireDefault(_throttle2);
	
	var _uniqueId2 = __webpack_require__(813);
	
	var _uniqueId3 = _interopRequireDefault(_uniqueId2);
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(404);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _Surface = __webpack_require__(669);
	
	var _Surface2 = _interopRequireDefault(_Surface);
	
	var _Layer = __webpack_require__(747);
	
	var _Layer2 = _interopRequireDefault(_Layer);
	
	var _Tooltip = __webpack_require__(753);
	
	var _Tooltip2 = _interopRequireDefault(_Tooltip);
	
	var _Legend = __webpack_require__(748);
	
	var _Legend2 = _interopRequireDefault(_Legend);
	
	var _LogUtils = __webpack_require__(787);
	
	var _ReactUtils = __webpack_require__(670);
	
	var _CartesianAxis = __webpack_require__(825);
	
	var _CartesianAxis2 = _interopRequireDefault(_CartesianAxis);
	
	var _CartesianGrid = __webpack_require__(826);
	
	var _CartesianGrid2 = _interopRequireDefault(_CartesianGrid);
	
	var _ReferenceLine = __webpack_require__(822);
	
	var _ReferenceLine2 = _interopRequireDefault(_ReferenceLine);
	
	var _ReferenceDot = __webpack_require__(823);
	
	var _ReferenceDot2 = _interopRequireDefault(_ReferenceDot);
	
	var _ReferenceArea = __webpack_require__(824);
	
	var _ReferenceArea2 = _interopRequireDefault(_ReferenceArea);
	
	var _XAxis = __webpack_require__(832);
	
	var _XAxis2 = _interopRequireDefault(_XAxis);
	
	var _YAxis = __webpack_require__(833);
	
	var _YAxis2 = _interopRequireDefault(_YAxis);
	
	var _Brush = __webpack_require__(817);
	
	var _Brush2 = _interopRequireDefault(_Brush);
	
	var _DOMUtils = __webpack_require__(798);
	
	var _DataUtils = __webpack_require__(673);
	
	var _CartesianUtils = __webpack_require__(838);
	
	var _PureRender = __webpack_require__(746);
	
	var _Events = __webpack_require__(843);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var ORIENT_MAP = {
	  xAxis: ['bottom', 'top'],
	  yAxis: ['left', 'right']
	};
	
	var originCoordinate = { x: 0, y: 0 };
	
	var generateCategoricalChart = function generateCategoricalChart(ChartComponent, GraphicalChild) {
	  var _class, _temp;
	
	  var CategoricalChartWrapper = (_temp = _class = function (_Component) {
	    _inherits(CategoricalChartWrapper, _Component);
	
	    function CategoricalChartWrapper(props) {
	      _classCallCheck(this, CategoricalChartWrapper);
	
	      var _this = _possibleConstructorReturn(this, (CategoricalChartWrapper.__proto__ || Object.getPrototypeOf(CategoricalChartWrapper)).call(this, props));
	
	      _this.handleReceiveSyncEvent = function (cId, chartId, data) {
	        var _this$props = _this.props,
	            syncId = _this$props.syncId,
	            layout = _this$props.layout;
	
	
	        if (syncId === cId && chartId !== _this.uniqueChartId) {
	          var dataStartIndex = data.dataStartIndex,
	              dataEndIndex = data.dataEndIndex;
	
	
	          if (!(0, _isNil3.default)(data.dataStartIndex) || !(0, _isNil3.default)(data.dataEndIndex)) {
	            _this.setState(_extends({
	              dataStartIndex: dataStartIndex,
	              dataEndIndex: dataEndIndex
	            }, _this.updateStateOfAxisMapsOffsetAndStackGroups({ props: _this.props, dataStartIndex: dataStartIndex, dataEndIndex: dataEndIndex })));
	          } else if (!(0, _isNil3.default)(data.activeTooltipIndex)) {
	            var chartX = data.chartX,
	                chartY = data.chartY,
	                activeTooltipIndex = data.activeTooltipIndex;
	            var _this$state = _this.state,
	                offset = _this$state.offset,
	                tooltipTicks = _this$state.tooltipTicks;
	
	            var viewBox = _extends({}, offset, { x: offset.left, y: offset.top });
	            // When a categotical chart is combined with another chart, the value of chartX
	            // and chartY may beyond the boundaries.
	            var validateChartX = Math.min(chartX, viewBox.x + viewBox.width);
	            var validateChartY = Math.min(chartY, viewBox.y + viewBox.height);
	            var activeLabel = tooltipTicks[activeTooltipIndex] && tooltipTicks[activeTooltipIndex].value;
	            var activePayload = _this.getTooltipContent(activeTooltipIndex);
	            var activeCoordinate = tooltipTicks[activeTooltipIndex] ? {
	              x: layout === 'horizontal' ? tooltipTicks[activeTooltipIndex].coordinate : validateChartX,
	              y: layout === 'horizontal' ? validateChartY : tooltipTicks[activeTooltipIndex].coordinate
	            } : originCoordinate;
	
	            _this.setState(_extends({}, data, { activeLabel: activeLabel, activeCoordinate: activeCoordinate, activePayload: activePayload }));
	          } else {
	            _this.setState(data);
	          }
	        }
	      };
	
	      _this.handleBrushChange = function (_ref) {
	        var startIndex = _ref.startIndex,
	            endIndex = _ref.endIndex;
	
	        // Only trigger changes if the extents of the brush have actually changed
	        if (startIndex !== _this.state.dataStartIndex || endIndex !== _this.state.dataEndIndex) {
	          _this.setState(_extends({
	            dataStartIndex: startIndex,
	            dataEndIndex: endIndex
	          }, _this.updateStateOfAxisMapsOffsetAndStackGroups({ props: _this.props, dataStartIndex: startIndex, dataEndIndex: endIndex })));
	
	          _this.triggerSyncEvent({
	            dataStartIndex: startIndex,
	            dataEndIndex: endIndex
	          });
	        }
	      };
	
	      _this.handleMouseEnter = function (e) {
	        var onMouseEnter = _this.props.onMouseEnter;
	
	        var mouse = _this.getMouseInfo(e);
	
	        if (mouse) {
	          var nextState = _extends({}, mouse, { isTooltipActive: true });
	          _this.setState(nextState);
	          _this.triggerSyncEvent(nextState);
	
	          if ((0, _isFunction3.default)(onMouseEnter)) {
	            onMouseEnter(nextState, e);
	          }
	        }
	      };
	
	      _this.triggeredAfterMouseMove = function (e) {
	        var onMouseMove = _this.props.onMouseMove;
	
	        var mouse = _this.getMouseInfo(e);
	        var nextState = mouse ? _extends({}, mouse, { isTooltipActive: true }) : { isTooltipActive: false };
	
	        _this.setState(nextState);
	        _this.triggerSyncEvent(nextState);
	
	        if ((0, _isFunction3.default)(onMouseMove)) {
	          onMouseMove(nextState, e);
	        }
	      };
	
	      _this.handleMouseMove = function (e) {
	        if (e && (0, _isFunction3.default)(e.persist)) {
	          e.persist();
	          _this.triggeredAfterMouseMove(e);
	        }
	      };
	
	      _this.handleMouseLeave = function (e) {
	        var onMouseLeave = _this.props.onMouseLeave;
	
	        var nextState = { isTooltipActive: false };
	
	        _this.setState(nextState);
	        _this.triggerSyncEvent(nextState);
	
	        if ((0, _isFunction3.default)(onMouseLeave)) {
	          onMouseLeave(nextState, e);
	        }
	      };
	
	      _this.handleClick = function (e) {
	        var onClick = _this.props.onClick;
	
	
	        if ((0, _isFunction3.default)(onClick)) {
	          var mouse = _this.getMouseInfo(e);
	
	          onClick(mouse, e);
	        }
	      };
	
	      _this.handleMouseDown = function (e) {
	        var onMouseDown = _this.props.onMouseDown;
	
	
	        if ((0, _isFunction3.default)(onMouseDown)) {
	          var mouse = _this.getMouseInfo(e);
	
	          onMouseDown(mouse, e);
	        }
	      };
	
	      _this.handleMouseUp = function (e) {
	        var onMouseUp = _this.props.onMouseUp;
	
	
	        if ((0, _isFunction3.default)(onMouseUp)) {
	          var mouse = _this.getMouseInfo(e);
	
	          onMouseUp(mouse, e);
	        }
	      };
	
	      _this.handleTouchMove = function (e) {
	        if (e.changedTouches != null && e.changedTouches.length > 0) {
	          _this.handleMouseMove(e.changedTouches[0]);
	        }
	      };
	
	      _this.verticalCoordinatesGenerator = function (_ref2) {
	        var xAxis = _ref2.xAxis,
	            width = _ref2.width,
	            height = _ref2.height,
	            offset = _ref2.offset;
	        return (0, _CartesianUtils.getCoordinatesOfGrid)(_CartesianAxis2.default.getTicks(_extends({}, _CartesianAxis2.default.defaultProps, xAxis, {
	          ticks: (0, _CartesianUtils.getTicksOfAxis)(xAxis, true),
	          viewBox: { x: 0, y: 0, width: width, height: height }
	        })), offset.left, offset.left + offset.width);
	      };
	
	      _this.horizontalCoordinatesGenerator = function (_ref3) {
	        var yAxis = _ref3.yAxis,
	            width = _ref3.width,
	            height = _ref3.height,
	            offset = _ref3.offset;
	        return (0, _CartesianUtils.getCoordinatesOfGrid)(_CartesianAxis2.default.getTicks(_extends({}, _CartesianAxis2.default.defaultProps, yAxis, {
	          ticks: (0, _CartesianUtils.getTicksOfAxis)(yAxis, true),
	          viewBox: { x: 0, y: 0, width: width, height: height }
	        })), offset.top, offset.top + offset.height);
	      };
	
	      _this.axesTicksGenerator = function (axis) {
	        return (0, _CartesianUtils.getTicksOfAxis)(axis, true);
	      };
	
	      _this.tooltipTicksGenerator = function (_ref4) {
	        var layout = _ref4.layout,
	            xAxisMap = _ref4.xAxisMap,
	            yAxisMap = _ref4.yAxisMap;
	
	        var axisMap = layout === 'horizontal' ? xAxisMap : yAxisMap;
	        var axis = (0, _DataUtils.getAnyElementOfObject)(axisMap);
	        var tooltipTicks = (0, _CartesianUtils.getTicksOfAxis)(axis, false, true);
	
	        return {
	          tooltipTicks: tooltipTicks,
	          orderedTooltipTicks: (0, _sortBy3.default)(tooltipTicks, function (o) {
	            return o.coordinate;
	          }),
	          tooltipAxis: axis
	        };
	      };
	
	      var defaultState = _this.createDefaultState(props);
	      _this.state = _extends({}, defaultState, { updateId: 0, isLegendReady: true
	      }, _this.updateStateOfAxisMapsOffsetAndStackGroups(_extends({ props: props }, defaultState)));
	      _this.validateAxes();
	      _this.uniqueChartId = (0, _uniqueId3.default)('recharts');
	
	      if (props.throttleDelay) {
	        _this.triggeredAfterMouseMove = (0, _throttle3.default)(_this.triggeredAfterMouseMove, props.throttleDelay);
	      }
	      return _this;
	    }
	
	    /* eslint-disable  react/no-did-mount-set-state */
	
	
	    _createClass(CategoricalChartWrapper, [{
	      key: 'componentDidMount',
	      value: function componentDidMount() {
	        if (!(0, _isNil3.default)(this.props.syncId)) {
	          this.addListener();
	        }
	
	        if (this.legendInstance) {
	          var _state = this.state,
	              dataStartIndex = _state.dataStartIndex,
	              dataEndIndex = _state.dataEndIndex;
	
	
	          this.setState(this.updateStateOfAxisMapsOffsetAndStackGroups({
	            props: this.props, dataStartIndex: dataStartIndex, dataEndIndex: dataEndIndex
	          }));
	        }
	      }
	    }, {
	      key: 'componentWillReceiveProps',
	      value: function componentWillReceiveProps(nextProps) {
	        var _props = this.props,
	            data = _props.data,
	            children = _props.children,
	            width = _props.width,
	            height = _props.height,
	            layout = _props.layout,
	            stackOffset = _props.stackOffset,
	            margin = _props.margin;
	
	
	        if (nextProps.data !== data || nextProps.width !== width || nextProps.height !== height || nextProps.layout !== layout || nextProps.stackOffset !== stackOffset || !(0, _PureRender.shallowEqual)(nextProps.margin, margin)) {
	          var defaultState = this.createDefaultState(nextProps);
	          this.setState(_extends({}, defaultState, { updateId: this.state.updateId + 1
	          }, this.updateStateOfAxisMapsOffsetAndStackGroups(_extends({ props: nextProps }, defaultState))));
	        } else if (!(0, _ReactUtils.isChildrenEqual)(nextProps.children, children)) {
	          var _defaultState = this.createDefaultState(nextProps);
	          this.setState(_extends({}, _defaultState, this.updateStateOfAxisMapsOffsetAndStackGroups(_extends({ props: nextProps }, _defaultState))));
	        }
	        // add syncId
	        if ((0, _isNil3.default)(this.props.syncId) && !(0, _isNil3.default)(nextProps.syncId)) {
	          this.addListener();
	        }
	        // remove syncId
	        if (!(0, _isNil3.default)(this.props.syncId) && (0, _isNil3.default)(nextProps.syncId)) {
	          this.removeListener();
	        }
	      }
	    }, {
	      key: 'componentWillUnmount',
	      value: function componentWillUnmount() {
	        if (!(0, _isNil3.default)(this.props.syncId)) {
	          this.removeListener();
	        }
	        if (typeof this.triggeredAfterMouseMove.cancel === 'function') {
	          this.triggeredAfterMouseMove.cancel();
	        }
	      }
	      /**
	      * Get the configuration of all x-axis or y-axis
	      * @param  {Object} props          Latest props
	      * @param  {String} axisType       The type of axis
	      * @param  {Array}  graphicalItems The instances of item
	      * @param  {Object} stackGroups    The items grouped by axisId and stackId
	      * @param {Number} dataStartIndex  The start index of the data series when a brush is applied
	      * @param {Number} dataEndIndex    The end index of the data series when a brush is applied
	      * @return {Object}          Configuration
	      */
	
	    }, {
	      key: 'getAxisMap',
	      value: function getAxisMap(props, _ref5) {
	        var _ref5$axisType = _ref5.axisType,
	            axisType = _ref5$axisType === undefined ? 'xAxis' : _ref5$axisType,
	            graphicalItems = _ref5.graphicalItems,
	            stackGroups = _ref5.stackGroups,
	            dataStartIndex = _ref5.dataStartIndex,
	            dataEndIndex = _ref5.dataEndIndex;
	        var children = props.children;
	
	        var Axis = axisType === 'xAxis' ? _XAxis2.default : _YAxis2.default;
	        var axisIdKey = axisType === 'xAxis' ? 'xAxisId' : 'yAxisId';
	        // Get all the instance of Axis
	        var axes = (0, _ReactUtils.findAllByType)(children, Axis);
	
	        var axisMap = {};
	
	        if (axes && axes.length) {
	          axisMap = this.getAxisMapByAxes(props, { axes: axes, graphicalItems: graphicalItems, axisType: axisType, axisIdKey: axisIdKey,
	            stackGroups: stackGroups, dataStartIndex: dataStartIndex, dataEndIndex: dataEndIndex });
	        } else if (graphicalItems && graphicalItems.length) {
	          axisMap = this.getAxisMapByItems(props, { graphicalItems: graphicalItems, Axis: Axis, axisType: axisType, axisIdKey: axisIdKey,
	            stackGroups: stackGroups, dataStartIndex: dataStartIndex, dataEndIndex: dataEndIndex });
	        }
	
	        return axisMap;
	      }
	
	      /**
	       * Get the configuration of axis by the options of axis instance
	       * @param  {Object} props         Latest props
	       * @param {Array}  axes           The instance of axes
	       * @param  {Array} graphicalItems The instances of item
	       * @param  {String} axisType      The type of axis, xAxis - x-axis, yAxis - y-axis
	       * @param  {String} axisIdKey     The unique id of an axis
	       * @param  {Object} stackGroups   The items grouped by axisId and stackId
	       * @param {Number} dataStartIndex The start index of the data series when a brush is applied
	       * @param {Number} dataEndIndex   The end index of the data series when a brush is applied
	       * @return {Object}      Configuration
	       */
	
	    }, {
	      key: 'getAxisMapByAxes',
	      value: function getAxisMapByAxes(props, _ref6) {
	        var axes = _ref6.axes,
	            graphicalItems = _ref6.graphicalItems,
	            axisType = _ref6.axisType,
	            axisIdKey = _ref6.axisIdKey,
	            stackGroups = _ref6.stackGroups,
	            dataStartIndex = _ref6.dataStartIndex,
	            dataEndIndex = _ref6.dataEndIndex;
	        var layout = props.layout,
	            children = props.children,
	            data = props.data,
	            stackOffset = props.stackOffset;
	
	        var displayedData = data.slice(dataStartIndex, dataEndIndex + 1);
	        var len = displayedData.length;
	        var isCategorial = (0, _CartesianUtils.isCategorialAxis)(layout, axisType);
	
	        // Eliminate duplicated axes
	        var axisMap = axes.reduce(function (result, child) {
	          var _child$props = child.props,
	              type = _child$props.type,
	              dataKey = _child$props.dataKey,
	              allowDataOverflow = _child$props.allowDataOverflow;
	
	          var axisId = child.props[axisIdKey];
	
	          if (!result[axisId]) {
	            var domain = void 0,
	                duplicateDomain = void 0,
	                categoricalDomain = void 0;
	
	            if (dataKey) {
	              domain = (0, _CartesianUtils.getDomainOfDataByKey)(displayedData, dataKey, type);
	
	              if (type === 'category') {
	                var duplicate = (0, _DataUtils.hasDuplicate)(domain);
	                duplicateDomain = duplicate ? domain : null;
	
	                // When category axis has duplicated text, serial numbers are used to generate scale
	                domain = duplicate ? (0, _range3.default)(0, len) : domain;
	              }
	
	              if (isCategorial && type === 'number') {
	                categoricalDomain = (0, _CartesianUtils.getDomainOfDataByKey)(displayedData, dataKey, 'category');
	              }
	            } else if (isCategorial) {
	              domain = (0, _range3.default)(0, len);
	            } else if (stackGroups && stackGroups[axisId] && stackGroups[axisId].hasStack && type === 'number') {
	              // when stackOffset is 'expand', the domain may be calculated as [0, 1.000000000002]
	              domain = stackOffset === 'expand' ? [0, 1] : (0, _CartesianUtils.getDomainOfStackGroups)(stackGroups[axisId].stackGroups, dataStartIndex, dataEndIndex);
	            } else {
	              domain = (0, _CartesianUtils.getDomainOfItemsWithSameAxis)(displayedData, graphicalItems.filter(function (entry) {
	                return entry.props[axisIdKey] === axisId;
	              }), type);
	            }
	            if (type === 'number') {
	              // To detect wether there is any reference lines whose props alwaysShow is true
	              domain = (0, _CartesianUtils.detectReferenceElementsDomain)(children, domain, axisId, axisType);
	
	              if (child.props.domain) {
	                domain = (0, _DataUtils.parseSpecifiedDomain)(child.props.domain, domain, allowDataOverflow);
	              }
	            }
	
	            return _extends({}, result, _defineProperty({}, axisId, _extends({}, child.props, {
	              axisType: axisType,
	              domain: domain,
	              categoricalDomain: categoricalDomain,
	              duplicateDomain: duplicateDomain,
	              originalDomain: child.props.domain,
	              isCategorial: isCategorial
	            })));
	          }
	
	          return result;
	        }, {});
	        return axisMap;
	      }
	
	      /**
	       * Get the configuration of axis by the options of item,
	       * this kind of axis does not display in chart
	       * @param  {Object} props         Latest props
	       * @param  {Array} graphicalItems The instances of item
	       * @param  {ReactElement} Axis    Axis Component
	       * @param  {String} axisType      The type of axis, xAxis - x-axis, yAxis - y-axis
	       * @param  {String} axisIdKey     The unique id of an axis
	       * @param  {Object} stackGroups   The items grouped by axisId and stackId
	       * @param {Number} dataStartIndex The start index of the data series when a brush is applied
	       * @param {Number} dataEndIndex   The end index of the data series when a brush is applied
	       * @return {Object}               Configuration
	       */
	
	    }, {
	      key: 'getAxisMapByItems',
	      value: function getAxisMapByItems(props, _ref7) {
	        var graphicalItems = _ref7.graphicalItems,
	            Axis = _ref7.Axis,
	            axisType = _ref7.axisType,
	            axisIdKey = _ref7.axisIdKey,
	            stackGroups = _ref7.stackGroups,
	            dataStartIndex = _ref7.dataStartIndex,
	            dataEndIndex = _ref7.dataEndIndex;
	        var layout = props.layout,
	            children = props.children,
	            data = props.data;
	
	        var displayedData = data.slice(dataStartIndex, dataEndIndex + 1);
	        var len = displayedData.length;
	        var isCategorial = (0, _CartesianUtils.isCategorialAxis)(layout, axisType);
	        var index = -1;
	
	        // The default type of x-axis is category axis,
	        // The default contents of x-axis is the serial numbers of data
	        // The default type of y-axis is number axis
	        // The default contents of y-axis is the domain of data
	        var axisMap = graphicalItems.reduce(function (result, child) {
	          var axisId = child.props[axisIdKey];
	
	          if (!result[axisId]) {
	            index++;
	            var domain = void 0;
	
	            if (isCategorial) {
	              domain = (0, _range3.default)(0, len);
	            } else if (stackGroups && stackGroups[axisId] && stackGroups[axisId].hasStack) {
	              domain = (0, _CartesianUtils.getDomainOfStackGroups)(stackGroups[axisId].stackGroups, dataStartIndex, dataEndIndex);
	              domain = (0, _CartesianUtils.detectReferenceElementsDomain)(children, domain, axisId, axisType);
	            } else {
	              domain = (0, _DataUtils.parseSpecifiedDomain)(Axis.defaultProps.domain, (0, _CartesianUtils.getDomainOfItemsWithSameAxis)(displayedData, graphicalItems.filter(function (entry) {
	                return entry.props[axisIdKey] === axisId;
	              }), 'number'), Axis.defaultProps.allowDataOverflow);
	              domain = (0, _CartesianUtils.detectReferenceElementsDomain)(children, domain, axisId, axisType);
	            }
	
	            return _extends({}, result, _defineProperty({}, axisId, _extends({
	              axisType: axisType
	            }, Axis.defaultProps, {
	              hide: true,
	              orientation: ORIENT_MAP[axisType][index % 2],
	              domain: domain,
	              originalDomain: Axis.defaultProps.domain,
	              isCategorial: isCategorial
	            })));
	          }
	
	          return result;
	        }, {});
	
	        return axisMap;
	      }
	      /**
	       * Calculate the scale function, position, width, height of axes
	       * @param  {Object} props    Latest props
	       * @param  {Object} axisMap  The configuration of axes
	       * @param  {Object} offset   The offset of main part in the svg element
	       * @param  {Object} axisType The type of axes, x-axis or y-axis
	       * @return {Object} Configuration
	       */
	
	    }, {
	      key: 'getFormatAxisMap',
	      value: function getFormatAxisMap(props, axisMap, offset, axisType) {
	        var width = props.width,
	            height = props.height,
	            layout = props.layout;
	
	        var displayName = this.constructor.displayName;
	        var ids = Object.keys(axisMap);
	        var steps = {
	          left: offset.left,
	          right: width - offset.right,
	          top: offset.top,
	          bottom: height - offset.bottom
	        };
	
	        return ids.reduce(function (result, id) {
	          var axis = axisMap[id];
	          var orientation = axis.orientation,
	              domain = axis.domain,
	              _axis$padding = axis.padding,
	              padding = _axis$padding === undefined ? {} : _axis$padding;
	
	          var range = void 0,
	              x = void 0,
	              y = void 0;
	
	          if (axisType === 'xAxis') {
	            range = [offset.left + (padding.left || 0), offset.left + offset.width - (padding.right || 0)];
	          } else {
	            range = layout === 'horizontal' ? [offset.top + offset.height - (padding.bottom || 0), offset.top + (padding.top || 0)] : [offset.top + (padding.top || 0), offset.top + offset.height - (padding.bottom || 0)];
	          }
	
	          var scale = (0, _DataUtils.parseScale)(axis, displayName);
	          scale.domain(domain).range(range);
	          var ticks = (0, _CartesianUtils.getTicksOfScale)(scale, axis);
	
	          if (axisType === 'xAxis') {
	            x = offset.left;
	            y = orientation === 'top' ? steps[orientation] - axis.height : steps[orientation];
	          } else {
	            x = orientation === 'left' ? steps[orientation] - axis.width : steps[orientation];
	            y = offset.top;
	          }
	
	          var finalAxis = _extends({}, axis, ticks, {
	            x: x, y: y, scale: scale,
	            width: axisType === 'xAxis' ? offset.width : axis.width,
	            height: axisType === 'yAxis' ? offset.height : axis.height
	          });
	
	          if (!axis.hide && axisType === 'xAxis') {
	            steps[orientation] += (orientation === 'top' ? -1 : 1) * finalAxis.height;
	          } else if (!axis.hide) {
	            steps[orientation] += (orientation === 'left' ? -1 : 1) * finalAxis.width;
	          }
	
	          return _extends({}, result, _defineProperty({}, id, finalAxis));
	        }, {});
	      }
	      /**
	       * Get the information of mouse in chart, return null when the mouse is not in the chart
	       * @param  {Object} event    The event object
	       * @return {Object}          Mouse data
	       */
	
	    }, {
	      key: 'getMouseInfo',
	      value: function getMouseInfo(event) {
	        if (!this.container) {
	          return null;
	        }
	
	        var offset = this.state.offset;
	
	        var containerOffset = (0, _DOMUtils.getOffset)(this.container);
	        var e = (0, _DOMUtils.calculateChartCoordinate)(event, containerOffset);
	        var isIn = e.chartX >= offset.left && e.chartX <= offset.left + offset.width && e.chartY >= offset.top && e.chartY <= offset.top + offset.height;
	
	        if (!isIn) {
	          return null;
	        }
	
	        var layout = this.props.layout;
	        var _state2 = this.state,
	            ticks = _state2.orderedTooltipTicks,
	            axis = _state2.tooltipAxis,
	            tooltipTicks = _state2.tooltipTicks;
	
	        var pos = layout === 'horizontal' ? e.chartX : e.chartY;
	        var activeIndex = (0, _CartesianUtils.calculateActiveTickIndex)(pos, ticks, axis);
	
	        if (activeIndex >= 0) {
	          var activeLabel = tooltipTicks[activeIndex] && tooltipTicks[activeIndex].value;
	          var activePayload = this.getTooltipContent(activeIndex);
	          var activeCoordinate = tooltipTicks[activeIndex] ? {
	            x: layout === 'horizontal' ? tooltipTicks[activeIndex].coordinate : e.chartX,
	            y: layout === 'horizontal' ? e.chartY : tooltipTicks[activeIndex].coordinate
	          } : originCoordinate;
	
	          return _extends({}, e, {
	            activeTooltipIndex: activeIndex,
	            activeLabel: activeLabel,
	            activePayload: activePayload,
	            activeCoordinate: activeCoordinate
	          });
	        }
	
	        return null;
	      }
	      /**
	       * Get the content to be displayed in the tooltip
	       * @param  {Number} activeIndex    Active index of data
	       * @return {Array}                 The content of tooltip
	       */
	
	    }, {
	      key: 'getTooltipContent',
	      value: function getTooltipContent(activeIndex) {
	        var _state3 = this.state,
	            dataStartIndex = _state3.dataStartIndex,
	            dataEndIndex = _state3.dataEndIndex,
	            graphicalItems = _state3.graphicalItems;
	
	        var data = this.props.data.slice(dataStartIndex, dataEndIndex + 1);
	
	        if (activeIndex < 0 || !graphicalItems || !graphicalItems.length || activeIndex >= data.length) {
	          return null;
	        }
	
	        return graphicalItems.map(function (child) {
	          var _child$props2 = child.props,
	              dataKey = _child$props2.dataKey,
	              name = _child$props2.name,
	              unit = _child$props2.unit,
	              formatter = _child$props2.formatter;
	
	
	          return _extends({}, (0, _ReactUtils.getPresentationAttributes)(child), {
	            dataKey: dataKey, unit: unit, formatter: formatter,
	            name: name || dataKey,
	            color: (0, _CartesianUtils.getMainColorOfGraphicItem)(child),
	            value: (0, _DataUtils.getValueByDataKey)(data[activeIndex], dataKey),
	            payload: data[activeIndex]
	          });
	        });
	      }
	
	      /**
	       * The AxisMaps are expensive to render on large data sets
	       * so provide the ability to store them in state and only update them when necessary
	       * they are dependent upon the start and end index of
	       * the brush so it's important that this method is called _after_
	       * the state is updated with any new start/end indices
	       *
	       * @param {Object} props The props object to be used for updating the axismaps
	       * @param {Number} dataStartIndex The start index of the data series when a brush is applied
	       * @param {Number} dataEndIndex The end index of the data series when a brush is applied
	       * @return {Object} state New state to set
	       */
	
	    }, {
	      key: 'updateStateOfAxisMapsOffsetAndStackGroups',
	      value: function updateStateOfAxisMapsOffsetAndStackGroups(_ref8) {
	        var props = _ref8.props,
	            dataStartIndex = _ref8.dataStartIndex,
	            dataEndIndex = _ref8.dataEndIndex;
	        var data = props.data;
	
	        if (!(0, _ReactUtils.validateWidthHeight)({ props: props }) || !data || !data.length) {
	          return null;
	        }
	
	        var children = props.children,
	            layout = props.layout,
	            stackOffset = props.stackOffset;
	
	        var numericIdName = layout === 'horizontal' ? 'yAxis' : 'xAxis';
	        var cateIdName = layout === 'horizontal' ? 'xAxis' : 'yAxis';
	        var graphicalItems = (0, _ReactUtils.findAllByType)(children, GraphicalChild);
	        var stackGroups = (0, _CartesianUtils.getStackGroupsByAxisId)(data, graphicalItems, numericIdName + 'Id', cateIdName + 'Id', stackOffset);
	
	        var xAxisMap = this.getAxisMap(props, {
	          axisType: 'xAxis',
	          graphicalItems: graphicalItems,
	          stackGroups: numericIdName === 'xAxis' && stackGroups,
	          dataStartIndex: dataStartIndex,
	          dataEndIndex: dataEndIndex
	        });
	
	        var yAxisMap = this.getAxisMap(props, {
	          axisType: 'yAxis',
	          graphicalItems: graphicalItems,
	          stackGroups: numericIdName === 'yAxis' && stackGroups,
	          dataStartIndex: dataStartIndex,
	          dataEndIndex: dataEndIndex
	        });
	
	        var offset = this.calculateOffset(props, graphicalItems, xAxisMap, yAxisMap);
	
	        xAxisMap = this.getFormatAxisMap(props, xAxisMap, offset, 'xAxis');
	        yAxisMap = this.getFormatAxisMap(props, yAxisMap, offset, 'yAxis');
	
	        var ticksObj = this.tooltipTicksGenerator({
	          layout: layout, xAxisMap: xAxisMap, yAxisMap: yAxisMap
	        });
	
	        return _extends({ graphicalItems: graphicalItems, xAxisMap: xAxisMap, yAxisMap: yAxisMap, offset: offset, stackGroups: stackGroups }, ticksObj);
	      }
	
	      /* eslint-disable  no-underscore-dangle */
	
	    }, {
	      key: 'addListener',
	      value: function addListener() {
	        _Events.eventCenter.on(_Events.SYNC_EVENT, this.handleReceiveSyncEvent);
	
	        if (_Events.eventCenter.setMaxListeners && _Events.eventCenter._maxListeners) {
	          _Events.eventCenter.setMaxListeners(_Events.eventCenter._maxListeners + 1);
	        }
	      }
	    }, {
	      key: 'removeListener',
	      value: function removeListener() {
	        _Events.eventCenter.removeListener(_Events.SYNC_EVENT, this.handleReceiveSyncEvent);
	
	        if (_Events.eventCenter.setMaxListeners && _Events.eventCenter._maxListeners) {
	          _Events.eventCenter.setMaxListeners(_Events.eventCenter._maxListeners - 1);
	        }
	      }
	      /**
	       * Returns default, reset state for the categorical chart.
	       * @param {Object} props Props object to use when creating the default state
	       * @return {Object} Whole new state
	       */
	
	    }, {
	      key: 'createDefaultState',
	      value: function createDefaultState(props) {
	        var children = props.children;
	
	        var brushItem = (0, _ReactUtils.findChildByType)(children, _Brush2.default);
	        var startIndex = brushItem && brushItem.props && brushItem.props.startIndex || 0;
	        var endIndex = brushItem && brushItem.props && brushItem.props.endIndex || props.data && props.data.length - 1 || 0;
	        return {
	          chartX: 0,
	          chartY: 0,
	          dataStartIndex: startIndex,
	          dataEndIndex: endIndex,
	          activeTooltipIndex: -1,
	          isTooltipActive: false
	        };
	      }
	      /**
	       * Calculate the offset of main part in the svg element
	       * @param  {Object} props          Latest props
	       * @param  {Array}  graphicalItems The instances of item
	       * @param  {Object} xAxisMap       The configuration of x-axis
	       * @param  {Object} yAxisMap       The configuration of y-axis
	       * @return {Object} The offset of main part in the svg element
	       */
	
	    }, {
	      key: 'calculateOffset',
	      value: function calculateOffset(props, graphicalItems, xAxisMap, yAxisMap) {
	        var width = props.width,
	            height = props.height,
	            children = props.children;
	
	        var margin = props.margin || {};
	        var brushItem = (0, _ReactUtils.findChildByType)(children, _Brush2.default);
	        var legendItem = (0, _ReactUtils.findChildByType)(children, _Legend2.default);
	
	        var offsetH = Object.keys(yAxisMap).reduce(function (result, id) {
	          var entry = yAxisMap[id];
	          var orientation = entry.orientation;
	
	          return _extends({}, result, _defineProperty({}, orientation, result[orientation] + (entry.hide ? 0 : entry.width)));
	        }, { left: margin.left || 0, right: margin.right || 0 });
	
	        var offsetV = Object.keys(xAxisMap).reduce(function (result, id) {
	          var entry = xAxisMap[id];
	          var orientation = entry.orientation;
	
	          return _extends({}, result, _defineProperty({}, orientation, result[orientation] + (entry.hide ? 0 : entry.height)));
	        }, { top: margin.top || 0, bottom: margin.bottom || 0 });
	
	        var offset = _extends({}, offsetV, offsetH);
	
	        var brushBottom = offset.bottom;
	
	        if (brushItem) {
	          offset.bottom += brushItem.props.height || _Brush2.default.defaultProps.height;
	        }
	
	        if (legendItem && this.legendInstance) {
	          var legendBox = this.legendInstance.getBBox();
	          offset = (0, _CartesianUtils.appendOffsetOfLegend)(offset, graphicalItems, props, legendBox);
	        }
	
	        return _extends({
	          brushBottom: brushBottom
	        }, offset, {
	          width: width - offset.left - offset.right,
	          height: height - offset.top - offset.bottom
	        });
	      }
	      /**
	       * The handler of mouse entering chart
	       * @param  {Object} e              Event object
	       * @return {Null}                  null
	       */
	
	
	      /**
	       * The handler of mouse moving in chart
	       * @param  {Object} e        Event object
	       * @return {Null} no return
	       */
	
	      /**
	       * The handler if mouse leaving chart
	       * @param {Object} e Event object
	       * @return {Null} no return
	       */
	
	    }, {
	      key: 'validateAxes',
	      value: function validateAxes() {
	        var _props2 = this.props,
	            layout = _props2.layout,
	            children = _props2.children;
	
	        var xAxes = (0, _ReactUtils.findAllByType)(children, _XAxis2.default);
	        var yAxes = (0, _ReactUtils.findAllByType)(children, _YAxis2.default);
	
	        if (layout === 'horizontal' && xAxes && xAxes.length) {
	          xAxes.forEach(function (axis) {
	            (0, _LogUtils.warn)(axis.props.type === 'category' || axis.props.type === 'number' && !(0, _isNil3.default)(axis.props.dataKey), 'x-axis should be a category axis or a number axis which has specifed dataKey\n             when the layout is horizontal');
	          });
	        } else if (layout === 'vertical') {
	          var displayName = this.constructor.displayName;
	
	          (0, _LogUtils.warn)(yAxes && yAxes.length, 'You should add <YAxis type="number" /> in ' + displayName + '.\n           The layout is vertical now, y-axis should be category axis,\n           but y-axis is number axis when no YAxis is added.');
	          (0, _LogUtils.warn)(xAxes && xAxes.length, 'You should add <XAxis /> in ' + displayName + '.\n          The layout is vertical now, x-axis is category when no XAxis is added.');
	
	          if (yAxes && yAxes.length) {
	            yAxes.forEach(function (axis) {
	              (0, _LogUtils.warn)(axis.props.type === 'category' || axis.props.type === 'number' && !(0, _isNil3.default)(axis.props.dataKey), 'y-axis should be a category axis or a number axis which has specifed dataKey\n               when the layout is vertical');
	            });
	          }
	        }
	
	        return null;
	      }
	    }, {
	      key: 'triggerSyncEvent',
	      value: function triggerSyncEvent(data) {
	        var syncId = this.props.syncId;
	
	
	        if (!(0, _isNil3.default)(syncId)) {
	          _Events.eventCenter.emit(_Events.SYNC_EVENT, syncId, this.uniqueChartId, data);
	        }
	      }
	    }, {
	      key: 'renderAxes',
	
	
	      /**
	       * Draw axes
	       * @param {Object} axisMap The configuration of all x-axes or y-axes
	       * @param {String} name    The name of axes
	       * @return {ReactElement}  The instance of x-axes
	       */
	      value: function renderAxes(axisMap, name) {
	        var _props3 = this.props,
	            width = _props3.width,
	            height = _props3.height;
	
	        var ids = axisMap && Object.keys(axisMap);
	
	        if (ids && ids.length) {
	          var axes = [];
	
	          for (var i = 0, len = ids.length; i < len; i++) {
	            var axis = axisMap[ids[i]];
	
	            if (!axis.hide) {
	
	              axes.push(_react2.default.createElement(_CartesianAxis2.default, _extends({}, axis, {
	                key: name + '-' + ids[i],
	                viewBox: { x: 0, y: 0, width: width, height: height },
	                ticksGenerator: this.axesTicksGenerator
	              })));
	            }
	          }
	
	          return axes.length ? _react2.default.createElement(
	            _Layer2.default,
	            { key: name + '-layer', className: 'recharts-' + name },
	            axes
	          ) : null;
	        }
	
	        return null;
	      }
	
	      /**
	       * Draw grid
	       * @return {ReactElement} The instance of grid
	       */
	
	    }, {
	      key: 'renderGrid',
	      value: function renderGrid() {
	        var _state4 = this.state,
	            xAxisMap = _state4.xAxisMap,
	            yAxisMap = _state4.yAxisMap,
	            offset = _state4.offset;
	        var _props4 = this.props,
	            children = _props4.children,
	            width = _props4.width,
	            height = _props4.height;
	
	        var gridItem = (0, _ReactUtils.findChildByType)(children, _CartesianGrid2.default);
	
	        if (!gridItem) {
	          return null;
	        }
	
	        var xAxis = (0, _DataUtils.getAnyElementOfObject)(xAxisMap);
	        var yAxis = (0, _DataUtils.getAnyElementOfObject)(yAxisMap);
	
	        return _react2.default.cloneElement(gridItem, {
	          key: 'grid',
	          x: offset.left,
	          y: offset.top,
	          width: offset.width,
	          height: offset.height,
	          xAxis: xAxis,
	          yAxis: yAxis,
	          offset: offset,
	          chartWidth: width,
	          chartHeight: height,
	          verticalCoordinatesGenerator: this.verticalCoordinatesGenerator,
	          horizontalCoordinatesGenerator: this.horizontalCoordinatesGenerator
	        });
	      }
	      /**
	       * Draw legend
	       * @return {ReactElement}            The instance of Legend
	       */
	
	    }, {
	      key: 'renderLegend',
	      value: function renderLegend() {
	        var _this2 = this;
	
	        var graphicalItems = this.state.graphicalItems;
	        var _props5 = this.props,
	            children = _props5.children,
	            width = _props5.width,
	            height = _props5.height;
	
	        var margin = this.props.margin || {};
	        var legendWidth = width - (margin.left || 0) - (margin.right || 0);
	        var legendHeight = height - (margin.top || 0) - (margin.bottom || 0);
	        var props = (0, _CartesianUtils.getLegendProps)(children, graphicalItems, legendWidth, legendHeight);
	
	        if (!props) {
	          return null;
	        }
	
	        return _react2.default.createElement(_Legend2.default, _extends({}, props, {
	          chartWidth: width,
	          chartHeight: height,
	          margin: margin,
	          ref: function ref(legend) {
	            _this2.legendInstance = legend;
	          }
	        }));
	      }
	
	      /**
	       * Draw Tooltip
	       * @return {ReactElement}  The instance of Tooltip
	       */
	
	    }, {
	      key: 'renderTooltip',
	      value: function renderTooltip() {
	        var children = this.props.children;
	
	        var tooltipItem = (0, _ReactUtils.findChildByType)(children, _Tooltip2.default);
	
	        if (!tooltipItem) {
	          return null;
	        }
	
	        var _state5 = this.state,
	            isTooltipActive = _state5.isTooltipActive,
	            activeCoordinate = _state5.activeCoordinate,
	            activePayload = _state5.activePayload,
	            activeLabel = _state5.activeLabel,
	            offset = _state5.offset;
	
	
	        return _react2.default.cloneElement(tooltipItem, {
	          viewBox: _extends({}, offset, { x: offset.left, y: offset.top }),
	          active: isTooltipActive,
	          label: activeLabel,
	          payload: isTooltipActive ? activePayload : [],
	          coordinate: activeCoordinate
	        });
	      }
	    }, {
	      key: 'renderBrush',
	      value: function renderBrush() {
	        var _props6 = this.props,
	            children = _props6.children,
	            margin = _props6.margin,
	            data = _props6.data;
	        var _state6 = this.state,
	            offset = _state6.offset,
	            dataStartIndex = _state6.dataStartIndex,
	            dataEndIndex = _state6.dataEndIndex,
	            updateId = _state6.updateId;
	
	        var brushItem = (0, _ReactUtils.findChildByType)(children, _Brush2.default);
	
	        if (!brushItem) {
	          return null;
	        }
	
	        // TODO: update brush when children update
	        return _react2.default.cloneElement(brushItem, {
	          onChange: (0, _DataUtils.combineEventHandlers)(this.handleBrushChange, null, brushItem.props.onChange),
	          data: data,
	          x: offset.left,
	          y: offset.top + offset.height + offset.brushBottom - (margin.bottom || 0),
	          width: offset.width,
	          startIndex: dataStartIndex,
	          endIndex: dataEndIndex,
	          updateId: 'brush-' + updateId
	        });
	      }
	    }, {
	      key: 'renderReferenceElements',
	      value: function renderReferenceElements(isFront, Compt) {
	        var children = this.props.children;
	
	        var elements = (0, _ReactUtils.findAllByType)(children, Compt);
	
	        if (!elements || !elements.length) {
	          return null;
	        }
	
	        var _state7 = this.state,
	            xAxisMap = _state7.xAxisMap,
	            yAxisMap = _state7.yAxisMap,
	            offset = _state7.offset;
	
	        var keyPrefix = (0, _ReactUtils.getDisplayName)(Compt) + '-' + (isFront ? 'front' : 'back');
	
	        return elements.filter(function (entry) {
	          return isFront === entry.props.isFront;
	        }).map(function (entry, i) {
	          var _entry$props = entry.props,
	              xAxisId = _entry$props.xAxisId,
	              yAxisId = _entry$props.yAxisId;
	
	
	          return _react2.default.cloneElement(entry, {
	            key: keyPrefix + '-' + i,
	            xAxis: xAxisMap[xAxisId],
	            yAxis: yAxisMap[yAxisId],
	            viewBox: {
	              x: offset.left,
	              y: offset.top,
	              width: offset.width,
	              height: offset.height
	            }
	          });
	        });
	      }
	    }, {
	      key: 'render',
	      value: function render() {
	        var _this3 = this;
	
	        var data = this.props.data;
	
	        if (!(0, _ReactUtils.validateWidthHeight)(this) || !data || !data.length) {
	          return null;
	        }
	
	        var _props7 = this.props,
	            children = _props7.children,
	            className = _props7.className,
	            width = _props7.width,
	            height = _props7.height,
	            style = _props7.style,
	            others = _objectWithoutProperties(_props7, ['children', 'className', 'width', 'height', 'style']);
	
	        var _state8 = this.state,
	            xAxisMap = _state8.xAxisMap,
	            yAxisMap = _state8.yAxisMap;
	
	
	        var events = {
	          onMouseEnter: this.handleMouseEnter,
	          onMouseMove: this.handleMouseMove,
	          onMouseLeave: this.handleMouseLeave,
	          onClick: this.handleClick,
	          onMouseDown: this.handleMouseDown,
	          onMouseUp: this.handleMouseUp,
	          onTouchMove: this.handleTouchMove
	        };
	        var attrs = (0, _ReactUtils.getPresentationAttributes)(others);
	
	        return _react2.default.createElement(
	          'div',
	          _extends({
	            className: (0, _classnames2.default)('recharts-wrapper', className),
	            style: _extends({}, style, { position: 'relative', cursor: 'default', width: width, height: height })
	          }, events, {
	            ref: function ref(node) {
	              _this3.container = node;
	            }
	          }),
	          _react2.default.createElement(
	            _Surface2.default,
	            _extends({}, attrs, { width: width, height: height }),
	            this.renderGrid(),
	            this.renderReferenceElements(false, _ReferenceArea2.default),
	            this.renderReferenceElements(false, _ReferenceLine2.default),
	            this.renderReferenceElements(false, _ReferenceDot2.default),
	            this.renderAxes(xAxisMap, 'x-axis'),
	            this.renderAxes(yAxisMap, 'y-axis'),
	            _react2.default.createElement(ChartComponent, _extends({}, this.props, this.state)),
	            this.renderReferenceElements(true, _ReferenceArea2.default),
	            this.renderReferenceElements(true, _ReferenceLine2.default),
	            this.renderReferenceElements(true, _ReferenceDot2.default),
	            this.renderBrush(),
	            (0, _ReactUtils.filterSvgElements)(children)
	          ),
	          this.renderLegend(),
	          this.renderTooltip()
	        );
	      }
	    }]);
	
	    return CategoricalChartWrapper;
	  }(_react.Component), _class.displayName = (0, _ReactUtils.getDisplayName)(ChartComponent), _class.propTypes = _extends({}, ChartComponent.propTypes, {
	    syncId: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.number]),
	    width: _react.PropTypes.number,
	    height: _react.PropTypes.number,
	    data: _react.PropTypes.arrayOf(_react.PropTypes.object),
	    layout: _react.PropTypes.oneOf(['horizontal', 'vertical']),
	    stackOffset: _react.PropTypes.oneOf(['sign', 'expand', 'none', 'wiggle', 'silhouette']),
	    throttleDelay: _react.PropTypes.number,
	    margin: _react.PropTypes.shape({
	      top: _react.PropTypes.number,
	      right: _react.PropTypes.number,
	      bottom: _react.PropTypes.number,
	      left: _react.PropTypes.number
	    }),
	    style: _react.PropTypes.object,
	    className: _react.PropTypes.string,
	    children: _react.PropTypes.oneOfType([_react.PropTypes.arrayOf(_react.PropTypes.node), _react.PropTypes.node]),
	    onClick: _react.PropTypes.func,
	    onMouseLeave: _react.PropTypes.func,
	    onMouseEnter: _react.PropTypes.func,
	    onMouseMove: _react.PropTypes.func
	  }), _class.defaultProps = {
	    layout: 'horizontal',
	    stackOffset: 'none',
	    margin: { top: 5, right: 5, bottom: 5, left: 5 }
	  }, _temp);
	
	
	  return CategoricalChartWrapper;
	};
	
	exports.default = generateCategoricalChart;

/***/ },
/* 837 */
/***/ function(module, exports, __webpack_require__) {

	var debounce = __webpack_require__(781),
	    isObject = __webpack_require__(225);
	
	/** Error message constants. */
	var FUNC_ERROR_TEXT = 'Expected a function';
	
	/**
	 * Creates a throttled function that only invokes `func` at most once per
	 * every `wait` milliseconds. The throttled function comes with a `cancel`
	 * method to cancel delayed `func` invocations and a `flush` method to
	 * immediately invoke them. Provide `options` to indicate whether `func`
	 * should be invoked on the leading and/or trailing edge of the `wait`
	 * timeout. The `func` is invoked with the last arguments provided to the
	 * throttled function. Subsequent calls to the throttled function return the
	 * result of the last `func` invocation.
	 *
	 * **Note:** If `leading` and `trailing` options are `true`, `func` is
	 * invoked on the trailing edge of the timeout only if the throttled function
	 * is invoked more than once during the `wait` timeout.
	 *
	 * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
	 * until to the next tick, similar to `setTimeout` with a timeout of `0`.
	 *
	 * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
	 * for details over the differences between `_.throttle` and `_.debounce`.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Function
	 * @param {Function} func The function to throttle.
	 * @param {number} [wait=0] The number of milliseconds to throttle invocations to.
	 * @param {Object} [options={}] The options object.
	 * @param {boolean} [options.leading=true]
	 *  Specify invoking on the leading edge of the timeout.
	 * @param {boolean} [options.trailing=true]
	 *  Specify invoking on the trailing edge of the timeout.
	 * @returns {Function} Returns the new throttled function.
	 * @example
	 *
	 * // Avoid excessively updating the position while scrolling.
	 * jQuery(window).on('scroll', _.throttle(updatePosition, 100));
	 *
	 * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.
	 * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });
	 * jQuery(element).on('click', throttled);
	 *
	 * // Cancel the trailing throttled invocation.
	 * jQuery(window).on('popstate', throttled.cancel);
	 */
	function throttle(func, wait, options) {
	  var leading = true,
	      trailing = true;
	
	  if (typeof func != 'function') {
	    throw new TypeError(FUNC_ERROR_TEXT);
	  }
	  if (isObject(options)) {
	    leading = 'leading' in options ? !!options.leading : leading;
	    trailing = 'trailing' in options ? !!options.trailing : trailing;
	  }
	  return debounce(func, wait, {
	    'leading': leading,
	    'maxWait': wait,
	    'trailing': trailing
	  });
	}
	
	module.exports = throttle;


/***/ },
/* 838 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.appendOffsetOfLegend = exports.getBarPosition = exports.getBarSizeList = exports.getTicksOfScale = exports.getLegendProps = exports.getMainColorOfGraphicItem = exports.calculateActiveTickIndex = exports.getTicksOfAxis = exports.getCoordinatesOfGrid = exports.isCategorialAxis = exports.getDomainOfItemsWithSameAxis = exports.getDomainOfStackGroups = exports.getDomainOfDataByKey = exports.calculateDomainOfTicks = exports.getStackedDataOfItem = exports.getStackGroupsByAxisId = exports.getStackedData = exports.detectReferenceElementsDomain = undefined;
	
	var _isNil2 = __webpack_require__(671);
	
	var _isNil3 = _interopRequireDefault(_isNil2);
	
	var _uniqueId2 = __webpack_require__(813);
	
	var _uniqueId3 = _interopRequireDefault(_uniqueId2);
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _rechartsScale = __webpack_require__(839);
	
	var _d3Shape = __webpack_require__(751);
	
	var _ReactUtils = __webpack_require__(670);
	
	var _DataUtils = __webpack_require__(673);
	
	var _ReferenceDot = __webpack_require__(823);
	
	var _ReferenceDot2 = _interopRequireDefault(_ReferenceDot);
	
	var _ReferenceLine = __webpack_require__(822);
	
	var _ReferenceLine2 = _interopRequireDefault(_ReferenceLine);
	
	var _ReferenceArea = __webpack_require__(824);
	
	var _ReferenceArea2 = _interopRequireDefault(_ReferenceArea);
	
	var _Legend = __webpack_require__(748);
	
	var _Legend2 = _interopRequireDefault(_Legend);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	/* eslint no-param-reassign: 0 */
	var offsetSign = function offsetSign(series) {
	  var n = series.length;
	  if (n <= 0) {
	    return;
	  }
	
	  for (var j = 0, m = series[0].length; j < m; ++j) {
	    var positive = 0;
	    var negative = 0;
	
	    for (var i = 0; i < n; ++i) {
	      var value = isNaN(series[i][j][1]) ? series[i][j][0] : series[i][j][1];
	
	      if (value >= 0) {
	        series[i][j][0] = positive;
	        series[i][j][1] = positive + value;
	        positive = series[i][j][1];
	      } else {
	        series[i][j][0] = negative;
	        series[i][j][1] = negative + value;
	        negative = series[i][j][1];
	      }
	    }
	  }
	};
	
	var STACK_OFFSET_MAP = {
	  sign: offsetSign,
	  expand: _d3Shape.stackOffsetExpand,
	  none: _d3Shape.stackOffsetNone,
	  silhouette: _d3Shape.stackOffsetSilhouette,
	  wiggle: _d3Shape.stackOffsetWiggle
	};
	
	var detectReferenceElementsDomain = exports.detectReferenceElementsDomain = function detectReferenceElementsDomain(children, domain, axisId, axisType) {
	  var lines = (0, _ReactUtils.findAllByType)(children, _ReferenceLine2.default);
	  var dots = (0, _ReactUtils.findAllByType)(children, _ReferenceDot2.default);
	  var elements = lines.concat(dots);
	  var areas = (0, _ReactUtils.findAllByType)(children, _ReferenceArea2.default);
	  var idKey = axisType + 'Id';
	  var valueKey = axisType[0];
	  var finalDomain = domain;
	
	  if (elements.length) {
	    finalDomain = elements.reduce(function (result, el) {
	      if (el.props[idKey] === axisId && el.props.alwaysShow && (0, _DataUtils.isNumber)(el.props[valueKey])) {
	        var value = el.props[valueKey];
	
	        return [Math.min(result[0], value), Math.max(result[1], value)];
	      }
	      return result;
	    }, finalDomain);
	  }
	
	  if (areas.length) {
	    (function () {
	      var key1 = valueKey + '1';
	      var key2 = valueKey + '2';
	
	      finalDomain = areas.reduce(function (result, el) {
	        if (el.props[idKey] === axisId && el.props.alwaysShow && (0, _DataUtils.isNumber)(el.props[key1]) && (0, _DataUtils.isNumber)(el.props[key2])) {
	          var value1 = el.props[key1];
	          var value2 = el.props[key2];
	
	          return [Math.min(result[0], value1, value2), Math.max(result[1], value1, value2)];
	        }
	        return result;
	      }, finalDomain);
	    })();
	  }
	
	  return finalDomain;
	};
	
	var getStackedData = exports.getStackedData = function getStackedData(data, stackItems, offsetType) {
	  var dataKeys = stackItems.map(function (item) {
	    return item.props.dataKey;
	  });
	  var stack = (0, _d3Shape.stack)().keys(dataKeys).value(function (d, key) {
	    return +(0, _DataUtils.getValueByDataKey)(d, key, 0);
	  }).order(_d3Shape.stackOrderNone).offset(STACK_OFFSET_MAP[offsetType]);
	
	  return stack(data);
	};
	
	var getStackGroupsByAxisId = exports.getStackGroupsByAxisId = function getStackGroupsByAxisId(data, items, numericAxisId, cateAxisId, offsetType) {
	  var stackGroups = items.reduce(function (result, item) {
	    var stackId = item.props.stackId;
	
	    var axisId = item.props[numericAxisId];
	    var parentGroup = result[axisId] || { hasStack: false, stackGroups: {} };
	
	    if ((0, _DataUtils.isNumOrStr)(stackId)) {
	      var childGroup = parentGroup.stackGroups[stackId] || {
	        numericAxisId: numericAxisId, cateAxisId: cateAxisId, items: []
	      };
	
	      childGroup.items = [item].concat(childGroup.items);
	
	      if (childGroup.items.length >= 2) {
	        parentGroup.hasStack = true;
	      }
	
	      parentGroup.stackGroups[stackId] = childGroup;
	    } else {
	      parentGroup.stackGroups[(0, _uniqueId3.default)('_stackId_')] = {
	        numericAxisId: numericAxisId, cateAxisId: cateAxisId, items: [item]
	      };
	    }
	
	    return _extends({}, result, _defineProperty({}, axisId, parentGroup));
	  }, {});
	
	  return Object.keys(stackGroups).reduce(function (result, axisId) {
	    var group = stackGroups[axisId];
	
	    if (group.hasStack) {
	      group.stackGroups = Object.keys(group.stackGroups).reduce(function (res, stackId) {
	        var g = group.stackGroups[stackId];
	
	        return _extends({}, res, _defineProperty({}, stackId, {
	          numericAxisId: numericAxisId,
	          cateAxisId: cateAxisId,
	          items: g.items,
	          stackedData: getStackedData(data, g.items, offsetType)
	        }));
	      }, {});
	    }
	
	    return _extends({}, result, _defineProperty({}, axisId, group));
	  }, {});
	};
	
	var getStackedDataOfItem = exports.getStackedDataOfItem = function getStackedDataOfItem(item, stackGroups) {
	  var stackId = item.props.stackId;
	
	
	  if ((0, _DataUtils.isNumOrStr)(stackId)) {
	    var group = stackGroups[stackId];
	
	    if (group && group.items.length) {
	      var itemIndex = -1;
	
	      for (var i = 0, len = group.items.length; i < len; i++) {
	        if (group.items[i] === item) {
	          itemIndex = i;
	          break;
	        }
	      }
	      return itemIndex >= 0 ? group.stackedData[itemIndex] : null;
	    }
	  }
	
	  return null;
	};
	/**
	 * get domain of ticks
	 * @param  {Array} ticks Ticks of axis
	 * @param  {String} type  The type of axis
	 * @return {Array} domain
	 */
	var calculateDomainOfTicks = exports.calculateDomainOfTicks = function calculateDomainOfTicks(ticks, type) {
	  if (type === 'number') {
	    return [Math.min.apply(null, ticks), Math.max.apply(null, ticks)];
	  }
	
	  return ticks;
	};
	
	/**
	 * Get domain of data by key
	 * @param  {Array} data   The data displayed in the chart
	 * @param  {String} key  The unique key of a group of data
	 * @param  {String} type The type of axis
	 * @return {Array} Domain of data
	 */
	var getDomainOfDataByKey = exports.getDomainOfDataByKey = function getDomainOfDataByKey(data, key, type) {
	  if (type === 'number') {
	    var domain = data.map(function (entry) {
	      return (0, _DataUtils.getValueByDataKey)(entry, key);
	    }).filter(_DataUtils.isNumber);
	
	    return [Math.min.apply(null, domain), Math.max.apply(null, domain)];
	  }
	
	  return data.map(function (entry) {
	    var value = (0, _DataUtils.getValueByDataKey)(entry, key);
	
	    return (0, _DataUtils.isNumOrStr)(value) ? value : '';
	  });
	};
	
	var getDomainOfSingle = function getDomainOfSingle(data) {
	  return data.reduce(function (result, entry) {
	    return [Math.min.apply(null, entry.concat([result[0]]).filter(_DataUtils.isNumber)), Math.max.apply(null, entry.concat([result[1]]).filter(_DataUtils.isNumber))];
	  }, [Infinity, -Infinity]);
	};
	
	var getDomainOfStackGroups = exports.getDomainOfStackGroups = function getDomainOfStackGroups(stackGroups, startIndex, endIndex) {
	  return Object.keys(stackGroups).reduce(function (result, stackId) {
	    var group = stackGroups[stackId];
	    var stackedData = group.stackedData;
	
	    var domain = stackedData.reduce(function (res, entry) {
	      var s = getDomainOfSingle(entry.slice(startIndex, endIndex + 1));
	
	      return [Math.min(res[0], s[0]), Math.max(res[1], s[1])];
	    }, [Infinity, -Infinity]);
	
	    return [Math.min(domain[0], result[0]), Math.max(domain[1], result[1])];
	  }, [Infinity, -Infinity]).map(function (result) {
	    return result === Infinity || result === -Infinity ? 0 : result;
	  });
	};
	
	/**
	 * Get domain of data by the configuration of item element
	 * @param  {Array} data   The data displayed in the chart
	 * @param  {Array} items  The instances of item
	 * @param  {String} type  The type of axis, number - Number Axis, category - Category Axis
	 * @return {Array}        Domain
	 */
	var getDomainOfItemsWithSameAxis = exports.getDomainOfItemsWithSameAxis = function getDomainOfItemsWithSameAxis(data, items, type) {
	  var domains = items.map(function (item) {
	    return getDomainOfDataByKey(data, item.props.dataKey, type);
	  });
	
	  if (type === 'number') {
	    // Calculate the domain of number axis
	    return domains.reduce(function (result, entry) {
	      return [Math.min(result[0], entry[0]), Math.max(result[1], entry[1])];
	    }, [Infinity, -Infinity]);
	  }
	
	  var tag = {};
	  // Get the union set of category axis
	  return domains.reduce(function (result, entry) {
	    for (var i = 0, len = entry.length; i < len; i++) {
	      if (!tag[entry[i]]) {
	        tag[entry[i]] = true;
	
	        result.push(entry[i]);
	      }
	    }
	    return result;
	  }, []);
	};
	
	var isCategorialAxis = exports.isCategorialAxis = function isCategorialAxis(layout, axisType) {
	  return layout === 'horizontal' && axisType === 'xAxis' || layout === 'vertical' && axisType === 'yAxis';
	};
	/**
	* Calculate the Coordinates of grid
	* @param  {Array} ticks The ticks in axis
	* @param {Number} min   The minimun value of axis
	* @param {Number} max   The maximun value of axis
	* @return {Array}       Coordinates
	*/
	var getCoordinatesOfGrid = exports.getCoordinatesOfGrid = function getCoordinatesOfGrid(ticks, min, max) {
	  var hasMin = void 0,
	      hasMax = void 0;
	
	  var values = ticks.map(function (entry) {
	    if (entry.coordinate === min) {
	      hasMin = true;
	    }
	    if (entry.coordinate === max) {
	      hasMax = true;
	    }
	
	    return entry.coordinate;
	  });
	
	  if (!hasMin) {
	    values.push(min);
	  }
	  if (!hasMax) {
	    values.push(max);
	  }
	
	  return values;
	};
	
	/**
	 * Get the ticks of an axis
	 * @param  {Object}  axis The configuration of an axis
	 * @param {Boolean} isGrid Whether or not are the ticks in grid
	 * @param {Boolean} isAll Return the ticks of all the points or not
	 * @return {Array}  Ticks
	 */
	var getTicksOfAxis = exports.getTicksOfAxis = function getTicksOfAxis(axis, isGrid, isAll) {
	  if (!axis) return null;
	  var scale = axis.scale;
	  var duplicateDomain = axis.duplicateDomain,
	      type = axis.type;
	
	  var offset = (isGrid || isAll) && type === 'category' ? scale.bandwidth() / 2 : 0;
	
	  // The ticks setted by user should only affect the ticks adjacent to axis line
	  if (isGrid && (axis.ticks || axis.niceTicks)) {
	    return (axis.ticks || axis.niceTicks).map(function (entry) {
	      var scaleContent = duplicateDomain ? duplicateDomain.indexOf(entry) : entry;
	
	      return {
	        coordinate: scale(scaleContent) + offset,
	        value: entry
	      };
	    });
	  }
	
	  if (axis.isCategorial && axis.categoricalDomain) {
	    return axis.categoricalDomain.map(function (entry, index) {
	      return {
	        coordinate: scale(entry),
	        value: entry,
	        index: index
	      };
	    });
	  }
	
	  if (scale.ticks && !isAll) {
	    return scale.ticks(axis.tickCount).map(function (entry) {
	      return { coordinate: scale(entry) + offset, value: entry };
	    });
	  }
	
	  // When axis has duplicated text, serial numbers are used to generate scale
	  return scale.domain().map(function (entry, index) {
	    return {
	      coordinate: scale(entry) + offset,
	      value: duplicateDomain ? duplicateDomain[entry] : entry,
	      index: index
	    };
	  });
	};
	
	var calculateActiveTickIndex = exports.calculateActiveTickIndex = function calculateActiveTickIndex(coordinate, ticks) {
	  var index = -1;
	  var len = ticks.length;
	
	  if (len > 1) {
	    for (var i = 0; i < len; i++) {
	      if (i === 0 && coordinate <= (ticks[i].coordinate + ticks[i + 1].coordinate) / 2 || i > 0 && i < len - 1 && coordinate > (ticks[i].coordinate + ticks[i - 1].coordinate) / 2 && coordinate <= (ticks[i].coordinate + ticks[i + 1].coordinate) / 2 || i === len - 1 && coordinate > (ticks[i].coordinate + ticks[i - 1].coordinate) / 2) {
	        index = ticks[i].index;
	        break;
	      }
	    }
	  } else {
	    index = 0;
	  }
	
	  return index;
	};
	
	/**
	 * Get the main color of each graphic item
	 * @param  {ReactElement} item A graphic item
	 * @return {String}            Color
	 */
	var getMainColorOfGraphicItem = exports.getMainColorOfGraphicItem = function getMainColorOfGraphicItem(item) {
	  var displayName = item.type.displayName;
	  var result = void 0;
	
	  switch (displayName) {
	    case 'Line':
	    case 'Area':
	      result = item.props.stroke;
	      break;
	    default:
	      result = item.props.fill;
	      break;
	  }
	
	  return result;
	};
	
	var getLegendProps = exports.getLegendProps = function getLegendProps(children, graphicItems, width) {
	  var legendItem = (0, _ReactUtils.findChildByType)(children, _Legend2.default);
	
	  if (!legendItem) {
	    return null;
	  }
	
	  var legendData = legendItem.props && legendItem.props.payload || graphicItems.map(function (child) {
	    var _child$props = child.props,
	        dataKey = _child$props.dataKey,
	        name = _child$props.name,
	        legendType = _child$props.legendType;
	
	
	    return {
	      dataKey: dataKey,
	      type: legendType || 'square',
	      color: getMainColorOfGraphicItem(child),
	      value: name || dataKey,
	      payload: child.props
	    };
	  }, undefined);
	
	  return _extends({}, legendItem.props, _Legend2.default.getWithHeight(legendItem, width), {
	    payload: legendData
	  });
	};
	/**
	 * Configure the scale function of axis
	 * @param {Object} scale The scale function
	 * @param {Object} opts  The configuration of axis
	 * @return {Object}      null
	 */
	var getTicksOfScale = exports.getTicksOfScale = function getTicksOfScale(scale, opts) {
	  var type = opts.type,
	      tickCount = opts.tickCount,
	      originalDomain = opts.originalDomain,
	      allowDecimals = opts.allowDecimals;
	
	
	  if (opts.scale !== 'auto' && opts.scale !== 'linear') {
	    return null;
	  }
	
	  if (tickCount && type === 'number' && originalDomain && (originalDomain[0] === 'auto' || originalDomain[1] === 'auto')) {
	    // Calculate the ticks by the number of grid when the axis is a number axis
	    var domain = scale.domain();
	    var tickValues = (0, _rechartsScale.getNiceTickValues)(domain, tickCount, allowDecimals);
	
	    scale.domain(calculateDomainOfTicks(tickValues, type));
	
	    return { niceTicks: tickValues };
	  } else if (tickCount && type === 'number') {
	    var _domain = scale.domain();
	    var _tickValues = (0, _rechartsScale.getTickValues)(_domain, tickCount, allowDecimals);
	
	    return { niceTicks: _tickValues };
	  }
	
	  return null;
	};
	
	/**
	 * Calculate the size of all groups for stacked bar graph
	 * @param  {Object} stackGroups The items grouped by axisId and stackId
	 * @return {Object} The size of all groups
	 */
	var getBarSizeList = exports.getBarSizeList = function getBarSizeList(_ref) {
	  var globalSize = _ref.barSize,
	      _ref$stackGroups = _ref.stackGroups,
	      stackGroups = _ref$stackGroups === undefined ? {} : _ref$stackGroups;
	
	  var result = {};
	  var numericAxisIds = Object.keys(stackGroups);
	
	  for (var i = 0, len = numericAxisIds.length; i < len; i++) {
	    var sgs = stackGroups[numericAxisIds[i]].stackGroups;
	    var stackIds = Object.keys(sgs);
	
	    for (var j = 0, sLen = stackIds.length; j < sLen; j++) {
	      var _sgs$stackIds$j = sgs[stackIds[j]],
	          items = _sgs$stackIds$j.items,
	          cateAxisId = _sgs$stackIds$j.cateAxisId;
	
	
	      var barItems = items.filter(function (item) {
	        return item.type.displayName === 'Bar';
	      });
	
	      if (barItems && barItems.length) {
	        var selfSize = barItems[0].props.barSize;
	
	        var cateId = barItems[0].props[cateAxisId];
	
	        if (!result[cateId]) {
	          result[cateId] = [];
	        }
	
	        result[cateId].push({
	          item: barItems[0],
	          stackList: barItems.slice(1),
	          barSize: (0, _isNil3.default)(selfSize) ? globalSize : selfSize
	        });
	      }
	    }
	  }
	
	  return result;
	};
	
	/**
	   * Calculate the size of each bar and the gap between two bars
	   * @param  {Number} bandSize  The size of each category
	   * @param  {sizeList} sizeList  The size of all groups
	   * @param  {maxBarSize} maxBarSize The maximum size of bar
	   * @return {Number} The size of each bar and the gap between two bars
	   */
	var getBarPosition = exports.getBarPosition = function getBarPosition(_ref2) {
	  var barGap = _ref2.barGap,
	      barCategoryGap = _ref2.barCategoryGap,
	      bandSize = _ref2.bandSize,
	      _ref2$sizeList = _ref2.sizeList,
	      sizeList = _ref2$sizeList === undefined ? [] : _ref2$sizeList,
	      maxBarSize = _ref2.maxBarSize;
	
	  var len = sizeList.length;
	  if (len < 1) return null;
	
	  var realBarGap = (0, _DataUtils.getPercentValue)(barGap, bandSize, 0, true);
	  var result = void 0;
	
	  // whether or not is barSize setted by user
	  if (sizeList[0].barSize === +sizeList[0].barSize) {
	    (function () {
	      var sum = sizeList.reduce(function (res, entry) {
	        return res + entry.barSize || 0;
	      }, 0);
	      sum += (len - 1) * realBarGap;
	      var offset = (bandSize - sum) / 2 >> 0;
	      var prev = { offset: offset - realBarGap, size: 0 };
	
	      result = sizeList.reduce(function (res, entry) {
	        var newRes = [].concat(_toConsumableArray(res), [{
	          item: entry.item,
	          position: {
	            offset: prev.offset + prev.size + realBarGap,
	            size: entry.barSize
	          }
	        }]);
	
	        prev = newRes[newRes.length - 1].position;
	
	        if (entry.stackList && entry.stackList.length) {
	          entry.stackList.forEach(function (item) {
	            newRes.push({ item: item, position: prev });
	          });
	        }
	        return newRes;
	      }, []);
	    })();
	  } else {
	    (function () {
	      var offset = (0, _DataUtils.getPercentValue)(barCategoryGap, bandSize, 0, true);
	
	      if (bandSize - 2 * offset - (len - 1) * realBarGap <= 0) {
	        realBarGap = 0;
	      }
	
	      var originalSize = (bandSize - 2 * offset - (len - 1) * realBarGap) / len >> 0;
	      var size = maxBarSize === +maxBarSize ? Math.min(originalSize, maxBarSize) : originalSize;
	
	      result = sizeList.reduce(function (res, entry, i) {
	        var newRes = [].concat(_toConsumableArray(res), [{
	          item: entry.item,
	          position: {
	            offset: offset + (originalSize + realBarGap) * i + (originalSize - size) / 2,
	            size: size
	          }
	        }]);
	
	        if (entry.stackList && entry.stackList.length) {
	          entry.stackList.forEach(function (item) {
	            newRes.push({ item: item, position: newRes[newRes.length - 1].position });
	          });
	        }
	        return newRes;
	      }, []);
	    })();
	  }
	
	  return result;
	};
	
	var appendOffsetOfLegend = exports.appendOffsetOfLegend = function appendOffsetOfLegend(offset, items, props, legendBox) {
	  var children = props.children,
	      width = props.width,
	      height = props.height,
	      margin = props.margin;
	
	  var legendWidth = width - (margin.left || 0) - (margin.right || 0);
	  var legendHeight = height - (margin.top || 0) - (margin.bottom || 0);
	  var legendProps = getLegendProps(children, items, legendWidth, legendHeight);
	  var newOffset = offset;
	
	  if (legendProps) {
	    var box = legendBox || {};
	    var align = legendProps.align,
	        verticalAlign = legendProps.verticalAlign,
	        layout = legendProps.layout;
	
	
	    if ((layout === 'vertical' || layout === 'horizontal' && verticalAlign === 'center') && (0, _DataUtils.isNumber)(offset[align])) {
	      newOffset = _extends({}, offset, _defineProperty({}, align, newOffset[align] + (box.width || 0)));
	    }
	
	    if ((layout === 'horizontal' || layout === 'vertical' && align === 'center') && (0, _DataUtils.isNumber)(offset[verticalAlign])) {
	      newOffset = _extends({}, offset, _defineProperty({}, verticalAlign, newOffset[verticalAlign] + (box.height || 0)));
	    }
	  }
	
	  return newOffset;
	};

/***/ },
/* 839 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _getNiceTickValues = __webpack_require__(840);
	
	Object.defineProperty(exports, 'getTickValues', {
	  enumerable: true,
	  get: function get() {
	    return _getNiceTickValues.getTickValues;
	  }
	});
	Object.defineProperty(exports, 'getNiceTickValues', {
	  enumerable: true,
	  get: function get() {
	    return _getNiceTickValues.getNiceTickValues;
	  }
	});

/***/ },
/* 840 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.getTickValues = exports.getNiceTickValues = undefined;
	
	var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }(); /**
	fileOverview calculate tick values of scale
	author xile611, arcthur
	date 2015-09-17
	
	
	var _utils = __webpack_require__(841);
	
	var _arithmetic = __webpack_require__(842);
	
	var _arithmetic2 = _interopRequireDefault(_arithmetic);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * Calculate a interval of a minimum value and a maximum value
	 *
	 * @param  {Number} min       The minimum value
	 * @param  {Number} max       The maximum value
	 * @return {Array} An interval
	 */
	function getValidInterval(_ref) {
	  var _ref2 = _slicedToArray(_ref, 2);
	
	  var min = _ref2[0];
	  var max = _ref2[1];
	  var validMin = min;
	  var validMax = max;
	
	  // exchange
	
	  if (min > max) {
	    validMin = max;
	    validMax = min;
	  }
	
	  return [validMin, validMax];
	}
	
	/**
	 * Calculate the step which is easy to understand between ticks, like 10, 20, 25
	 *
	 * @param  {Number}  roughStep        The rough step calculated by deviding the
	 * difference by the tickCount
	 * @param  {Boolean} allowDecimals    Allow the ticks to be decimals or not
	 * @param  {Integer} correctionFactor A correction factor
	 * @return {Number}  The step which is easy to understand between two ticks
	 */
	function getFormatStep(roughStep, allowDecimals, correctionFactor) {
	  if (roughStep <= 0) {
	    return 0;
	  }
	
	  var digitCount = _arithmetic2.default.getDigitCount(roughStep);
	  // The ratio between the rough step and the smallest number which has a bigger
	  // order of magnitudes than the rough step
	  var stepRatio = roughStep / Math.pow(10, digitCount);
	  // When an integer and a float multiplied, the accuracy of result may be wrong
	  var amendStepRatio = digitCount !== 1 ? _arithmetic2.default.multiply(Math.ceil(stepRatio / 0.05) + correctionFactor, 0.05) : _arithmetic2.default.multiply(Math.ceil(stepRatio / 0.1) + correctionFactor, 0.1);
	
	  var formatStep = _arithmetic2.default.multiply(amendStepRatio, Math.pow(10, digitCount));
	
	  return allowDecimals ? formatStep : Math.ceil(formatStep);
	}
	
	/**
	 * calculate the ticks when the minimum value equals to the maximum value
	 *
	 * @param  {Number}  value         The minimum valuue which is also the maximum value
	 * @param  {Integer} tickCount     The count of ticks
	 * @param  {Boolean} allowDecimals Allow the ticks to be decimals or not
	 * @return {Array}                 ticks
	 */
	function getTickOfSingleValue(value, tickCount, allowDecimals) {
	  var isFlt = _arithmetic2.default.isFloat(value);
	  var step = 1;
	  // calculate the middle value of ticks
	  var middle = value;
	
	  if (isFlt && allowDecimals) {
	    var absVal = Math.abs(value);
	
	    if (absVal < 1) {
	      // The step should be a float number when the difference is smaller than 1
	      step = Math.pow(10, _arithmetic2.default.getDigitCount(value) - 1);
	
	      middle = _arithmetic2.default.multiply(Math.floor(value / step), step);
	    } else if (absVal > 1) {
	      // Return the maximum integer which is smaller than 'value' when 'value' is greater than 1
	      middle = Math.floor(value);
	    }
	  } else if (value === 0) {
	    middle = Math.floor((tickCount - 1) / 2);
	  } else if (!allowDecimals) {
	    middle = Math.floor(value);
	  }
	
	  var middleIndex = Math.floor((tickCount - 1) / 2);
	
	  var fn = (0, _utils.compose)((0, _utils.map)(function (n) {
	    return _arithmetic2.default.sum(middle, _arithmetic2.default.multiply(n - middleIndex, step));
	  }), _utils.range);
	
	  return fn(0, tickCount);
	}
	
	/**
	 * Calculate the step
	 *
	 * @param  {Number}  min              The minimum value of an interval
	 * @param  {Number}  max              The maximum value of an interval
	 * @param  {Integer} tickCount        The count of ticks
	 * @param  {Boolean} allowDecimals    Allow the ticks to be decimals or not
	 * @param  {Number}  correctionFactor A correction factor
	 * @return {Object}  The step, minimum value of ticks, maximum value of ticks
	 */
	function calculateStep(min, max, tickCount, allowDecimals) {
	  var correctionFactor = arguments.length <= 4 || arguments[4] === undefined ? 0 : arguments[4];
	
	  // The step which is easy to understand between two ticks
	  var step = getFormatStep((max - min) / (tickCount - 1), allowDecimals, correctionFactor);
	  // A medial value of ticks
	  var middle = void 0;
	
	  // When 0 is inside the interval, 0 should be a tick
	  if (min <= 0 && max >= 0) {
	    middle = 0;
	  } else {
	    middle = (min + max) / 2;
	    middle = middle - middle % step;
	  }
	
	  var belowCount = Math.ceil((middle - min) / step);
	  var upCount = Math.ceil((max - middle) / step);
	  var scaleCount = belowCount + upCount + 1;
	
	  if (scaleCount > tickCount) {
	    // When more ticks need to cover the interval, step should be bigger.
	    return calculateStep(min, max, tickCount, allowDecimals, correctionFactor + 1);
	  } else if (scaleCount < tickCount) {
	    // When less ticks can cover the interval, we should add some additional ticks
	    upCount = max > 0 ? upCount + (tickCount - scaleCount) : upCount;
	    belowCount = max > 0 ? belowCount : belowCount + (tickCount - scaleCount);
	  }
	
	  return {
	    step: step,
	    tickMin: _arithmetic2.default.minus(middle, _arithmetic2.default.multiply(belowCount, step)),
	    tickMax: _arithmetic2.default.sum(middle, _arithmetic2.default.multiply(upCount, step))
	  };
	}
	/**
	 * Calculate the ticks of an interval
	 *
	 * @param  {Number}  min, max      min: The minimum value, max: The maximum value
	 * @param  {Integer} tickCount     The count of ticks
	 * @param  {Boolean} allowDecimals Allow the ticks to be decimals or not
	 * @return {Array}   ticks
	 */
	function getNiceTickValuesFn(_ref3) {
	  var _ref4 = _slicedToArray(_ref3, 2);
	
	  var min = _ref4[0];
	  var max = _ref4[1];
	  var tickCount = arguments.length <= 1 || arguments[1] === undefined ? 6 : arguments[1];
	  var allowDecimals = arguments.length <= 2 || arguments[2] === undefined ? true : arguments[2];
	
	  // More than two ticks should be return
	  var count = Math.max(tickCount, 2);
	
	  var _getValidInterval = getValidInterval([min, max]);
	
	  var _getValidInterval2 = _slicedToArray(_getValidInterval, 2);
	
	  var cormin = _getValidInterval2[0];
	  var cormax = _getValidInterval2[1];
	
	
	  if (cormin === cormax) {
	    return getTickOfSingleValue(cormin, tickCount, allowDecimals);
	  }
	
	  // Get the step between two ticks
	
	  var _calculateStep = calculateStep(cormin, cormax, count, allowDecimals);
	
	  var step = _calculateStep.step;
	  var tickMin = _calculateStep.tickMin;
	  var tickMax = _calculateStep.tickMax;
	
	
	  var values = _arithmetic2.default.rangeStep(tickMin, tickMax + 0.1 * step, step);
	
	  return min > max ? (0, _utils.reverse)(values) : values;
	}
	
	function getTickValuesFn(_ref5) {
	  var _ref6 = _slicedToArray(_ref5, 2);
	
	  var min = _ref6[0];
	  var max = _ref6[1];
	  var tickCount = arguments.length <= 1 || arguments[1] === undefined ? 6 : arguments[1];
	  var allowDecimals = arguments.length <= 2 || arguments[2] === undefined ? true : arguments[2];
	
	  // More than two ticks should be return
	  var count = Math.max(tickCount, 2);
	
	  var _getValidInterval3 = getValidInterval([min, max]);
	
	  var _getValidInterval4 = _slicedToArray(_getValidInterval3, 2);
	
	  var cormin = _getValidInterval4[0];
	  var cormax = _getValidInterval4[1];
	
	
	  if (cormin === cormax) {
	    return getTickOfSingleValue(cormin, tickCount, allowDecimals);
	  }
	
	  var step = getFormatStep((cormax - cormin) / (count - 1), allowDecimals, 0);
	
	  var fn = (0, _utils.compose)((0, _utils.map)(function (n) {
	    return cormin + n * step;
	  }), _utils.range);
	
	  var values = fn(0, count).filter(function (entry) {
	    return entry >= cormin && entry <= cormax;
	  });
	
	  return min > max ? (0, _utils.reverse)(values) : values;
	}
	
	var getNiceTickValues = exports.getNiceTickValues = (0, _utils.memoize)(getNiceTickValuesFn);
	var getTickValues = exports.getTickValues = (0, _utils.memoize)(getTickValuesFn);

/***/ },
/* 841 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }
	
	var identity = function identity(i) {
	  return i;
	};
	
	var PLACE_HOLDER = exports.PLACE_HOLDER = {
	  '@@functional/placeholder': true
	};
	
	var isPlaceHolder = function isPlaceHolder(val) {
	  return val === PLACE_HOLDER;
	};
	
	var curry0 = function curry0(fn) {
	  return function _curried() {
	    if (arguments.length === 0 || arguments.length === 1 && isPlaceHolder(arguments.length <= 0 ? undefined : arguments[0])) {
	      return _curried;
	    }
	
	    return fn.apply(undefined, arguments);
	  };
	};
	
	var curryN = function curryN(n, fn) {
	  if (n === 1) {
	    return fn;
	  }
	
	  return curry0(function () {
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    var argsLength = args.filter(function (arg) {
	      return arg !== PLACE_HOLDER;
	    }).length;
	
	    if (argsLength >= n) {
	      return fn.apply(undefined, args);
	    }
	
	    return curryN(n - argsLength, curry0(function () {
	      for (var _len2 = arguments.length, restArgs = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
	        restArgs[_key2] = arguments[_key2];
	      }
	
	      var newArgs = args.map(function (arg) {
	        return isPlaceHolder(arg) ? restArgs.shift() : arg;
	      });
	
	      return fn.apply(undefined, _toConsumableArray(newArgs).concat(restArgs));
	    }));
	  });
	};
	
	var curry = exports.curry = function curry(fn) {
	  return curryN(fn.length, fn);
	};
	
	var range = exports.range = function range(begin, end) {
	  var arr = [];
	
	  for (var i = begin; i < end; ++i) {
	    arr[i - begin] = i;
	  }
	
	  return arr;
	};
	
	var map = exports.map = curry(function (fn, arr) {
	  if (Array.isArray(arr)) {
	    return arr.map(fn);
	  }
	
	  return Object.keys(arr).map(function (key) {
	    return arr[key];
	  }).map(fn);
	});
	
	var compose = exports.compose = function compose() {
	  for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
	    args[_key3] = arguments[_key3];
	  }
	
	  if (!args.length) {
	    return identity;
	  }
	
	  var fns = args.reverse();
	  // first function can receive multiply arguments
	  var firstFn = fns[0];
	  var tailsFn = fns.slice(1);
	
	  return function () {
	    return tailsFn.reduce(function (res, fn) {
	      return fn(res);
	    }, firstFn.apply(undefined, arguments));
	  };
	};
	
	var reverse = exports.reverse = function reverse(arr) {
	  if (Array.isArray(arr)) {
	    return arr.reverse();
	  }
	
	  // can be string
	  return arr.split('').reverse.join('');
	};
	
	var memoize = exports.memoize = function memoize(fn) {
	  var lastArgs = null;
	  var lastResult = null;
	
	  return function () {
	    for (var _len4 = arguments.length, args = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
	      args[_key4] = arguments[_key4];
	    }
	
	    if (lastArgs && args.every(function (val, i) {
	      return val === lastArgs[i];
	    })) {
	      return lastResult;
	    }
	
	    lastArgs = args;
	    lastResult = fn.apply(undefined, args);
	
	    return lastResult;
	  };
	};

/***/ },
/* 842 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _utils = __webpack_require__(841);
	
	/**
	 * 判断数据是否为浮点类型
	 *
	 * @param {Number} num 输入值
	 * @return {Boolean} 是否是浮点类型
	 */
	function isFloat(num) {
	  return (/^([+-]?)\d*\.\d+$/.test(num)
	  );
	}
	
	/**
	 * 获取数值的位数
	 * 其中绝对值属于区间[0.1, 1)， 得到的值为0
	 * 绝对值属于区间[0.01, 0.1)，得到的位数为 -1
	 * 绝对值属于区间[0.001, 0.01)，得到的位数为 -2
	 *
	 * @param  {Number} value 数值
	 * @return {Integer} 位数
	 */
	/**
	 * @fileOverview 一些公用的运算方法
	 * @author xile611
	 * @date 2015-09-17
	 */
	function getDigitCount(value) {
	  var abs = Math.abs(value);
	  var result = void 0;
	
	  if (value === 0) {
	    result = 1;
	  } else if (abs < 1) {
	    result = Math.floor(Math.log(abs) / Math.log(10)) + 1;
	  } else {
	    var str = '' + value;
	    var ary = str.split('.');
	
	    result = ary[0].length;
	  }
	
	  return result;
	}
	/**
	 * 计算数值的小数点后的位数
	 * @param  {Number} a 数值，可能为整数，也可能为浮点数
	 * @return {Integer}   位数
	 */
	function getDecimalDigitCount(a) {
	  var str = a ? '' + a : '';
	  var ary = str.split('.');
	
	  return ary.length > 1 ? ary[1].length : 0;
	}
	/**
	 * 乘法运算，解决了js运算的精度问题
	 * @param  {Number} a 被乘数
	 * @param  {Number} b 乘数
	 * @return {Number}   积
	 */
	function multiply(a, b) {
	  var intA = parseInt(('' + a).replace('.', ''), 10);
	  var intB = parseInt(('' + b).replace('.', ''), 10);
	  var count = getDecimalDigitCount(a) + getDecimalDigitCount(b);
	
	  return intA * intB / Math.pow(10, count);
	}
	/**
	 * 加法运算，解决了js运算的精度问题
	 * @param  {Number} a 被加数
	 * @param  {Number} b 加数
	 * @return {Number}   和
	 */
	function sum(a, b) {
	  var count = Math.max(getDecimalDigitCount(a), getDecimalDigitCount(b));
	
	  count = Math.pow(10, count);
	
	  return (multiply(a, count) + multiply(b, count)) / count;
	}
	/**
	 * 减法运算，解决了js运算的精度问题
	 * @param  {Number} a 被减数
	 * @param  {Number} b 减数
	 * @return {Number}   差
	 */
	function minus(a, b) {
	  return sum(a, -b);
	}
	/**
	 * 除法运算，解决了js运算的精度问题
	 * @param  {Number} a 被除数
	 * @param  {Number} b 除数
	 * @return {Number}   结果
	 */
	function divide(a, b) {
	  var ca = getDecimalDigitCount(a);
	  var cb = getDecimalDigitCount(b);
	  var intA = parseInt(('' + a).replace('.', ''), 10);
	  var intB = parseInt(('' + b).replace('.', ''), 10);
	
	  return intA / intB * Math.pow(10, cb - ca);
	}
	
	/**
	 * 按照固定的步长获取[start, end)这个区间的数据
	 * 并且需要处理js计算精度的问题
	 *
	 * @param  {Number} start 起点
	 * @param  {Number} end   终点，不包含该值
	 * @param  {Number} step  步长
	 * @return {Array}        若干数值
	 */
	function rangeStep(start, end, step) {
	  var num = start;
	  var result = [];
	
	  while (num < end) {
	    result.push(num);
	
	    num = sum(num, step);
	  }
	
	  return result;
	}
	/**
	 * 对数值进行线性插值
	 *
	 * @param  {Number} a  定义域的极点
	 * @param  {Number} b  定义域的极点
	 * @param  {Number} t  [0, 1]内的某个值
	 * @return {Number}    定义域内的某个值
	 */
	var interpolateNumber = (0, _utils.curry)(function (a, b, t) {
	  var newA = +a;
	  var newB = +b;
	
	  return newA + t * (newB - newA);
	});
	/**
	 * 线性插值的逆运算
	 *
	 * @param  {Number} a 定义域的极点
	 * @param  {Number} b 定义域的极点
	 * @param  {Number} x 可以认为是插值后的一个输出值
	 * @return {Number}   当x在 a ~ b这个范围内时，返回值属于[0, 1]
	 */
	var uninterpolateNumber = (0, _utils.curry)(function (a, b, x) {
	  var diff = b - +a;
	
	  diff = diff || Infinity;
	
	  return (x - a) / diff;
	});
	/**
	 * 线性插值的逆运算，并且有截断的操作
	 *
	 * @param  {Number} a 定义域的极点
	 * @param  {Number} b 定义域的极点
	 * @param  {Number} x 可以认为是插值后的一个输出值
	 * @return {Number}   当x在 a ~ b这个区间内时，返回值属于[0, 1]，
	 * 当x不在 a ~ b这个区间时，会截断到 a ~ b 这个区间
	 */
	var uninterpolateTruncation = (0, _utils.curry)(function (a, b, x) {
	  var diff = b - +a;
	
	  diff = diff || Infinity;
	
	  return Math.max(0, Math.min(1, (x - a) / diff));
	});
	
	exports.default = {
	  rangeStep: rangeStep,
	  isFloat: isFloat,
	  getDigitCount: getDigitCount,
	  getDecimalDigitCount: getDecimalDigitCount,
	
	  sum: sum,
	  minus: minus,
	  multiply: multiply,
	  divide: divide,
	
	  interpolateNumber: interpolateNumber,
	  uninterpolateNumber: uninterpolateNumber,
	  uninterpolateTruncation: uninterpolateTruncation
	};

/***/ },
/* 843 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.SYNC_EVENT = exports.eventCenter = undefined;
	
	var _events = __webpack_require__(844);
	
	var _events2 = _interopRequireDefault(_events);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var eventCenter = new _events2.default();
	
	if (eventCenter.setMaxListeners) {
	  eventCenter.setMaxListeners(10);
	}
	
	exports.eventCenter = eventCenter;
	var SYNC_EVENT = exports.SYNC_EVENT = 'recharts.syncMouseEvents';

/***/ },
/* 844 */
/***/ function(module, exports) {

	// Copyright Joyent, Inc. and other Node contributors.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a
	// copy of this software and associated documentation files (the
	// "Software"), to deal in the Software without restriction, including
	// without limitation the rights to use, copy, modify, merge, publish,
	// distribute, sublicense, and/or sell copies of the Software, and to permit
	// persons to whom the Software is furnished to do so, subject to the
	// following conditions:
	//
	// The above copyright notice and this permission notice shall be included
	// in all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
	// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
	// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
	// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
	// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
	// USE OR OTHER DEALINGS IN THE SOFTWARE.
	
	function EventEmitter() {
	  this._events = this._events || {};
	  this._maxListeners = this._maxListeners || undefined;
	}
	module.exports = EventEmitter;
	
	// Backwards-compat with node 0.10.x
	EventEmitter.EventEmitter = EventEmitter;
	
	EventEmitter.prototype._events = undefined;
	EventEmitter.prototype._maxListeners = undefined;
	
	// By default EventEmitters will print a warning if more than 10 listeners are
	// added to it. This is a useful default which helps finding memory leaks.
	EventEmitter.defaultMaxListeners = 10;
	
	// Obviously not all Emitters should be limited to 10. This function allows
	// that to be increased. Set to zero for unlimited.
	EventEmitter.prototype.setMaxListeners = function(n) {
	  if (!isNumber(n) || n < 0 || isNaN(n))
	    throw TypeError('n must be a positive number');
	  this._maxListeners = n;
	  return this;
	};
	
	EventEmitter.prototype.emit = function(type) {
	  var er, handler, len, args, i, listeners;
	
	  if (!this._events)
	    this._events = {};
	
	  // If there is no 'error' event listener then throw.
	  if (type === 'error') {
	    if (!this._events.error ||
	        (isObject(this._events.error) && !this._events.error.length)) {
	      er = arguments[1];
	      if (er instanceof Error) {
	        throw er; // Unhandled 'error' event
	      } else {
	        // At least give some kind of context to the user
	        var err = new Error('Uncaught, unspecified "error" event. (' + er + ')');
	        err.context = er;
	        throw err;
	      }
	    }
	  }
	
	  handler = this._events[type];
	
	  if (isUndefined(handler))
	    return false;
	
	  if (isFunction(handler)) {
	    switch (arguments.length) {
	      // fast cases
	      case 1:
	        handler.call(this);
	        break;
	      case 2:
	        handler.call(this, arguments[1]);
	        break;
	      case 3:
	        handler.call(this, arguments[1], arguments[2]);
	        break;
	      // slower
	      default:
	        args = Array.prototype.slice.call(arguments, 1);
	        handler.apply(this, args);
	    }
	  } else if (isObject(handler)) {
	    args = Array.prototype.slice.call(arguments, 1);
	    listeners = handler.slice();
	    len = listeners.length;
	    for (i = 0; i < len; i++)
	      listeners[i].apply(this, args);
	  }
	
	  return true;
	};
	
	EventEmitter.prototype.addListener = function(type, listener) {
	  var m;
	
	  if (!isFunction(listener))
	    throw TypeError('listener must be a function');
	
	  if (!this._events)
	    this._events = {};
	
	  // To avoid recursion in the case that type === "newListener"! Before
	  // adding it to the listeners, first emit "newListener".
	  if (this._events.newListener)
	    this.emit('newListener', type,
	              isFunction(listener.listener) ?
	              listener.listener : listener);
	
	  if (!this._events[type])
	    // Optimize the case of one listener. Don't need the extra array object.
	    this._events[type] = listener;
	  else if (isObject(this._events[type]))
	    // If we've already got an array, just append.
	    this._events[type].push(listener);
	  else
	    // Adding the second element, need to change to array.
	    this._events[type] = [this._events[type], listener];
	
	  // Check for listener leak
	  if (isObject(this._events[type]) && !this._events[type].warned) {
	    if (!isUndefined(this._maxListeners)) {
	      m = this._maxListeners;
	    } else {
	      m = EventEmitter.defaultMaxListeners;
	    }
	
	    if (m && m > 0 && this._events[type].length > m) {
	      this._events[type].warned = true;
	      console.error('(node) warning: possible EventEmitter memory ' +
	                    'leak detected. %d listeners added. ' +
	                    'Use emitter.setMaxListeners() to increase limit.',
	                    this._events[type].length);
	      if (typeof console.trace === 'function') {
	        // not supported in IE 10
	        console.trace();
	      }
	    }
	  }
	
	  return this;
	};
	
	EventEmitter.prototype.on = EventEmitter.prototype.addListener;
	
	EventEmitter.prototype.once = function(type, listener) {
	  if (!isFunction(listener))
	    throw TypeError('listener must be a function');
	
	  var fired = false;
	
	  function g() {
	    this.removeListener(type, g);
	
	    if (!fired) {
	      fired = true;
	      listener.apply(this, arguments);
	    }
	  }
	
	  g.listener = listener;
	  this.on(type, g);
	
	  return this;
	};
	
	// emits a 'removeListener' event iff the listener was removed
	EventEmitter.prototype.removeListener = function(type, listener) {
	  var list, position, length, i;
	
	  if (!isFunction(listener))
	    throw TypeError('listener must be a function');
	
	  if (!this._events || !this._events[type])
	    return this;
	
	  list = this._events[type];
	  length = list.length;
	  position = -1;
	
	  if (list === listener ||
	      (isFunction(list.listener) && list.listener === listener)) {
	    delete this._events[type];
	    if (this._events.removeListener)
	      this.emit('removeListener', type, listener);
	
	  } else if (isObject(list)) {
	    for (i = length; i-- > 0;) {
	      if (list[i] === listener ||
	          (list[i].listener && list[i].listener === listener)) {
	        position = i;
	        break;
	      }
	    }
	
	    if (position < 0)
	      return this;
	
	    if (list.length === 1) {
	      list.length = 0;
	      delete this._events[type];
	    } else {
	      list.splice(position, 1);
	    }
	
	    if (this._events.removeListener)
	      this.emit('removeListener', type, listener);
	  }
	
	  return this;
	};
	
	EventEmitter.prototype.removeAllListeners = function(type) {
	  var key, listeners;
	
	  if (!this._events)
	    return this;
	
	  // not listening for removeListener, no need to emit
	  if (!this._events.removeListener) {
	    if (arguments.length === 0)
	      this._events = {};
	    else if (this._events[type])
	      delete this._events[type];
	    return this;
	  }
	
	  // emit removeListener for all listeners on all events
	  if (arguments.length === 0) {
	    for (key in this._events) {
	      if (key === 'removeListener') continue;
	      this.removeAllListeners(key);
	    }
	    this.removeAllListeners('removeListener');
	    this._events = {};
	    return this;
	  }
	
	  listeners = this._events[type];
	
	  if (isFunction(listeners)) {
	    this.removeListener(type, listeners);
	  } else if (listeners) {
	    // LIFO order
	    while (listeners.length)
	      this.removeListener(type, listeners[listeners.length - 1]);
	  }
	  delete this._events[type];
	
	  return this;
	};
	
	EventEmitter.prototype.listeners = function(type) {
	  var ret;
	  if (!this._events || !this._events[type])
	    ret = [];
	  else if (isFunction(this._events[type]))
	    ret = [this._events[type]];
	  else
	    ret = this._events[type].slice();
	  return ret;
	};
	
	EventEmitter.prototype.listenerCount = function(type) {
	  if (this._events) {
	    var evlistener = this._events[type];
	
	    if (isFunction(evlistener))
	      return 1;
	    else if (evlistener)
	      return evlistener.length;
	  }
	  return 0;
	};
	
	EventEmitter.listenerCount = function(emitter, type) {
	  return emitter.listenerCount(type);
	};
	
	function isFunction(arg) {
	  return typeof arg === 'function';
	}
	
	function isNumber(arg) {
	  return typeof arg === 'number';
	}
	
	function isObject(arg) {
	  return typeof arg === 'object' && arg !== null;
	}
	
	function isUndefined(arg) {
	  return arg === void 0;
	}


/***/ },
/* 845 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _isNil2 = __webpack_require__(671);
	
	var _isNil3 = _interopRequireDefault(_isNil2);
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _PureRender = __webpack_require__(746);
	
	var _ReactUtils = __webpack_require__(670);
	
	var _CartesianUtils = __webpack_require__(838);
	
	var _DataUtils = __webpack_require__(673);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	/*
	 * ComposedDataDecorator is a wrapper component that calculates expensive,
	 * reusable data like ticks of an axis, stores it in state on this component,
	 * and passes it in as props to the wrapped component.
	 */
	exports.default = function (_ref) {
	  var getComposedData = _ref.getComposedData,
	      ChildComponent = _ref.ChildComponent;
	  return function (WrappedComponent) {
	    var _class, _temp2;
	
	    return _temp2 = _class = function (_Component) {
	      _inherits(ComposedDataDecorator, _Component);
	
	      function ComposedDataDecorator() {
	        var _ref2;
	
	        var _temp, _this, _ret;
	
	        _classCallCheck(this, ComposedDataDecorator);
	
	        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	          args[_key] = arguments[_key];
	        }
	
	        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref2 = ComposedDataDecorator.__proto__ || Object.getPrototypeOf(ComposedDataDecorator)).call.apply(_ref2, [this].concat(args))), _this), _this.state = _this.calculateExpensiveState({ props: _this.props }), _temp), _possibleConstructorReturn(_this, _ret);
	      }
	
	      // static WrappedComponent = WrappedComponent;
	
	      _createClass(ComposedDataDecorator, [{
	        key: 'calculateExpensiveState',
	
	
	        /**
	         * @param {Object} props The props object to operate on
	         * @return {Object} returnObj
	         *  returnObj {Array} axisTicks Used by renderCursor and anything
	         *          else that needs the ticks of the axisTicks
	         *  returObj {Array} allComposedData An array or arrays.
	         *          Each top-level element is the composedData {points, baseLine, layout}
	         *          for a given child(graphcalItem) of the overall Chart
	         */
	        value: function calculateExpensiveState(_ref3) {
	          var props = _ref3.props;
	          var children = props.children,
	              graphicalItems = props.graphicalItems,
	              xAxisMap = props.xAxisMap,
	              yAxisMap = props.yAxisMap,
	              stackGroups = props.stackGroups,
	              layout = props.layout,
	              offset = props.offset,
	              barSize = props.barSize,
	              barGap = props.barGap,
	              barCategoryGap = props.barCategoryGap,
	              globalMaxBarSize = props.maxBarSize;
	
	          // Some charts pre-filter their items into the graphicalItems prop,
	          // others filter it in render of the children
	
	          var items = graphicalItems || (0, _ReactUtils.findAllByType)(children, ChildComponent);
	
	          var sizeList = (0, _CartesianUtils.getBarSizeList)({ barSize: barSize, stackGroups: stackGroups });
	
	          var axisTicks = void 0;
	          var allComposedData = [];
	          items.forEach(function (item) {
	            var _item$props = item.props,
	                xAxisId = _item$props.xAxisId,
	                yAxisId = _item$props.yAxisId,
	                dataKey = _item$props.dataKey,
	                childMaxBarSize = _item$props.maxBarSize;
	
	            var xAxis = void 0,
	                yAxis = void 0,
	                xTicks = void 0,
	                yTicks = void 0,
	                barPosition = void 0,
	                stackedData = void 0,
	                bandSize = void 0;
	
	            if (xAxisMap || yAxisMap) {
	
	              xAxis = xAxisMap[xAxisId];
	              yAxis = yAxisMap[yAxisId];
	
	              xTicks = (0, _CartesianUtils.getTicksOfAxis)(xAxis);
	              yTicks = (0, _CartesianUtils.getTicksOfAxis)(yAxis);
	
	              // axisTicks is more global - only need to set once
	              axisTicks = axisTicks || (layout === 'horizontal' ? xTicks : yTicks);
	
	              var numericAxisId = layout === 'horizontal' ? yAxisId : xAxisId;
	              var cateAxisId = layout === 'horizontal' ? xAxisId : yAxisId;
	              var cateAxis = layout === 'horizontal' ? xAxis : yAxis;
	              var cateTicks = layout === 'horizontal' ? xTicks : yTicks;
	
	              stackedData = stackGroups && stackGroups[numericAxisId] && stackGroups[numericAxisId].hasStack && (0, _CartesianUtils.getStackedDataOfItem)(item, stackGroups[numericAxisId].stackGroups);
	
	              bandSize = (0, _DataUtils.getBandSizeOfAxis)(cateAxis, cateTicks);
	              var maxBarSize = (0, _isNil3.default)(childMaxBarSize) ? globalMaxBarSize : childMaxBarSize;
	              barPosition = (0, _CartesianUtils.getBarPosition)({
	                barGap: barGap, barCategoryGap: barCategoryGap, bandSize: bandSize, sizeList: sizeList[cateAxisId], maxBarSize: maxBarSize
	              });
	            }
	
	            var composedData = getComposedData && getComposedData({ props: props,
	              xAxis: xAxis, yAxis: yAxis, xTicks: xTicks, yTicks: yTicks, dataKey: dataKey, item: item, bandSize: bandSize, barPosition: barPosition, offset: offset, stackedData: stackedData
	            }) || {};
	            allComposedData.push(composedData);
	          });
	
	          return { axisTicks: axisTicks, allComposedData: allComposedData };
	        }
	        /*
	        * Update the state of the composedData if anything relevant changed
	        */
	        /* eslint-disable no-unused-vars */
	
	      }, {
	        key: 'componentWillReceiveProps',
	        value: function componentWillReceiveProps(nextProps) {
	          var graphicalItems = nextProps.graphicalItems,
	              children = nextProps.children,
	              chartX = nextProps.chartX,
	              chartY = nextProps.chartY,
	              activeTooltipIndex = nextProps.activeTooltipIndex,
	              activeLabel = nextProps.activeLabel,
	              activeCoordinate = nextProps.activeCoordinate,
	              activePayload = nextProps.activePayload,
	              isTooltipActive = nextProps.isTooltipActive,
	              restNextProps = _objectWithoutProperties(nextProps, ['graphicalItems', 'children', 'chartX', 'chartY', 'activeTooltipIndex', 'activeLabel', 'activeCoordinate', 'activePayload', 'isTooltipActive']);
	
	          var _props = this.props,
	              graphicalItemsOld = _props.graphicalItems,
	              childrenOld = _props.children,
	              chartXOld = _props.chartX,
	              chartYOld = _props.chartY,
	              aTIOld = _props.activeTooltipIndex,
	              aLOld = _props.activeLabel,
	              aCOld = _props.activeCoordinate,
	              aPOld = _props.activePayload,
	              iTAOld = _props.isTooltipActive,
	              restOldProps = _objectWithoutProperties(_props, ['graphicalItems', 'children', 'chartX', 'chartY', 'activeTooltipIndex', 'activeLabel', 'activeCoordinate', 'activePayload', 'isTooltipActive']);
	
	          /* eslint-enable no-unused-vars */
	
	
	          if (!(0, _PureRender.shallowEqual)(graphicalItems, graphicalItemsOld) || !(0, _PureRender.shallowEqual)(children, childrenOld) || !(0, _PureRender.shallowEqual)(restNextProps, restOldProps)) {
	            this.setState(this.calculateExpensiveState({ props: nextProps }));
	          }
	        }
	        /*
	         * Ignore the state generated by calculateExpensiveState when determining
	         * whether to update
	         */
	
	      }, {
	        key: 'shouldComponentUpdate',
	        value: function shouldComponentUpdate(_ref4, nextState) {
	          var graphicalItems = _ref4.graphicalItems,
	              restProps = _objectWithoutProperties(_ref4, ['graphicalItems']);
	
	          // props.graphicalItems is sometimes generated every time -
	          // check that specially as object equality is likely to fail
	          var _props2 = this.props,
	              graphicalItemsOld = _props2.graphicalItems,
	              restPropsOld = _objectWithoutProperties(_props2, ['graphicalItems']);
	
	          return !(0, _PureRender.shallowEqual)(graphicalItems, graphicalItemsOld) || !(0, _PureRender.shallowEqual)(restProps, restPropsOld) || !(0, _PureRender.shallowEqual)(nextState, this.state);
	        }
	      }, {
	        key: 'render',
	        value: function render() {
	          return _react2.default.createElement(WrappedComponent, _extends({}, this.props, this.state));
	        }
	      }]);
	
	      return ComposedDataDecorator;
	    }(_react.Component), _class.displayName = 'ComposedDataDecorator(' + (0, _ReactUtils.getDisplayName)(WrappedComponent) + ')', _class.propTypes = _extends({}, WrappedComponent.propTypes, {
	      chartX: _react.PropTypes.number,
	      chartY: _react.PropTypes.number,
	      data: _react.PropTypes.array
	    }), _class.defaultProps = WrappedComponent.defaultProps, _temp2;
	  };
	};

/***/ },
/* 846 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.BarChart = undefined;
	
	var _isNil2 = __webpack_require__(671);
	
	var _isNil3 = _interopRequireDefault(_isNil2);
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _dec, _class, _class2, _temp;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; /**
	                                                                                                                                                                                                                                                                   * @fileOverview Bar Chart
	                                                                                                                                                                                                                                                                   */
	
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Layer = __webpack_require__(747);
	
	var _Layer2 = _interopRequireDefault(_Layer);
	
	var _Tooltip = __webpack_require__(753);
	
	var _Tooltip2 = _interopRequireDefault(_Tooltip);
	
	var _Rectangle = __webpack_require__(802);
	
	var _Rectangle2 = _interopRequireDefault(_Rectangle);
	
	var _DataUtils = __webpack_require__(673);
	
	var _ReactUtils = __webpack_require__(670);
	
	var _generateCategoricalChart = __webpack_require__(836);
	
	var _generateCategoricalChart2 = _interopRequireDefault(_generateCategoricalChart);
	
	var _Cell = __webpack_require__(788);
	
	var _Cell2 = _interopRequireDefault(_Cell);
	
	var _Bar = __webpack_require__(830);
	
	var _Bar2 = _interopRequireDefault(_Bar);
	
	var _AnimationDecorator = __webpack_require__(814);
	
	var _AnimationDecorator2 = _interopRequireDefault(_AnimationDecorator);
	
	var _ComposedDataDecorator = __webpack_require__(845);
	
	var _ComposedDataDecorator2 = _interopRequireDefault(_ComposedDataDecorator);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var getCategoryAxisCoordinate = function getCategoryAxisCoordinate(_ref) {
	  var axis = _ref.axis,
	      ticks = _ref.ticks,
	      offset = _ref.offset,
	      bandSize = _ref.bandSize,
	      entry = _ref.entry,
	      index = _ref.index;
	
	  if (axis.type === 'category') {
	    return ticks[index] ? ticks[index].coordinate + offset : null;
	  }
	
	  var value = (0, _DataUtils.getValueByDataKey)(entry, axis.dataKey);
	
	  return !(0, _isNil3.default)(value) ? axis.scale(value) - bandSize / 2 + offset : null;
	};
	
	var getBaseValue = function getBaseValue(_ref2) {
	  var props = _ref2.props,
	      xAxis = _ref2.xAxis,
	      yAxis = _ref2.yAxis;
	  var layout = props.layout;
	
	  var numberAxis = layout === 'horizontal' ? yAxis : xAxis;
	  var domain = numberAxis.scale.domain();
	
	  if (numberAxis.type === 'number') {
	    return Math.max(Math.min(domain[0], domain[1]), 0);
	  }
	
	  return domain[0];
	};
	
	/**
	 * Compose the data of each group
	 * @param {Object} props Props for the component
	 * @param {Object} item        An instance of Bar
	 * @param {Array} barPosition The offset and size of each bar
	 * @param {Object} xAxis       The configuration of x-axis
	 * @param {Object} yAxis       The configuration of y-axis
	 * @param {Array} stackedData  The stacked data of a bar item
	 * @return{Array} Composed data
	 */
	var getComposedData = function getComposedData(_ref3) {
	  var props = _ref3.props,
	      item = _ref3.item,
	      barPosition = _ref3.barPosition,
	      bandSize = _ref3.bandSize,
	      xAxis = _ref3.xAxis,
	      yAxis = _ref3.yAxis,
	      xTicks = _ref3.xTicks,
	      yTicks = _ref3.yTicks,
	      stackedData = _ref3.stackedData;
	  var layout = props.layout,
	      dataStartIndex = props.dataStartIndex,
	      dataEndIndex = props.dataEndIndex;
	  var _item$props = item.props,
	      dataKey = _item$props.dataKey,
	      children = _item$props.children,
	      minPointSize = _item$props.minPointSize;
	
	  var pos = (0, _DataUtils.findPositionOfBar)(barPosition, item);
	
	  if (!pos) {
	    return [];
	  }
	
	  var data = props.data.slice(dataStartIndex, dataEndIndex + 1);
	  var baseValue = getBaseValue({ props: props, xAxis: xAxis, yAxis: yAxis });
	  var cells = (0, _ReactUtils.findAllByType)(children, _Cell2.default);
	
	  return data.map(function (entry, index) {
	    var value = stackedData ? stackedData[dataStartIndex + index] : [baseValue, (0, _DataUtils.getValueByDataKey)(entry, dataKey)];
	    var x = void 0,
	        y = void 0,
	        width = void 0,
	        height = void 0;
	
	    if (layout === 'horizontal') {
	      x = getCategoryAxisCoordinate({
	        axis: xAxis,
	        ticks: xTicks,
	        bandSize: bandSize,
	        offset: pos.offset,
	        entry: entry,
	        index: index
	      });
	      y = yAxis.scale(xAxis.orientation === 'top' ? value[0] : value[1]);
	      width = pos.size;
	      height = xAxis.orientation === 'top' ? yAxis.scale(value[1]) - yAxis.scale(value[0]) : yAxis.scale(value[0]) - yAxis.scale(value[1]);
	      if (Math.abs(minPointSize) > 0 && Math.abs(height) < Math.abs(minPointSize)) {
	        var delta = Math.sign(height || minPointSize) * (Math.abs(minPointSize) - Math.abs(height));
	
	        y -= delta;
	        height += delta;
	      }
	    } else {
	      x = xAxis.scale(yAxis.orientation === 'left' ? value[0] : value[1]);
	      y = getCategoryAxisCoordinate({
	        axis: yAxis,
	        ticks: yTicks,
	        bandSize: bandSize,
	        offset: pos.offset,
	        entry: entry,
	        index: index
	      });
	      width = yAxis.orientation === 'left' ? xAxis.scale(value[1]) - xAxis.scale(value[0]) : xAxis.scale(value[0]) - xAxis.scale(value[1]);
	      height = pos.size;
	
	      if (Math.abs(minPointSize) > 0 && Math.abs(width) < Math.abs(minPointSize)) {
	        var _delta = Math.sign(width || minPointSize) * (Math.abs(minPointSize) - Math.abs(width));
	        width += _delta;
	      }
	    }
	
	    return _extends({}, entry, {
	      x: x, y: y, width: width, height: height, value: stackedData ? value : value[1],
	      payload: entry
	    }, cells && cells[index] && cells[index].props);
	  });
	};
	
	var BarChart = (_dec = (0, _ComposedDataDecorator2.default)({ getComposedData: getComposedData }), (0, _AnimationDecorator2.default)(_class = _dec(_class = (_temp = _class2 = function (_Component) {
	  _inherits(BarChart, _Component);
	
	  function BarChart() {
	    _classCallCheck(this, BarChart);
	
	    return _possibleConstructorReturn(this, (BarChart.__proto__ || Object.getPrototypeOf(BarChart)).apply(this, arguments));
	  }
	
	  _createClass(BarChart, [{
	    key: 'renderCursor',
	    value: function renderCursor(_ref4) {
	      var xAxisMap = _ref4.xAxisMap,
	          yAxisMap = _ref4.yAxisMap,
	          offset = _ref4.offset;
	      var _props = this.props,
	          children = _props.children,
	          isTooltipActive = _props.isTooltipActive,
	          layout = _props.layout,
	          activeTooltipIndex = _props.activeTooltipIndex,
	          axisTicks = _props.axisTicks;
	
	      var tooltipItem = (0, _ReactUtils.findChildByType)(children, _Tooltip2.default);
	      if (!tooltipItem || !tooltipItem.props.cursor || !isTooltipActive || activeTooltipIndex < 0) {
	        return null;
	      }
	
	      var axisMap = layout === 'horizontal' ? xAxisMap : yAxisMap;
	      var axis = (0, _DataUtils.getAnyElementOfObject)(axisMap);
	      var ticks = axisTicks;
	
	      if (!ticks || !ticks[activeTooltipIndex]) {
	        return null;
	      }
	
	      var bandSize = (0, _DataUtils.getBandSizeOfAxis)(axis);
	      var start = ticks[activeTooltipIndex].coordinate;
	      var cursorProps = _extends({
	        fill: '#f1f1f1'
	      }, (0, _ReactUtils.getPresentationAttributes)(tooltipItem.props.cursor), {
	        x: layout === 'horizontal' ? start : offset.left + 0.5,
	        y: layout === 'horizontal' ? offset.top + 0.5 : start,
	        width: layout === 'horizontal' ? bandSize : offset.width - 1,
	        height: layout === 'horizontal' ? offset.height - 1 : bandSize
	      });
	
	      return _react2.default.isValidElement(tooltipItem.props.cursor) ? _react2.default.cloneElement(tooltipItem.props.cursor, cursorProps) : _react2.default.createElement(_Rectangle2.default, _extends({}, cursorProps, { className: 'recharts-bar-cursor' }));
	    }
	
	    /**
	     * Draw the main part of bar chart
	     * @param  {Array} items     All the instance of Bar
	     * @param  {Object} offset   The offset of main part in the svg element
	     * @return {ReactComponent}  All the instances of Bar
	     */
	
	  }, {
	    key: 'renderItems',
	    value: function renderItems(items, offset) {
	      if (!items || !items.length) {
	        return null;
	      }
	
	      var _props2 = this.props,
	          layout = _props2.layout,
	          xAxisMap = _props2.xAxisMap,
	          yAxisMap = _props2.yAxisMap;
	      var _props3 = this.props,
	          animationId = _props3.animationId,
	          allComposedData = _props3.allComposedData;
	
	
	      return items.map(function (child, i) {
	        return _react2.default.cloneElement(child, _extends({
	          key: 'bar-' + i,
	          layout: layout,
	          animationId: animationId
	        }, offset, {
	          data: allComposedData[i],
	          xAxis: xAxisMap[child.props.xAxisId],
	          yAxis: yAxisMap[child.props.yAxisId]
	        }));
	      }, this);
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _props4 = this.props,
	          isComposed = _props4.isComposed,
	          graphicalItems = _props4.graphicalItems,
	          xAxisMap = _props4.xAxisMap,
	          yAxisMap = _props4.yAxisMap,
	          offset = _props4.offset;
	
	
	      return _react2.default.createElement(
	        _Layer2.default,
	        { className: 'recharts-bar-graphical' },
	        !isComposed && this.renderCursor({ xAxisMap: xAxisMap, yAxisMap: yAxisMap, offset: offset }),
	        this.renderItems(graphicalItems, offset)
	      );
	    }
	  }]);
	
	  return BarChart;
	}(_react.Component), _class2.displayName = 'BarChart', _class2.propTypes = {
	  allComposedData: _react.PropTypes.array,
	  axisTicks: _react.PropTypes.array,
	  layout: _react.PropTypes.oneOf(['horizontal', 'vertical']),
	  dataStartIndex: _react.PropTypes.number,
	  dataEndIndex: _react.PropTypes.number,
	  data: _react.PropTypes.array,
	  isTooltipActive: _react.PropTypes.bool,
	  activeTooltipIndex: _react.PropTypes.number,
	  xAxisMap: _react.PropTypes.object,
	  yAxisMap: _react.PropTypes.object,
	  offset: _react.PropTypes.object,
	  graphicalItems: _react.PropTypes.array,
	  children: _react.PropTypes.oneOfType([_react.PropTypes.arrayOf(_react.PropTypes.node), _react.PropTypes.node]),
	  stackGroups: _react.PropTypes.object,
	  barCategoryGap: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.string]),
	  barGap: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.string]),
	  barSize: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.string]),
	  // used internally
	  isComposed: _react.PropTypes.bool,
	  animationId: _react.PropTypes.number
	}, _class2.defaultProps = {
	  barCategoryGap: '10%',
	  barGap: 4
	}, _temp)) || _class) || _class);
	exports.default = (0, _generateCategoricalChart2.default)(BarChart, _Bar2.default);
	exports.BarChart = BarChart;

/***/ },
/* 847 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.PieChart = undefined;
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _dec, _class, _class2, _temp2;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; /**
	                                                                                                                                                                                                                                                                   * @fileOverview Pie Chart
	                                                                                                                                                                                                                                                                   */
	
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(404);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _Surface = __webpack_require__(669);
	
	var _Surface2 = _interopRequireDefault(_Surface);
	
	var _Legend = __webpack_require__(748);
	
	var _Legend2 = _interopRequireDefault(_Legend);
	
	var _Tooltip = __webpack_require__(753);
	
	var _Tooltip2 = _interopRequireDefault(_Tooltip);
	
	var _Pie = __webpack_require__(812);
	
	var _Pie2 = _interopRequireDefault(_Pie);
	
	var _Cell = __webpack_require__(788);
	
	var _Cell2 = _interopRequireDefault(_Cell);
	
	var _DataUtils = __webpack_require__(673);
	
	var _ReactUtils = __webpack_require__(670);
	
	var _PolarUtils = __webpack_require__(800);
	
	var _ComposedDataDecorator = __webpack_require__(845);
	
	var _ComposedDataDecorator2 = _interopRequireDefault(_ComposedDataDecorator);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var getComposedData = function getComposedData(_ref) {
	  var item = _ref.item;
	  var _item$props = item.props,
	      data = _item$props.data,
	      children = _item$props.children;
	
	  var presentationProps = (0, _ReactUtils.getPresentationAttributes)(item.props);
	  var cells = (0, _ReactUtils.findAllByType)(children, _Cell2.default);
	
	  if (data && data.length) {
	    return data.map(function (entry, index) {
	      return _extends({
	        payload: entry
	      }, presentationProps, entry, cells && cells[index] && cells[index].props);
	    });
	  }
	
	  if (cells && cells.length) {
	    return cells.map(function (cell) {
	      return _extends({}, presentationProps, cell.props);
	    });
	  }
	
	  return [];
	};
	
	var PieChart = exports.PieChart = (_dec = (0, _ComposedDataDecorator2.default)({ getComposedData: getComposedData, ChildComponent: _Pie2.default }), _dec(_class = (_temp2 = _class2 = function (_Component) {
	  _inherits(PieChart, _Component);
	
	  function PieChart() {
	    var _ref2;
	
	    var _temp, _this, _ret;
	
	    _classCallCheck(this, PieChart);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref2 = PieChart.__proto__ || Object.getPrototypeOf(PieChart)).call.apply(_ref2, [this].concat(args))), _this), _this.state = {
	      activeTooltipLabel: '',
	      activeTooltipCoord: { x: 0, y: 0 },
	      activeTooltipPayload: [],
	      isTooltipActive: false
	    }, _this.handleMouseEnter = function (el) {
	      var children = _this.props.children;
	      var cx = el.cx,
	          cy = el.cy,
	          outerRadius = el.outerRadius,
	          midAngle = el.midAngle;
	
	      var tooltipItem = (0, _ReactUtils.findChildByType)(children, _Tooltip2.default);
	
	      if (tooltipItem) {
	        _this.setState({
	          isTooltipActive: true,
	          activeTooltipCoord: (0, _PolarUtils.polarToCartesian)(cx, cy, outerRadius, midAngle),
	          activeTooltipPayload: [el]
	        });
	      }
	    }, _this.handleMouseLeave = function () {
	      var children = _this.props.children;
	
	      var tooltipItem = (0, _ReactUtils.findChildByType)(children, _Tooltip2.default);
	
	      if (tooltipItem) {
	        _this.setState({
	          isTooltipActive: false
	        });
	      }
	    }, _temp), _possibleConstructorReturn(_this, _ret);
	  }
	
	  _createClass(PieChart, [{
	    key: 'renderLegend',
	
	    /**
	     * Draw legend
	     * @param  {Array} items             The instances of Pie
	     * @return {ReactElement}            The instance of Legend
	     */
	    value: function renderLegend(items) {
	      var _props = this.props,
	          children = _props.children,
	          allComposedData = _props.allComposedData;
	
	      var legendItem = (0, _ReactUtils.findChildByType)(children, _Legend2.default);
	      if (!legendItem) {
	        return null;
	      }
	
	      var _props2 = this.props,
	          width = _props2.width,
	          height = _props2.height,
	          margin = _props2.margin;
	
	      var legendData = legendItem.props && legendItem.props.payload || items.reduce(function (result, child, i) {
	        var nameKey = child.props.nameKey;
	
	        var data = allComposedData[i];
	
	        return result.concat(data.map(function (entry) {
	          return {
	            type: child.props.legendType, value: entry[nameKey],
	            color: entry.fill,
	            payload: entry
	          };
	        }));
	      }, []);
	
	      return _react2.default.cloneElement(legendItem, _extends({}, _Legend2.default.getWithHeight(legendItem, width), {
	        payload: legendData,
	        chartWidth: width,
	        chartHeight: height,
	        margin: margin
	      }));
	    }
	  }, {
	    key: 'renderTooltip',
	    value: function renderTooltip() {
	      var children = this.props.children;
	
	      var tooltipItem = (0, _ReactUtils.findChildByType)(children, _Tooltip2.default);
	
	      if (!tooltipItem) {
	        return null;
	      }
	
	      var _props3 = this.props,
	          width = _props3.width,
	          height = _props3.height;
	      var _state = this.state,
	          isTooltipActive = _state.isTooltipActive,
	          activeTooltipLabel = _state.activeTooltipLabel,
	          activeTooltipCoord = _state.activeTooltipCoord,
	          activeTooltipPayload = _state.activeTooltipPayload;
	
	      var viewBox = { x: 0, y: 0, width: width, height: height };
	
	      return _react2.default.cloneElement(tooltipItem, {
	        viewBox: viewBox,
	        active: isTooltipActive,
	        label: activeTooltipLabel,
	        payload: activeTooltipPayload,
	        coordinate: activeTooltipCoord
	      });
	    }
	
	    /**
	     * Draw the main part of bar chart
	     * @param  {Array} items    All the instance of Pie
	     * @return {ReactComponent} All the instance of Pie
	     */
	
	  }, {
	    key: 'renderItems',
	    value: function renderItems(items) {
	      var _this2 = this;
	
	      var _props4 = this.props,
	          width = _props4.width,
	          height = _props4.height,
	          margin = _props4.margin,
	          allComposedData = _props4.allComposedData,
	          onMouseEnter = _props4.onMouseEnter,
	          onMouseLeave = _props4.onMouseLeave,
	          onClick = _props4.onClick;
	
	
	      return items.map(function (child, i) {
	        var _child$props = child.props,
	            innerRadius = _child$props.innerRadius,
	            outerRadius = _child$props.outerRadius,
	            childOnMouseEnter = _child$props.onMouseEnter,
	            childOnMouseLeave = _child$props.onMouseLeave,
	            childOnClick = _child$props.onClick;
	
	        var cx = (0, _DataUtils.getPercentValue)(child.props.cx, width, width / 2);
	        var cy = (0, _DataUtils.getPercentValue)(child.props.cy, height, height / 2);
	        var maxRadius = (0, _PolarUtils.getMaxRadius)(width, height, margin);
	
	        return _react2.default.cloneElement(child, {
	          key: 'recharts-pie-' + i,
	          cx: cx,
	          cy: cy,
	          maxRadius: child.props.maxRadius || Math.sqrt(width * width + height * height) / 2,
	          innerRadius: (0, _DataUtils.getPercentValue)(innerRadius, maxRadius, 0),
	          outerRadius: (0, _DataUtils.getPercentValue)(outerRadius, maxRadius, maxRadius * 0.8),
	          composedData: allComposedData[i],
	          onMouseEnter: (0, _DataUtils.combineEventHandlers)(_this2.handleMouseEnter, onMouseEnter, childOnMouseEnter),
	          onMouseLeave: (0, _DataUtils.combineEventHandlers)(_this2.handleMouseLeave, onMouseLeave, childOnMouseLeave),
	          onClick: (0, _DataUtils.combineEventHandlers)(null, onClick, childOnClick)
	        });
	      });
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      if (!(0, _ReactUtils.validateWidthHeight)(this)) {
	        return null;
	      }
	
	      var _props5 = this.props,
	          style = _props5.style,
	          children = _props5.children,
	          className = _props5.className,
	          width = _props5.width,
	          height = _props5.height,
	          others = _objectWithoutProperties(_props5, ['style', 'children', 'className', 'width', 'height']);
	
	      var items = (0, _ReactUtils.findAllByType)(children, _Pie2.default);
	      var attrs = (0, _ReactUtils.getPresentationAttributes)(others);
	
	      return _react2.default.createElement(
	        'div',
	        {
	          className: (0, _classnames2.default)('recharts-wrapper', className),
	          style: _extends({}, style, { position: 'relative', cursor: 'default', width: width, height: height })
	        },
	        _react2.default.createElement(
	          _Surface2.default,
	          _extends({}, attrs, { width: width, height: height }),
	          this.renderItems(items),
	          (0, _ReactUtils.filterSvgElements)(children)
	        ),
	        this.renderLegend(items),
	        this.renderTooltip()
	      );
	    }
	  }]);
	
	  return PieChart;
	}(_react.Component), _class2.displayName = 'PieChart', _class2.propTypes = {
	  allComposedData: _react.PropTypes.array,
	  width: _react.PropTypes.number,
	  height: _react.PropTypes.number,
	  margin: _react.PropTypes.shape({
	    top: _react.PropTypes.number,
	    right: _react.PropTypes.number,
	    bottom: _react.PropTypes.number,
	    left: _react.PropTypes.number
	  }),
	  title: _react.PropTypes.string,
	  style: _react.PropTypes.object,
	  children: _react.PropTypes.oneOfType([_react.PropTypes.arrayOf(_react.PropTypes.node), _react.PropTypes.node]),
	  className: _react.PropTypes.string,
	  onMouseEnter: _react.PropTypes.func,
	  onMouseLeave: _react.PropTypes.func,
	  onClick: _react.PropTypes.func
	}, _class2.defaultProps = {
	  style: {},
	  margin: { top: 0, right: 0, bottom: 0, left: 0 }
	}, _temp2)) || _class);
	exports.default = PieChart;

/***/ },
/* 848 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _isFunction2 = __webpack_require__(224);
	
	var _isFunction3 = _interopRequireDefault(_isFunction2);
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _class, _class2, _temp2;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; /**
	                                                                                                                                                                                                                                                                   * @fileOverview TreemapChart
	                                                                                                                                                                                                                                                                   */
	
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactSmooth = __webpack_require__(754);
	
	var _reactSmooth2 = _interopRequireDefault(_reactSmooth);
	
	var _classnames = __webpack_require__(404);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _Surface = __webpack_require__(669);
	
	var _Surface2 = _interopRequireDefault(_Surface);
	
	var _Layer = __webpack_require__(747);
	
	var _Layer2 = _interopRequireDefault(_Layer);
	
	var _Rectangle = __webpack_require__(802);
	
	var _Rectangle2 = _interopRequireDefault(_Rectangle);
	
	var _ReactUtils = __webpack_require__(670);
	
	var _Tooltip = __webpack_require__(753);
	
	var _Tooltip2 = _interopRequireDefault(_Tooltip);
	
	var _PureRender = __webpack_require__(746);
	
	var _PureRender2 = _interopRequireDefault(_PureRender);
	
	var _DataUtils = __webpack_require__(673);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var computeNode = function computeNode(_ref) {
	  var depth = _ref.depth,
	      node = _ref.node,
	      index = _ref.index,
	      valueKey = _ref.valueKey;
	  var children = node.children;
	
	  var childDepth = depth + 1;
	  var computedChildren = children && children.length ? children.map(function (child, i) {
	    return computeNode({ depth: childDepth, node: child, index: i, valueKey: valueKey });
	  }) : null;
	  var value = void 0;
	
	  if (children && children.length) {
	    value = computedChildren.reduce(function (result, child) {
	      return result + child.value;
	    }, 0);
	  } else {
	    value = isNaN(node[valueKey]) || node[valueKey] <= 0 ? 0 : node[valueKey];
	  }
	
	  return _extends({}, node, {
	    children: computedChildren,
	    value: value, depth: depth, index: index
	  });
	};
	
	var filterRect = function filterRect(node) {
	  return { x: node.x, y: node.y, width: node.width, height: node.height };
	};
	
	// Compute the area for each child based on value & scale.
	var getAreaOfChildren = function getAreaOfChildren(children, areaValueRatio) {
	  var ratio = areaValueRatio < 0 ? 0 : areaValueRatio;
	
	  return children.map(function (child) {
	    var area = child.value * ratio;
	
	    return _extends({}, child, {
	      area: isNaN(area) || area <= 0 ? 0 : area
	    });
	  });
	};
	
	// Computes the score for the specified row, as the worst aspect ratio.
	var getWorstScore = function getWorstScore(row, parentSize, aspectRatio) {
	  var parentArea = parentSize * parentSize;
	  var rowArea = row.area * row.area;
	
	  var _row$reduce = row.reduce(function (result, child) {
	    return {
	      min: Math.min(result.min, child.area),
	      max: Math.max(result.max, child.area)
	    };
	  }, { min: Infinity, max: 0 }),
	      min = _row$reduce.min,
	      max = _row$reduce.max;
	
	  return rowArea ? Math.max(parentArea * max * aspectRatio / rowArea, rowArea / (parentArea * min * aspectRatio)) : Infinity;
	};
	
	var horizontalPosition = function horizontalPosition(row, parentSize, parentRect, isFlush) {
	  var rowHeight = parentSize ? Math.round(row.area / parentSize) : 0;
	
	  if (isFlush || rowHeight > parentRect.height) {
	    rowHeight = parentRect.height;
	  }
	
	  var curX = parentRect.x;
	  var child = void 0;
	  for (var i = 0, len = row.length; i < len; i++) {
	    child = row[i];
	    child.x = curX;
	    child.y = parentRect.y;
	    child.height = rowHeight;
	    child.width = Math.min(rowHeight ? Math.round(child.area / rowHeight) : 0, parentRect.x + parentRect.width - curX);
	    curX += child.width;
	  }
	  // what's z
	  child.z = true;
	  // add the remain x to the last one of row
	  child.width += parentRect.x + parentRect.width - curX;
	
	  return _extends({}, parentRect, {
	    y: parentRect.y + rowHeight,
	    height: parentRect.height - rowHeight
	  });
	};
	
	var verticalPosition = function verticalPosition(row, parentSize, parentRect, isFlush) {
	  var rowWidth = parentSize ? Math.round(row.area / parentSize) : 0;
	
	  if (isFlush || rowWidth > parentRect.width) {
	    rowWidth = parentRect.width;
	  }
	
	  var curY = parentRect.y;
	  var child = void 0;
	  for (var i = 0, len = row.length; i < len; i++) {
	    child = row[i];
	    child.x = parentRect.x;
	    child.y = curY;
	    child.width = rowWidth;
	    child.height = Math.min(rowWidth ? Math.round(child.area / rowWidth) : 0, parentRect.y + parentRect.height - curY);
	    curY += child.height;
	  }
	  child.z = false;
	  child.height += parentRect.y + parentRect.height - curY;
	
	  return _extends({}, parentRect, {
	    x: parentRect.x + rowWidth,
	    width: parentRect.width - rowWidth
	  });
	};
	
	var position = function position(row, parentSize, parentRect, isFlush) {
	  if (parentSize === parentRect.width) {
	    return horizontalPosition(row, parentSize, parentRect, isFlush);
	  }
	
	  return verticalPosition(row, parentSize, parentRect, isFlush);
	};
	
	// Recursively arranges the specified node's children into squarified rows.
	var squarify = function squarify(node, aspectRatio) {
	  var children = node.children;
	
	  if (children && children.length) {
	    var rect = filterRect(node);
	    var row = [];
	    var best = Infinity; // the best row score so far
	    var child = void 0,
	        score = void 0; // the current row score
	    var size = Math.min(rect.width, rect.height); // initial orientation
	    var scaleChildren = getAreaOfChildren(children, rect.width * rect.height / node.value);
	    var tempChildren = scaleChildren.slice();
	
	    row.area = 0;
	
	    while (tempChildren.length > 0) {
	      // row first
	      row.push(child = tempChildren[0]);
	      row.area += child.area;
	
	      score = getWorstScore(row, size, aspectRatio);
	      if (score <= best) {
	        // continue with this orientation
	        tempChildren.shift();
	        best = score;
	      } else {
	        // abort, and try a different orientation
	        row.area -= row.pop().area;
	        rect = position(row, size, rect, false);
	        size = Math.min(rect.width, rect.height);
	        row.length = row.area = 0;
	        best = Infinity;
	      }
	    }
	
	    if (row.length) {
	      rect = position(row, size, rect, true);
	      row.length = row.area = 0;
	    }
	
	    return _extends({}, node, { children: scaleChildren.map(function (c) {
	        return squarify(c, aspectRatio);
	      }) });
	  }
	
	  return node;
	};
	
	var Treemap = (0, _PureRender2.default)(_class = (_temp2 = _class2 = function (_Component) {
	  _inherits(Treemap, _Component);
	
	  function Treemap() {
	    var _ref2;
	
	    var _temp, _this, _ret;
	
	    _classCallCheck(this, Treemap);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref2 = Treemap.__proto__ || Object.getPrototypeOf(Treemap)).call.apply(_ref2, [this].concat(args))), _this), _this.state = _this.createDefaultState(), _temp), _possibleConstructorReturn(_this, _ret);
	  }
	
	  _createClass(Treemap, [{
	    key: 'componentWillReceiveProps',
	    value: function componentWillReceiveProps(nextProps) {
	      if (nextProps.data !== this.props.data) {
	        this.setState(this.createDefaultState());
	      }
	    }
	    /**
	     * Returns default, reset state for the treemap chart.
	     * @return {Object} Whole new state
	     */
	
	  }, {
	    key: 'createDefaultState',
	    value: function createDefaultState() {
	      return {
	        isTooltipActive: false,
	        activeNode: null
	      };
	    }
	  }, {
	    key: 'handleMouseEnter',
	    value: function handleMouseEnter(node, e) {
	      var _props = this.props,
	          onMouseEnter = _props.onMouseEnter,
	          children = _props.children;
	
	      var tooltipItem = (0, _ReactUtils.findChildByType)(children, _Tooltip2.default);
	
	      if (tooltipItem) {
	        this.setState({
	          isTooltipActive: true,
	          activeNode: node
	        }, function () {
	          if (onMouseEnter) {
	            onMouseEnter(node, e);
	          }
	        });
	      } else if (onMouseEnter) {
	        onMouseEnter(node, e);
	      }
	    }
	  }, {
	    key: 'handleMouseLeave',
	    value: function handleMouseLeave(node, e) {
	      var _props2 = this.props,
	          onMouseLeave = _props2.onMouseLeave,
	          children = _props2.children;
	
	      var tooltipItem = (0, _ReactUtils.findChildByType)(children, _Tooltip2.default);
	
	      if (tooltipItem) {
	        this.setState({
	          isTooltipActive: false,
	          activeNode: null
	        }, function () {
	          if (onMouseLeave) {
	            onMouseLeave(node, e);
	          }
	        });
	      } else if (onMouseLeave) {
	        onMouseLeave(node, e);
	      }
	    }
	  }, {
	    key: 'handleClick',
	    value: function handleClick(node) {
	      var onClick = this.props.onClick;
	
	
	      if (onClick) {
	        onClick(node);
	      }
	    }
	  }, {
	    key: 'renderAnimatedItem',
	    value: function renderAnimatedItem(content, nodeProps, isLeaf) {
	      var _this2 = this;
	
	      var _props3 = this.props,
	          isAnimationActive = _props3.isAnimationActive,
	          animationBegin = _props3.animationBegin,
	          animationDuration = _props3.animationDuration,
	          animationEasing = _props3.animationEasing,
	          isUpdateAnimationActive = _props3.isUpdateAnimationActive;
	      var width = nodeProps.width,
	          height = nodeProps.height,
	          x = nodeProps.x,
	          y = nodeProps.y;
	
	      var translateX = parseInt((Math.random() * 2 - 1) * width, 10);
	      var event = {};
	
	      if (isLeaf) {
	        event = {
	          onMouseEnter: this.handleMouseEnter.bind(this, nodeProps),
	          onMouseLeave: this.handleMouseLeave.bind(this, nodeProps),
	          onClick: this.handleClick.bind(this, nodeProps)
	        };
	      }
	
	      return _react2.default.createElement(
	        _reactSmooth2.default,
	        {
	          from: { x: x, y: y, width: width, height: height },
	          to: { x: x, y: y, width: width, height: height },
	          duration: animationDuration,
	          easing: animationEasing,
	          isActive: isUpdateAnimationActive
	        },
	        function (_ref3) {
	          var currX = _ref3.x,
	              currY = _ref3.y,
	              currWidth = _ref3.width,
	              currHeight = _ref3.height;
	          return _react2.default.createElement(
	            _reactSmooth2.default,
	            {
	              from: 'translate(' + translateX + 'px, ' + translateX + 'px)',
	              to: 'translate(0, 0)',
	              attributeName: 'transform',
	              begin: animationBegin,
	              easing: animationEasing,
	              isActive: isAnimationActive,
	              duration: animationDuration
	            },
	            _react2.default.createElement(
	              _Layer2.default,
	              event,
	              _this2.renderContentItem(content, _extends({}, nodeProps, {
	                isAnimationActive: isAnimationActive,
	                isUpdateAnimationActive: !isUpdateAnimationActive,
	                width: currWidth,
	                height: currHeight,
	                x: currX,
	                y: currY
	              }))
	            )
	          );
	        }
	      );
	    }
	  }, {
	    key: 'renderContentItem',
	    value: function renderContentItem(content, nodeProps) {
	      if (_react2.default.isValidElement(content)) {
	        return _react2.default.cloneElement(content, nodeProps);
	      } else if ((0, _isFunction3.default)(content)) {
	        return content(nodeProps);
	      }
	
	      return _react2.default.createElement(_Rectangle2.default, _extends({
	        fill: '#fff',
	        stroke: '#000'
	      }, nodeProps));
	    }
	  }, {
	    key: 'renderNode',
	    value: function renderNode(root, node, i) {
	      var _this3 = this;
	
	      var content = this.props.content;
	
	      var nodeProps = _extends({}, (0, _ReactUtils.getPresentationAttributes)(this.props), node, { root: root });
	      var isLeaf = !node.children || !node.children.length;
	
	      return _react2.default.createElement(
	        _Layer2.default,
	        { key: 'recharts-treemap-node-' + i, className: 'recharts-treemap-depth-' + node.depth },
	        this.renderAnimatedItem(content, nodeProps, isLeaf),
	        node.children && node.children.length ? node.children.map(function (child, index) {
	          return _this3.renderNode(node, child, index);
	        }) : null
	      );
	    }
	  }, {
	    key: 'renderAllNodes',
	    value: function renderAllNodes() {
	      var _props4 = this.props,
	          width = _props4.width,
	          height = _props4.height,
	          data = _props4.data,
	          dataKey = _props4.dataKey,
	          aspectRatio = _props4.aspectRatio;
	
	
	      var root = computeNode({
	        depth: 0,
	        node: { children: data, x: 0, y: 0, width: width, height: height },
	        index: 0,
	        valueKey: dataKey
	      });
	
	      var formatRoot = squarify(root, aspectRatio);
	
	      return this.renderNode(formatRoot, formatRoot, 0);
	    }
	  }, {
	    key: 'renderTooltip',
	    value: function renderTooltip() {
	      var _props5 = this.props,
	          children = _props5.children,
	          nameKey = _props5.nameKey;
	
	      var tooltipItem = (0, _ReactUtils.findChildByType)(children, _Tooltip2.default);
	
	      if (!tooltipItem) {
	        return null;
	      }
	
	      var _props6 = this.props,
	          width = _props6.width,
	          height = _props6.height,
	          dataKey = _props6.dataKey;
	      var _state = this.state,
	          isTooltipActive = _state.isTooltipActive,
	          activeNode = _state.activeNode;
	
	      var viewBox = { x: 0, y: 0, width: width, height: height };
	      var coordinate = activeNode ? {
	        x: activeNode.x + activeNode.width / 2,
	        y: activeNode.y + activeNode.height / 2
	      } : null;
	      var payload = isTooltipActive && activeNode ? [{
	        payload: activeNode,
	        name: (0, _DataUtils.getValueByDataKey)(activeNode, nameKey, ''),
	        value: (0, _DataUtils.getValueByDataKey)(activeNode, dataKey)
	      }] : [];
	
	      return _react2.default.cloneElement(tooltipItem, {
	        viewBox: viewBox,
	        active: isTooltipActive,
	        coordinate: coordinate,
	        label: '',
	        payload: payload
	      });
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      if (!(0, _ReactUtils.validateWidthHeight)(this)) {
	        return null;
	      }
	
	      var _props7 = this.props,
	          width = _props7.width,
	          height = _props7.height,
	          className = _props7.className,
	          style = _props7.style,
	          children = _props7.children,
	          others = _objectWithoutProperties(_props7, ['width', 'height', 'className', 'style', 'children']);
	
	      var attrs = (0, _ReactUtils.getPresentationAttributes)(others);
	
	      return _react2.default.createElement(
	        'div',
	        {
	          className: (0, _classnames2.default)('recharts-wrapper', className),
	          style: _extends({}, style, { position: 'relative', cursor: 'default', width: width, height: height })
	        },
	        _react2.default.createElement(
	          _Surface2.default,
	          _extends({}, attrs, { width: width, height: height }),
	          this.renderAllNodes(),
	          (0, _ReactUtils.filterSvgElements)(children)
	        ),
	        this.renderTooltip()
	      );
	    }
	  }]);
	
	  return Treemap;
	}(_react.Component), _class2.displayName = 'Treemap', _class2.propTypes = {
	  width: _react.PropTypes.number,
	  height: _react.PropTypes.number,
	  data: _react.PropTypes.array,
	  style: _react.PropTypes.object,
	  aspectRatio: _react.PropTypes.number,
	  content: _react.PropTypes.oneOfType([_react.PropTypes.element, _react.PropTypes.func]),
	  fill: _react.PropTypes.string,
	  stroke: _react.PropTypes.string,
	  className: _react.PropTypes.string,
	  nameKey: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.number, _react.PropTypes.func]),
	  dataKey: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.number, _react.PropTypes.func]),
	  children: _react.PropTypes.oneOfType([_react.PropTypes.arrayOf(_react.PropTypes.node), _react.PropTypes.node]),
	
	  onMouseEnter: _react.PropTypes.func,
	  onMouseLeave: _react.PropTypes.func,
	  onClick: _react.PropTypes.func,
	
	  isAnimationActive: _react.PropTypes.bool,
	  isUpdateAnimationActive: _react.PropTypes.bool,
	  animationBegin: _react.PropTypes.number,
	  animationDuration: _react.PropTypes.number,
	  animationEasing: _react.PropTypes.oneOf(['ease', 'ease-in', 'ease-out', 'ease-in-out', 'linear'])
	}, _class2.defaultProps = {
	  dataKey: 'value',
	  aspectRatio: 0.5 * (1 + Math.sqrt(5)),
	  isAnimationActive: !(0, _ReactUtils.isSsr)(),
	  isUpdateAnimationActive: !(0, _ReactUtils.isSsr)(),
	  animationBegin: 0,
	  animationDuration: 1500,
	  animationEasing: 'linear'
	}, _temp2)) || _class;
	
	exports.default = Treemap;

/***/ },
/* 849 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _isFunction2 = __webpack_require__(224);
	
	var _isFunction3 = _interopRequireDefault(_isFunction2);
	
	var _sumBy2 = __webpack_require__(850);
	
	var _sumBy3 = _interopRequireDefault(_sumBy2);
	
	var _min2 = __webpack_require__(852);
	
	var _min3 = _interopRequireDefault(_min2);
	
	var _maxBy2 = __webpack_require__(808);
	
	var _maxBy3 = _interopRequireDefault(_maxBy2);
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _class, _class2, _temp;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; /**
	                                                                                                                                                                                                                                                                   * @file TreemapChart
	                                                                                                                                                                                                                                                                   */
	
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(404);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _Surface = __webpack_require__(669);
	
	var _Surface2 = _interopRequireDefault(_Surface);
	
	var _Layer = __webpack_require__(747);
	
	var _Layer2 = _interopRequireDefault(_Layer);
	
	var _Tooltip = __webpack_require__(753);
	
	var _Tooltip2 = _interopRequireDefault(_Tooltip);
	
	var _Rectangle = __webpack_require__(802);
	
	var _Rectangle2 = _interopRequireDefault(_Rectangle);
	
	var _PureRender = __webpack_require__(746);
	
	var _PureRender2 = _interopRequireDefault(_PureRender);
	
	var _ReactUtils = __webpack_require__(670);
	
	var _DataUtils = __webpack_require__(673);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var defaultCoordinateOfTooltip = { x: 0, y: 0 };
	
	var interpolationGenerator = function interpolationGenerator(a, b) {
	  var ka = +a;
	  var kb = b - ka;
	  return function (t) {
	    return ka + kb * t;
	  };
	};
	var centerY = function centerY(node) {
	  return node.y + node.dy / 2;
	};
	var getValue = function getValue(entry) {
	  return entry && entry.value || 0;
	};
	var getSumOfIds = function getSumOfIds(links, ids) {
	  return ids.reduce(function (result, id) {
	    return result + getValue(links[id]);
	  }, 0);
	};
	var getSumWithWeightedSource = function getSumWithWeightedSource(tree, links, ids) {
	  return ids.reduce(function (result, id) {
	    var link = links[id];
	    var sourceNode = tree[link.source];
	
	    return result + centerY(sourceNode) * getValue(links[id]);
	  }, 0);
	};
	var getSumWithWeightedTarget = function getSumWithWeightedTarget(tree, links, ids) {
	  return ids.reduce(function (result, id) {
	    var link = links[id];
	    var targetNode = tree[link.target];
	
	    return result + centerY(targetNode) * getValue(links[id]);
	  }, 0);
	};
	var ascendingY = function ascendingY(a, b) {
	  return a.y - b.y;
	};
	
	var searchTargetsAndSources = function searchTargetsAndSources(links, id) {
	  var sourceNodes = [];
	  var sourceLinks = [];
	  var targetNodes = [];
	  var targetLinks = [];
	
	  for (var i = 0, len = links.length; i < len; i++) {
	    var link = links[i];
	
	    if (link.source === id) {
	      targetNodes.push(link.target);
	      targetLinks.push(i);
	    }
	
	    if (link.target === id) {
	      sourceNodes.push(link.source);
	      sourceLinks.push(i);
	    }
	  }
	
	  return { sourceNodes: sourceNodes, sourceLinks: sourceLinks, targetLinks: targetLinks, targetNodes: targetNodes };
	};
	
	var updateDepthOfTargets = function updateDepthOfTargets(tree, curNode) {
	  var targetNodes = curNode.targetNodes;
	
	  for (var i = 0, len = targetNodes.length; i < len; i++) {
	    var target = tree[targetNodes[i]];
	
	    if (target) {
	      target.depth = Math.max(curNode.depth + 1, target.depth);
	
	      updateDepthOfTargets(tree, target);
	    }
	  }
	};
	
	var getNodesTree = function getNodesTree(_ref, width, nodeWidth) {
	  var nodes = _ref.nodes,
	      links = _ref.links;
	
	  var tree = nodes.map(function (entry, index) {
	    var result = searchTargetsAndSources(links, index);
	
	    return _extends({}, entry, result, {
	      value: Math.max(getSumOfIds(links, result.sourceLinks), getSumOfIds(links, result.targetLinks)),
	      depth: 0
	    });
	  });
	
	  for (var i = 0, len = tree.length; i < len; i++) {
	    var node = tree[i];
	
	    if (!node.sourceNodes.length) {
	      updateDepthOfTargets(tree, node);
	    }
	  }
	  var maxDepth = (0, _maxBy3.default)(tree, function (entry) {
	    return entry.depth;
	  }).depth;
	
	  if (maxDepth >= 1) {
	    var childWidth = (width - nodeWidth) / maxDepth;
	    for (var _i = 0, _len = tree.length; _i < _len; _i++) {
	      var _node = tree[_i];
	
	      if (!_node.targetNodes.length) {
	        _node.depth = maxDepth;
	      }
	      _node.x = _node.depth * childWidth;
	      _node.dx = nodeWidth;
	    }
	  }
	
	  return { tree: tree, maxDepth: maxDepth };
	};
	
	var getDepthTree = function getDepthTree(tree) {
	  var result = [];
	
	  for (var i = 0, len = tree.length; i < len; i++) {
	    var node = tree[i];
	
	    if (!result[node.depth]) {
	      result[node.depth] = [];
	    }
	
	    result[node.depth].push(node);
	  }
	
	  return result;
	};
	
	var updateYOfTree = function updateYOfTree(depthTree, height, nodePadding, links) {
	  var yRatio = (0, _min3.default)(depthTree.map(function (nodes) {
	    return (height - (nodes.length - 1) * nodePadding) / (0, _sumBy3.default)(nodes, getValue);
	  }));
	
	  for (var d = 0, maxDepth = depthTree.length; d < maxDepth; d++) {
	    for (var i = 0, len = depthTree[d].length; i < len; i++) {
	      var node = depthTree[d][i];
	
	      node.y = i;
	      node.dy = node.value * yRatio;
	    }
	  }
	
	  return links.map(function (link) {
	    return _extends({}, link, { dy: getValue(link) * yRatio });
	  });
	};
	
	var resolveCollisions = function resolveCollisions(depthTree, height, nodePadding) {
	  for (var i = 0, len = depthTree.length; i < len; i++) {
	    var nodes = depthTree[i];
	    var n = nodes.length;
	
	    // Sort by the value of y
	    nodes.sort(ascendingY);
	
	    var y0 = 0;
	    for (var j = 0; j < n; j++) {
	      var node = nodes[j];
	      var dy = y0 - node.y;
	
	      if (dy > 0) {
	        node.y += dy;
	      }
	
	      y0 = node.y + node.dy + nodePadding;
	    }
	
	    y0 = height + nodePadding;
	    for (var _j = n - 1; _j >= 0; _j--) {
	      var _node2 = nodes[_j];
	      var _dy = _node2.y + _node2.dy + nodePadding - y0;
	
	      if (_dy > 0) {
	        _node2.y -= _dy;
	        y0 = _node2.y;
	      } else {
	        break;
	      }
	    }
	  }
	};
	
	var relaxLeftToRight = function relaxLeftToRight(tree, depthTree, links, alpha) {
	  for (var i = 0, maxDepth = depthTree.length; i < maxDepth; i++) {
	    var nodes = depthTree[i];
	
	    for (var j = 0, len = nodes.length; j < len; j++) {
	      var node = nodes[j];
	
	      if (node.sourceLinks.length) {
	        var sourceSum = getSumOfIds(links, node.sourceLinks);
	        var weightedSum = getSumWithWeightedSource(tree, links, node.sourceLinks);
	        var y = weightedSum / sourceSum;
	
	        node.y += (y - centerY(node)) * alpha;
	      }
	    }
	  }
	};
	var relaxRightToLeft = function relaxRightToLeft(tree, depthTree, links, alpha) {
	  for (var i = depthTree.length - 1; i >= 0; i--) {
	    var nodes = depthTree[i];
	
	    for (var j = 0, len = nodes.length; j < len; j++) {
	      var node = nodes[j];
	
	      if (node.targetLinks.length) {
	        var targetSum = getSumOfIds(links, node.targetLinks);
	        var weightedSum = getSumWithWeightedTarget(tree, links, node.targetLinks);
	        var y = weightedSum / targetSum;
	
	        node.y += (y - centerY(node)) * alpha;
	      }
	    }
	  }
	};
	var updateYOfLinks = function updateYOfLinks(tree, links) {
	  for (var i = 0, len = tree.length; i < len; i++) {
	    var node = tree[i];
	    var sy = 0;
	    var ty = 0;
	
	    node.targetLinks.sort(function (a, b) {
	      return tree[links[a].target].y - tree[links[b].target].y;
	    });
	    node.sourceLinks.sort(function (a, b) {
	      return tree[links[a].source].y - tree[links[b].source].y;
	    });
	
	    for (var j = 0, tLen = node.targetLinks.length; j < tLen; j++) {
	      var link = links[node.targetLinks[j]];
	
	      if (link) {
	        link.sy = sy;
	        sy += link.dy;
	      }
	    }
	
	    for (var _j2 = 0, sLen = node.sourceLinks.length; _j2 < sLen; _j2++) {
	      var _link = links[node.sourceLinks[_j2]];
	
	      if (_link) {
	        _link.ty = ty;
	        ty += _link.dy;
	      }
	    }
	  }
	};
	
	var computeData = function computeData(_ref2) {
	  var data = _ref2.data,
	      width = _ref2.width,
	      height = _ref2.height,
	      iterations = _ref2.iterations,
	      nodeWidth = _ref2.nodeWidth,
	      nodePadding = _ref2.nodePadding;
	  var links = data.links;
	
	  var _getNodesTree = getNodesTree(data, width, nodeWidth),
	      tree = _getNodesTree.tree;
	
	  var depthTree = getDepthTree(tree);
	  var newLinks = updateYOfTree(depthTree, height, nodePadding, links);
	
	  resolveCollisions(depthTree, height, nodePadding);
	
	  var alpha = 1;
	  for (var i = 1; i <= iterations; i++) {
	    relaxRightToLeft(tree, depthTree, newLinks, alpha *= 0.99);
	
	    resolveCollisions(depthTree, height, nodePadding);
	
	    relaxLeftToRight(tree, depthTree, newLinks, alpha);
	
	    resolveCollisions(depthTree, height, nodePadding);
	  }
	
	  updateYOfLinks(tree, newLinks);
	
	  return { nodes: tree, links: newLinks };
	};
	
	var getCoordinateOfTooltip = function getCoordinateOfTooltip(el, type) {
	  if (type === 'node') {
	    return { x: el.x + el.width / 2, y: el.y + el.height / 2 };
	  }
	
	  return {
	    x: (el.sourceX + el.targetX) / 2,
	    y: (el.sourceY + el.targetY) / 2
	  };
	};
	
	var getPayloadOfTooltip = function getPayloadOfTooltip(el, type, nameKey) {
	  var payload = el.payload;
	
	  if (type === 'node') {
	    return [{
	      payload: el,
	      name: (0, _DataUtils.getValueByDataKey)(payload, nameKey, ''),
	      value: (0, _DataUtils.getValueByDataKey)(payload, 'value')
	    }];
	  }
	  if (payload.source && payload.target) {
	    var sourceName = (0, _DataUtils.getValueByDataKey)(payload.source, nameKey, '');
	    var targetName = (0, _DataUtils.getValueByDataKey)(payload.target, nameKey, '');
	
	    return [{
	      payload: el,
	      name: sourceName + ' - ' + targetName,
	      value: (0, _DataUtils.getValueByDataKey)(payload, 'value')
	    }];
	  }
	
	  return [];
	};
	
	var Sankey = (0, _PureRender2.default)(_class = (_temp = _class2 = function (_Component) {
	  _inherits(Sankey, _Component);
	
	  function Sankey(props) {
	    _classCallCheck(this, Sankey);
	
	    var _this = _possibleConstructorReturn(this, (Sankey.__proto__ || Object.getPrototypeOf(Sankey)).call(this, props));
	
	    _this.state = _this.createDefaultState(props);
	    return _this;
	  }
	
	  _createClass(Sankey, [{
	    key: 'componentWillReceiveProps',
	    value: function componentWillReceiveProps(nextProps) {
	      var _props = this.props,
	          data = _props.data,
	          width = _props.width,
	          height = _props.height,
	          margin = _props.margin,
	          iterations = _props.iterations,
	          nodeWidth = _props.nodeWidth,
	          nodePadding = _props.nodePadding,
	          nameKey = _props.nameKey;
	
	      if (nextProps.data !== data || nextProps.width !== width || nextProps.height !== height || !(0, _PureRender.shallowEqual)(nextProps.margin, margin) || nextProps.iterations !== iterations || nextProps.nodeWidth !== nodeWidth || nextProps.nodePadding !== nodePadding || nextProps.nameKey !== nameKey) {
	        this.setState(this.createDefaultState(this.props));
	      }
	    }
	    /**
	     * Returns default, reset state for the sankey chart.
	     * @param  {Object} props The latest props
	     * @return {Object} Whole new state
	     */
	
	  }, {
	    key: 'createDefaultState',
	    value: function createDefaultState(props) {
	      var data = props.data,
	          width = props.width,
	          height = props.height,
	          margin = props.margin,
	          iterations = props.iterations,
	          nodeWidth = props.nodeWidth,
	          nodePadding = props.nodePadding;
	
	      var contentWidth = width - (margin && margin.left || 0) - (margin && margin.right || 0);
	      var contentHeight = height - (margin && margin.top || 0) - (margin && margin.bottom || 0);
	
	      var _computeData = computeData({
	        data: data,
	        width: contentWidth,
	        height: contentHeight,
	        iterations: iterations, nodeWidth: nodeWidth, nodePadding: nodePadding
	      }),
	          links = _computeData.links,
	          nodes = _computeData.nodes;
	
	      return {
	        activeElement: null,
	        activeElementType: null,
	        isTooltipActive: false,
	        nodes: nodes, links: links
	      };
	    }
	  }, {
	    key: 'handleMouseEnter',
	    value: function handleMouseEnter(el, type, e) {
	      var _props2 = this.props,
	          onMouseEnter = _props2.onMouseEnter,
	          children = _props2.children;
	
	      var tooltipItem = (0, _ReactUtils.findChildByType)(children, _Tooltip2.default);
	
	      if (tooltipItem) {
	        this.setState({
	          activeElement: el,
	          activeElementType: type,
	          isTooltipActive: true
	        }, function () {
	          if (onMouseEnter) {
	            onMouseEnter(el, type, e);
	          }
	        });
	      } else if (onMouseEnter) {
	        onMouseEnter(el, type, e);
	      }
	    }
	  }, {
	    key: 'handleMouseLeave',
	    value: function handleMouseLeave(el, type, e) {
	      var _props3 = this.props,
	          onMouseLeave = _props3.onMouseLeave,
	          children = _props3.children;
	
	      var tooltipItem = (0, _ReactUtils.findChildByType)(children, _Tooltip2.default);
	
	      if (tooltipItem) {
	        this.setState({
	          isTooltipActive: false
	        }, function () {
	          if (onMouseLeave) {
	            onMouseLeave(el, type, e);
	          }
	        });
	      } else if (onMouseLeave) {
	        onMouseLeave(el, type, e);
	      }
	    }
	  }, {
	    key: 'renderLinkItem',
	    value: function renderLinkItem(option, props) {
	      if (_react2.default.isValidElement(option)) {
	        return _react2.default.cloneElement(option, props);
	      } else if ((0, _isFunction3.default)(option)) {
	        return option(props);
	      }
	
	      var sourceX = props.sourceX,
	          sourceY = props.sourceY,
	          sourceControlX = props.sourceControlX,
	          targetX = props.targetX,
	          targetY = props.targetY,
	          targetControlX = props.targetControlX,
	          linkWidth = props.linkWidth,
	          others = _objectWithoutProperties(props, ['sourceX', 'sourceY', 'sourceControlX', 'targetX', 'targetY', 'targetControlX', 'linkWidth']);
	
	      return _react2.default.createElement('path', _extends({
	        className: 'recharts-sankey-link',
	        d: '\n          M' + sourceX + ',' + sourceY + '\n          C' + sourceControlX + ',' + sourceY + ' ' + targetControlX + ',' + targetY + ' ' + targetX + ',' + targetY + '\n        ',
	        fill: 'none',
	        stroke: '#333',
	        strokeWidth: linkWidth,
	        strokeOpacity: '0.2'
	      }, (0, _ReactUtils.getPresentationAttributes)(others)));
	    }
	  }, {
	    key: 'renderLinks',
	    value: function renderLinks(links, nodes) {
	      var _this2 = this;
	
	      var _props4 = this.props,
	          linkCurvature = _props4.linkCurvature,
	          linkContent = _props4.link,
	          margin = _props4.margin;
	
	      var top = margin.top || 0;
	      var left = margin.left || 0;
	
	      return _react2.default.createElement(
	        _Layer2.default,
	        { className: 'recharts-sankey-links', key: 'recharts-sankey-links' },
	        links.map(function (link, i) {
	          var sourceRelativeY = link.sy,
	              targetRelativeY = link.ty,
	              linkWidth = link.dy;
	
	          var source = nodes[link.source];
	          var target = nodes[link.target];
	          var sourceX = source.x + source.dx + left;
	          var targetX = target.x + left;
	          var interpolationFunc = interpolationGenerator(sourceX, targetX);
	          var sourceControlX = interpolationFunc(linkCurvature);
	          var targetControlX = interpolationFunc(1 - linkCurvature);
	          var sourceY = source.y + sourceRelativeY + linkWidth / 2 + top;
	          var targetY = target.y + targetRelativeY + linkWidth / 2 + top;
	
	          var linkProps = _extends({
	            sourceX: sourceX, targetX: targetX,
	            sourceY: sourceY, targetY: targetY,
	            sourceControlX: sourceControlX, targetControlX: targetControlX,
	            sourceRelativeY: sourceRelativeY, targetRelativeY: targetRelativeY,
	            linkWidth: linkWidth,
	            index: i,
	            payload: _extends({}, link, { source: source, target: target })
	          }, (0, _ReactUtils.getPresentationAttributes)(linkContent));
	          var events = {
	            onMouseEnter: _this2.handleMouseEnter.bind(_this2, linkProps, 'link'),
	            onMouseLeave: _this2.handleMouseLeave.bind(_this2, linkProps, 'link')
	          };
	
	          return _react2.default.createElement(
	            _Layer2.default,
	            _extends({ key: 'link' + i }, events),
	            _this2.renderLinkItem(linkContent, linkProps)
	          );
	        })
	      );
	    }
	  }, {
	    key: 'renderNodeItem',
	    value: function renderNodeItem(option, props) {
	      if (_react2.default.isValidElement(option)) {
	        return _react2.default.cloneElement(option, props);
	      } else if ((0, _isFunction3.default)(option)) {
	        return option(props);
	      }
	
	      return _react2.default.createElement(_Rectangle2.default, _extends({
	        className: 'recharts-sankey-node',
	        fill: '#0088fe',
	        fillOpacity: '0.8'
	      }, props));
	    }
	  }, {
	    key: 'renderNodes',
	    value: function renderNodes(nodes) {
	      var _this3 = this;
	
	      var _props5 = this.props,
	          nodeContent = _props5.node,
	          margin = _props5.margin;
	
	      var top = margin.top || 0;
	      var left = margin.left || 0;
	
	      return _react2.default.createElement(
	        _Layer2.default,
	        { className: 'recharts-sankey-nodes', key: 'recharts-sankey-nodes' },
	        nodes.map(function (node, i) {
	          var x = node.x,
	              y = node.y,
	              dx = node.dx,
	              dy = node.dy;
	
	          var nodeProps = _extends({}, (0, _ReactUtils.getPresentationAttributes)(nodeContent), {
	            x: x + left,
	            y: y + top,
	            width: dx,
	            height: dy,
	            index: i,
	            payload: node
	          });
	          var events = {
	            onMouseEnter: _this3.handleMouseEnter.bind(_this3, nodeProps, 'node'),
	            onMouseLeave: _this3.handleMouseLeave.bind(_this3, nodeProps, 'node')
	          };
	
	          return _react2.default.createElement(
	            _Layer2.default,
	            _extends({ key: 'node' + i }, events),
	            _this3.renderNodeItem(nodeContent, nodeProps)
	          );
	        })
	      );
	    }
	  }, {
	    key: 'renderTooltip',
	    value: function renderTooltip() {
	      var _props6 = this.props,
	          children = _props6.children,
	          width = _props6.width,
	          height = _props6.height,
	          nameKey = _props6.nameKey;
	
	      var tooltipItem = (0, _ReactUtils.findChildByType)(children, _Tooltip2.default);
	
	      if (!tooltipItem) {
	        return null;
	      }
	
	      var _state = this.state,
	          isTooltipActive = _state.isTooltipActive,
	          activeElement = _state.activeElement,
	          activeElementType = _state.activeElementType;
	
	      var viewBox = { x: 0, y: 0, width: width, height: height };
	      var coordinate = activeElement ? getCoordinateOfTooltip(activeElement, activeElementType) : defaultCoordinateOfTooltip;
	      var payload = activeElement ? getPayloadOfTooltip(activeElement, activeElementType, nameKey) : [];
	
	      return _react2.default.cloneElement(tooltipItem, {
	        viewBox: viewBox,
	        active: isTooltipActive,
	        coordinate: coordinate,
	        label: '',
	        payload: payload
	      });
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      if (!(0, _ReactUtils.validateWidthHeight)(this)) {
	        return null;
	      }
	
	      var _props7 = this.props,
	          width = _props7.width,
	          height = _props7.height,
	          className = _props7.className,
	          style = _props7.style,
	          children = _props7.children,
	          others = _objectWithoutProperties(_props7, ['width', 'height', 'className', 'style', 'children']);
	
	      var _state2 = this.state,
	          links = _state2.links,
	          nodes = _state2.nodes;
	
	      var attrs = (0, _ReactUtils.getPresentationAttributes)(others);
	
	      return _react2.default.createElement(
	        'div',
	        {
	          className: (0, _classnames2.default)('recharts-wrapper', className),
	          style: _extends({}, style, { position: 'relative', cursor: 'default', width: width, height: height })
	        },
	        _react2.default.createElement(
	          _Surface2.default,
	          _extends({}, attrs, { width: width, height: height }),
	          (0, _ReactUtils.filterSvgElements)(children),
	          this.renderLinks(links, nodes),
	          this.renderNodes(nodes)
	        ),
	        this.renderTooltip()
	      );
	    }
	  }]);
	
	  return Sankey;
	}(_react.Component), _class2.displayName = 'Sankey', _class2.propTypes = _extends({}, _ReactUtils.PRESENTATION_ATTRIBUTES, _ReactUtils.EVENT_ATTRIBUTES, {
	
	  nameKey: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.number, _react.PropTypes.func]),
	  dataKey: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.number, _react.PropTypes.func]),
	  width: _react.PropTypes.number,
	  height: _react.PropTypes.number,
	  data: _react.PropTypes.shape({
	    nodes: _react.PropTypes.array,
	    links: _react.PropTypes.arrayOf(_react.PropTypes.shape({
	      target: _react.PropTypes.number,
	      source: _react.PropTypes.number,
	      value: _react.PropTypes.number
	    }))
	  }),
	
	  nodePadding: _react.PropTypes.number,
	  nodeWidth: _react.PropTypes.number,
	  linkCurvature: _react.PropTypes.number,
	  iterations: _react.PropTypes.number,
	
	  node: _react.PropTypes.oneOfType([_react.PropTypes.object, _react.PropTypes.element, _react.PropTypes.func]),
	  link: _react.PropTypes.oneOfType([_react.PropTypes.object, _react.PropTypes.element, _react.PropTypes.func]),
	
	  style: _react.PropTypes.object,
	  className: _react.PropTypes.string,
	  children: _react.PropTypes.oneOfType([_react.PropTypes.arrayOf(_react.PropTypes.node), _react.PropTypes.node]),
	  margin: _react.PropTypes.shape({
	    top: _react.PropTypes.number,
	    right: _react.PropTypes.number,
	    bottom: _react.PropTypes.number,
	    left: _react.PropTypes.number
	  })
	}), _class2.defaultProps = {
	  nodePadding: 10,
	  nodeWidth: 10,
	  nameKey: 'name',
	  dataKey: 'value',
	  linkCurvature: 0.5,
	  iterations: 32,
	  margin: { top: 5, right: 5, bottom: 5, left: 5 }
	}, _temp)) || _class;
	
	exports.default = Sankey;

/***/ },
/* 850 */
/***/ function(module, exports, __webpack_require__) {

	var baseIteratee = __webpack_require__(691),
	    baseSum = __webpack_require__(851);
	
	/**
	 * This method is like `_.sum` except that it accepts `iteratee` which is
	 * invoked for each element in `array` to generate the value to be summed.
	 * The iteratee is invoked with one argument: (value).
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Math
	 * @param {Array} array The array to iterate over.
	 * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
	 * @returns {number} Returns the sum.
	 * @example
	 *
	 * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
	 *
	 * _.sumBy(objects, function(o) { return o.n; });
	 * // => 20
	 *
	 * // The `_.property` iteratee shorthand.
	 * _.sumBy(objects, 'n');
	 * // => 20
	 */
	function sumBy(array, iteratee) {
	  return (array && array.length)
	    ? baseSum(array, baseIteratee(iteratee, 2))
	    : 0;
	}
	
	module.exports = sumBy;


/***/ },
/* 851 */
/***/ function(module, exports) {

	/**
	 * The base implementation of `_.sum` and `_.sumBy` without support for
	 * iteratee shorthands.
	 *
	 * @private
	 * @param {Array} array The array to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @returns {number} Returns the sum.
	 */
	function baseSum(array, iteratee) {
	  var result,
	      index = -1,
	      length = array.length;
	
	  while (++index < length) {
	    var current = iteratee(array[index]);
	    if (current !== undefined) {
	      result = result === undefined ? current : (result + current);
	    }
	  }
	  return result;
	}
	
	module.exports = baseSum;


/***/ },
/* 852 */
/***/ function(module, exports, __webpack_require__) {

	var baseExtremum = __webpack_require__(809),
	    baseLt = __webpack_require__(853),
	    identity = __webpack_require__(282);
	
	/**
	 * Computes the minimum value of `array`. If `array` is empty or falsey,
	 * `undefined` is returned.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Math
	 * @param {Array} array The array to iterate over.
	 * @returns {*} Returns the minimum value.
	 * @example
	 *
	 * _.min([4, 2, 8, 6]);
	 * // => 2
	 *
	 * _.min([]);
	 * // => undefined
	 */
	function min(array) {
	  return (array && array.length)
	    ? baseExtremum(array, identity, baseLt)
	    : undefined;
	}
	
	module.exports = min;


/***/ },
/* 853 */
/***/ function(module, exports) {

	/**
	 * The base implementation of `_.lt` which doesn't coerce arguments.
	 *
	 * @private
	 * @param {*} value The value to compare.
	 * @param {*} other The other value to compare.
	 * @returns {boolean} Returns `true` if `value` is less than `other`,
	 *  else `false`.
	 */
	function baseLt(value, other) {
	  return value < other;
	}
	
	module.exports = baseLt;


/***/ },
/* 854 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _range2 = __webpack_require__(818);
	
	var _range3 = _interopRequireDefault(_range2);
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _class, _class2, _temp2; /**
	                              * @fileOverview Radar Chart
	                              */
	
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(404);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _d3Scale = __webpack_require__(738);
	
	var _rechartsScale = __webpack_require__(839);
	
	var _Surface = __webpack_require__(669);
	
	var _Surface2 = _interopRequireDefault(_Surface);
	
	var _Legend = __webpack_require__(748);
	
	var _Legend2 = _interopRequireDefault(_Legend);
	
	var _Tooltip = __webpack_require__(753);
	
	var _Tooltip2 = _interopRequireDefault(_Tooltip);
	
	var _Radar = __webpack_require__(815);
	
	var _Radar2 = _interopRequireDefault(_Radar);
	
	var _PolarGrid = __webpack_require__(806);
	
	var _PolarGrid2 = _interopRequireDefault(_PolarGrid);
	
	var _PolarAngleAxis = __webpack_require__(811);
	
	var _PolarAngleAxis2 = _interopRequireDefault(_PolarAngleAxis);
	
	var _PolarRadiusAxis = __webpack_require__(807);
	
	var _PolarRadiusAxis2 = _interopRequireDefault(_PolarRadiusAxis);
	
	var _ReactUtils = __webpack_require__(670);
	
	var _DOMUtils = __webpack_require__(798);
	
	var _PolarUtils = __webpack_require__(800);
	
	var _DataUtils = __webpack_require__(673);
	
	var _PureRender = __webpack_require__(746);
	
	var _PureRender2 = _interopRequireDefault(_PureRender);
	
	var _AnimationDecorator = __webpack_require__(814);
	
	var _AnimationDecorator2 = _interopRequireDefault(_AnimationDecorator);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var RadarChart = (0, _AnimationDecorator2.default)(_class = (0, _PureRender2.default)(_class = (_temp2 = _class2 = function (_Component) {
	  _inherits(RadarChart, _Component);
	
	  function RadarChart() {
	    var _ref;
	
	    var _temp, _this, _ret;
	
	    _classCallCheck(this, RadarChart);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = RadarChart.__proto__ || Object.getPrototypeOf(RadarChart)).call.apply(_ref, [this].concat(args))), _this), _this.state = _this.createDefaultState(), _this.handleMouseEnter = function (itemProps, e) {
	      var children = _this.props.children;
	      var points = itemProps.points;
	
	      var tooltipItem = (0, _ReactUtils.findChildByType)(children, _Tooltip2.default);
	
	      if (tooltipItem && points.length) {
	        var container = _this.container;
	        var containerOffset = (0, _DOMUtils.getOffset)(container);
	        var ne = (0, _DOMUtils.calculateChartCoordinate)(e, containerOffset);
	
	        _this.setState({
	          isTooltipActive: true,
	          activeTooltipLabel: itemProps.name || itemProps.dataKey,
	          activeTooltipCoord: { x: ne.chartX, y: ne.chartY },
	          activeTooltipPayload: _this.getTooltipContent(itemProps)
	        });
	      }
	    }, _this.handleMouseLeave = function () {
	      var children = _this.props.children;
	
	      var tooltipItem = (0, _ReactUtils.findChildByType)(children, _Tooltip2.default);
	
	      if (tooltipItem) {
	        _this.setState({
	          isTooltipActive: false
	        });
	      }
	    }, _temp), _possibleConstructorReturn(_this, _ret);
	  }
	
	  _createClass(RadarChart, [{
	    key: 'componentWillReceiveProps',
	    value: function componentWillReceiveProps(nextProps) {
	      if (nextProps.data !== this.props.data) {
	        this.setState(this.createDefaultState());
	      }
	    }
	  }, {
	    key: 'getTooltipContent',
	    value: function getTooltipContent(itemProps) {
	      var points = itemProps.points,
	          dataKey = itemProps.dataKey,
	          unit = itemProps.unit;
	
	
	      return points.map(function (entry) {
	        var name = entry.name,
	            value = entry.value,
	            payload = entry.payload;
	
	
	        return _extends({}, (0, _ReactUtils.getPresentationAttributes)(itemProps), {
	          dataKey: dataKey, unit: unit, name: name, value: value, payload: payload
	        });
	      });
	    }
	  }, {
	    key: 'getRadiusAxisCfg',
	    value: function getRadiusAxisCfg(radiusAxis, innerRadius, outerRadius) {
	      var props = radiusAxis ? radiusAxis.props : _PolarRadiusAxis2.default.defaultProps;
	      var domain = void 0,
	          tickCount = void 0,
	          ticks = void 0;
	
	      if (radiusAxis && radiusAxis.props.ticks) {
	        ticks = radiusAxis.props.ticks;
	
	        tickCount = ticks.length;
	        domain = [Math.min.apply(null, ticks), Math.max.apply(null, ticks)];
	      } else {
	        tickCount = Math.max(radiusAxis && radiusAxis.props.tickCount || _PolarRadiusAxis2.default.defaultProps.tickCount, 2);
	        ticks = this.getTicksByItems(radiusAxis, tickCount);
	
	        domain = [Math.min.apply(null, ticks), Math.max.apply(null, ticks)];
	      }
	
	      return {
	        tickCount: tickCount,
	        ticks: ticks,
	        scale: (0, _DataUtils.parseScale)(props).domain(domain).range([innerRadius, outerRadius])
	      };
	    }
	  }, {
	    key: 'getTicksByItems',
	    value: function getTicksByItems(axisItem, tickCount) {
	      var _props = this.props,
	          data = _props.data,
	          children = _props.children;
	
	      var _ref2 = axisItem ? axisItem.props : _PolarRadiusAxis2.default.defaultProps,
	          domain = _ref2.domain,
	          allowDataOverflow = _ref2.allowDataOverflow;
	
	      var radarItems = (0, _ReactUtils.findAllByType)(children, _Radar2.default);
	      var dataKeys = radarItems.map(function (item) {
	        return item.props.dataKey;
	      });
	      var extent = data.reduce(function (prev, current) {
	        var values = dataKeys.map(function (v) {
	          return (0, _DataUtils.getValueByDataKey)(current, v, 0);
	        });
	        var currentMax = Math.max.apply(null, values);
	        var currentMin = Math.min.apply(null, values);
	
	        return [Math.min(prev[0], currentMin), Math.max(prev[1], currentMax)];
	      }, [Infinity, -Infinity]);
	      var finalDomain = (0, _DataUtils.parseSpecifiedDomain)(domain, extent, allowDataOverflow);
	
	      if (domain && (domain[0] === 'auto' || domain[1] === 'auto')) {
	        return (0, _rechartsScale.getNiceTickValues)(finalDomain, tickCount);
	      }
	
	      return finalDomain;
	    }
	  }, {
	    key: 'getGridRadius',
	    value: function getGridRadius(gridCount, innerRadius, outerRadius) {
	      var domain = (0, _range3.default)(0, gridCount);
	      var scale = (0, _d3Scale.scalePoint)().domain(domain).range([innerRadius, outerRadius]);
	
	      return domain.map(function (v) {
	        return scale(v);
	      });
	    }
	  }, {
	    key: 'getAngle',
	    value: function getAngle(index, dataLength, startAngle, clockWise) {
	      var sign = clockWise ? -1 : 1;
	      var angleInterval = 360 / dataLength;
	
	      return startAngle + index * sign * angleInterval;
	    }
	  }, {
	    key: 'getAngleTicks',
	    value: function getAngleTicks(dataLength, startAngle, clockWise) {
	      var angles = [];
	
	      for (var i = 0; i < dataLength; i++) {
	        angles.push(this.getAngle(i, dataLength, startAngle, clockWise));
	      }
	
	      return angles;
	    }
	  }, {
	    key: 'getRadiusTicks',
	    value: function getRadiusTicks(axisCfg) {
	      var ticks = axisCfg.ticks,
	          scale = axisCfg.scale;
	
	
	      if (ticks && ticks.length) {
	        return ticks.map(function (entry) {
	          return {
	            radius: scale(entry),
	            value: entry
	          };
	        });
	      }
	      var tickCount = axisCfg.tickCount;
	
	      var domain = scale.domain();
	
	      return (0, _range3.default)(0, tickCount).map(function (v, i) {
	        var value = domain[0] + i * (domain[1] - domain[0]) / (tickCount - 1);
	        return {
	          value: value,
	          radius: scale(value)
	        };
	      });
	    }
	  }, {
	    key: 'getComposedData',
	    value: function getComposedData(item, scale, cx, cy) {
	      var _this2 = this;
	
	      var dataKey = item.props.dataKey;
	      var _props2 = this.props,
	          data = _props2.data,
	          startAngle = _props2.startAngle,
	          clockWise = _props2.clockWise,
	          children = _props2.children;
	
	      var angleAxis = (0, _ReactUtils.findChildByType)(children, _PolarAngleAxis2.default);
	      var nameKey = angleAxis && angleAxis.props.dataKey;
	      var len = data.length;
	
	      return data.map(function (entry, i) {
	        var value = (0, _DataUtils.getValueByDataKey)(entry, dataKey, 0);
	        var angle = _this2.getAngle(i, len, startAngle, clockWise);
	        var radius = scale(value);
	
	        return _extends({}, (0, _PolarUtils.polarToCartesian)(cx, cy, radius, angle), {
	          value: value,
	          name: nameKey ? entry[nameKey] || i : i,
	          cx: cx, cy: cy, radius: radius, angle: angle,
	          payload: entry
	        });
	      });
	    }
	    /**
	     * Returns default, reset state for the radar chart.
	     * @return {Object} Whole new state
	     */
	
	  }, {
	    key: 'createDefaultState',
	    value: function createDefaultState() {
	      return {
	        activeTooltipLabel: '',
	        activeTooltipCoord: { x: 0, y: 0 },
	        isTooltipActive: false
	      };
	    }
	  }, {
	    key: 'renderRadars',
	    value: function renderRadars(items, scale, cx, cy) {
	      var _this3 = this;
	
	      if (!items || !items.length) {
	        return null;
	      }
	
	      var _props3 = this.props,
	          onMouseEnter = _props3.onMouseEnter,
	          onMouseLeave = _props3.onMouseLeave,
	          onClick = _props3.onClick;
	
	      var baseProps = (0, _ReactUtils.getPresentationAttributes)(this.props);
	
	      return items.map(function (el, index) {
	        return _react2.default.cloneElement(el, _extends({}, baseProps, (0, _ReactUtils.getPresentationAttributes)(el), {
	          animationId: _this3.props.animationId,
	          points: _this3.getComposedData(el, scale, cx, cy),
	          key: 'radar-' + index,
	          onMouseEnter: (0, _DataUtils.combineEventHandlers)(_this3.handleMouseEnter, onMouseEnter, el.props.onMouseEnter),
	          onMouseLeave: (0, _DataUtils.combineEventHandlers)(_this3.handleMouseLeave, onMouseLeave, el.props.onMouseLeave),
	          onClick: (0, _DataUtils.combineEventHandlers)(null, onClick, el.props.onClick)
	        }));
	      });
	    }
	  }, {
	    key: 'renderGrid',
	    value: function renderGrid(radiusAxisCfg, cx, cy, innerRadius, outerRadius) {
	      var children = this.props.children;
	
	      var grid = (0, _ReactUtils.findChildByType)(children, _PolarGrid2.default);
	
	      if (!grid) {
	        return null;
	      }
	
	      var _props4 = this.props,
	          startAngle = _props4.startAngle,
	          clockWise = _props4.clockWise,
	          data = _props4.data;
	
	      var len = data.length;
	      var gridCount = radiusAxisCfg.tickCount;
	
	      return _react2.default.cloneElement(grid, {
	        polarAngles: this.getAngleTicks(len, startAngle, clockWise),
	        polarRadius: this.getGridRadius(gridCount, innerRadius, outerRadius),
	        cx: cx, cy: cy, innerRadius: innerRadius, outerRadius: outerRadius,
	        key: 'layer-grid'
	      });
	    }
	  }, {
	    key: 'renderAngleAxis',
	    value: function renderAngleAxis(cx, cy, outerRadius, maxRadius) {
	      var _this4 = this;
	
	      var children = this.props.children;
	
	      var angleAxis = (0, _ReactUtils.findChildByType)(children, _PolarAngleAxis2.default);
	
	      if (!angleAxis || angleAxis.props.hide) {
	        return null;
	      }
	
	      var _props5 = this.props,
	          data = _props5.data,
	          startAngle = _props5.startAngle,
	          clockWise = _props5.clockWise;
	
	      var len = data.length;
	      var grid = (0, _ReactUtils.findChildByType)(children, _PolarGrid2.default);
	      var radius = (0, _DataUtils.getPercentValue)(angleAxis.props.radius, maxRadius, outerRadius);
	      var dataKey = angleAxis.props.dataKey;
	
	
	      return _react2.default.cloneElement(angleAxis, {
	        ticks: data.map(function (v, i) {
	          return {
	            value: (0, _DataUtils.getValueByDataKey)(v, dataKey, i),
	            angle: _this4.getAngle(i, len, startAngle, clockWise)
	          };
	        }),
	        cx: cx, cy: cy, radius: radius,
	        axisLineType: grid && grid.props && grid.props.gridType || _PolarGrid2.default.defaultProps.gridType,
	        key: 'layer-angle-axis'
	      });
	    }
	  }, {
	    key: 'renderRadiusAxis',
	    value: function renderRadiusAxis(radiusAxis, radiusAxisCfg, cx, cy) {
	      if (!radiusAxis || radiusAxis.props.hide) {
	        return null;
	      }
	
	      var startAngle = this.props.startAngle;
	
	      return _react2.default.cloneElement(radiusAxis, {
	        angle: radiusAxis.props.angle || startAngle,
	        ticks: this.getRadiusTicks(radiusAxisCfg),
	        cx: cx, cy: cy
	      });
	    }
	  }, {
	    key: 'renderTooltip',
	    value: function renderTooltip() {
	      var children = this.props.children;
	
	      var tooltipItem = (0, _ReactUtils.findChildByType)(children, _Tooltip2.default);
	
	      if (!tooltipItem) {
	        return null;
	      }
	
	      var _props6 = this.props,
	          width = _props6.width,
	          height = _props6.height;
	      var _state = this.state,
	          isTooltipActive = _state.isTooltipActive,
	          activeTooltipLabel = _state.activeTooltipLabel,
	          activeTooltipCoord = _state.activeTooltipCoord,
	          activeTooltipPayload = _state.activeTooltipPayload;
	
	      var viewBox = { x: 0, y: 0, width: width, height: height };
	
	      return _react2.default.cloneElement(tooltipItem, {
	        viewBox: viewBox,
	        active: isTooltipActive,
	        label: activeTooltipLabel,
	        payload: activeTooltipPayload,
	        coordinate: activeTooltipCoord
	      });
	    }
	
	    /**
	     * Draw legend
	     * @param  {Array} items             The instances of item
	     * @return {ReactElement}            The instance of Legend
	     */
	
	  }, {
	    key: 'renderLegend',
	    value: function renderLegend(items) {
	      var children = this.props.children;
	
	      var legendItem = (0, _ReactUtils.findChildByType)(children, _Legend2.default);
	      if (!legendItem) {
	        return null;
	      }
	
	      var _props7 = this.props,
	          width = _props7.width,
	          height = _props7.height,
	          margin = _props7.margin;
	
	      var legendData = legendItem.props && legendItem.props.payload || items.map(function (child) {
	        var _child$props = child.props,
	            dataKey = _child$props.dataKey,
	            name = _child$props.name,
	            legendType = _child$props.legendType;
	
	
	        return {
	          dataKey: dataKey,
	          type: legendType || 'square',
	          color: child.props.stroke || child.props.fill,
	          value: name || dataKey,
	          payload: child.props
	        };
	      }, this);
	
	      return _react2.default.cloneElement(legendItem, _extends({}, _Legend2.default.getWithHeight(legendItem, width), {
	        payload: legendData,
	        chartWidth: width,
	        chartHeight: height,
	        margin: margin
	      }));
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _this5 = this;
	
	      if (!(0, _ReactUtils.validateWidthHeight)(this)) {
	        return null;
	      }
	
	      var _props8 = this.props,
	          className = _props8.className,
	          data = _props8.data,
	          width = _props8.width,
	          height = _props8.height,
	          margin = _props8.margin,
	          children = _props8.children,
	          style = _props8.style,
	          others = _objectWithoutProperties(_props8, ['className', 'data', 'width', 'height', 'margin', 'children', 'style']);
	
	      var cx = (0, _DataUtils.getPercentValue)(this.props.cx, width, width / 2);
	      var cy = (0, _DataUtils.getPercentValue)(this.props.cy, height, height / 2);
	      var maxRadius = (0, _PolarUtils.getMaxRadius)(width, height, margin);
	      var innerRadius = (0, _DataUtils.getPercentValue)(this.props.innerRadius, maxRadius, 0);
	      var outerRadius = (0, _DataUtils.getPercentValue)(this.props.outerRadius, maxRadius, maxRadius * 0.8);
	
	      if (outerRadius <= 0 || !data || !data.length) {
	        return null;
	      }
	
	      var items = (0, _ReactUtils.findAllByType)(children, _Radar2.default);
	      var radiusAxis = (0, _ReactUtils.findChildByType)(children, _PolarRadiusAxis2.default);
	      var radiusAxisCfg = this.getRadiusAxisCfg(radiusAxis, innerRadius, outerRadius);
	      var attrs = (0, _ReactUtils.getPresentationAttributes)(others);
	
	      return _react2.default.createElement(
	        'div',
	        {
	          className: (0, _classnames2.default)('recharts-wrapper', className),
	          style: _extends({}, style, { position: 'relative', cursor: 'default', width: width, height: height }),
	          ref: function ref(node) {
	            _this5.container = node;
	          }
	        },
	        _react2.default.createElement(
	          _Surface2.default,
	          _extends({}, attrs, { width: width, height: height }),
	          this.renderGrid(radiusAxisCfg, cx, cy, innerRadius, outerRadius),
	          this.renderRadiusAxis(radiusAxis, radiusAxisCfg, cx, cy),
	          this.renderAngleAxis(cx, cy, outerRadius, maxRadius),
	          this.renderRadars(items, radiusAxisCfg.scale, cx, cy),
	          (0, _ReactUtils.filterSvgElements)(children)
	        ),
	        this.renderLegend(items),
	        this.renderTooltip()
	      );
	    }
	  }]);
	
	  return RadarChart;
	}(_react.Component), _class2.displayName = 'RadarChart', _class2.propTypes = {
	  width: _react.PropTypes.number,
	  height: _react.PropTypes.number,
	  margin: _react.PropTypes.shape({
	    top: _react.PropTypes.number,
	    right: _react.PropTypes.number,
	    bottom: _react.PropTypes.number,
	    left: _react.PropTypes.number
	  }),
	
	  cx: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.string]),
	  cy: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.string]),
	  startAngle: _react.PropTypes.number,
	  innerRadius: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.string]),
	  outerRadius: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.string]),
	  clockWise: _react.PropTypes.bool,
	
	  data: _react.PropTypes.array,
	  style: _react.PropTypes.object,
	  children: _react.PropTypes.oneOfType([_react.PropTypes.arrayOf(_react.PropTypes.node), _react.PropTypes.node]),
	  className: _react.PropTypes.string,
	  animationId: _react.PropTypes.number,
	
	  onMouseEnter: _react.PropTypes.func,
	  onMouseLeave: _react.PropTypes.func,
	  onClick: _react.PropTypes.func
	}, _class2.defaultProps = {
	  width: 0,
	  height: 0,
	  cx: '50%',
	  cy: '50%',
	  innerRadius: 0,
	  outerRadius: '80%',
	
	  startAngle: 90,
	  clockWise: true,
	  data: [],
	  margin: { top: 0, right: 0, bottom: 0, left: 0 }
	}, _temp2)) || _class) || _class;
	
	exports.default = RadarChart;

/***/ },
/* 855 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _class, _class2, _temp2; /**
	                              * @fileOverview Scatter Chart
	                              */
	
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(404);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _Surface = __webpack_require__(669);
	
	var _Surface2 = _interopRequireDefault(_Surface);
	
	var _Layer = __webpack_require__(747);
	
	var _Layer2 = _interopRequireDefault(_Layer);
	
	var _Cell = __webpack_require__(788);
	
	var _Cell2 = _interopRequireDefault(_Cell);
	
	var _Legend = __webpack_require__(748);
	
	var _Legend2 = _interopRequireDefault(_Legend);
	
	var _Tooltip = __webpack_require__(753);
	
	var _Tooltip2 = _interopRequireDefault(_Tooltip);
	
	var _Cross = __webpack_require__(805);
	
	var _Cross2 = _interopRequireDefault(_Cross);
	
	var _CartesianAxis = __webpack_require__(825);
	
	var _CartesianAxis2 = _interopRequireDefault(_CartesianAxis);
	
	var _CartesianGrid = __webpack_require__(826);
	
	var _CartesianGrid2 = _interopRequireDefault(_CartesianGrid);
	
	var _Scatter = __webpack_require__(831);
	
	var _Scatter2 = _interopRequireDefault(_Scatter);
	
	var _XAxis = __webpack_require__(832);
	
	var _XAxis2 = _interopRequireDefault(_XAxis);
	
	var _YAxis = __webpack_require__(833);
	
	var _YAxis2 = _interopRequireDefault(_YAxis);
	
	var _ZAxis = __webpack_require__(834);
	
	var _ZAxis2 = _interopRequireDefault(_ZAxis);
	
	var _ReferenceLine = __webpack_require__(822);
	
	var _ReferenceLine2 = _interopRequireDefault(_ReferenceLine);
	
	var _ReferenceDot = __webpack_require__(823);
	
	var _ReferenceDot2 = _interopRequireDefault(_ReferenceDot);
	
	var _ReferenceArea = __webpack_require__(824);
	
	var _ReferenceArea2 = _interopRequireDefault(_ReferenceArea);
	
	var _ReactUtils = __webpack_require__(670);
	
	var _PureRender = __webpack_require__(746);
	
	var _PureRender2 = _interopRequireDefault(_PureRender);
	
	var _DataUtils = __webpack_require__(673);
	
	var _LogUtils = __webpack_require__(787);
	
	var _CartesianUtils = __webpack_require__(838);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var ScatterChart = (0, _PureRender2.default)(_class = (_temp2 = _class2 = function (_Component) {
	  _inherits(ScatterChart, _Component);
	
	  function ScatterChart() {
	    var _ref;
	
	    var _temp, _this, _ret;
	
	    _classCallCheck(this, ScatterChart);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = ScatterChart.__proto__ || Object.getPrototypeOf(ScatterChart)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
	      activeTooltipCoord: { x: 0, y: 0 },
	      isTooltipActive: false,
	      activeItem: null
	    }, _this.handleScatterMouseEnter = function (el) {
	      _this.setState({
	        isTooltipActive: true,
	        activeItem: el,
	        activeTooltipCoord: { x: el.cx, y: el.cy }
	      });
	    }, _this.handleScatterMouseLeave = function () {
	      _this.setState({
	        isTooltipActive: false
	      });
	    }, _temp), _possibleConstructorReturn(_this, _ret);
	  }
	
	  _createClass(ScatterChart, [{
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      if (this.legendInstance) {
	        this.forceUpdate();
	      }
	    }
	    /**
	     * Compose the data of each group
	     * @param  {Object} item        An instance of Scatter
	     * @param  {Array}  data        The original data
	     * @param  {Object} xAxis       The configuration of x-axis
	     * @param  {Object} yAxis       The configuration of y-axis
	     * @param  {Object} zAxis       The configuration of z-axis
	     * @return {Array} Composed data
	     */
	
	  }, {
	    key: 'getComposedData',
	    value: function getComposedData(item, data, xAxis, yAxis, zAxis) {
	      var children = item.props.children;
	
	      var xAxisDataKey = xAxis.dataKey;
	      var yAxisDataKey = yAxis.dataKey;
	      var zAxisDataKey = zAxis.dataKey;
	      var cells = (0, _ReactUtils.findAllByType)(children, _Cell2.default);
	
	      return data.map(function (entry, index) {
	        return _extends({}, entry, {
	          cx: (0, _DataUtils.isNumber)(entry[xAxisDataKey]) ? xAxis.scale(entry[xAxisDataKey]) : null,
	          cy: (0, _DataUtils.isNumber)(entry[yAxisDataKey]) ? yAxis.scale(entry[yAxisDataKey]) : null,
	          size: zAxisDataKey !== undefined && (0, _DataUtils.isNumber)(entry[zAxisDataKey]) ? zAxis.scale(entry[zAxisDataKey]) : zAxis.range[0],
	          node: {
	            x: entry[xAxisDataKey],
	            y: entry[yAxisDataKey],
	            z: zAxisDataKey !== undefined && entry[zAxisDataKey] || '-'
	          },
	          payload: entry
	        }, cells && cells[index] && cells[index].props);
	      });
	    }
	  }, {
	    key: 'getDomain',
	    value: function getDomain(items, dataKey, axisId, axisType) {
	      var domain = items.reduce(function (result, item) {
	        return result.concat(item.props.data.map(function (entry) {
	          return (0, _DataUtils.getValueByDataKey)(entry, dataKey);
	        }));
	      }, []);
	
	      if (axisType === 'xAxis' || axisType === 'yAxis') {
	        domain = (0, _CartesianUtils.detectReferenceElementsDomain)(this.props.children, domain, axisId, axisType);
	      }
	
	      return [Math.min.apply(null, domain), Math.max.apply(null, domain)];
	    }
	
	    /**
	     * Get the configuration of x-axis or y-axis
	     * @param  {String} axisType The type of axis
	     * @param  {Array} items     The instances of item
	     * @return {Object}          Configuration
	     */
	
	  }, {
	    key: 'getAxis',
	    value: function getAxis() {
	      var axisType = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'xAxis';
	      var items = arguments[1];
	      var children = this.props.children;
	
	      var Axis = axisType === 'xAxis' ? _XAxis2.default : _YAxis2.default;
	      var axis = (0, _ReactUtils.findChildByType)(children, Axis);
	
	      (0, _LogUtils.warn)(axis, 'recharts: ScatterChart must has %s', Axis.displayName);
	
	      if (axis) {
	        var domain = (0, _DataUtils.parseSpecifiedDomain)(axis.props.domain, this.getDomain(items, axis.props.dataKey, axis.props[axisType + 'Id'], axisType), axis.props.allowDataOverflow);
	
	        return _extends({}, axis.props, {
	          axisType: axisType,
	          domain: domain,
	          type: 'number',
	          originalDomain: axis.props.domain
	        });
	      }
	
	      return null;
	    }
	
	    /**
	     * Get the configuration of z-axis
	     * @param  {Array} items The instances of item
	     * @return {Object}      Configuration
	     */
	
	  }, {
	    key: 'getZAxis',
	    value: function getZAxis(items) {
	      var children = this.props.children;
	
	      var axisItem = (0, _ReactUtils.findChildByType)(children, _ZAxis2.default);
	      var axisProps = axisItem && axisItem.props || _ZAxis2.default.defaultProps;
	      var domain = axisProps.dataKey ? this.getDomain(items, axisProps.dataKey) : [-1, 1];
	
	      return _extends({}, axisProps, {
	        domain: domain,
	        scale: (0, _DataUtils.parseScale)(axisProps).domain(domain).range(axisProps.range)
	      });
	    }
	  }, {
	    key: 'getOffset',
	    value: function getOffset(items, xAxis, yAxis) {
	      var _props = this.props,
	          width = _props.width,
	          height = _props.height,
	          margin = _props.margin,
	          children = _props.children;
	
	      var legendItem = (0, _ReactUtils.findChildByType)(children, _Legend2.default);
	
	      var offset = {
	        left: margin.left || 0, right: margin.right || 0,
	        top: margin.top || 0, bottom: margin.bottom || 0
	      };
	
	      offset[xAxis.orientation] += xAxis.height;
	      offset[yAxis.orientation] += yAxis.width;
	
	      if (legendItem && this.legendInstance) {
	        var legendBox = this.legendInstance.getBBox();
	        offset = (0, _CartesianUtils.appendOffsetOfLegend)(offset, items, this.props, legendBox);
	      }
	
	      return _extends({}, offset, {
	        width: width - offset.left - offset.right,
	        height: height - offset.top - offset.bottom
	      });
	    }
	    /**
	     * Calculate the scale function, position, width, height of axes
	     * @param  {Object} axis     The configuration of axis
	     * @param  {Object} offset   The offset of main part in the svg element
	     * @param  {Object} axisType The type of axis, x-axis or y-axis
	     * @return {Object} Configuration
	     */
	
	  }, {
	    key: 'getFormatAxis',
	    value: function getFormatAxis(axis, offset, axisType) {
	      var orientation = axis.orientation,
	          domain = axis.domain,
	          tickFormat = axis.tickFormat,
	          _axis$padding = axis.padding,
	          padding = _axis$padding === undefined ? {} : _axis$padding;
	
	      var range = axisType === 'xAxis' ? [offset.left + (padding.left || 0), offset.left + offset.width - (padding.right || 0)] : [offset.top + offset.height - (padding.bottom || 0), offset.top + (padding.top || 0)];
	
	      var scale = (0, _DataUtils.parseScale)(axis).domain(domain).range(range);
	
	      var ticks = (0, _CartesianUtils.getTicksOfScale)(scale, axis);
	
	      if (tickFormat) {
	        scale.tickFormat(tickFormat);
	      }
	
	      var x = void 0,
	          y = void 0;
	
	      if (axisType === 'xAxis') {
	        x = offset.left;
	        y = orientation === 'top' ? offset.top - axis.height : offset.top + offset.height;
	      } else {
	        x = orientation === 'left' ? offset.left - axis.width : offset.right;
	        y = offset.top;
	      }
	
	      return _extends({}, axis, ticks, {
	        scale: scale,
	        width: axisType === 'xAxis' ? offset.width : axis.width,
	        height: axisType === 'yAxis' ? offset.height : axis.height,
	        x: x, y: y
	      });
	    }
	
	    /**
	     * Get the content to be displayed in the tooltip
	     * @param  {Object} data  The data of active item
	     * @param  {Object} xAxis The configuration of x-axis
	     * @param  {Object} yAxis The configuration of y-axis
	     * @param  {Object} zAxis The configuration of z-axis
	     * @return {Array}        The content of tooltip
	     */
	
	  }, {
	    key: 'getTooltipContent',
	    value: function getTooltipContent(data, xAxis, yAxis, zAxis) {
	      if (!data) {
	        return null;
	      }
	
	      var payload = data.payload,
	          node = data.node;
	
	
	      var content = [{
	        name: xAxis.name || xAxis.dataKey,
	        unit: xAxis.unit || '',
	        value: node.x,
	        payload: payload
	      }, {
	        name: yAxis.name || yAxis.dataKey,
	        unit: yAxis.unit || '',
	        value: node.y,
	        payload: payload
	      }];
	
	      if (node.z && node.z !== '-') {
	        content.push({
	          name: zAxis.name || zAxis.dataKey,
	          unit: zAxis.unit || '',
	          value: node.z,
	          payload: payload
	        });
	      }
	
	      return content;
	    }
	    /**
	     * The handler of mouse entering a scatter
	     * @param {Object} el The active scatter
	     * @param {Object} e  Event object
	     * @return {Object} no return
	     */
	
	
	    /**
	     * The handler of mouse leaving a scatter
	     * @return {Object} no return
	     */
	
	  }, {
	    key: 'renderTooltip',
	
	
	    /**
	     * Draw Tooltip
	     * @param  {Array} items   The instances of Scatter
	     * @param  {Object} xAxis  The configuration of x-axis
	     * @param  {Object} yAxis  The configuration of y-axis
	     * @param  {Object} zAxis  The configuration of z-axis
	     * @param  {Object} offset The offset of main part in the svg element
	     * @return {ReactElement}  The instance of Tooltip
	     */
	    value: function renderTooltip(items, xAxis, yAxis, zAxis, offset) {
	      var children = this.props.children;
	
	      var tooltipItem = (0, _ReactUtils.findChildByType)(children, _Tooltip2.default);
	
	      if (!tooltipItem) {
	        return null;
	      }
	
	      var _state = this.state,
	          isTooltipActive = _state.isTooltipActive,
	          activeItem = _state.activeItem,
	          activeTooltipCoord = _state.activeTooltipCoord;
	
	      var viewBox = {
	        x: offset.left,
	        y: offset.top,
	        width: offset.width,
	        height: offset.height
	      };
	
	      return _react2.default.cloneElement(tooltipItem, {
	        viewBox: viewBox,
	        active: isTooltipActive,
	        label: '',
	        payload: this.getTooltipContent(activeItem, xAxis, yAxis, zAxis),
	        coordinate: activeTooltipCoord
	      });
	    }
	
	    /**
	     * Draw grid
	     * @param  {Object} xAxis  The configuration of x-axis
	     * @param  {Object} yAxis  The configuration of y-axis
	     * @param  {Object} offset The offset of main part in the svg element
	     * @return {ReactElement} The instance of grid
	     */
	
	  }, {
	    key: 'renderGrid',
	    value: function renderGrid(xAxis, yAxis, offset) {
	      var _props2 = this.props,
	          children = _props2.children,
	          width = _props2.width,
	          height = _props2.height;
	
	      var gridItem = (0, _ReactUtils.findChildByType)(children, _CartesianGrid2.default);
	
	      if (!gridItem) {
	        return null;
	      }
	
	      var verticalPoints = (0, _CartesianUtils.getCoordinatesOfGrid)(_CartesianAxis2.default.getTicks(_extends({}, _CartesianAxis2.default.defaultProps, xAxis, {
	        ticks: (0, _CartesianUtils.getTicksOfAxis)(xAxis, true),
	        viewBox: { x: 0, y: 0, width: width, height: height }
	      })), offset.left, offset.left + offset.width);
	
	      var horizontalPoints = (0, _CartesianUtils.getCoordinatesOfGrid)(_CartesianAxis2.default.getTicks(_extends({}, _CartesianAxis2.default.defaultProps, yAxis, {
	        ticks: (0, _CartesianUtils.getTicksOfAxis)(yAxis, true),
	        viewBox: { x: 0, y: 0, width: width, height: height }
	      })), offset.top, offset.top + offset.height);
	
	      return _react2.default.cloneElement(gridItem, {
	        key: 'grid',
	        x: offset.left,
	        y: offset.top,
	        width: offset.width,
	        height: offset.height,
	        verticalPoints: verticalPoints,
	        horizontalPoints: horizontalPoints
	      });
	    }
	    /**
	     * Draw legend
	     * @param  {Array} items     The instances of Scatters
	     * @return {ReactElement}    The instance of Legend
	     */
	
	  }, {
	    key: 'renderLegend',
	    value: function renderLegend(items) {
	      var _this2 = this;
	
	      var _props3 = this.props,
	          children = _props3.children,
	          width = _props3.width,
	          height = _props3.height,
	          margin = _props3.margin;
	
	      var legendWidth = width - (margin.left || 0) - (margin.right || 0);
	      var legendHeight = height - (margin.top || 0) - (margin.bottom || 0);
	      var props = (0, _CartesianUtils.getLegendProps)(children, items, legendWidth, legendHeight);
	
	      if (!props) {
	        return null;
	      }
	
	      return _react2.default.createElement(_Legend2.default, _extends({}, props, {
	        chartWidth: width,
	        chartHeight: height,
	        margin: margin,
	        ref: function ref(legend) {
	          _this2.legendInstance = legend;
	        }
	      }));
	    }
	
	    /**
	     * Draw axis
	     * @param {Object} axis     The configuration of axis
	     * @param {String} layerKey The key of layer
	     * @return {ReactElement}   The instance of axis
	     */
	
	  }, {
	    key: 'renderAxis',
	    value: function renderAxis(axis, layerKey) {
	      var _props4 = this.props,
	          width = _props4.width,
	          height = _props4.height;
	
	
	      if (axis && !axis.hide) {
	        return _react2.default.createElement(
	          _Layer2.default,
	          { key: layerKey, className: layerKey },
	          _react2.default.createElement(_CartesianAxis2.default, _extends({}, axis, {
	            viewBox: { x: 0, y: 0, width: width, height: height },
	            ticks: (0, _CartesianUtils.getTicksOfAxis)(axis, true)
	          }))
	        );
	      }
	
	      return null;
	    }
	  }, {
	    key: 'renderCursor',
	    value: function renderCursor(xAxis, yAxis, offset) {
	      var children = this.props.children;
	
	      var tooltipItem = (0, _ReactUtils.findChildByType)(children, _Tooltip2.default);
	
	      if (!tooltipItem || !tooltipItem.props.cursor || !this.state.isTooltipActive) {
	        return null;
	      }
	      var activeItem = this.state.activeItem;
	
	
	      var cursorProps = _extends({
	        stroke: '#ccc',
	        strokeDasharray: '5 5'
	      }, (0, _ReactUtils.getPresentationAttributes)(tooltipItem.props.cursor), offset, {
	        x: activeItem.cx,
	        y: activeItem.cy,
	        payload: activeItem
	      });
	
	      return _react2.default.isValidElement(tooltipItem.props.cursor) ? _react2.default.cloneElement(tooltipItem.props.cursor, cursorProps) : _react2.default.createElement(_Cross2.default, cursorProps);
	    }
	
	    /**
	     * Draw the main part of scatter chart
	     * @param  {Array} items   All the instance of Scatter
	     * @param  {Object} xAxis  The configuration of all x-axis
	     * @param  {Object} yAxis  The configuration of all y-axis
	     * @param  {Object} zAxis  The configuration of all z-axis
	     * @param  {Object} offset The offset of main part in the svg element
	     * @return {ReactComponent}  All the instances of Scatter
	     */
	
	  }, {
	    key: 'renderItems',
	    value: function renderItems(items, xAxis, yAxis, zAxis, offset) {
	      var _this3 = this;
	
	      var activeGroupId = this.state.activeGroupId;
	
	      return items.map(function (child, i) {
	        var _child$props = child.props,
	            strokeWidth = _child$props.strokeWidth,
	            data = _child$props.data;
	
	
	        var finalStrokeWidth = strokeWidth === +strokeWidth ? strokeWidth : 1;
	        finalStrokeWidth = activeGroupId === 'scatter-' + i ? finalStrokeWidth + 2 : finalStrokeWidth;
	
	        return _react2.default.cloneElement(child, _extends({
	          key: 'scatter-' + i,
	          groupId: 'scatter-' + i,
	          strokeWidth: finalStrokeWidth,
	          onMouseLeave: _this3.handleScatterMouseLeave,
	          onMouseEnter: _this3.handleScatterMouseEnter,
	          points: _this3.getComposedData(child, data, xAxis, yAxis, zAxis)
	        }, offset, {
	          xAxis: xAxis,
	          yAxis: yAxis
	        }));
	      }, this);
	    }
	  }, {
	    key: 'renderReferenceElements',
	    value: function renderReferenceElements(xAxis, yAxis, offset, isFront, Compt) {
	      var children = this.props.children;
	
	      var elements = (0, _ReactUtils.findAllByType)(children, Compt);
	
	      if (!elements || !elements.length) {
	        return null;
	      }
	
	      var keyPrefix = (0, _ReactUtils.getDisplayName)(Compt) + '-' + (isFront ? 'front' : 'back');
	
	      return elements.filter(function (entry) {
	        return isFront === entry.props.isFront;
	      }).map(function (entry, i) {
	        return _react2.default.cloneElement(entry, {
	          key: keyPrefix + '-' + i,
	          xAxis: xAxis, yAxis: yAxis,
	          viewBox: {
	            x: offset.left,
	            y: offset.top,
	            width: offset.width,
	            height: offset.height
	          }
	        });
	      });
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      if (!(0, _ReactUtils.validateWidthHeight)(this)) {
	        return null;
	      }
	
	      // eslint-disable-next-line no-unused-vars
	
	      var _props5 = this.props,
	          style = _props5.style,
	          children = _props5.children,
	          className = _props5.className,
	          width = _props5.width,
	          height = _props5.height,
	          others = _objectWithoutProperties(_props5, ['style', 'children', 'className', 'width', 'height']);
	
	      var items = (0, _ReactUtils.findAllByType)(children, _Scatter2.default);
	      var zAxis = this.getZAxis(items);
	      var xAxis = this.getAxis('xAxis', items);
	      var yAxis = this.getAxis('yAxis', items);
	
	      var offset = this.getOffset(items, xAxis, yAxis);
	      xAxis = this.getFormatAxis(xAxis, offset, 'xAxis');
	      yAxis = this.getFormatAxis(yAxis, offset, 'yAxis');
	      var events = (0, _ReactUtils.filterEventAttributes)(this.props);
	      var attrs = (0, _ReactUtils.getPresentationAttributes)(others);
	
	      return _react2.default.createElement(
	        'div',
	        _extends({
	          className: (0, _classnames2.default)('recharts-wrapper', className),
	          style: { position: 'relative', cursor: 'default', width: width, height: height }
	        }, events),
	        _react2.default.createElement(
	          _Surface2.default,
	          _extends({}, attrs, { width: width, height: height }),
	          this.renderGrid(xAxis, yAxis, offset),
	          this.renderReferenceElements(xAxis, yAxis, offset, false, _ReferenceArea2.default),
	          this.renderReferenceElements(xAxis, yAxis, offset, false, _ReferenceLine2.default),
	          this.renderReferenceElements(xAxis, yAxis, offset, false, _ReferenceDot2.default),
	          this.renderAxis(xAxis, 'recharts-x-axis'),
	          this.renderAxis(yAxis, 'recharts-y-axis'),
	          this.renderCursor(xAxis, yAxis, offset),
	          this.renderItems(items, xAxis, yAxis, zAxis, offset),
	          this.renderReferenceElements(xAxis, yAxis, offset, true, _ReferenceArea2.default),
	          this.renderReferenceElements(xAxis, yAxis, offset, true, _ReferenceLine2.default),
	          this.renderReferenceElements(xAxis, yAxis, offset, true, _ReferenceDot2.default),
	          (0, _ReactUtils.filterSvgElements)(children)
	        ),
	        this.renderLegend(items),
	        this.renderTooltip(items, xAxis, yAxis, zAxis, offset)
	      );
	    }
	  }]);
	
	  return ScatterChart;
	}(_react.Component), _class2.displayName = 'ScatterChart', _class2.propTypes = _extends({}, _ReactUtils.EVENT_ATTRIBUTES, {
	  width: _react.PropTypes.number,
	  height: _react.PropTypes.number,
	  margin: _react.PropTypes.shape({
	    top: _react.PropTypes.number,
	    right: _react.PropTypes.number,
	    bottom: _react.PropTypes.number,
	    left: _react.PropTypes.number
	  }),
	  title: _react.PropTypes.string,
	  style: _react.PropTypes.object,
	  children: _react.PropTypes.oneOfType([_react.PropTypes.arrayOf(_react.PropTypes.node), _react.PropTypes.node]),
	  className: _react.PropTypes.string
	}), _class2.defaultProps = {
	  style: {},
	  margin: { top: 5, right: 5, bottom: 5, left: 5 }
	}, _temp2)) || _class;
	
	exports.default = ScatterChart;

/***/ },
/* 856 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.AreaChart = undefined;
	
	var _isFunction2 = __webpack_require__(224);
	
	var _isFunction3 = _interopRequireDefault(_isFunction2);
	
	var _isNil2 = __webpack_require__(671);
	
	var _isNil3 = _interopRequireDefault(_isNil2);
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _dec, _class, _class2, _temp; /**
	                                   * @fileOverview Area Chart
	                                   */
	
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactSmooth = __webpack_require__(754);
	
	var _reactSmooth2 = _interopRequireDefault(_reactSmooth);
	
	var _Layer = __webpack_require__(747);
	
	var _Layer2 = _interopRequireDefault(_Layer);
	
	var _Tooltip = __webpack_require__(753);
	
	var _Tooltip2 = _interopRequireDefault(_Tooltip);
	
	var _Dot = __webpack_require__(804);
	
	var _Dot2 = _interopRequireDefault(_Dot);
	
	var _Curve = __webpack_require__(801);
	
	var _Curve2 = _interopRequireDefault(_Curve);
	
	var _ReactUtils = __webpack_require__(670);
	
	var _CartesianUtils = __webpack_require__(838);
	
	var _DataUtils = __webpack_require__(673);
	
	var _generateCategoricalChart = __webpack_require__(836);
	
	var _generateCategoricalChart2 = _interopRequireDefault(_generateCategoricalChart);
	
	var _Area = __webpack_require__(829);
	
	var _Area2 = _interopRequireDefault(_Area);
	
	var _AnimationDecorator = __webpack_require__(814);
	
	var _AnimationDecorator2 = _interopRequireDefault(_AnimationDecorator);
	
	var _ComposedDataDecorator = __webpack_require__(845);
	
	var _ComposedDataDecorator2 = _interopRequireDefault(_ComposedDataDecorator);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var getCategoryAxisCoordinate = function getCategoryAxisCoordinate(_ref) {
	  var axis = _ref.axis,
	      ticks = _ref.ticks,
	      bandSize = _ref.bandSize,
	      entry = _ref.entry,
	      index = _ref.index;
	
	  if (axis.type === 'category') {
	    return ticks[index] ? ticks[index].coordinate + bandSize / 2 : null;
	  }
	
	  var value = (0, _DataUtils.getValueByDataKey)(entry, axis.dataKey);
	
	  return !(0, _isNil3.default)(value) ? axis.scale(value) : null;
	};
	
	var getBaseValue = function getBaseValue(props, xAxis, yAxis) {
	  var layout = props.layout,
	      baseValue = props.baseValue;
	
	
	  if ((0, _DataUtils.isNumber)(baseValue)) {
	    return baseValue;
	  }
	
	  var numberAxis = layout === 'horizontal' ? yAxis : xAxis;
	  var domain = numberAxis.scale.domain();
	
	  if (numberAxis.type === 'number') {
	    var max = Math.max(domain[0], domain[1]);
	    var min = Math.min(domain[0], domain[1]);
	
	    if (baseValue === 'dataMin') {
	      return min;
	    }
	    if (baseValue === 'dataMax') {
	      return max;
	    }
	
	    return max < 0 ? max : Math.max(Math.min(domain[0], domain[1]), 0);
	  }
	
	  if (baseValue === 'dataMin') {
	    return domain[0];
	  }
	  if (baseValue === 'dataMax') {
	    return domain[1];
	  }
	
	  return domain[0];
	};
	
	/**
	 * Compose the data of each area
	 * @param {Object} props The props that are passed to the component
	 * @param {Object} xAxis       The configuration of x-axis
	 * @param {Object} yAxis       The configuration of y-axis
	 * @param {String} dataKey     The unique key of a group
	 * @param {Array} stackedData If the area is stacked,
	 * the stackedData is an array of min value and max value
	 * @return {Array} Composed data
	 */
	var getComposedData = function getComposedData(_ref2) {
	  var props = _ref2.props,
	      xAxis = _ref2.xAxis,
	      yAxis = _ref2.yAxis,
	      xTicks = _ref2.xTicks,
	      yTicks = _ref2.yTicks,
	      bandSize = _ref2.bandSize,
	      dataKey = _ref2.dataKey,
	      stackedData = _ref2.stackedData;
	  var layout = props.layout,
	      dataStartIndex = props.dataStartIndex,
	      dataEndIndex = props.dataEndIndex;
	
	  var data = props.data.slice(dataStartIndex, dataEndIndex + 1);
	  var hasStack = stackedData && stackedData.length;
	  var baseValue = getBaseValue(props, xAxis, yAxis);
	
	  var points = data.map(function (entry, index) {
	    var value = hasStack ? stackedData[dataStartIndex + index] : [baseValue, (0, _DataUtils.getValueByDataKey)(entry, dataKey)];
	
	    if (layout === 'horizontal') {
	      return {
	        x: getCategoryAxisCoordinate({ axis: xAxis, ticks: xTicks, bandSize: bandSize, entry: entry, index: index }),
	        y: (0, _isNil3.default)(value[1]) ? null : yAxis.scale(value[1]),
	        value: value,
	        payload: entry
	      };
	    }
	
	    return {
	      x: (0, _isNil3.default)(value[1]) ? null : xAxis.scale(value[1]),
	      y: getCategoryAxisCoordinate({ axis: yAxis, ticks: yTicks, bandSize: bandSize, entry: entry, index: index }),
	      value: value,
	      payload: entry
	    };
	  });
	
	  var baseLine = void 0;
	  if (hasStack) {
	    baseLine = stackedData.slice(dataStartIndex, dataEndIndex + 1).map(function (entry, index) {
	      return {
	        x: layout === 'horizontal' ? getCategoryAxisCoordinate({ axis: xAxis, ticks: xTicks, bandSize: bandSize, entry: entry, index: index }) : xAxis.scale(entry[0]),
	        y: layout === 'horizontal' ? yAxis.scale(entry[0]) : getCategoryAxisCoordinate({ axis: yAxis, ticks: yTicks, bandSize: bandSize, entry: entry, index: index })
	      };
	    });
	  } else if (layout === 'horizontal') {
	    baseLine = yAxis.scale(baseValue);
	  } else {
	    baseLine = xAxis.scale(baseValue);
	  }
	
	  return { points: points, baseLine: baseLine, layout: layout };
	};
	
	var AreaChart = exports.AreaChart = (_dec = (0, _ComposedDataDecorator2.default)({ getComposedData: getComposedData }), (0, _AnimationDecorator2.default)(_class = _dec(_class = (_temp = _class2 = function (_Component) {
	  _inherits(AreaChart, _Component);
	
	  function AreaChart() {
	    _classCallCheck(this, AreaChart);
	
	    return _possibleConstructorReturn(this, (AreaChart.__proto__ || Object.getPrototypeOf(AreaChart)).apply(this, arguments));
	  }
	
	  _createClass(AreaChart, [{
	    key: 'renderCursor',
	    value: function renderCursor(_ref3) {
	      var offset = _ref3.offset;
	      var _props = this.props,
	          children = _props.children,
	          isTooltipActive = _props.isTooltipActive,
	          layout = _props.layout,
	          activeTooltipIndex = _props.activeTooltipIndex,
	          axisTicks = _props.axisTicks;
	
	      var tooltipItem = (0, _ReactUtils.findChildByType)(children, _Tooltip2.default);
	
	      if (!tooltipItem || !tooltipItem.props.cursor || !isTooltipActive || activeTooltipIndex < 0) {
	        return null;
	      }
	
	      var ticks = axisTicks;
	
	      if (!ticks || !ticks[activeTooltipIndex]) {
	        return null;
	      }
	
	      var start = ticks[activeTooltipIndex].coordinate;
	      var x1 = layout === 'horizontal' ? start : offset.left;
	      var y1 = layout === 'horizontal' ? offset.top : start;
	      var x2 = layout === 'horizontal' ? start : offset.left + offset.width;
	      var y2 = layout === 'horizontal' ? offset.top + offset.height : start;
	      var cursorProps = _extends({
	        stroke: '#ccc'
	      }, (0, _ReactUtils.getPresentationAttributes)(tooltipItem.props.cursor), {
	        points: [{ x: x1, y: y1 }, { x: x2, y: y2 }]
	      });
	
	      return _react2.default.isValidElement(tooltipItem.props.cursor) ? _react2.default.cloneElement(tooltipItem.props.cursor, cursorProps) : _react2.default.createElement(_Curve2.default, _extends({}, cursorProps, { type: 'linear', className: 'recharts-tooltip-cursor' }));
	    }
	  }, {
	    key: 'renderActiveDot',
	    value: function renderActiveDot(option, props, childIndex) {
	      var dot = void 0;
	
	      if (_react2.default.isValidElement(option)) {
	        dot = _react2.default.cloneElement(option, props);
	      } else if ((0, _isFunction3.default)(option)) {
	        dot = option(props);
	      } else {
	        dot = _react2.default.createElement(_Dot2.default, props);
	      }
	
	      return _react2.default.createElement(
	        _reactSmooth2.default,
	        {
	          from: 'scale(0)',
	          to: 'scale(1)',
	          duration: 400,
	          key: 'dot-' + childIndex,
	          attributeName: 'transform'
	        },
	        _react2.default.createElement(
	          _Layer2.default,
	          { style: { transformOrigin: 'center center' } },
	          dot
	        )
	      );
	    }
	
	    /**
	     * Draw the main part of area chart
	     * @param  {Array} items     React elements of Area
	     * @param  {Object} xAxisMap The configuration of all x-axis
	     * @param  {Object} yAxisMap The configuration of all y-axis
	     * @param  {Object} offset   The offset of main part in the svg element
	     * @param  {Array} allComposedData The array of pre-created composedData
	     *                                 {points, basedLine, layout} for each item
	     * @return {ReactComponent} The instances of Area
	     */
	
	  }, {
	    key: 'renderItems',
	    value: function renderItems(items, xAxisMap, yAxisMap, offset, allComposedData) {
	      var _this2 = this;
	
	      var _props2 = this.props,
	          children = _props2.children,
	          layout = _props2.layout,
	          isTooltipActive = _props2.isTooltipActive,
	          activeTooltipIndex = _props2.activeTooltipIndex;
	
	      var tooltipItem = (0, _ReactUtils.findChildByType)(children, _Tooltip2.default);
	      var hasDot = tooltipItem && isTooltipActive;
	      var dotItems = [];
	      var animationId = this.props.animationId;
	
	
	      var areaItems = items.reduce(function (result, child, i) {
	        var _child$props = child.props,
	            dataKey = _child$props.dataKey,
	            activeDot = _child$props.activeDot;
	
	        var currentComposedData = allComposedData[i];
	        var activePoint = currentComposedData.points && currentComposedData.points[activeTooltipIndex];
	
	        if (hasDot && activeDot && activePoint) {
	          var dotProps = _extends({
	            index: activeTooltipIndex,
	            dataKey: dataKey,
	            animationId: animationId,
	            cx: activePoint.x, cy: activePoint.y, r: 4,
	            fill: (0, _CartesianUtils.getMainColorOfGraphicItem)(child),
	            strokeWidth: 2, stroke: '#fff',
	            payload: activePoint.payload,
	            value: activePoint.value
	          }, (0, _ReactUtils.getPresentationAttributes)(activeDot));
	          dotItems.push(_this2.renderActiveDot(activeDot, dotProps, i));
	        }
	
	        var area = _react2.default.cloneElement(child, _extends({
	          key: 'area-' + i
	        }, currentComposedData, offset, {
	          animationId: animationId,
	          layout: layout,
	          xAxis: xAxisMap[child.props.xAxisId],
	          yAxis: yAxisMap[child.props.yAxisId]
	        }));
	
	        return [].concat(_toConsumableArray(result), [area]);
	      }, []);
	
	      return _react2.default.createElement(
	        _Layer2.default,
	        { className: 'recharts-area-chart-group' },
	        _react2.default.createElement(
	          _Layer2.default,
	          { className: 'recharts-area-chart-shapes' },
	          areaItems
	        ),
	        _react2.default.createElement(
	          _Layer2.default,
	          { className: 'recharts-area-chart-dots' },
	          dotItems
	        )
	      );
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _props3 = this.props,
	          isComposed = _props3.isComposed,
	          graphicalItems = _props3.graphicalItems,
	          xAxisMap = _props3.xAxisMap,
	          yAxisMap = _props3.yAxisMap,
	          offset = _props3.offset,
	          allComposedData = _props3.allComposedData;
	
	
	      return _react2.default.createElement(
	        _Layer2.default,
	        { className: 'recharts-area-graphical' },
	        !isComposed && this.renderCursor({ xAxisMap: xAxisMap, yAxisMap: yAxisMap, offset: offset }),
	        this.renderItems(graphicalItems, xAxisMap, yAxisMap, offset, allComposedData)
	      );
	    }
	  }]);
	
	  return AreaChart;
	}(_react.Component), _class2.displayName = 'AreaChart', _class2.propTypes = {
	  allComposedData: _react.PropTypes.array,
	  axisTicks: _react.PropTypes.array,
	  layout: _react.PropTypes.oneOf(['horizontal', 'vertical']),
	  dataStartIndex: _react.PropTypes.number,
	  dataEndIndex: _react.PropTypes.number,
	  data: _react.PropTypes.array,
	  isTooltipActive: _react.PropTypes.bool,
	  activeTooltipIndex: _react.PropTypes.number,
	  xAxisMap: _react.PropTypes.object,
	  yAxisMap: _react.PropTypes.object,
	  offset: _react.PropTypes.object,
	  graphicalItems: _react.PropTypes.array,
	  children: _react.PropTypes.oneOfType([_react.PropTypes.arrayOf(_react.PropTypes.node), _react.PropTypes.node]),
	  stackGroups: _react.PropTypes.object,
	  baseValue: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.oneOf(['dataMin', 'dataMax', 'auto'])]),
	  // used internally
	  isComposed: _react.PropTypes.bool,
	  animationId: _react.PropTypes.number
	}, _class2.defaultProps = {
	  baseValue: 'auto'
	}, _temp)) || _class) || _class);
	exports.default = (0, _generateCategoricalChart2.default)(AreaChart, _Area2.default);

/***/ },
/* 857 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _range2 = __webpack_require__(818);
	
	var _range3 = _interopRequireDefault(_range2);
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _class, _class2, _temp2; /**
	                              * @fileOverview Radar Bar Chart
	                              */
	
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(404);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _d3Scale = __webpack_require__(738);
	
	var _Surface = __webpack_require__(669);
	
	var _Surface2 = _interopRequireDefault(_Surface);
	
	var _RadialBar = __webpack_require__(816);
	
	var _RadialBar2 = _interopRequireDefault(_RadialBar);
	
	var _DataUtils = __webpack_require__(673);
	
	var _Cell = __webpack_require__(788);
	
	var _Cell2 = _interopRequireDefault(_Cell);
	
	var _Legend = __webpack_require__(748);
	
	var _Legend2 = _interopRequireDefault(_Legend);
	
	var _Tooltip = __webpack_require__(753);
	
	var _Tooltip2 = _interopRequireDefault(_Tooltip);
	
	var _ReactUtils = __webpack_require__(670);
	
	var _PolarUtils = __webpack_require__(800);
	
	var _PureRender = __webpack_require__(746);
	
	var _PureRender2 = _interopRequireDefault(_PureRender);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var RadialBarChart = (0, _PureRender2.default)(_class = (_temp2 = _class2 = function (_Component) {
	  _inherits(RadialBarChart, _Component);
	
	  function RadialBarChart() {
	    var _ref;
	
	    var _temp, _this, _ret;
	
	    _classCallCheck(this, RadialBarChart);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = RadialBarChart.__proto__ || Object.getPrototypeOf(RadialBarChart)).call.apply(_ref, [this].concat(args))), _this), _this.state = _this.createDefaultState(), _this.handleMouseEnter = function (el) {
	      var children = _this.props.children;
	      var cx = el.cx,
	          cy = el.cy,
	          endAngle = el.endAngle,
	          outerRadius = el.outerRadius;
	
	      var tooltipItem = (0, _ReactUtils.findChildByType)(children, _Tooltip2.default);
	
	      if (tooltipItem) {
	        _this.setState({
	          isTooltipActive: true,
	          activeTooltipCoord: (0, _PolarUtils.polarToCartesian)(cx, cy, outerRadius, endAngle),
	          activeTooltipPayload: [el.payload]
	        });
	      }
	    }, _this.handleMouseLeave = function () {
	      var children = _this.props.children;
	
	      var tooltipItem = (0, _ReactUtils.findChildByType)(children, _Tooltip2.default);
	
	      if (tooltipItem) {
	        _this.setState({
	          isTooltipActive: false
	        });
	      }
	    }, _temp), _possibleConstructorReturn(_this, _ret);
	  }
	
	  _createClass(RadialBarChart, [{
	    key: 'componentWillReceiveProps',
	    value: function componentWillReceiveProps(nextProps) {
	      if (nextProps.data !== this.props.data) {
	        this.setState(this.createDefaultState());
	      }
	    }
	    /**
	     * Compose the data of each group
	     * @param  {Object} item        An instance of RadialBar
	     * @param  {Array}  barPosition The offset and size of each bar
	     * @param  {Object} radiusScale The scale function of radius of bars
	     * @param  {Object} center      The coordinate of center
	     * @param  {String} dataKey     The unique key of a group
	     * @return {Array}              Composed data
	     */
	
	  }, {
	    key: 'getComposedData',
	    value: function getComposedData(item, barPosition, radiusScale, center, dataKey) {
	      var data = this.props.data;
	
	      var pos = (0, _DataUtils.findPositionOfBar)(barPosition, item);
	      var cells = (0, _ReactUtils.findAllByType)(item.props.children, _Cell2.default);
	
	      return data.map(function (entry, index) {
	        var value = (0, _DataUtils.getValueByDataKey)(entry, dataKey);
	        var radius = radiusScale(index);
	
	        return _extends({}, entry, center, {
	          value: value,
	          innerRadius: radius - pos.offset,
	          outerRadius: radius - pos.offset + pos.radius,
	          payload: entry
	        }, cells && cells[index] && cells[index].props);
	      });
	    }
	    /**
	     * Calculate the size of all groups
	     * @param  {Array} items All the instance of RadialBar
	     * @return {Object} The size of all groups
	     */
	
	  }, {
	    key: 'getRadiusList',
	    value: function getRadiusList(items) {
	      var barSize = this.props.barSize;
	
	
	      return items.map(function (child) {
	        return _extends({}, child.props, {
	          item: child,
	          barSize: child.props.barSize || barSize
	        });
	      });
	    }
	
	    /**
	     * Calculate the scale function of radius
	     * @param {Number} innerRadius The outer radius
	     * @param {Number} outerRadius The inner radius
	     * @return {Object}            A scale function
	     */
	
	  }, {
	    key: 'getRadiusScale',
	    value: function getRadiusScale(innerRadius, outerRadius) {
	      var data = this.props.data;
	
	      var bandCount = Math.max(data.length, 1);
	      var range = [outerRadius, innerRadius];
	      var scale = (0, _d3Scale.scaleBand)().domain((0, _range3.default)(0, bandCount)).range(range);
	
	      return scale;
	    }
	
	    /**
	     * Calculate the size of each bar and the gap between two bars
	     * @param  {Number} bandRadius  The radius of each category
	     * @param  {Array} radiusList   The radius of all groups
	     * @return {Number} The size of each bar and the gap between two bars
	     */
	
	  }, {
	    key: 'getBarPosition',
	    value: function getBarPosition(bandRadius, radiusList) {
	      var _props = this.props,
	          barGap = _props.barGap,
	          barCategoryGap = _props.barCategoryGap;
	
	      var len = radiusList.length;
	      var result = void 0;
	
	      // whether or not is barSize setted by user
	      if (len && radiusList[0].barSize === +radiusList[0].barSize) {
	        (function () {
	          var sum = radiusList.reduce(function (res, entry) {
	            return res + entry.barSize;
	          }, 0);
	          sum += (len - 1) * barGap;
	          var offset = -sum / 2 >> 0;
	          var prev = { offset: offset - barGap, radius: 0 };
	
	          result = radiusList.reduce(function (res, entry) {
	            prev = {
	              offset: prev.offset + prev.radius + barGap,
	              radius: entry.barSize
	            };
	
	            return [].concat(_toConsumableArray(res), [{ item: entry.item, position: prev }]);
	          }, []);
	        })();
	      } else {
	        (function () {
	          var offset = (0, _DataUtils.getPercentValue)(barCategoryGap, bandRadius);
	          var radius = (bandRadius - 2 * offset - (len - 1) * barGap) / len >> 0;
	          offset = -Math.max((radius * len + (len - 1) * barGap) / 2 >> 0, 0);
	
	          result = radiusList.reduce(function (res, entry, i) {
	            return [].concat(_toConsumableArray(res), [{
	              item: entry.item,
	              position: {
	                offset: offset + (radius + barGap) * i,
	                radius: radius
	              }
	            }]);
	          }, []);
	        })();
	      }
	
	      return result;
	    }
	    /**
	     * Returns default, reset state for the radial bar chart.
	     * @return {Object} Whole new state
	     */
	
	  }, {
	    key: 'createDefaultState',
	    value: function createDefaultState() {
	      return {
	        activeTooltipLabel: '',
	        activeTooltipPayload: [],
	        activeTooltipCoord: { x: 0, y: 0 },
	        isTooltipActive: false
	      };
	    }
	  }, {
	    key: 'renderLegend',
	
	
	    /**
	     * Draw legend
	     * @param  {ReactElement} legendItem The instance of Legend
	     * @return {ReactElement}            The instance of Legend
	     */
	    value: function renderLegend() {
	      var children = this.props.children;
	
	      var legendItem = (0, _ReactUtils.findChildByType)(children, _Legend2.default);
	      if (!legendItem) {
	        return null;
	      }
	
	      var _props2 = this.props,
	          data = _props2.data,
	          width = _props2.width,
	          height = _props2.height,
	          margin = _props2.margin;
	
	
	      var legendData = legendItem.props && legendItem.props.payload || data.map(function (entry) {
	        return {
	          type: 'square',
	          color: entry.fill || '#000',
	          value: entry.name,
	          payload: entry
	        };
	      });
	
	      return _react2.default.cloneElement(legendItem, _extends({}, _Legend2.default.getWithHeight(legendItem, width), {
	        payload: legendData,
	        chartWidth: width,
	        chartHeight: height,
	        margin: margin
	      }));
	    }
	  }, {
	    key: 'renderTooltip',
	    value: function renderTooltip() {
	      var children = this.props.children;
	
	      var tooltipItem = (0, _ReactUtils.findChildByType)(children, _Tooltip2.default);
	
	      if (!tooltipItem) {
	        return null;
	      }
	
	      var _props3 = this.props,
	          width = _props3.width,
	          height = _props3.height;
	      var _state = this.state,
	          isTooltipActive = _state.isTooltipActive,
	          activeTooltipLabel = _state.activeTooltipLabel,
	          activeTooltipCoord = _state.activeTooltipCoord,
	          activeTooltipPayload = _state.activeTooltipPayload;
	
	      var viewBox = { x: 0, y: 0, width: width, height: height };
	
	      return _react2.default.cloneElement(tooltipItem, {
	        viewBox: viewBox,
	        active: isTooltipActive,
	        label: activeTooltipLabel,
	        payload: activeTooltipPayload,
	        coordinate: activeTooltipCoord
	      });
	    }
	
	    /**
	     * Draw the main part of bar chart
	     * @param  {Array} items     All the instance of RadialBar
	     * @param  {Object} radiusScale The scale function of radius of bars
	     * @param  {Object} center      The coordinate of center
	     * @return {ReactComponent}  All the instances of RadialBar
	     */
	
	  }, {
	    key: 'renderItems',
	    value: function renderItems(items, radiusScale, center) {
	      var _this2 = this;
	
	      if (!items || !items.length) {
	        return null;
	      }
	
	      var _props4 = this.props,
	          onMouseEnter = _props4.onMouseEnter,
	          onMouseLeave = _props4.onMouseLeave,
	          onClick = _props4.onClick;
	
	      var radiusList = this.getRadiusList(items);
	      var bandRadius = radiusScale.bandwidth();
	      var barPosition = this.getBarPosition(bandRadius, radiusList);
	
	      return items.map(function (child, i) {
	        var _child$props = child.props,
	            dataKey = _child$props.dataKey,
	            childOnMouseEnter = _child$props.onMouseEnter,
	            childOnMouseLeave = _child$props.onMouseLeave,
	            childOnClick = _child$props.onClick;
	
	
	        return _react2.default.cloneElement(child, _extends({}, center, {
	          key: 'radial-bar-' + i,
	          onMouseEnter: (0, _DataUtils.combineEventHandlers)(_this2.handleMouseEnter, onMouseEnter, childOnMouseEnter),
	          onMouseLeave: (0, _DataUtils.combineEventHandlers)(_this2.handleMouseLeave, onMouseLeave, childOnMouseLeave),
	          onClick: (0, _DataUtils.combineEventHandlers)(null, onClick, childOnClick),
	          data: _this2.getComposedData(child, barPosition, radiusScale, center, dataKey)
	        }));
	      }, this);
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var data = this.props.data;
	
	      if (!(0, _ReactUtils.validateWidthHeight)(this) || !data || !data.length) {
	        return null;
	      }
	
	      var _props5 = this.props,
	          style = _props5.style,
	          children = _props5.children,
	          className = _props5.className,
	          width = _props5.width,
	          height = _props5.height,
	          margin = _props5.margin,
	          others = _objectWithoutProperties(_props5, ['style', 'children', 'className', 'width', 'height', 'margin']);
	
	      var items = (0, _ReactUtils.findAllByType)(children, _RadialBar2.default);
	      var cx = (0, _DataUtils.getPercentValue)(this.props.cx, width, width / 2);
	      var cy = (0, _DataUtils.getPercentValue)(this.props.cy, height, height / 2);
	      var maxRadius = (0, _PolarUtils.getMaxRadius)(width, height, margin);
	      var innerRadius = (0, _DataUtils.getPercentValue)(this.props.innerRadius, maxRadius, 0);
	      var outerRadius = (0, _DataUtils.getPercentValue)(this.props.outerRadius, maxRadius, maxRadius * 0.8);
	      var radiusScale = this.getRadiusScale(innerRadius, outerRadius);
	      var attrs = (0, _ReactUtils.getPresentationAttributes)(others);
	
	      return _react2.default.createElement(
	        'div',
	        {
	          className: (0, _classnames2.default)('recharts-wrapper', className),
	          style: _extends({}, style, { cursor: 'default', position: 'relative', width: width, height: height })
	        },
	        _react2.default.createElement(
	          _Surface2.default,
	          _extends({}, attrs, { width: width, height: height }),
	          this.renderItems(items, radiusScale, { cx: cx, cy: cy }),
	          (0, _ReactUtils.filterSvgElements)(children)
	        ),
	        this.renderLegend(),
	        this.renderTooltip(items)
	      );
	    }
	  }]);
	
	  return RadialBarChart;
	}(_react.Component), _class2.displayName = 'RadialBarChart', _class2.propTypes = {
	  width: _react.PropTypes.number,
	  height: _react.PropTypes.number,
	  margin: _react.PropTypes.shape({
	    top: _react.PropTypes.number,
	    right: _react.PropTypes.number,
	    bottom: _react.PropTypes.number,
	    left: _react.PropTypes.number
	  }),
	  cy: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.string]),
	  cx: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.string]),
	
	  data: _react.PropTypes.array,
	  innerRadius: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.string]),
	  outerRadius: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.string]),
	  // The offset radius between two categorys
	  barCategoryGap: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.string]),
	  // The gap radius of two radial bar in one category
	  barGap: _react.PropTypes.number,
	  // The radius of each radial bar
	  barSize: _react.PropTypes.number,
	  title: _react.PropTypes.string,
	  style: _react.PropTypes.object,
	  onMouseEnter: _react.PropTypes.func,
	  onMouseLeave: _react.PropTypes.func,
	  onClick: _react.PropTypes.func,
	  children: _react.PropTypes.oneOfType([_react.PropTypes.arrayOf(_react.PropTypes.node), _react.PropTypes.node]),
	  className: _react.PropTypes.string
	}, _class2.defaultProps = {
	  cx: '50%',
	  cy: '50%',
	  innerRadius: '30%',
	  outerRadius: '90%',
	  barGap: 2,
	  barCategoryGap: '10%',
	  style: {},
	  margin: { top: 0, right: 0, bottom: 0, left: 0 }
	}, _temp2)) || _class;
	
	exports.default = RadialBarChart;

/***/ },
/* 858 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _isNil2 = __webpack_require__(671);
	
	var _isNil3 = _interopRequireDefault(_isNil2);
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _dec, _class, _class2, _temp; /**
	                                   * @fileOverview Composed Chart
	                                   */
	
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Layer = __webpack_require__(747);
	
	var _Layer2 = _interopRequireDefault(_Layer);
	
	var _Tooltip = __webpack_require__(753);
	
	var _Tooltip2 = _interopRequireDefault(_Tooltip);
	
	var _Line = __webpack_require__(827);
	
	var _Line2 = _interopRequireDefault(_Line);
	
	var _Bar = __webpack_require__(830);
	
	var _Bar2 = _interopRequireDefault(_Bar);
	
	var _Area = __webpack_require__(829);
	
	var _Area2 = _interopRequireDefault(_Area);
	
	var _Rectangle = __webpack_require__(802);
	
	var _Rectangle2 = _interopRequireDefault(_Rectangle);
	
	var _generateCategoricalChart = __webpack_require__(836);
	
	var _generateCategoricalChart2 = _interopRequireDefault(_generateCategoricalChart);
	
	var _DataUtils = __webpack_require__(673);
	
	var _ReactUtils = __webpack_require__(670);
	
	var _PureRender = __webpack_require__(746);
	
	var _PureRender2 = _interopRequireDefault(_PureRender);
	
	var _AreaChart = __webpack_require__(856);
	
	var _LineChart = __webpack_require__(835);
	
	var _BarChart = __webpack_require__(846);
	
	var _ComposedDataDecorator = __webpack_require__(845);
	
	var _ComposedDataDecorator2 = _interopRequireDefault(_ComposedDataDecorator);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var GRAPHICAL_TYPES = ['Area', 'Bar', 'Line'];
	var GRAPHICAL_MAP = { Area: _AreaChart.AreaChart, Bar: _BarChart.BarChart, Line: _LineChart.LineChart };
	
	var ComposedChart = (_dec = (0, _ComposedDataDecorator2.default)({}), (0, _PureRender2.default)(_class = _dec(_class = (_temp = _class2 = function (_Component) {
	  _inherits(ComposedChart, _Component);
	
	  function ComposedChart() {
	    _classCallCheck(this, ComposedChart);
	
	    return _possibleConstructorReturn(this, (ComposedChart.__proto__ || Object.getPrototypeOf(ComposedChart)).apply(this, arguments));
	  }
	
	  _createClass(ComposedChart, [{
	    key: 'filterGraphicalItems',
	    value: function filterGraphicalItems() {
	      var graphicalItems = this.props.graphicalItems;
	
	      var record = {};
	      var result = [];
	
	      for (var i = 0, len = graphicalItems.length; i < len; i++) {
	        var item = graphicalItems[i];
	        var displayName = item.type.displayName;
	
	        if (GRAPHICAL_TYPES.indexOf(displayName) >= 0) {
	          if (!(0, _isNil3.default)(record[displayName])) {
	            var index = record[displayName];
	
	            result[index].items = [].concat(_toConsumableArray(result[index].items), [item]);
	          } else {
	            record[displayName] = result.length;
	            result.push({ items: [item], type: displayName });
	          }
	        }
	      }
	
	      return result;
	    }
	  }, {
	    key: 'renderCursor',
	    value: function renderCursor(_ref) {
	      var xAxisMap = _ref.xAxisMap,
	          yAxisMap = _ref.yAxisMap,
	          offset = _ref.offset;
	      var _props = this.props,
	          children = _props.children,
	          isTooltipActive = _props.isTooltipActive,
	          layout = _props.layout,
	          activeTooltipIndex = _props.activeTooltipIndex,
	          axisTicks = _props.axisTicks;
	
	      var tooltipItem = (0, _ReactUtils.findChildByType)(children, _Tooltip2.default);
	      if (!tooltipItem || !tooltipItem.props.cursor || !isTooltipActive || activeTooltipIndex < 0) {
	        return null;
	      }
	
	      var axisMap = layout === 'horizontal' ? xAxisMap : yAxisMap;
	      var axis = (0, _DataUtils.getAnyElementOfObject)(axisMap);
	      var ticks = axisTicks;
	
	      if (!ticks || !ticks[activeTooltipIndex]) {
	        return null;
	      }
	
	      var bandSize = (0, _DataUtils.getBandSizeOfAxis)(axis);
	      var start = ticks[activeTooltipIndex].coordinate;
	      var cursorProps = _extends({
	        fill: '#f1f1f1'
	      }, (0, _ReactUtils.getPresentationAttributes)(tooltipItem.props.cursor), {
	        x: layout === 'horizontal' ? start : offset.left + 0.5,
	        y: layout === 'horizontal' ? offset.top + 0.5 : start,
	        width: layout === 'horizontal' ? bandSize : offset.width - 1,
	        height: layout === 'horizontal' ? offset.height - 1 : bandSize
	      });
	
	      return _react2.default.isValidElement(tooltipItem.props.cursor) ? _react2.default.cloneElement(tooltipItem.props.cursor, cursorProps) : _react2.default.createElement(_Rectangle2.default, cursorProps);
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _this2 = this;
	
	      var _props2 = this.props,
	          xAxisMap = _props2.xAxisMap,
	          yAxisMap = _props2.yAxisMap,
	          offset = _props2.offset;
	
	      var filteredItems = this.filterGraphicalItems();
	
	      return _react2.default.createElement(
	        _Layer2.default,
	        { className: 'recharts-composed' },
	        this.renderCursor({ xAxisMap: xAxisMap, yAxisMap: yAxisMap, offset: offset }),
	        filteredItems.map(function (_ref2) {
	          var items = _ref2.items,
	              type = _ref2.type;
	
	          var Chart = GRAPHICAL_MAP[type];
	
	          return _react2.default.createElement(Chart, _extends({ key: type }, _this2.props, { graphicalItems: items, isComposed: true }));
	        })
	      );
	    }
	  }]);
	
	  return ComposedChart;
	}(_react.Component), _class2.displayName = 'ComposedChart', _class2.propTypes = {
	  allComposedData: _react.PropTypes.array,
	  axisTicks: _react.PropTypes.array,
	  layout: _react.PropTypes.oneOf(['horizontal', 'vertical']),
	  dataStartIndex: _react.PropTypes.number,
	  dataEndIndex: _react.PropTypes.number,
	  isTooltipActive: _react.PropTypes.bool,
	  activeTooltipIndex: _react.PropTypes.number,
	  xAxisMap: _react.PropTypes.object,
	  yAxisMap: _react.PropTypes.object,
	  offset: _react.PropTypes.object,
	  graphicalItems: _react.PropTypes.array,
	  stackGroups: _react.PropTypes.object,
	  children: _react.PropTypes.oneOfType([_react.PropTypes.arrayOf(_react.PropTypes.node), _react.PropTypes.node])
	}, _temp)) || _class) || _class);
	exports.default = (0, _generateCategoricalChart2.default)(ComposedChart, [_Line2.default, _Area2.default, _Bar2.default]);

/***/ },
/* 859 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _reactRedux = __webpack_require__(309);
	
	var _listing_upload_form = __webpack_require__(860);
	
	var _listing_upload_form2 = _interopRequireDefault(_listing_upload_form);
	
	var _listing_actions = __webpack_require__(295);
	
	var _error_actions = __webpack_require__(204);
	
	var _option_actions = __webpack_require__(297);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var mapStateToProps = function mapStateToProps(state) {
	  return {
	    errors: state.errors.all,
	    options: state.options
	  };
	};
	
	var mapDispatchToProps = function mapDispatchToProps(dispatch) {
	  return {
	    createListing: function createListing(listing) {
	      return dispatch((0, _listing_actions.createListing)(listing));
	    },
	    clearSessionErrors: function clearSessionErrors() {
	      return dispatch((0, _error_actions.clearSessionErrors)());
	    },
	    fetchOptions: function fetchOptions() {
	      return dispatch((0, _option_actions.fetchOptions)());
	    }
	  };
	};
	
	exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(_listing_upload_form2.default);

/***/ },
/* 860 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactSelect = __webpack_require__(402);
	
	var _reactSelect2 = _interopRequireDefault(_reactSelect);
	
	var _belle = __webpack_require__(415);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var ListingUploadForm = function (_React$Component) {
	  _inherits(ListingUploadForm, _React$Component);
	
	  function ListingUploadForm(props) {
	    _classCallCheck(this, ListingUploadForm);
	
	    var _this = _possibleConstructorReturn(this, (ListingUploadForm.__proto__ || Object.getPrototypeOf(ListingUploadForm)).call(this, props));
	
	    _this.state = {
	      image_urls: [],
	      listing_title: "",
	      detail_desc: "",
	      location: "",
	      lat: "",
	      lng: "",
	      day_rate: "",
	      replacement_value: "",
	      serial: "",
	      brand: "",
	      category: ""
	    };
	    _this.upload = _this.upload.bind(_this);
	    _this.getOptions = _this.getOptions.bind(_this);
	    _this.logChange = _this.logChange.bind(_this);
	    _this.logChangeInput = _this.logChangeInput.bind(_this);
	    _this.handleSubmit = _this.handleSubmit.bind(_this);
	    _this.initAutocomplete = _this.initAutocomplete.bind(_this);
	    _this.updateLocation = _this.updateLocation.bind(_this);
	    _this.redirect = _this.redirect.bind(_this);
	    return _this;
	  }
	
	  _createClass(ListingUploadForm, [{
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      this.initAutocomplete();
	      this.props.fetchOptions();
	    }
	  }, {
	    key: 'componentWillUnmount',
	    value: function componentWillUnmount() {
	      this.props.clearSessionErrors();
	    }
	  }, {
	    key: 'renderErrors',
	    value: function renderErrors() {
	      if (this.props.errors.length > 0) {
	        return _react2.default.createElement(
	          'div',
	          { className: 'listing-errors' },
	          _react2.default.createElement(
	            'ul',
	            { className: 'listing-errors' },
	            this.props.errors.map(function (error, i) {
	              return _react2.default.createElement(
	                'li',
	                { key: 'error-' + i },
	                error
	              );
	            })
	          )
	        );
	      } else {
	        return null;
	      }
	    }
	  }, {
	    key: 'upload',
	    value: function upload(e) {
	      e.preventDefault();
	      window.cloudinary.openUploadWidget(window.CLOUDINARY_OPTIONS, function (error, images) {
	        if (error === null) {
	          this.setState({ image_urls: images.map(function (image) {
	              return image.url;
	            }) });
	        }
	      }.bind(this));
	    }
	  }, {
	    key: 'getOptions',
	    value: function getOptions(key) {
	      var options = void 0;
	      if (this.props.options[key]) {
	        options = this.props.options[key].map(function (name) {
	          return { value: name, label: name };
	        });
	      } else {
	        options = [{ value: "Loading...", label: "Loading..." }];
	      }
	      return options;
	    }
	  }, {
	    key: 'logChange',
	    value: function logChange(field) {
	      var _this2 = this;
	
	      return function (e) {
	        _this2.setState(_defineProperty({}, field, e.value));
	      };
	    }
	  }, {
	    key: 'logChangeInput',
	    value: function logChangeInput(field) {
	      var _this3 = this;
	
	      return function (e) {
	        _this3.setState(_defineProperty({}, field, e.target.value));
	      };
	    }
	  }, {
	    key: 'initAutocomplete',
	    value: function initAutocomplete() {
	      var autocomplete = new google.maps.places.Autocomplete(
	      /** @type {!HTMLInputElement} */document.getElementById('autocomplete-2'), { types: ['geocode'] });
	      autocomplete.addListener('place_changed', this.updateLocation);
	      this.autocomplete = autocomplete;
	    }
	  }, {
	    key: 'updateLocation',
	    value: function updateLocation() {
	      if (this.autocomplete.getPlace().geometry === undefined) return null;
	      var lat = this.autocomplete.getPlace().geometry.location.lat();
	      var lng = this.autocomplete.getPlace().geometry.location.lng();
	      var searchAddress = this.autocomplete.getPlace().formatted_address;
	      var latlng = {
	        lat: lat,
	        lng: lng
	      };
	      this.setState({ lat: lat, lng: lng, location: searchAddress });
	    }
	  }, {
	    key: 'redirect',
	    value: function redirect(route) {
	      this.props.router.replace(route);
	    }
	  }, {
	    key: 'handleSubmit',
	    value: function handleSubmit(e) {
	      var _this4 = this;
	
	      e.preventDefault();
	      this.props.createListing(this.state).then(function (listing) {
	        _this4.redirect('listings/' + listing.id);
	        return listing;
	      }).then(function (listing) {
	        return console.log(listing);
	      });
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      return _react2.default.createElement(
	        'div',
	        { className: 'main' },
	        _react2.default.createElement(
	          'div',
	          { className: 'create-listing-form' },
	          this.renderErrors(),
	          _react2.default.createElement(_reactSelect2.default, {
	            name: 'brand-filter',
	            options: this.getOptions("brand_options"),
	            onChange: this.logChange("brand"),
	            value: this.state.brand,
	            placeholder: 'Select brands..' }),
	          _react2.default.createElement('br', null),
	          _react2.default.createElement(_reactSelect2.default, {
	            name: 'category-filter',
	            options: this.getOptions("category_options"),
	            onChange: this.logChange("category"),
	            value: this.state.category,
	            placeholder: 'Select categories..' }),
	          _react2.default.createElement(_belle.TextInput, { value: this.state.listing_title, placeholder: 'Listing title...', onChange: this.logChangeInput("listing_title") }),
	          _react2.default.createElement('br', null),
	          _react2.default.createElement(_belle.TextInput, { value: this.state.detail_desc, placeholder: 'Listing description...', onChange: this.logChangeInput("detail_desc") }),
	          _react2.default.createElement('br', null),
	          _react2.default.createElement(_belle.TextInput, { value: this.state.serial, placeholder: 'Equipment serial number...', onChange: this.logChangeInput("serial") }),
	          _react2.default.createElement('br', null),
	          _react2.default.createElement('input', { id: 'autocomplete-2', className: 'create-listing', value: this.state.location, onChange: this.logChange("location"), placeholder: 'Enter a location...' }),
	          _react2.default.createElement('br', null),
	          _react2.default.createElement('input', { type: 'number', className: 'create-listing', value: this.state.day_rate, placeholder: 'Day Rate...', onChange: this.logChangeInput("day_rate") }),
	          _react2.default.createElement('br', null),
	          _react2.default.createElement('input', { type: 'number', className: 'create-listing', value: this.state.replacement_value, placeholder: 'Replacement Value...', onChange: this.logChangeInput("replacement_value") }),
	          _react2.default.createElement('br', null),
	          _react2.default.createElement(
	            'button',
	            { className: 'create-listing', onClick: this.upload },
	            'Upload Image(s)'
	          ),
	          _react2.default.createElement(
	            'button',
	            { className: 'create-listing', onClick: this.handleSubmit },
	            'Submit!'
	          )
	        )
	      );
	    }
	  }]);
	
	  return ListingUploadForm;
	}(_react2.default.Component);
	
	exports.default = ListingUploadForm;

/***/ }
/******/ ]);
//# sourceMappingURL=bundle.js.map